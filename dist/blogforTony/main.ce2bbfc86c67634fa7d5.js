(self.webpackChunkblogfor_tony = self.webpackChunkblogfor_tony || []).push([
  [179],
  {
    8255: (Re) => {
      function ye(k) {
        return Promise.resolve().then(() => {
          var o = new Error("Cannot find module '" + k + "'");
          throw ((o.code = "MODULE_NOT_FOUND"), o);
        });
      }
      (ye.keys = () => []),
        (ye.resolve = ye),
        (ye.id = 8255),
        (Re.exports = ye);
    },
    7716: (Re, ye, k) => {
      "use strict";
      k.d(ye, {
        deG: () => Ld,
        tb: () => K0,
        AFp: () => Xv,
        ip1: () => Jv,
        CZH: () => Lu,
        hGG: () => MS,
        z2F: () => uf,
        sBO: () => xO,
        Sil: () => Wl,
        _Vd: () => Su,
        EJc: () => Q0,
        SBq: () => Rs,
        qLn: () => C,
        vpe: () => ks,
        gxx: () => au,
        tBr: () => aa,
        XFs: () => Be,
        OlP: () => hn,
        zs3: () => $t,
        ZZ4: () => Pm,
        aQg: () => av,
        soG: () => tg,
        YKP: () => yi,
        v3s: () => KA,
        h0i: () => Iu,
        PXZ: () => $A,
        R0b: () => lr,
        FiY: () => Gr,
        Lbi: () => q0,
        g9A: () => Z0,
        n_E: () => Nu,
        Qsj: () => KT,
        FYo: () => Xt,
        JOm: () => _r,
        Tiy: () => iv,
        q3G: () => en,
        tp0: () => rr,
        EAV: () => XA,
        Rgc: () => Tu,
        dDg: () => iS,
        DyG: () => io,
        q4F: () => rv,
        GfV: () => Om,
        s_b: () => Zh,
        ifc: () => Te,
        eFA: () => dS,
        G48: () => lS,
        Gpc: () => z,
        f3M: () => _p,
        X6Q: () => aS,
        _c5: () => ox,
        VLi: () => rS,
        c2e: () => lf,
        zSh: () => vh,
        wAp: () => Je,
        vHH: () => de,
        EiD: () => $c,
        mCW: () => _l,
        qzn: () => da,
        JVY: () => Qd,
        pB0: () => u_,
        eBb: () => Hc,
        L6k: () => Tp,
        LAX: () => c_,
        cg1: () => Hy,
        Tjo: () => SS,
        kL8: () => bu,
        yhl: () => Kd,
        dqk: () => Pt,
        sIi: () => Dh,
        CqO: () => vy,
        QGY: () => Eo,
        F4k: () => Ph,
        RDi: () => pd,
        AaK: () => W,
        z3N: () => ti,
        qOj: () => Ms,
        TTD: () => Xi,
        _Bn: () => Hw,
        xp6: () => rM,
        uIk: () => Th,
        Gre: () => gu,
        ekj: () => Ay,
        Suo: () => Ym,
        Xpm: () => ft,
        lG2: () => lc,
        Yz7: () => st,
        cJS: () => ln,
        oAB: () => Vo,
        Yjl: () => od,
        Y36: () => Oh,
        _UZ: () => XM,
        GkF: () => _y,
        BQk: () => gy,
        ynx: () => hm,
        qZA: () => OE,
        TgZ: () => my,
        EpF: () => yy,
        n5z: () => Nd,
        Ikx: () => Hh,
        LFG: () => qt,
        $8M: () => to,
        NdJ: () => PE,
        CRH: () => k0,
        kcU: () => Ec,
        O4$: () => bC,
        oxw: () => VE,
        ALo: () => D0,
        lcZ: () => rf,
        Hsn: () => HE,
        F$t: () => UE,
        Q6J: () => py,
        DdM: () => QI,
        VKq: () => JI,
        WLB: () => XI,
        iGM: () => Lv,
        MAs: () => oy,
        Jf7: () => gi,
        CHM: () => Ed,
        LSH: () => bl,
        kYT: () => sd,
        Jzz: () => sw,
        Udp: () => fm,
        WFA: () => pu,
        d8E: () => Em,
        YNc: () => bE,
        W1O: () => lA,
        _uU: () => tw,
        Oqu: () => Lh,
        hij: () => _m,
        AsE: () => nw,
        Gf: () => R0,
      });
      var o = k(9765),
        ie = k(5319),
        L = k(7574),
        ne = k(6682),
        re = k(8819);
      function q(r) {
        for (let s in r) if (r[s] === q) return s;
        throw Error("Could not find renamed property on target object.");
      }
      function G(r, s) {
        for (const l in s)
          s.hasOwnProperty(l) && !r.hasOwnProperty(l) && (r[l] = s[l]);
      }
      function W(r) {
        if ("string" == typeof r) return r;
        if (Array.isArray(r)) return "[" + r.map(W).join(", ") + "]";
        if (null == r) return "" + r;
        if (r.overriddenName) return `${r.overriddenName}`;
        if (r.name) return `${r.name}`;
        const s = r.toString();
        if (null == s) return "" + s;
        const l = s.indexOf("\n");
        return -1 === l ? s : s.substring(0, l);
      }
      function H(r, s) {
        return null == r || "" === r
          ? null === s
            ? ""
            : s
          : null == s || "" === s
          ? r
          : r + " " + s;
      }
      const O = q({ __forward_ref__: q });
      function z(r) {
        return (
          (r.__forward_ref__ = z),
          (r.toString = function () {
            return W(this());
          }),
          r
        );
      }
      function N(r) {
        return Y(r) ? r() : r;
      }
      function Y(r) {
        return (
          "function" == typeof r &&
          r.hasOwnProperty(O) &&
          r.__forward_ref__ === z
        );
      }
      class de extends Error {
        constructor(s, l) {
          super(
            (function (r, s) {
              return `${r ? `NG0${r}: ` : ""}${s}`;
            })(s, l)
          ),
            (this.code = s);
        }
      }
      function he(r) {
        return "string" == typeof r ? r : null == r ? "" : String(r);
      }
      function Ee(r) {
        return "function" == typeof r
          ? r.name || r.toString()
          : "object" == typeof r && null != r && "function" == typeof r.type
          ? r.type.name || r.type.toString()
          : he(r);
      }
      function bt(r, s) {
        const l = s ? ` in ${s}` : "";
        throw new de("201", `No provider for ${Ee(r)} found${l}`);
      }
      function ze(r, s) {
        null == r &&
          (function (r, s, l, c) {
            throw new Error(
              `ASSERTION ERROR: ${r}` +
                (null == c ? "" : ` [Expected=> ${l} ${c} ${s} <=Actual]`)
            );
          })(s, r, null, "!=");
      }
      function st(r) {
        return {
          token: r.token,
          providedIn: r.providedIn || null,
          factory: r.factory,
          value: void 0,
        };
      }
      function ln(r) {
        return { providers: r.providers || [], imports: r.imports || [] };
      }
      function kn(r) {
        return On(r, Yi) || On(r, as);
      }
      function On(r, s) {
        return r.hasOwnProperty(s) ? r[s] : null;
      }
      function Fo(r) {
        return r && (r.hasOwnProperty(os) || r.hasOwnProperty(js))
          ? r[os]
          : null;
      }
      const Yi = q({ ɵprov: q }),
        os = q({ ɵinj: q }),
        as = q({ ngInjectableDef: q }),
        js = q({ ngInjectorDef: q });
      var Be = (() => (
        ((Be = Be || {})[(Be.Default = 0)] = "Default"),
        (Be[(Be.Host = 1)] = "Host"),
        (Be[(Be.Self = 2)] = "Self"),
        (Be[(Be.SkipSelf = 4)] = "SkipSelf"),
        (Be[(Be.Optional = 8)] = "Optional"),
        Be
      ))();
      let Pn;
      function Mn(r) {
        const s = Pn;
        return (Pn = r), s;
      }
      function ut(r, s, l) {
        const c = kn(r);
        return c && "root" == c.providedIn
          ? void 0 === c.value
            ? (c.value = c.factory())
            : c.value
          : l & Be.Optional
          ? null
          : void 0 !== s
          ? s
          : void bt(W(r), "Injector");
      }
      function wt(r) {
        return { toString: r }.toString();
      }
      var Ct = (() => (
          ((Ct = Ct || {})[(Ct.OnPush = 0)] = "OnPush"),
          (Ct[(Ct.Default = 1)] = "Default"),
          Ct
        ))(),
        Te = (() => (
          ((Te = Te || {})[(Te.Emulated = 0)] = "Emulated"),
          (Te[(Te.None = 2)] = "None"),
          (Te[(Te.ShadowDom = 3)] = "ShadowDom"),
          Te
        ))();
      const We = "undefined" != typeof globalThis && globalThis,
        rd = "undefined" != typeof window && window,
        Lo =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        Li = "undefined" != typeof global && global,
        Pt = We || Li || rd || Lo,
        Ft = {},
        U = [],
        V = q({ ɵcmp: q }),
        te = q({ ɵdir: q }),
        ae = q({ ɵpipe: q }),
        ee = q({ ɵmod: q }),
        Me = q({ ɵloc: q }),
        Pe = q({ ɵfac: q }),
        St = q({ __NG_ELEMENT_ID__: q });
      let Rt = 0;
      function ft(r) {
        return wt(() => {
          const l = {},
            c = {
              type: r.type,
              providersResolver: null,
              decls: r.decls,
              vars: r.vars,
              factory: null,
              template: r.template || null,
              consts: r.consts || null,
              ngContentSelectors: r.ngContentSelectors,
              hostBindings: r.hostBindings || null,
              hostVars: r.hostVars || 0,
              hostAttrs: r.hostAttrs || null,
              contentQueries: r.contentQueries || null,
              declaredInputs: l,
              inputs: null,
              outputs: null,
              exportAs: r.exportAs || null,
              onPush: r.changeDetection === Ct.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: r.selectors || U,
              viewQuery: r.viewQuery || null,
              features: r.features || null,
              data: r.data || {},
              encapsulation: r.encapsulation || Te.Emulated,
              id: "c",
              styles: r.styles || U,
              _: null,
              setInput: null,
              schemas: r.schemas || null,
              tView: null,
            },
            d = r.directives,
            f = r.features,
            m = r.pipes;
          return (
            (c.id += Rt++),
            (c.inputs = Bo(r.inputs, l)),
            (c.outputs = Bo(r.outputs)),
            f && f.forEach((y) => y(c)),
            (c.directiveDefs = d
              ? () => ("function" == typeof d ? d() : d).map(Qn)
              : null),
            (c.pipeDefs = m
              ? () => ("function" == typeof m ? m() : m).map(Jn)
              : null),
            c
          );
        });
      }
      function Qn(r) {
        return (
          un(r) ||
          (function (r) {
            return r[te] || null;
          })(r)
        );
      }
      function Jn(r) {
        return (function (r) {
          return r[ae] || null;
        })(r);
      }
      const Or = {};
      function Vo(r) {
        return wt(() => {
          const s = {
            type: r.type,
            bootstrap: r.bootstrap || U,
            declarations: r.declarations || U,
            imports: r.imports || U,
            exports: r.exports || U,
            transitiveCompileScopes: null,
            schemas: r.schemas || null,
            id: r.id || null,
          };
          return null != r.id && (Or[r.id] = r.type), s;
        });
      }
      function sd(r, s) {
        return wt(() => {
          const l = Vi(r, !0);
          (l.declarations = s.declarations || U),
            (l.imports = s.imports || U),
            (l.exports = s.exports || U);
        });
      }
      function Bo(r, s) {
        if (null == r) return Ft;
        const l = {};
        for (const c in r)
          if (r.hasOwnProperty(c)) {
            let d = r[c],
              f = d;
            Array.isArray(d) && ((f = d[1]), (d = d[0])),
              (l[d] = c),
              s && (s[d] = f);
          }
        return l;
      }
      const lc = ft;
      function od(r) {
        return {
          type: r.type,
          name: r.name,
          factory: null,
          pure: !1 !== r.pure,
          onDestroy: r.type.prototype.ngOnDestroy || null,
        };
      }
      function un(r) {
        return r[V] || null;
      }
      function Vi(r, s) {
        const l = r[ee] || null;
        if (!l && !0 === s)
          throw new Error(`Type ${W(r)} does not have '\u0275mod' property.`);
        return l;
      }
      function Qi(r) {
        return Array.isArray(r) && "object" == typeof r[1];
      }
      function Ui(r) {
        return Array.isArray(r) && !0 === r[1];
      }
      function qa(r) {
        return 0 != (8 & r.flags);
      }
      function Fr(r) {
        return 2 == (2 & r.flags);
      }
      function li(r) {
        return 1 == (1 & r.flags);
      }
      function Hi(r) {
        return null !== r.template;
      }
      function Ji(r) {
        return 0 != (512 & r[2]);
      }
      function Ws(r, s) {
        return r.hasOwnProperty(Pe) ? r[Pe] : null;
      }
      class jo {
        constructor(s, l, c) {
          (this.previousValue = s),
            (this.currentValue = l),
            (this.firstChange = c);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Xi() {
        return Ka;
      }
      function Ka(r) {
        return r.type.prototype.ngOnChanges && (r.setInput = zf), Gf;
      }
      function Gf() {
        const r = Si(this),
          s = null == r ? void 0 : r.current;
        if (s) {
          const l = r.previous;
          if (l === Ft) r.previous = s;
          else for (let c in s) l[c] = s[c];
          (r.current = null), this.ngOnChanges(s);
        }
      }
      function zf(r, s, l, c) {
        const d =
            Si(r) ||
            (function (r, s) {
              return (r[uc] = s);
            })(r, { previous: Ft, current: null }),
          f = d.current || (d.current = {}),
          m = d.previous,
          y = this.declaredInputs[l],
          E = m[y];
        (f[y] = new jo(E && E.currentValue, s, m === Ft)), (r[c] = s);
      }
      Xi.ngInherit = !0;
      const uc = "__ngSimpleChanges__";
      function Si(r) {
        return r[uc] || null;
      }
      const dc = "http://www.w3.org/2000/svg";
      let hc;
      function pd(r) {
        hc = r;
      }
      function Yt(r) {
        return !!r.listen;
      }
      const Ys = {
        createRenderer: (r, s) =>
          void 0 !== hc
            ? hc
            : "undefined" != typeof document
            ? document
            : void 0,
      };
      function Qt(r) {
        for (; Array.isArray(r); ) r = r[0];
        return r;
      }
      function Go(r, s) {
        return Qt(s[r]);
      }
      function Di(r, s) {
        return Qt(s[r.index]);
      }
      function gc(r, s) {
        return r.data[s];
      }
      function fs(r, s) {
        return r[s];
      }
      function Mi(r, s) {
        const l = s[r];
        return Qi(l) ? l : l[0];
      }
      function yd(r) {
        return 4 == (4 & r[2]);
      }
      function Zf(r) {
        return 128 == (128 & r[2]);
      }
      function hr(r, s) {
        return null == s ? null : r[s];
      }
      function _c(r) {
        r[18] = 0;
      }
      function $o(r, s) {
        r[5] += s;
        let l = r,
          c = r[3];
        for (
          ;
          null !== c && ((1 === s && 1 === l[5]) || (-1 === s && 0 === l[5]));

        )
          (c[5] += s), (l = c), (c = c[3]);
      }
      const nt = {
        lFrame: $g(null),
        bindingsEnabled: !0,
        isInCheckNoChangesMode: !1,
      };
      function Cd() {
        return nt.bindingsEnabled;
      }
      function be() {
        return nt.lFrame.lView;
      }
      function yt() {
        return nt.lFrame.tView;
      }
      function Ed(r) {
        return (nt.lFrame.contextLView = r), r[8];
      }
      function Zt() {
        let r = wd();
        for (; null !== r && 64 === r.type; ) r = r.parent;
        return r;
      }
      function wd() {
        return nt.lFrame.currentTNode;
      }
      function ui(r, s) {
        const l = nt.lFrame;
        (l.currentTNode = r), (l.isParent = s);
      }
      function yc() {
        return nt.lFrame.isParent;
      }
      function vc() {
        nt.lFrame.isParent = !1;
      }
      function Wo() {
        return nt.isInCheckNoChangesMode;
      }
      function bc(r) {
        nt.isInCheckNoChangesMode = r;
      }
      function mn() {
        const r = nt.lFrame;
        let s = r.bindingRootIndex;
        return (
          -1 === s && (s = r.bindingRootIndex = r.tView.bindingStartIndex), s
        );
      }
      function er() {
        return nt.lFrame.bindingIndex;
      }
      function Vr() {
        return nt.lFrame.bindingIndex++;
      }
      function Ti(r) {
        const s = nt.lFrame,
          l = s.bindingIndex;
        return (s.bindingIndex = s.bindingIndex + r), l;
      }
      function Qf(r, s) {
        const l = nt.lFrame;
        (l.bindingIndex = l.bindingRootIndex = r), Md(s);
      }
      function Md(r) {
        nt.lFrame.currentDirectiveIndex = r;
      }
      function Td(r) {
        const s = nt.lFrame.currentDirectiveIndex;
        return -1 === s ? null : r[s];
      }
      function Id() {
        return nt.lFrame.currentQueryIndex;
      }
      function Ks(r) {
        nt.lFrame.currentQueryIndex = r;
      }
      function Jf(r) {
        const s = r[1];
        return 2 === s.type ? s.declTNode : 1 === s.type ? r[6] : null;
      }
      function Qs(r, s, l) {
        if (l & Be.SkipSelf) {
          let d = s,
            f = r;
          for (
            ;
            !((d = d.parent),
            null !== d ||
              l & Be.Host ||
              ((d = Jf(f)), null === d || ((f = f[15]), 10 & d.type)));

          );
          if (null === d) return !1;
          (s = d), (r = f);
        }
        const c = (nt.lFrame = Xf());
        return (c.currentTNode = s), (c.lView = r), !0;
      }
      function Ja(r) {
        const s = Xf(),
          l = r[1];
        (nt.lFrame = s),
          (s.currentTNode = l.firstChild),
          (s.lView = r),
          (s.tView = l),
          (s.contextLView = r),
          (s.bindingIndex = l.bindingStartIndex),
          (s.inI18n = !1);
      }
      function Xf() {
        const r = nt.lFrame,
          s = null === r ? null : r.child;
        return null === s ? $g(r) : s;
      }
      function $g(r) {
        const s = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: r,
          child: null,
          inI18n: !1,
        };
        return null !== r && (r.child = s), s;
      }
      function ep() {
        const r = nt.lFrame;
        return (
          (nt.lFrame = r.parent), (r.currentTNode = null), (r.lView = null), r
        );
      }
      const Wg = ep;
      function Xa() {
        const r = ep();
        (r.isParent = !0),
          (r.tView = null),
          (r.selectedIndex = -1),
          (r.contextLView = null),
          (r.elementDepthCount = 0),
          (r.currentDirectiveIndex = -1),
          (r.currentNamespace = null),
          (r.bindingRootIndex = -1),
          (r.bindingIndex = -1),
          (r.currentQueryIndex = 0);
      }
      function ei() {
        return nt.lFrame.selectedIndex;
      }
      function Yo(r) {
        nt.lFrame.selectedIndex = r;
      }
      function gn() {
        const r = nt.lFrame;
        return gc(r.tView, r.selectedIndex);
      }
      function bC() {
        nt.lFrame.currentNamespace = dc;
      }
      function Ec() {
        nt.lFrame.currentNamespace = null;
      }
      function wc(r, s) {
        for (let l = s.directiveStart, c = s.directiveEnd; l < c; l++) {
          const f = r.data[l].type.prototype,
            {
              ngAfterContentInit: m,
              ngAfterContentChecked: y,
              ngAfterViewInit: E,
              ngAfterViewChecked: w,
              ngOnDestroy: D,
            } = f;
          m && (r.contentHooks || (r.contentHooks = [])).push(-l, m),
            y &&
              ((r.contentHooks || (r.contentHooks = [])).push(l, y),
              (r.contentCheckHooks || (r.contentCheckHooks = [])).push(l, y)),
            E && (r.viewHooks || (r.viewHooks = [])).push(-l, E),
            w &&
              ((r.viewHooks || (r.viewHooks = [])).push(l, w),
              (r.viewCheckHooks || (r.viewCheckHooks = [])).push(l, w)),
            null != D && (r.destroyHooks || (r.destroyHooks = [])).push(l, D);
        }
      }
      function qo(r, s, l) {
        Dc(r, s, 3, l);
      }
      function Sc(r, s, l, c) {
        (3 & r[2]) === l && Dc(r, s, l, c);
      }
      function el(r, s) {
        let l = r[2];
        (3 & l) === s && ((l &= 2047), (l += 1), (r[2] = l));
      }
      function Dc(r, s, l, c) {
        const f = null != c ? c : -1,
          m = s.length - 1;
        let y = 0;
        for (let E = void 0 !== c ? 65535 & r[18] : 0; E < m; E++)
          if ("number" == typeof s[E + 1]) {
            if (((y = s[E]), null != c && y >= c)) break;
          } else
            s[E] < 0 && (r[18] += 65536),
              (y < f || -1 == f) &&
                (Yg(r, l, s, E), (r[18] = (4294901760 & r[18]) + E + 2)),
              E++;
      }
      function Yg(r, s, l, c) {
        const d = l[c] < 0,
          f = l[c + 1],
          y = r[d ? -l[c] : l[c]];
        if (d) {
          if (r[2] >> 11 < r[18] >> 16 && (3 & r[2]) === s) {
            r[2] += 2048;
            try {
              f.call(y);
            } finally {
            }
          }
        } else
          try {
            f.call(y);
          } finally {
          }
      }
      class tl {
        constructor(s, l, c) {
          (this.factory = s),
            (this.resolving = !1),
            (this.canSeeViewProviders = l),
            (this.injectImpl = c);
        }
      }
      function xd(r, s, l) {
        const c = Yt(r);
        let d = 0;
        for (; d < l.length; ) {
          const f = l[d];
          if ("number" == typeof f) {
            if (0 !== f) break;
            d++;
            const m = l[d++],
              y = l[d++],
              E = l[d++];
            c ? r.setAttribute(s, y, E, m) : s.setAttributeNS(m, y, E);
          } else {
            const m = f,
              y = l[++d];
            fr(m)
              ? c && r.setProperty(s, m, y)
              : c
              ? r.setAttribute(s, m, y)
              : s.setAttribute(m, y),
              d++;
          }
        }
        return d;
      }
      function Qo(r) {
        return 3 === r || 4 === r || 6 === r;
      }
      function fr(r) {
        return 64 === r.charCodeAt(0);
      }
      function rn(r, s) {
        if (null !== s && 0 !== s.length)
          if (null === r || 0 === r.length) r = s.slice();
          else {
            let l = -1;
            for (let c = 0; c < s.length; c++) {
              const d = s[c];
              "number" == typeof d
                ? (l = d)
                : 0 === l ||
                  np(r, l, d, null, -1 === l || 2 === l ? s[++c] : null);
            }
          }
        return r;
      }
      function np(r, s, l, c, d) {
        let f = 0,
          m = r.length;
        if (-1 === s) m = -1;
        else
          for (; f < r.length; ) {
            const y = r[f++];
            if ("number" == typeof y) {
              if (y === s) {
                m = -1;
                break;
              }
              if (y > s) {
                m = f - 1;
                break;
              }
            }
          }
        for (; f < r.length; ) {
          const y = r[f];
          if ("number" == typeof y) break;
          if (y === l) {
            if (null === c) return void (null !== d && (r[f + 1] = d));
            if (c === r[f + 1]) return void (r[f + 2] = d);
          }
          f++, null !== c && f++, null !== d && f++;
        }
        -1 !== m && (r.splice(m, 0, s), (f = m + 1)),
          r.splice(f++, 0, l),
          null !== c && r.splice(f++, 0, c),
          null !== d && r.splice(f++, 0, d);
      }
      function Jo(r) {
        return -1 !== r;
      }
      function eo(r) {
        return 32767 & r;
      }
      function il(r, s) {
        let l = (function (r) {
            return r >> 16;
          })(r),
          c = s;
        for (; l > 0; ) (c = c[15]), l--;
        return c;
      }
      let rp = !0;
      function rl(r) {
        const s = rp;
        return (rp = r), s;
      }
      let Mc = 0;
      function ol(r, s) {
        const l = al(r, s);
        if (-1 !== l) return l;
        const c = s[1];
        c.firstCreatePass &&
          ((r.injectorIndex = s.length),
          Tc(c.data, r),
          Tc(s, null),
          Tc(c.blueprint, null));
        const d = Xo(r, s),
          f = r.injectorIndex;
        if (Jo(d)) {
          const m = eo(d),
            y = il(d, s),
            E = y[1].data;
          for (let w = 0; w < 8; w++) s[f + w] = y[m + w] | E[m + w];
        }
        return (s[f + 8] = d), f;
      }
      function Tc(r, s) {
        r.push(0, 0, 0, 0, 0, 0, 0, 0, s);
      }
      function al(r, s) {
        return -1 === r.injectorIndex ||
          (r.parent && r.parent.injectorIndex === r.injectorIndex) ||
          null === s[r.injectorIndex + 8]
          ? -1
          : r.injectorIndex;
      }
      function Xo(r, s) {
        if (r.parent && -1 !== r.parent.injectorIndex)
          return r.parent.injectorIndex;
        let l = 0,
          c = null,
          d = s;
        for (; null !== d; ) {
          const f = d[1],
            m = f.type;
          if (((c = 2 === m ? f.declTNode : 1 === m ? d[6] : null), null === c))
            return -1;
          if ((l++, (d = d[15]), -1 !== c.injectorIndex))
            return c.injectorIndex | (l << 16);
        }
        return -1;
      }
      function ji(r, s, l) {
        !(function (r, s, l) {
          let c;
          "string" == typeof l
            ? (c = l.charCodeAt(0) || 0)
            : l.hasOwnProperty(St) && (c = l[St]),
            null == c && (c = l[St] = Mc++);
          const d = 255 & c;
          s.data[r + (d >> 5)] |= 1 << d;
        })(r, s, l);
      }
      function Ln(r, s, l) {
        if (l & Be.Optional) return r;
        bt(s, "NodeInjector");
      }
      function qg(r, s, l, c) {
        if (
          (l & Be.Optional && void 0 === c && (c = null),
          0 == (l & (Be.Self | Be.Host)))
        ) {
          const d = r[9],
            f = Mn(void 0);
          try {
            return d ? d.get(s, c, l & Be.Optional) : ut(s, c, l & Be.Optional);
          } finally {
            Mn(f);
          }
        }
        return Ln(c, s, l);
      }
      function kd(r, s, l, c = Be.Default, d) {
        if (null !== r) {
          const f = (function (r) {
            if ("string" == typeof r) return r.charCodeAt(0) || 0;
            const s = r.hasOwnProperty(St) ? r[St] : void 0;
            return "number" == typeof s ? (s >= 0 ? 255 & s : dn) : s;
          })(l);
          if ("function" == typeof f) {
            if (!Qs(s, r, c)) return c & Be.Host ? Ln(d, l, c) : qg(s, l, c, d);
            try {
              const m = f(c);
              if (null != m || c & Be.Optional) return m;
              bt(l);
            } finally {
              Wg();
            }
          } else if ("number" == typeof f) {
            let m = null,
              y = al(r, s),
              E = -1,
              w = c & Be.Host ? s[16][6] : null;
            for (
              (-1 === y || c & Be.SkipSelf) &&
              ((E = -1 === y ? Xo(r, s) : s[y + 8]),
              -1 !== E && Pd(c, !1)
                ? ((m = s[1]), (y = eo(E)), (s = il(E, s)))
                : (y = -1));
              -1 !== y;

            ) {
              const D = s[1];
              if (Kg(f, y, D.data)) {
                const I = EC(y, s, l, m, c, w);
                if (I !== Lt) return I;
              }
              (E = s[y + 8]),
                -1 !== E && Pd(c, s[1].data[y + 8] === w) && Kg(f, y, s)
                  ? ((m = D), (y = eo(E)), (s = il(E, s)))
                  : (y = -1);
            }
          }
        }
        return qg(s, l, c, d);
      }
      const Lt = {};
      function dn() {
        return new ea(Zt(), be());
      }
      function EC(r, s, l, c, d, f) {
        const m = s[1],
          y = m.data[r + 8],
          D = bn(
            y,
            m,
            l,
            null == c ? Fr(y) && rp : c != m && 0 != (3 & y.type),
            d & Be.Host && f === y
          );
        return null !== D ? Ic(s, m, D, y) : Lt;
      }
      function bn(r, s, l, c, d) {
        const f = r.providerIndexes,
          m = s.data,
          y = 1048575 & f,
          E = r.directiveStart,
          D = f >> 20,
          R = d ? y + D : r.directiveEnd;
        for (let F = c ? y : y + D; F < R; F++) {
          const $ = m[F];
          if ((F < E && l === $) || (F >= E && $.type === l)) return F;
        }
        if (d) {
          const F = m[E];
          if (F && Hi(F) && F.type === l) return E;
        }
        return null;
      }
      function Ic(r, s, l, c) {
        let d = r[l];
        const f = s.data;
        if (
          (function (r) {
            return r instanceof tl;
          })(d)
        ) {
          const m = d;
          m.resolving &&
            (function (r, s) {
              throw new de(
                "200",
                `Circular dependency in DI detected for ${r}`
              );
            })(Ee(f[l]));
          const y = rl(m.canSeeViewProviders);
          m.resolving = !0;
          const E = m.injectImpl ? Mn(m.injectImpl) : null;
          Qs(r, c, Be.Default);
          try {
            (d = r[l] = m.factory(void 0, f, r, c)),
              s.firstCreatePass &&
                l >= c.directiveStart &&
                (function (r, s, l) {
                  const {
                    ngOnChanges: c,
                    ngOnInit: d,
                    ngDoCheck: f,
                  } = s.type.prototype;
                  if (c) {
                    const m = Ka(s);
                    (l.preOrderHooks || (l.preOrderHooks = [])).push(r, m),
                      (
                        l.preOrderCheckHooks || (l.preOrderCheckHooks = [])
                      ).push(r, m);
                  }
                  d &&
                    (l.preOrderHooks || (l.preOrderHooks = [])).push(0 - r, d),
                    f &&
                      ((l.preOrderHooks || (l.preOrderHooks = [])).push(r, f),
                      (
                        l.preOrderCheckHooks || (l.preOrderCheckHooks = [])
                      ).push(r, f));
                })(l, f[l], s);
          } finally {
            null !== E && Mn(E), rl(y), (m.resolving = !1), Wg();
          }
        }
        return d;
      }
      function Kg(r, s, l) {
        return !!(l[s + (r >> 5)] & (1 << r));
      }
      function Pd(r, s) {
        return !(r & Be.Self || (r & Be.Host && s));
      }
      class ea {
        constructor(s, l) {
          (this._tNode = s), (this._lView = l);
        }
        get(s, l) {
          return kd(this._tNode, this._lView, s, void 0, l);
        }
      }
      function Nd(r) {
        return wt(() => {
          const s = r.prototype.constructor,
            l = s[Pe] || ps(s),
            c = Object.prototype;
          let d = Object.getPrototypeOf(r.prototype).constructor;
          for (; d && d !== c; ) {
            const f = d[Pe] || ps(d);
            if (f && f !== l) return f;
            d = Object.getPrototypeOf(d);
          }
          return (f) => new f();
        });
      }
      function ps(r) {
        return Y(r)
          ? () => {
              const s = ps(N(r));
              return s && s();
            }
          : Ws(r);
      }
      function to(r) {
        return (function (r, s) {
          if ("class" === s) return r.classes;
          if ("style" === s) return r.styles;
          const l = r.attrs;
          if (l) {
            const c = l.length;
            let d = 0;
            for (; d < c; ) {
              const f = l[d];
              if (Qo(f)) break;
              if (0 === f) d += 2;
              else if ("number" == typeof f)
                for (d++; d < c && "string" == typeof l[d]; ) d++;
              else {
                if (f === s) return l[d + 1];
                d += 2;
              }
            }
          }
          return null;
        })(Zt(), r);
      }
      const no = "__parameters__";
      function Br(r, s, l) {
        return wt(() => {
          const c = (function (r) {
            return function (...l) {
              if (r) {
                const c = r(...l);
                for (const d in c) this[d] = c[d];
              }
            };
          })(s);
          function d(...f) {
            if (this instanceof d) return c.apply(this, f), this;
            const m = new d(...f);
            return (y.annotation = m), y;
            function y(E, w, D) {
              const I = E.hasOwnProperty(no)
                ? E[no]
                : Object.defineProperty(E, no, { value: [] })[no];
              for (; I.length <= D; ) I.push(null);
              return (I[D] = I[D] || []).push(m), E;
            }
          }
          return (
            l && (d.prototype = Object.create(l.prototype)),
            (d.prototype.ngMetadataName = r),
            (d.annotationCls = d),
            d
          );
        });
      }
      class hn {
        constructor(s, l) {
          (this._desc = s),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof l
              ? (this.__NG_ELEMENT_ID__ = l)
              : void 0 !== l &&
                (this.ɵprov = st({
                  token: this,
                  providedIn: l.providedIn || "root",
                  factory: l.factory,
                }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const Ld = new hn("AnalyzeForEntryComponents"),
        io = Function;
      function hi(r, s) {
        void 0 === s && (s = r);
        for (let l = 0; l < r.length; l++) {
          let c = r[l];
          Array.isArray(c)
            ? (s === r && (s = r.slice(0, l)), hi(c, s))
            : s !== r && s.push(c);
        }
        return s;
      }
      function xi(r, s) {
        r.forEach((l) => (Array.isArray(l) ? xi(l, s) : s(l)));
      }
      function so(r, s, l) {
        s >= r.length ? r.push(l) : r.splice(s, 0, l);
      }
      function ia(r, s) {
        return s >= r.length - 1 ? r.pop() : r.splice(s, 1)[0];
      }
      function Hr(r, s) {
        const l = [];
        for (let c = 0; c < r; c++) l.push(s);
        return l;
      }
      function Tn(r, s, l) {
        let c = nr(r, s);
        return (
          c >= 0
            ? (r[1 | c] = l)
            : ((c = ~c),
              (function (r, s, l, c) {
                let d = r.length;
                if (d == s) r.push(l, c);
                else if (1 === d) r.push(c, r[0]), (r[0] = l);
                else {
                  for (d--, r.push(r[d - 1], r[d]); d > s; )
                    (r[d] = r[d - 2]), d--;
                  (r[s] = l), (r[s + 1] = c);
                }
              })(r, c, s, l)),
          c
        );
      }
      function Ud(r, s) {
        const l = nr(r, s);
        if (l >= 0) return r[1 | l];
      }
      function nr(r, s) {
        return (function (r, s, l) {
          let c = 0,
            d = r.length >> l;
          for (; d !== c; ) {
            const f = c + ((d - c) >> 1),
              m = r[f << l];
            if (s === m) return f << l;
            m > s ? (d = f) : (c = f + 1);
          }
          return ~(d << l);
        })(r, s, 1);
      }
      const pr = {},
        Gd = "__NG_DI_FLAG__",
        vs = "ngTempTokenPath",
        mp = /\n/gm,
        In = "__source",
        ao = q({ provide: String, useValue: q });
      let lo;
      function sa(r) {
        const s = lo;
        return (lo = r), s;
      }
      function gp(r, s = Be.Default) {
        if (void 0 === lo)
          throw new Error("inject() must be called from an injection context");
        return null === lo
          ? ut(r, void 0, s)
          : lo.get(r, s & Be.Optional ? null : void 0, s);
      }
      function qt(r, s = Be.Default) {
        return (Pn || gp)(N(r), s);
      }
      const _p = qt;
      function jr(r) {
        const s = [];
        for (let l = 0; l < r.length; l++) {
          const c = N(r[l]);
          if (Array.isArray(c)) {
            if (0 === c.length)
              throw new Error("Arguments array must have arguments.");
            let d,
              f = Be.Default;
            for (let m = 0; m < c.length; m++) {
              const y = c[m],
                E = $d(y);
              "number" == typeof E
                ? -1 === E
                  ? (d = y.token)
                  : (f |= E)
                : (d = y);
            }
            s.push(qt(d, f));
          } else s.push(qt(c));
        }
        return s;
      }
      function co(r, s) {
        return (r[Gd] = s), (r.prototype[Gd] = s), r;
      }
      function $d(r) {
        return r[Gd];
      }
      function Wd(r, s, l, c) {
        const d = r[vs];
        throw (
          (s[In] && d.unshift(s[In]),
          (r.message = (function (r, s, l, c = null) {
            r =
              r && "\n" === r.charAt(0) && "\u0275" == r.charAt(1)
                ? r.substr(2)
                : r;
            let d = W(s);
            if (Array.isArray(s)) d = s.map(W).join(" -> ");
            else if ("object" == typeof s) {
              let f = [];
              for (let m in s)
                if (s.hasOwnProperty(m)) {
                  let y = s[m];
                  f.push(
                    m + ":" + ("string" == typeof y ? JSON.stringify(y) : W(y))
                  );
                }
              d = `{${f.join(", ")}}`;
            }
            return `${l}${c ? "(" + c + ")" : ""}[${d}]: ${r.replace(
              mp,
              "\n  "
            )}`;
          })("\n" + r.message, d, l, c)),
          (r.ngTokenPath = d),
          (r[vs] = null),
          r)
        );
      }
      const aa = co(
          Br("Inject", (r) => ({ token: r })),
          -1
        ),
        Gr = co(Br("Optional"), 8),
        rr = co(Br("SkipSelf"), 4);
      let Vc;
      function Cs(r) {
        var s;
        return (
          (null ===
            (s = (function () {
              if (void 0 === Vc && ((Vc = null), Pt.trustedTypes))
                try {
                  Vc = Pt.trustedTypes.createPolicy("angular", {
                    createHTML: (r) => r,
                    createScript: (r) => r,
                    createScriptURL: (r) => r,
                  });
                } catch (r) {}
              return Vc;
            })()) || void 0 === s
            ? void 0
            : s.createHTML(r)) || r
        );
      }
      class uo {
        constructor(s) {
          this.changingThisBreaksApplicationSecurity = s;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      class r_ extends uo {
        getTypeName() {
          return "HTML";
        }
      }
      class s_ extends uo {
        getTypeName() {
          return "Style";
        }
      }
      class o_ extends uo {
        getTypeName() {
          return "Script";
        }
      }
      class a_ extends uo {
        getTypeName() {
          return "URL";
        }
      }
      class l_ extends uo {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function ti(r) {
        return r instanceof uo ? r.changingThisBreaksApplicationSecurity : r;
      }
      function da(r, s) {
        const l = Kd(r);
        if (null != l && l !== s) {
          if ("ResourceURL" === l && "URL" === s) return !0;
          throw new Error(
            `Required a safe ${s}, got a ${l} (see https://g.co/ng/security#xss)`
          );
        }
        return l === s;
      }
      function Kd(r) {
        return (r instanceof uo && r.getTypeName()) || null;
      }
      function Qd(r) {
        return new r_(r);
      }
      function Tp(r) {
        return new s_(r);
      }
      function Hc(r) {
        return new o_(r);
      }
      function c_(r) {
        return new a_(r);
      }
      function u_(r) {
        return new l_(r);
      }
      class Ip {
        constructor(s) {
          this.inertDocumentHelper = s;
        }
        getInertBodyElement(s) {
          s = "<body><remove></remove>" + s;
          try {
            const l = new window.DOMParser().parseFromString(
              Cs(s),
              "text/html"
            ).body;
            return null === l
              ? this.inertDocumentHelper.getInertBodyElement(s)
              : (l.removeChild(l.firstChild), l);
          } catch (l) {
            return null;
          }
        }
      }
      class d_ {
        constructor(s) {
          if (
            ((this.defaultDoc = s),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              )),
            null == this.inertDocument.body)
          ) {
            const l = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(l);
            const c = this.inertDocument.createElement("body");
            l.appendChild(c);
          }
        }
        getInertBodyElement(s) {
          const l = this.inertDocument.createElement("template");
          if ("content" in l) return (l.innerHTML = Cs(s)), l;
          const c = this.inertDocument.createElement("body");
          return (
            (c.innerHTML = Cs(s)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(c),
            c
          );
        }
        stripCustomNsAttrs(s) {
          const l = s.attributes;
          for (let d = l.length - 1; 0 < d; d--) {
            const m = l.item(d).name;
            ("xmlns:ns1" === m || 0 === m.indexOf("ns1:")) &&
              s.removeAttribute(m);
          }
          let c = s.firstChild;
          for (; c; )
            c.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(c),
              (c = c.nextSibling);
        }
      }
      const Jd =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        Xd =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function _l(r) {
        return (r = String(r)).match(Jd) || r.match(Xd) ? r : "unsafe:" + r;
      }
      function Ri(r) {
        const s = {};
        for (const l of r.split(",")) s[l] = !0;
        return s;
      }
      function ho(...r) {
        const s = {};
        for (const l of r)
          for (const c in l) l.hasOwnProperty(c) && (s[c] = !0);
        return s;
      }
      const xp = Ri("area,br,col,hr,img,wbr"),
        yl = Ri("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        zc = Ri("rp,rt"),
        zr = ho(
          xp,
          ho(
            yl,
            Ri(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          ho(
            zc,
            Ri(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          ho(zc, yl)
        ),
        Rp = Ri("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        pi = Ri("srcset"),
        kp = ho(
          Rp,
          pi,
          Ri(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          Ri(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        Op = Ri("script,style,template");
      class m_ {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(s) {
          let l = s.firstChild,
            c = !0;
          for (; l; )
            if (
              (l.nodeType === Node.ELEMENT_NODE
                ? (c = this.startElement(l))
                : l.nodeType === Node.TEXT_NODE
                ? this.chars(l.nodeValue)
                : (this.sanitizedSomething = !0),
              c && l.firstChild)
            )
              l = l.firstChild;
            else
              for (; l; ) {
                l.nodeType === Node.ELEMENT_NODE && this.endElement(l);
                let d = this.checkClobberedElement(l, l.nextSibling);
                if (d) {
                  l = d;
                  break;
                }
                l = this.checkClobberedElement(l, l.parentNode);
              }
          return this.buf.join("");
        }
        startElement(s) {
          const l = s.nodeName.toLowerCase();
          if (!zr.hasOwnProperty(l))
            return (this.sanitizedSomething = !0), !Op.hasOwnProperty(l);
          this.buf.push("<"), this.buf.push(l);
          const c = s.attributes;
          for (let d = 0; d < c.length; d++) {
            const f = c.item(d),
              m = f.name,
              y = m.toLowerCase();
            if (!kp.hasOwnProperty(y)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let E = f.value;
            Rp[y] && (E = _l(E)),
              pi[y] &&
                ((r = E),
                (E = (r = String(r))
                  .split(",")
                  .map((s) => _l(s.trim()))
                  .join(", "))),
              this.buf.push(" ", m, '="', th(E), '"');
          }
          var r;
          return this.buf.push(">"), !0;
        }
        endElement(s) {
          const l = s.nodeName.toLowerCase();
          zr.hasOwnProperty(l) &&
            !xp.hasOwnProperty(l) &&
            (this.buf.push("</"), this.buf.push(l), this.buf.push(">"));
        }
        chars(s) {
          this.buf.push(th(s));
        }
        checkClobberedElement(s, l) {
          if (
            l &&
            (s.compareDocumentPosition(l) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${s.outerHTML}`
            );
          return l;
        }
      }
      const Pp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        fo = /([^\#-~ |!])/g;
      function th(r) {
        return r
          .replace(/&/g, "&amp;")
          .replace(Pp, function (s) {
            return (
              "&#" +
              (1024 * (s.charCodeAt(0) - 55296) +
                (s.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(fo, function (s) {
            return "&#" + s.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let mr;
      function $c(r, s) {
        let l = null;
        try {
          mr =
            mr ||
            (function (r) {
              const s = new d_(r);
              return (function () {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Cs(""),
                    "text/html"
                  );
                } catch (r) {
                  return !1;
                }
              })()
                ? new Ip(s)
                : s;
            })(r);
          let c = s ? String(s) : "";
          l = mr.getInertBodyElement(c);
          let d = 5,
            f = c;
          do {
            if (0 === d)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            d--, (c = f), (f = l.innerHTML), (l = mr.getInertBodyElement(c));
          } while (c !== f);
          return Cs(new m_().sanitizeChildren(nh(l) || l));
        } finally {
          if (l) {
            const c = nh(l) || l;
            for (; c.firstChild; ) c.removeChild(c.firstChild);
          }
        }
      }
      function nh(r) {
        return "content" in r &&
          (function (r) {
            return (
              r.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === r.nodeName
            );
          })(r)
          ? r.content
          : null;
      }
      var en = (() => (
        ((en = en || {})[(en.NONE = 0)] = "NONE"),
        (en[(en.HTML = 1)] = "HTML"),
        (en[(en.STYLE = 2)] = "STYLE"),
        (en[(en.SCRIPT = 3)] = "SCRIPT"),
        (en[(en.URL = 4)] = "URL"),
        (en[(en.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        en
      ))();
      function bl(r) {
        const s = (function () {
          const r = be();
          return r && r[12];
        })();
        return s
          ? s.sanitize(en.URL, r) || ""
          : da(r, "URL")
          ? ti(r)
          : _l(he(r));
      }
      const $r = "__ngContext__";
      function Vn(r, s) {
        r[$r] = s;
      }
      function qc(r) {
        const s = (function (r) {
          return r[$r] || null;
        })(r);
        return s ? (Array.isArray(s) ? s : s.lView) : null;
      }
      function v(r) {
        return r.ngOriginalError;
      }
      function g(r, ...s) {
        r.error(...s);
      }
      class C {
        constructor() {
          this._console = console;
        }
        handleError(s) {
          const l = this._findOriginalError(s),
            c = this._findContext(s),
            d = ((r = s) && r.ngErrorLogger) || g;
          var r;
          d(this._console, "ERROR", s),
            l && d(this._console, "ORIGINAL ERROR", l),
            c && d(this._console, "ERROR CONTEXT", c);
        }
        _findContext(s) {
          return s ? s.ngDebugContext || this._findContext(v(s)) : null;
        }
        _findOriginalError(s) {
          let l = s && v(s);
          for (; l && v(l); ) l = v(l);
          return l || null;
        }
      }
      const El = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(Pt))();
      function gi(r) {
        return r.ownerDocument.defaultView;
      }
      function zi(r) {
        return r instanceof Function ? r() : r;
      }
      var _r = (() => (
        ((_r = _r || {})[(_r.Important = 1)] = "Important"),
        (_r[(_r.DashCase = 2)] = "DashCase"),
        _r
      ))();
      function DC(r, s) {
        return undefined(r, s);
      }
      function jp(r) {
        const s = r[3];
        return Ui(s) ? s[3] : s;
      }
      function E_(r) {
        return hh(r[13]);
      }
      function Xc(r) {
        return hh(r[4]);
      }
      function hh(r) {
        for (; null !== r && !Ui(r); ) r = r[4];
        return r;
      }
      function go(r, s, l, c, d) {
        if (null != c) {
          let f,
            m = !1;
          Ui(c) ? (f = c) : Qi(c) && ((m = !0), (c = c[0]));
          const y = Qt(c);
          0 === r && null !== l
            ? null == d
              ? zD(s, l, y)
              : ma(s, l, y, d || null, !0)
            : 1 === r && null !== l
            ? ma(s, l, y, d || null, !0)
            : 2 === r
            ? (function (r, s, l) {
                const c = M_(r, s);
                c &&
                  (function (r, s, l, c) {
                    Yt(r) ? r.removeChild(s, l, c) : s.removeChild(l);
                  })(r, c, s, l);
              })(s, y, m)
            : 3 === r && s.destroyNode(y),
            null != f &&
              (function (r, s, l, c, d) {
                const f = l[7];
                f !== Qt(l) && go(s, r, c, f, d);
                for (let y = 10; y < l.length; y++) {
                  const E = l[y];
                  Gp(E[1], E, r, s, c, f);
                }
              })(s, r, f, l, d);
        }
      }
      function S_(r, s, l) {
        return Yt(r)
          ? r.createElement(s, l)
          : null === l
          ? r.createElement(s)
          : r.createElementNS(l, s);
      }
      function UD(r, s) {
        const l = r[9],
          c = l.indexOf(s),
          d = s[3];
        1024 & s[2] && ((s[2] &= -1025), $o(d, -1)), l.splice(c, 1);
      }
      function IC(r, s) {
        if (r.length <= 10) return;
        const l = 10 + s,
          c = r[l];
        if (c) {
          const d = c[17];
          null !== d && d !== r && UD(d, c), s > 0 && (r[l - 1][4] = c[4]);
          const f = ia(r, 10 + s);
          !(function (r, s) {
            Gp(r, s, s[11], 2, null, null), (s[0] = null), (s[6] = null);
          })(c[1], c);
          const m = f[19];
          null !== m && m.detachView(f[1]),
            (c[3] = null),
            (c[4] = null),
            (c[2] &= -129);
        }
        return c;
      }
      function HD(r, s) {
        if (!(256 & s[2])) {
          const l = s[11];
          Yt(l) && l.destroyNode && Gp(r, s, l, 3, null, null),
            (function (r) {
              let s = r[13];
              if (!s) return D_(r[1], r);
              for (; s; ) {
                let l = null;
                if (Qi(s)) l = s[13];
                else {
                  const c = s[10];
                  c && (l = c);
                }
                if (!l) {
                  for (; s && !s[4] && s !== r; )
                    Qi(s) && D_(s[1], s), (s = s[3]);
                  null === s && (s = r), Qi(s) && D_(s[1], s), (l = s && s[4]);
                }
                s = l;
              }
            })(s);
        }
      }
      function D_(r, s) {
        if (!(256 & s[2])) {
          (s[2] &= -129),
            (s[2] |= 256),
            (function (r, s) {
              let l;
              if (null != r && null != (l = r.destroyHooks))
                for (let c = 0; c < l.length; c += 2) {
                  const d = s[l[c]];
                  if (!(d instanceof tl)) {
                    const f = l[c + 1];
                    if (Array.isArray(f))
                      for (let m = 0; m < f.length; m += 2) {
                        const y = d[f[m]],
                          E = f[m + 1];
                        try {
                          E.call(y);
                        } finally {
                        }
                      }
                    else
                      try {
                        f.call(d);
                      } finally {
                      }
                  }
                }
            })(r, s),
            (function (r, s) {
              const l = r.cleanup,
                c = s[7];
              let d = -1;
              if (null !== l)
                for (let f = 0; f < l.length - 1; f += 2)
                  if ("string" == typeof l[f]) {
                    const m = l[f + 1],
                      y = "function" == typeof m ? m(s) : Qt(s[m]),
                      E = c[(d = l[f + 2])],
                      w = l[f + 3];
                    "boolean" == typeof w
                      ? y.removeEventListener(l[f], E, w)
                      : w >= 0
                      ? c[(d = w)]()
                      : c[(d = -w)].unsubscribe(),
                      (f += 2);
                  } else {
                    const m = c[(d = l[f + 1])];
                    l[f].call(m);
                  }
              if (null !== c) {
                for (let f = d + 1; f < c.length; f++) c[f]();
                s[7] = null;
              }
            })(r, s),
            1 === s[1].type && Yt(s[11]) && s[11].destroy();
          const l = s[17];
          if (null !== l && Ui(s[3])) {
            l !== s[3] && UD(l, s);
            const c = s[19];
            null !== c && c.detachView(r);
          }
        }
      }
      function jD(r, s, l) {
        return (function (r, s, l) {
          let c = s;
          for (; null !== c && 40 & c.type; ) c = (s = c).parent;
          if (null === c) return l[0];
          if (2 & c.flags) {
            const d = r.data[c.directiveStart].encapsulation;
            if (d === Te.None || d === Te.Emulated) return null;
          }
          return Di(c, l);
        })(r, s.parent, l);
      }
      function ma(r, s, l, c, d) {
        Yt(r) ? r.insertBefore(s, l, c, d) : s.insertBefore(l, c, d);
      }
      function zD(r, s, l) {
        Yt(r) ? r.appendChild(s, l) : s.appendChild(l);
      }
      function $D(r, s, l, c, d) {
        null !== c ? ma(r, s, l, c, d) : zD(r, s, l);
      }
      function M_(r, s) {
        return Yt(r) ? r.parentNode(s) : s.parentNode;
      }
      function WD(r, s, l) {
        return ZD(r, s, l);
      }
      let ZD = function (r, s, l) {
        return 40 & r.type ? Di(r, l) : null;
      };
      function T_(r, s, l, c) {
        const d = jD(r, c, s),
          f = s[11],
          y = WD(c.parent || s[6], c, s);
        if (null != d)
          if (Array.isArray(l))
            for (let E = 0; E < l.length; E++) $D(f, d, l[E], y, !1);
          else $D(f, d, l, y, !1);
      }
      function I_(r, s) {
        if (null !== s) {
          const l = s.type;
          if (3 & l) return Di(s, r);
          if (4 & l) return xC(-1, r[s.index]);
          if (8 & l) {
            const c = s.child;
            if (null !== c) return I_(r, c);
            {
              const d = r[s.index];
              return Ui(d) ? xC(-1, d) : Qt(d);
            }
          }
          if (32 & l) return DC(s, r)() || Qt(r[s.index]);
          {
            const c = KD(r, s);
            return null !== c
              ? Array.isArray(c)
                ? c[0]
                : I_(jp(r[16]), c)
              : I_(r, s.next);
          }
        }
        return null;
      }
      function KD(r, s) {
        return null !== s ? r[16][6].projection[s.projection] : null;
      }
      function xC(r, s) {
        const l = 10 + r + 1;
        if (l < s.length) {
          const c = s[l],
            d = c[1].firstChild;
          if (null !== d) return I_(c, d);
        }
        return s[7];
      }
      function RC(r, s, l, c, d, f, m) {
        for (; null != l; ) {
          const y = c[l.index],
            E = l.type;
          if (
            (m && 0 === s && (y && Vn(Qt(y), c), (l.flags |= 4)),
            64 != (64 & l.flags))
          )
            if (8 & E) RC(r, s, l.child, c, d, f, !1), go(s, r, d, y, f);
            else if (32 & E) {
              const w = DC(l, c);
              let D;
              for (; (D = w()); ) go(s, r, d, D, f);
              go(s, r, d, y, f);
            } else 16 & E ? JD(r, s, c, l, d, f) : go(s, r, d, y, f);
          l = m ? l.projectionNext : l.next;
        }
      }
      function Gp(r, s, l, c, d, f) {
        RC(l, c, r.firstChild, s, d, f, !1);
      }
      function JD(r, s, l, c, d, f) {
        const m = l[16],
          E = m[6].projection[c.projection];
        if (Array.isArray(E))
          for (let w = 0; w < E.length; w++) go(s, r, d, E[w], f);
        else RC(r, s, E, m[3], d, f, !0);
      }
      function XD(r, s, l) {
        Yt(r) ? r.setAttribute(s, "style", l) : (s.style.cssText = l);
      }
      function kC(r, s, l) {
        Yt(r)
          ? "" === l
            ? r.removeAttribute(s, "class")
            : r.setAttribute(s, "class", l)
          : (s.className = l);
      }
      function eM(r, s, l) {
        let c = r.length;
        for (;;) {
          const d = r.indexOf(s, l);
          if (-1 === d) return d;
          if (0 === d || r.charCodeAt(d - 1) <= 32) {
            const f = s.length;
            if (d + f === c || r.charCodeAt(d + f) <= 32) return d;
          }
          l = d + 1;
        }
      }
      const OC = "ng-template";
      function vk(r, s, l) {
        let c = 0;
        for (; c < r.length; ) {
          let d = r[c++];
          if (l && "class" === d) {
            if (((d = r[c]), -1 !== eM(d.toLowerCase(), s, 0))) return !0;
          } else if (1 === d) {
            for (; c < r.length && "string" == typeof (d = r[c++]); )
              if (d.toLowerCase() === s) return !0;
            return !1;
          }
        }
        return !1;
      }
      function tM(r) {
        return 4 === r.type && r.value !== OC;
      }
      function bk(r, s, l) {
        return s === (4 !== r.type || l ? r.value : OC);
      }
      function Ck(r, s, l) {
        let c = 4;
        const d = r.attrs || [],
          f = (function (r) {
            for (let s = 0; s < r.length; s++) if (Qo(r[s])) return s;
            return r.length;
          })(d);
        let m = !1;
        for (let y = 0; y < s.length; y++) {
          const E = s[y];
          if ("number" != typeof E) {
            if (!m)
              if (4 & c) {
                if (
                  ((c = 2 | (1 & c)),
                  ("" !== E && !bk(r, E, l)) || ("" === E && 1 === s.length))
                ) {
                  if (Es(c)) return !1;
                  m = !0;
                }
              } else {
                const w = 8 & c ? E : s[++y];
                if (8 & c && null !== r.attrs) {
                  if (!vk(r.attrs, w, l)) {
                    if (Es(c)) return !1;
                    m = !0;
                  }
                  continue;
                }
                const I = Ek(8 & c ? "class" : E, d, tM(r), l);
                if (-1 === I) {
                  if (Es(c)) return !1;
                  m = !0;
                  continue;
                }
                if ("" !== w) {
                  let R;
                  R = I > f ? "" : d[I + 1].toLowerCase();
                  const F = 8 & c ? R : null;
                  if ((F && -1 !== eM(F, w, 0)) || (2 & c && w !== R)) {
                    if (Es(c)) return !1;
                    m = !0;
                  }
                }
              }
          } else {
            if (!m && !Es(c) && !Es(E)) return !1;
            if (m && Es(E)) continue;
            (m = !1), (c = E | (1 & c));
          }
        }
        return Es(c) || m;
      }
      function Es(r) {
        return 0 == (1 & r);
      }
      function Ek(r, s, l, c) {
        if (null === s) return -1;
        let d = 0;
        if (c || !l) {
          let f = !1;
          for (; d < s.length; ) {
            const m = s[d];
            if (m === r) return d;
            if (3 === m || 6 === m) f = !0;
            else {
              if (1 === m || 2 === m) {
                let y = s[++d];
                for (; "string" == typeof y; ) y = s[++d];
                continue;
              }
              if (4 === m) break;
              if (0 === m) {
                d += 4;
                continue;
              }
            }
            d += f ? 1 : 2;
          }
          return -1;
        }
        return (function (r, s) {
          let l = r.indexOf(4);
          if (l > -1)
            for (l++; l < r.length; ) {
              const c = r[l];
              if ("number" == typeof c) return -1;
              if (c === s) return l;
              l++;
            }
          return -1;
        })(s, r);
      }
      function nM(r, s, l = !1) {
        for (let c = 0; c < s.length; c++) if (Ck(r, s[c], l)) return !0;
        return !1;
      }
      function Mk(r, s) {
        e: for (let l = 0; l < s.length; l++) {
          const c = s[l];
          if (r.length === c.length) {
            for (let d = 0; d < r.length; d++) if (r[d] !== c[d]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function iM(r, s) {
        return r ? ":not(" + s.trim() + ")" : s;
      }
      function Tk(r) {
        let s = r[0],
          l = 1,
          c = 2,
          d = "",
          f = !1;
        for (; l < r.length; ) {
          let m = r[l];
          if ("string" == typeof m)
            if (2 & c) {
              const y = r[++l];
              d += "[" + m + (y.length > 0 ? '="' + y + '"' : "") + "]";
            } else 8 & c ? (d += "." + m) : 4 & c && (d += " " + m);
          else
            "" !== d && !Es(m) && ((s += iM(f, d)), (d = "")),
              (c = m),
              (f = f || !Es(c));
          l++;
        }
        return "" !== d && (s += iM(f, d)), s;
      }
      const dt = {};
      function rM(r) {
        sM(yt(), be(), ei() + r, Wo());
      }
      function sM(r, s, l, c) {
        if (!c)
          if (3 == (3 & s[2])) {
            const f = r.preOrderCheckHooks;
            null !== f && qo(s, f, l);
          } else {
            const f = r.preOrderHooks;
            null !== f && Sc(s, f, 0, l);
          }
        Yo(l);
      }
      function A_(r, s) {
        return (r << 17) | (s << 2);
      }
      function ws(r) {
        return (r >> 17) & 32767;
      }
      function PC(r) {
        return 2 | r;
      }
      function ga(r) {
        return (131068 & r) >> 2;
      }
      function NC(r, s) {
        return (-131069 & r) | (s << 2);
      }
      function FC(r) {
        return 1 | r;
      }
      function An(r, s) {
        const l = r.contentQueries;
        if (null !== l)
          for (let c = 0; c < l.length; c += 2) {
            const d = l[c],
              f = l[c + 1];
            if (-1 !== f) {
              const m = r.data[f];
              Ks(d), m.contentQueries(2, s[f], f);
            }
          }
      }
      function eu(r, s, l, c, d, f, m, y, E, w) {
        const D = s.blueprint.slice();
        return (
          (D[0] = d),
          (D[2] = 140 | c),
          _c(D),
          (D[3] = D[15] = r),
          (D[8] = l),
          (D[10] = m || (r && r[10])),
          (D[11] = y || (r && r[11])),
          (D[12] = E || (r && r[12]) || null),
          (D[9] = w || (r && r[9]) || null),
          (D[6] = f),
          (D[16] = 2 == s.type ? r[16] : D),
          D
        );
      }
      function tu(r, s, l, c, d) {
        let f = r.data[s];
        if (null === f)
          (f = (function (r, s, l, c, d) {
            const f = wd(),
              m = yc(),
              E = (r.data[s] = (function (r, s, l, c, d, f) {
                return {
                  type: l,
                  index: c,
                  insertBeforeIndex: null,
                  injectorIndex: s ? s.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: d,
                  attrs: f,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: s,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, m ? f : f && f.parent, l, s, c, d));
            return (
              null === r.firstChild && (r.firstChild = E),
              null !== f &&
                (m
                  ? null == f.child && null !== E.parent && (f.child = E)
                  : null === f.next && (f.next = E)),
              E
            );
          })(r, s, l, c, d)),
            nt.lFrame.inI18n && (f.flags |= 64);
        else if (64 & f.type) {
          (f.type = l), (f.value = c), (f.attrs = d);
          const m = (function () {
            const r = nt.lFrame,
              s = r.currentTNode;
            return r.isParent ? s : s.parent;
          })();
          f.injectorIndex = null === m ? -1 : m.injectorIndex;
        }
        return ui(f, !0), f;
      }
      function Ss(r, s, l, c) {
        if (0 === l) return -1;
        const d = s.length;
        for (let f = 0; f < l; f++)
          s.push(c), r.blueprint.push(c), r.data.push(null);
        return d;
      }
      function ph(r, s, l) {
        Ja(s);
        try {
          const c = r.viewQuery;
          null !== c && j_(1, c, l);
          const d = r.template;
          null !== d && jt(r, s, d, 1, l),
            r.firstCreatePass && (r.firstCreatePass = !1),
            r.staticContentQueries && An(r, s),
            r.staticViewQueries && j_(2, r.viewQuery, l);
          const f = r.components;
          null !== f &&
            (function (r, s) {
              for (let l = 0; l < s.length; l++) ZC(r, s[l]);
            })(s, f);
        } catch (c) {
          throw (
            (r.firstCreatePass &&
              ((r.incompleteFirstPass = !0), (r.firstCreatePass = !1)),
            c)
          );
        } finally {
          (s[2] &= -5), Xa();
        }
      }
      function nu(r, s, l, c) {
        const d = s[2];
        if (256 == (256 & d)) return;
        Ja(s);
        const f = Wo();
        try {
          _c(s),
            (function (r) {
              nt.lFrame.bindingIndex = r;
            })(r.bindingStartIndex),
            null !== l && jt(r, s, l, 2, c);
          const m = 3 == (3 & d);
          if (!f)
            if (m) {
              const w = r.preOrderCheckHooks;
              null !== w && qo(s, w, null);
            } else {
              const w = r.preOrderHooks;
              null !== w && Sc(s, w, 0, null), el(s, 0);
            }
          if (
            ((function (r) {
              for (let s = E_(r); null !== s; s = Xc(s)) {
                if (!s[2]) continue;
                const l = s[9];
                for (let c = 0; c < l.length; c++) {
                  const d = l[c],
                    f = d[3];
                  0 == (1024 & d[2]) && $o(f, 1), (d[2] |= 1024);
                }
              }
            })(s),
            (function (r) {
              for (let s = E_(r); null !== s; s = Xc(s))
                for (let l = 10; l < s.length; l++) {
                  const c = s[l],
                    d = c[1];
                  Zf(c) && nu(d, c, d.template, c[8]);
                }
            })(s),
            null !== r.contentQueries && An(r, s),
            !f)
          )
            if (m) {
              const w = r.contentCheckHooks;
              null !== w && qo(s, w);
            } else {
              const w = r.contentHooks;
              null !== w && Sc(s, w, 1), el(s, 1);
            }
          !(function (r, s) {
            const l = r.hostBindingOpCodes;
            if (null !== l)
              try {
                for (let c = 0; c < l.length; c++) {
                  const d = l[c];
                  if (d < 0) Yo(~d);
                  else {
                    const f = d,
                      m = l[++c],
                      y = l[++c];
                    Qf(m, f), y(2, s[f]);
                  }
                }
              } finally {
                Yo(-1);
              }
          })(r, s);
          const y = r.components;
          null !== y &&
            (function (r, s) {
              for (let l = 0; l < s.length; l++) Uk(r, s[l]);
            })(s, y);
          const E = r.viewQuery;
          if ((null !== E && j_(2, E, c), !f))
            if (m) {
              const w = r.viewCheckHooks;
              null !== w && qo(s, w);
            } else {
              const w = r.viewHooks;
              null !== w && Sc(s, w, 2), el(s, 2);
            }
          !0 === r.firstUpdatePass && (r.firstUpdatePass = !1),
            f || (s[2] &= -73),
            1024 & s[2] && ((s[2] &= -1025), $o(s[3], -1));
        } finally {
          Xa();
        }
      }
      function yr(r, s, l, c) {
        const d = s[10],
          f = !Wo(),
          m = yd(s);
        try {
          f && !m && d.begin && d.begin(), m && ph(r, s, c), nu(r, s, l, c);
        } finally {
          f && !m && d.end && d.end();
        }
      }
      function jt(r, s, l, c, d) {
        const f = ei(),
          m = 2 & c;
        try {
          Yo(-1), m && s.length > 20 && sM(r, s, 20, Wo()), l(c, d);
        } finally {
          Yo(f);
        }
      }
      function HC(r, s, l) {
        if (qa(s)) {
          const d = s.directiveEnd;
          for (let f = s.directiveStart; f < d; f++) {
            const m = r.data[f];
            m.contentQueries && m.contentQueries(1, l[f], f);
          }
        }
      }
      function N_(r, s, l) {
        !Cd() ||
          ((function (r, s, l, c) {
            const d = l.directiveStart,
              f = l.directiveEnd;
            r.firstCreatePass || ol(l, s), Vn(c, s);
            const m = l.initialInputs;
            for (let y = d; y < f; y++) {
              const E = r.data[y],
                w = Hi(E);
              w && Nk(s, l, E);
              const D = Ic(s, r, y, l);
              Vn(D, s),
                null !== m && vM(0, y - d, D, E, 0, m),
                w && (Mi(l.index, s)[8] = D);
            }
          })(r, s, l, Di(l, s)),
          128 == (128 & l.flags) &&
            (function (r, s, l) {
              const c = l.directiveStart,
                d = l.directiveEnd,
                m = l.index,
                y = nt.lFrame.currentDirectiveIndex;
              try {
                Yo(m);
                for (let E = c; E < d; E++) {
                  const w = r.data[E],
                    D = s[E];
                  Md(E),
                    (null !== w.hostBindings ||
                      0 !== w.hostVars ||
                      null !== w.hostAttrs) &&
                      Sn(w, D);
                }
              } finally {
                Yo(-1), Md(y);
              }
            })(r, s, l));
      }
      function it(r, s, l = Di) {
        const c = s.localNames;
        if (null !== c) {
          let d = s.index + 1;
          for (let f = 0; f < c.length; f += 2) {
            const m = c[f + 1],
              y = -1 === m ? l(s, r) : r[m];
            r[d++] = y;
          }
        }
      }
      function Un(r) {
        const s = r.tView;
        return null === s || s.incompleteFirstPass
          ? (r.tView = Wp(
              1,
              null,
              r.template,
              r.decls,
              r.vars,
              r.directiveDefs,
              r.pipeDefs,
              r.viewQuery,
              r.schemas,
              r.consts
            ))
          : s;
      }
      function Wp(r, s, l, c, d, f, m, y, E, w) {
        const D = 20 + c,
          I = D + d,
          R = (function (r, s) {
            const l = [];
            for (let c = 0; c < s; c++) l.push(c < r ? null : dt);
            return l;
          })(D, I),
          F = "function" == typeof w ? w() : w;
        return (R[1] = {
          type: r,
          blueprint: R,
          template: l,
          queries: null,
          viewQuery: y,
          declTNode: s,
          data: R.slice().fill(null, D),
          bindingStartIndex: D,
          expandoStartIndex: I,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof f ? f() : f,
          pipeRegistry: "function" == typeof m ? m() : m,
          firstChild: null,
          schemas: E,
          consts: F,
          incompleteFirstPass: !1,
        });
      }
      function Zp(r, s, l, c) {
        const d = G_(s);
        null === l
          ? d.push(c)
          : (d.push(l), r.firstCreatePass && XC(r).push(c, d.length - 1));
      }
      function iu(r, s, l) {
        for (let c in r)
          if (r.hasOwnProperty(c)) {
            const d = r[c];
            (l = null === l ? {} : l).hasOwnProperty(c)
              ? l[c].push(s, d)
              : (l[c] = [s, d]);
          }
        return l;
      }
      function $i(r, s, l, c, d, f, m, y) {
        const E = Di(s, l);
        let D,
          w = s.inputs;
        !y && null != w && (D = w[c])
          ? (nE(r, l, D, c, d),
            Fr(s) &&
              (function (r, s) {
                const l = Mi(s, r);
                16 & l[2] || (l[2] |= 64);
              })(l, s.index))
          : 3 & s.type &&
            ((c = (function (r) {
              return "class" === r
                ? "className"
                : "for" === r
                ? "htmlFor"
                : "formaction" === r
                ? "formAction"
                : "innerHtml" === r
                ? "innerHTML"
                : "readonly" === r
                ? "readOnly"
                : "tabindex" === r
                ? "tabIndex"
                : r;
            })(c)),
            (d = null != m ? m(d, s.value || "", c) : d),
            Yt(f)
              ? f.setProperty(E, c, d)
              : fr(c) || (E.setProperty ? E.setProperty(c, d) : (E[c] = d)));
      }
      function _h(r, s, l, c) {
        let d = !1;
        if (Cd()) {
          const f = (function (r, s, l) {
              const c = r.directiveRegistry;
              let d = null;
              if (c)
                for (let f = 0; f < c.length; f++) {
                  const m = c[f];
                  nM(l, m.selectors, !1) &&
                    (d || (d = []),
                    ji(ol(l, s), r, m.type),
                    Hi(m) ? (V_(r, l), d.unshift(m)) : d.push(m));
                }
              return d;
            })(r, s, l),
            m = null === c ? null : { "": -1 };
          if (null !== f) {
            (d = !0), B_(l, r.data.length, f.length);
            for (let D = 0; D < f.length; D++) {
              const I = f[D];
              I.providersResolver && I.providersResolver(I);
            }
            let y = !1,
              E = !1,
              w = Ss(r, s, f.length, null);
            for (let D = 0; D < f.length; D++) {
              const I = f[D];
              (l.mergedAttrs = rn(l.mergedAttrs, I.hostAttrs)),
                yM(r, l, s, w, I),
                $C(w, I, m),
                null !== I.contentQueries && (l.flags |= 8),
                (null !== I.hostBindings ||
                  null !== I.hostAttrs ||
                  0 !== I.hostVars) &&
                  (l.flags |= 128);
              const R = I.type.prototype;
              !y &&
                (R.ngOnChanges || R.ngOnInit || R.ngDoCheck) &&
                ((r.preOrderHooks || (r.preOrderHooks = [])).push(l.index),
                (y = !0)),
                !E &&
                  (R.ngOnChanges || R.ngDoCheck) &&
                  ((r.preOrderCheckHooks || (r.preOrderCheckHooks = [])).push(
                    l.index
                  ),
                  (E = !0)),
                w++;
            }
            !(function (r, s) {
              const c = s.directiveEnd,
                d = r.data,
                f = s.attrs,
                m = [];
              let y = null,
                E = null;
              for (let w = s.directiveStart; w < c; w++) {
                const D = d[w],
                  I = D.inputs,
                  R = null === f || tM(s) ? null : Fk(I, f);
                m.push(R), (y = iu(I, w, y)), (E = iu(D.outputs, w, E));
              }
              null !== y &&
                (y.hasOwnProperty("class") && (s.flags |= 16),
                y.hasOwnProperty("style") && (s.flags |= 32)),
                (s.initialInputs = m),
                (s.inputs = y),
                (s.outputs = E);
            })(r, l);
          }
          m &&
            (function (r, s, l) {
              if (s) {
                const c = (r.localNames = []);
                for (let d = 0; d < s.length; d += 2) {
                  const f = l[s[d + 1]];
                  if (null == f)
                    throw new de(
                      "301",
                      `Export of name '${s[d + 1]}' not found!`
                    );
                  c.push(s[d], f);
                }
              }
            })(l, c, m);
        }
        return (l.mergedAttrs = rn(l.mergedAttrs, l.attrs)), d;
      }
      function GC(r, s, l, c, d, f) {
        const m = f.hostBindings;
        if (m) {
          let y = r.hostBindingOpCodes;
          null === y && (y = r.hostBindingOpCodes = []);
          const E = ~s.index;
          (function (r) {
            let s = r.length;
            for (; s > 0; ) {
              const l = r[--s];
              if ("number" == typeof l && l < 0) return l;
            }
            return 0;
          })(y) != E && y.push(E),
            y.push(c, d, m);
        }
      }
      function Sn(r, s) {
        null !== r.hostBindings && r.hostBindings(1, s);
      }
      function V_(r, s) {
        (s.flags |= 2), (r.components || (r.components = [])).push(s.index);
      }
      function $C(r, s, l) {
        if (l) {
          if (s.exportAs)
            for (let c = 0; c < s.exportAs.length; c++) l[s.exportAs[c]] = r;
          Hi(s) && (l[""] = r);
        }
      }
      function B_(r, s, l) {
        (r.flags |= 1),
          (r.directiveStart = s),
          (r.directiveEnd = s + l),
          (r.providerIndexes = s);
      }
      function yM(r, s, l, c, d) {
        r.data[c] = d;
        const f = d.factory || (d.factory = Ws(d.type)),
          m = new tl(f, Hi(d), null);
        (r.blueprint[c] = m),
          (l[c] = m),
          GC(r, s, 0, c, Ss(r, l, d.hostVars, dt), d);
      }
      function Nk(r, s, l) {
        const c = Di(s, r),
          d = Un(l),
          f = r[10],
          m = ou(
            r,
            eu(
              r,
              d,
              null,
              l.onPush ? 64 : 16,
              c,
              s,
              f,
              f.createRenderer(c, l),
              null,
              null
            )
          );
        r[s.index] = m;
      }
      function Zr(r, s, l, c, d, f) {
        const m = Di(r, s);
        !(function (r, s, l, c, d, f, m) {
          if (null == f)
            Yt(r) ? r.removeAttribute(s, d, l) : s.removeAttribute(d);
          else {
            const y = null == m ? he(f) : m(f, c || "", d);
            Yt(r)
              ? r.setAttribute(s, d, y, l)
              : l
              ? s.setAttributeNS(l, d, y)
              : s.setAttribute(d, y);
          }
        })(s[11], m, f, r.value, l, c, d);
      }
      function vM(r, s, l, c, d, f) {
        const m = f[s];
        if (null !== m) {
          const y = c.setInput;
          for (let E = 0; E < m.length; ) {
            const w = m[E++],
              D = m[E++],
              I = m[E++];
            null !== y ? c.setInput(l, I, w, D) : (l[D] = I);
          }
        }
      }
      function Fk(r, s) {
        let l = null,
          c = 0;
        for (; c < s.length; ) {
          const d = s[c];
          if (0 !== d)
            if (5 !== d) {
              if ("number" == typeof d) break;
              r.hasOwnProperty(d) &&
                (null === l && (l = []), l.push(d, r[d], s[c + 1])),
                (c += 2);
            } else c += 2;
          else c += 4;
        }
        return l;
      }
      function bM(r, s, l, c) {
        return new Array(r, !0, !1, s, null, 0, c, l, null, null);
      }
      function Uk(r, s) {
        const l = Mi(s, r);
        if (Zf(l)) {
          const c = l[1];
          80 & l[2] ? nu(c, l, c.template, l[8]) : l[5] > 0 && YC(l);
        }
      }
      function YC(r) {
        for (let c = E_(r); null !== c; c = Xc(c))
          for (let d = 10; d < c.length; d++) {
            const f = c[d];
            if (1024 & f[2]) {
              const m = f[1];
              nu(m, f, m.template, f[8]);
            } else f[5] > 0 && YC(f);
          }
        const l = r[1].components;
        if (null !== l)
          for (let c = 0; c < l.length; c++) {
            const d = Mi(l[c], r);
            Zf(d) && d[5] > 0 && YC(d);
          }
      }
      function ZC(r, s) {
        const l = Mi(s, r),
          c = l[1];
        (function (r, s) {
          for (let l = s.length; l < r.blueprint.length; l++)
            s.push(r.blueprint[l]);
        })(c, l),
          ph(c, l, l[8]);
      }
      function ou(r, s) {
        return r[13] ? (r[14][4] = s) : (r[13] = s), (r[14] = s), s;
      }
      function qC(r) {
        for (; r; ) {
          r[2] |= 64;
          const s = jp(r);
          if (Ji(r) && !s) return r;
          r = s;
        }
        return null;
      }
      function H_(r, s, l) {
        const c = s[10];
        c.begin && c.begin();
        try {
          nu(r, s, r.template, l);
        } catch (d) {
          throw (tE(s, d), d);
        } finally {
          c.end && c.end();
        }
      }
      function QC(r) {
        !(function (r) {
          for (let s = 0; s < r.components.length; s++) {
            const l = r.components[s],
              c = qc(l),
              d = c[1];
            yr(d, c, d.template, l);
          }
        })(r[8]);
      }
      function j_(r, s, l) {
        Ks(0), s(r, l);
      }
      const JC = (() => Promise.resolve(null))();
      function G_(r) {
        return r[7] || (r[7] = []);
      }
      function XC(r) {
        return r.cleanup || (r.cleanup = []);
      }
      function eE(r, s, l) {
        return (
          (null === r || Hi(r)) &&
            (l = (function (r) {
              for (; Array.isArray(r); ) {
                if ("object" == typeof r[1]) return r;
                r = r[0];
              }
              return null;
            })(l[s.index])),
          l[11]
        );
      }
      function tE(r, s) {
        const l = r[9],
          c = l ? l.get(C, null) : null;
        c && c.handleError(s);
      }
      function nE(r, s, l, c, d) {
        for (let f = 0; f < l.length; ) {
          const m = l[f++],
            y = l[f++],
            E = s[m],
            w = r.data[m];
          null !== w.setInput ? w.setInput(E, d, c, y) : (E[y] = d);
        }
      }
      function Ds(r, s, l) {
        const c = Go(s, r);
        !(function (r, s, l) {
          Yt(r) ? r.setValue(s, l) : (s.textContent = l);
        })(r[11], c, l);
      }
      function z_(r, s, l) {
        let c = l ? r.styles : null,
          d = l ? r.classes : null,
          f = 0;
        if (null !== s)
          for (let m = 0; m < s.length; m++) {
            const y = s[m];
            "number" == typeof y
              ? (f = y)
              : 1 == f
              ? (d = H(d, y))
              : 2 == f && (c = H(c, y + ": " + s[++m] + ";"));
          }
        l ? (r.styles = c) : (r.stylesWithoutHost = c),
          l ? (r.classes = d) : (r.classesWithoutHost = d);
      }
      const au = new hn("INJECTOR", -1);
      class iE {
        get(s, l = pr) {
          if (l === pr) {
            const c = new Error(`NullInjectorError: No provider for ${W(s)}!`);
            throw ((c.name = "NullInjectorError"), c);
          }
          return l;
        }
      }
      const vh = new hn("Set Injector scope."),
        Kp = {},
        $k = {};
      let rE;
      function Qp() {
        return void 0 === rE && (rE = new iE()), rE;
      }
      function W_(r, s = null, l = null, c) {
        return new SM(r, l, s || Qp(), c);
      }
      class SM {
        constructor(s, l, c, d = null) {
          (this.parent = c),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const f = [];
          l && xi(l, (y) => this.processProvider(y, s, l)),
            xi([s], (y) => this.processInjectorType(y, [], f)),
            this.records.set(au, cu(void 0, this));
          const m = this.records.get(vh);
          (this.scope = null != m ? m.value : null),
            (this.source = d || ("object" == typeof s ? null : W(s)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((s) => s.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(s, l = pr, c = Be.Default) {
          this.assertNotDestroyed();
          const d = sa(this),
            f = Mn(void 0);
          try {
            if (!(c & Be.SkipSelf)) {
              let y = this.records.get(s);
              if (void 0 === y) {
                const E =
                  ("function" == typeof (r = s) ||
                    ("object" == typeof r && r instanceof hn)) &&
                  kn(s);
                (y = E && this.injectableDefInScope(E) ? cu(Jp(s), Kp) : null),
                  this.records.set(s, y);
              }
              if (null != y) return this.hydrate(s, y);
            }
            return (c & Be.Self ? Qp() : this.parent).get(
              s,
              (l = c & Be.Optional && l === pr ? null : l)
            );
          } catch (m) {
            if ("NullInjectorError" === m.name) {
              if (((m[vs] = m[vs] || []).unshift(W(s)), d)) throw m;
              return Wd(m, s, "R3InjectorError", this.source);
            }
            throw m;
          } finally {
            Mn(f), sa(d);
          }
          var r;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((s) => this.get(s));
        }
        toString() {
          const s = [];
          return (
            this.records.forEach((c, d) => s.push(W(d))),
            `R3Injector[${s.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(s, l, c) {
          if (!(s = N(s))) return !1;
          let d = Fo(s);
          const f = (null == d && s.ngModule) || void 0,
            m = void 0 === f ? s : f,
            y = -1 !== c.indexOf(m);
          if ((void 0 !== f && (d = Fo(f)), null == d)) return !1;
          if (null != d.imports && !y) {
            let D;
            c.push(m);
            try {
              xi(d.imports, (I) => {
                this.processInjectorType(I, l, c) &&
                  (void 0 === D && (D = []), D.push(I));
              });
            } finally {
            }
            if (void 0 !== D)
              for (let I = 0; I < D.length; I++) {
                const { ngModule: R, providers: F } = D[I];
                xi(F, ($) => this.processProvider($, R, F || U));
              }
          }
          this.injectorDefTypes.add(m);
          const E = Ws(m) || (() => new m());
          this.records.set(m, cu(E, Kp));
          const w = d.providers;
          if (null != w && !y) {
            const D = s;
            xi(w, (I) => this.processProvider(I, D, w));
          }
          return void 0 !== f && void 0 !== s.providers;
        }
        processProvider(s, l, c) {
          let d = Sl((s = N(s))) ? s : N(s && s.provide);
          const f = Z_((r = s)) ? cu(void 0, r.useValue) : cu(Y_(r), Kp);
          var r;
          if (Sl(s) || !0 !== s.multi) this.records.get(d);
          else {
            let m = this.records.get(d);
            m ||
              ((m = cu(void 0, Kp, !0)),
              (m.factory = () => jr(m.multi)),
              this.records.set(d, m)),
              (d = s),
              m.multi.push(s);
          }
          this.records.set(d, f);
        }
        hydrate(s, l) {
          return (
            l.value === Kp && ((l.value = $k), (l.value = l.factory())),
            "object" == typeof l.value &&
              l.value &&
              null !== (r = l.value) &&
              "object" == typeof r &&
              "function" == typeof r.ngOnDestroy &&
              this.onDestroy.add(l.value),
            l.value
          );
          var r;
        }
        injectableDefInScope(s) {
          if (!s.providedIn) return !1;
          const l = N(s.providedIn);
          return "string" == typeof l
            ? "any" === l || l === this.scope
            : this.injectorDefTypes.has(l);
        }
      }
      function Jp(r) {
        const s = kn(r),
          l = null !== s ? s.factory : Ws(r);
        if (null !== l) return l;
        if (r instanceof hn)
          throw new Error(`Token ${W(r)} is missing a \u0275prov definition.`);
        if (r instanceof Function)
          return (function (r) {
            const s = r.length;
            if (s > 0) {
              const c = Hr(s, "?");
              throw new Error(
                `Can't resolve all parameters for ${W(r)}: (${c.join(", ")}).`
              );
            }
            const l = (function (r) {
              const s = r && (r[Yi] || r[as]);
              if (s) {
                const l = (function (r) {
                  if (r.hasOwnProperty("name")) return r.name;
                  const s = ("" + r).match(/^function\s*([^\s(]+)/);
                  return null === s ? "" : s[1];
                })(r);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${l}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${l}" class.`
                  ),
                  s
                );
              }
              return null;
            })(r);
            return null !== l ? () => l.factory(r) : () => new r();
          })(r);
        throw new Error("unreachable");
      }
      function Y_(r, s, l) {
        let c;
        if (Sl(r)) {
          const d = N(r);
          return Ws(d) || Jp(d);
        }
        if (Z_(r)) c = () => N(r.useValue);
        else if (
          (function (r) {
            return !(!r || !r.useFactory);
          })(r)
        )
          c = () => r.useFactory(...jr(r.deps || []));
        else if (
          (function (r) {
            return !(!r || !r.useExisting);
          })(r)
        )
          c = () => qt(N(r.useExisting));
        else {
          const d = N(r && (r.useClass || r.provide));
          if (
            !(function (r) {
              return !!r.deps;
            })(r)
          )
            return Ws(d) || Jp(d);
          c = () => new d(...jr(r.deps));
        }
        return c;
      }
      function cu(r, s, l = !1) {
        return { factory: r, value: s, multi: l ? [] : void 0 };
      }
      function Z_(r) {
        return null !== r && "object" == typeof r && ao in r;
      }
      function Sl(r) {
        return "function" == typeof r;
      }
      const K_ = function (r, s, l) {
        return (function (r, s = null, l = null, c) {
          const d = W_(r, s, l, c);
          return d._resolveInjectorDefTypes(), d;
        })({ name: l }, s, r, l);
      };
      class $t {
        static create(s, l) {
          return Array.isArray(s)
            ? K_(s, l, "")
            : K_(s.providers, s.parent, s.name || "");
        }
      }
      function FM(r, s) {
        wc(qc(r)[1], Zt());
      }
      function Ms(r) {
        let s = (function (r) {
            return Object.getPrototypeOf(r.prototype).constructor;
          })(r.type),
          l = !0;
        const c = [r];
        for (; s; ) {
          let d;
          if (Hi(r)) d = s.ɵcmp || s.ɵdir;
          else {
            if (s.ɵcmp) throw new Error("Directives cannot inherit Components");
            d = s.ɵdir;
          }
          if (d) {
            if (l) {
              c.push(d);
              const m = r;
              (m.inputs = ty(r.inputs)),
                (m.declaredInputs = ty(r.declaredInputs)),
                (m.outputs = ty(r.outputs));
              const y = d.hostBindings;
              y && BM(r, y);
              const E = d.viewQuery,
                w = d.contentQueries;
              if (
                (E && wh(r, E),
                w && fE(r, w),
                G(r.inputs, d.inputs),
                G(r.declaredInputs, d.declaredInputs),
                G(r.outputs, d.outputs),
                Hi(d) && d.data.animation)
              ) {
                const D = r.data;
                D.animation = (D.animation || []).concat(d.data.animation);
              }
            }
            const f = d.features;
            if (f)
              for (let m = 0; m < f.length; m++) {
                const y = f[m];
                y && y.ngInherit && y(r), y === Ms && (l = !1);
              }
          }
          s = Object.getPrototypeOf(s);
        }
        !(function (r) {
          let s = 0,
            l = null;
          for (let c = r.length - 1; c >= 0; c--) {
            const d = r[c];
            (d.hostVars = s += d.hostVars),
              (d.hostAttrs = rn(d.hostAttrs, (l = rn(l, d.hostAttrs))));
          }
        })(c);
      }
      function ty(r) {
        return r === Ft ? {} : r === U ? [] : r;
      }
      function wh(r, s) {
        const l = r.viewQuery;
        r.viewQuery = l
          ? (c, d) => {
              s(c, d), l(c, d);
            }
          : s;
      }
      function fE(r, s) {
        const l = r.contentQueries;
        r.contentQueries = l
          ? (c, d, f) => {
              s(c, d, f), l(c, d, f);
            }
          : s;
      }
      function BM(r, s) {
        const l = r.hostBindings;
        r.hostBindings = l
          ? (c, d) => {
              s(c, d), l(c, d);
            }
          : s;
      }
      ($t.THROW_IF_NOT_FOUND = pr),
        ($t.NULL = new iE()),
        ($t.ɵprov = st({
          token: $t,
          providedIn: "any",
          factory: () => qt(au),
        })),
        ($t.__NG_ELEMENT_ID__ = -1);
      let Sh = null;
      function Dl() {
        if (!Sh) {
          const r = Pt.Symbol;
          if (r && r.iterator) Sh = r.iterator;
          else {
            const s = Object.getOwnPropertyNames(Map.prototype);
            for (let l = 0; l < s.length; ++l) {
              const c = s[l];
              "entries" !== c &&
                "size" !== c &&
                Map.prototype[c] === Map.prototype.entries &&
                (Sh = c);
            }
          }
        }
        return Sh;
      }
      class Kr {
        constructor(s) {
          this.wrapped = s;
        }
        static wrap(s) {
          return new Kr(s);
        }
        static unwrap(s) {
          return Kr.isWrapped(s) ? s.wrapped : s;
        }
        static isWrapped(s) {
          return s instanceof Kr;
        }
      }
      function Dh(r) {
        return (
          !!Sa(r) && (Array.isArray(r) || (!(r instanceof Map) && Dl() in r))
        );
      }
      function Sa(r) {
        return null !== r && ("function" == typeof r || "object" == typeof r);
      }
      function Ts(r, s, l) {
        return (r[s] = l);
      }
      function Wn(r, s, l) {
        return !Object.is(r[s], l) && ((r[s] = l), !0);
      }
      function Ml(r, s, l, c) {
        const d = Wn(r, s, l);
        return Wn(r, s + 1, c) || d;
      }
      function Th(r, s, l, c) {
        const d = be();
        return Wn(d, Vr(), s) && (yt(), Zr(gn(), d, r, s, l, c)), Th;
      }
      function uu(r, s, l, c) {
        return Wn(r, Vr(), l) ? s + he(l) + c : dt;
      }
      function bE(r, s, l, c, d, f, m, y) {
        const E = be(),
          w = yt(),
          D = r + 20,
          I = w.firstCreatePass
            ? (function (r, s, l, c, d, f, m, y, E) {
                const w = s.consts,
                  D = tu(s, r, 4, m || null, hr(w, y));
                _h(s, l, D, hr(w, E)), wc(s, D);
                const I = (D.tViews = Wp(
                  2,
                  D,
                  c,
                  d,
                  f,
                  s.directiveRegistry,
                  s.pipeRegistry,
                  null,
                  s.schemas,
                  w
                ));
                return (
                  null !== s.queries &&
                    (s.queries.template(s, D),
                    (I.queries = s.queries.embeddedTView(D))),
                  D
                );
              })(D, w, E, s, l, c, d, f, m)
            : w.data[D];
        ui(I, !1);
        const R = E[11].createComment("");
        T_(w, E, R, I),
          Vn(R, E),
          ou(E, (E[D] = bM(R, E, R, I))),
          li(I) && N_(w, E, I),
          null != m && it(E, I, y);
      }
      function oy(r) {
        return fs(nt.lFrame.contextLView, 20 + r);
      }
      function Oh(r, s = Be.Default) {
        const l = be();
        return null === l ? qt(r, s) : kd(Zt(), l, N(r), s);
      }
      function py(r, s, l) {
        const c = be();
        return Wn(c, Vr(), s) && $i(yt(), gn(), c, r, s, c[11], l, !1), py;
      }
      function kE(r, s, l, c, d) {
        const m = d ? "class" : "style";
        nE(r, l, s.inputs[m], m, c);
      }
      function my(r, s, l, c) {
        const d = be(),
          f = yt(),
          m = 20 + r,
          y = d[11],
          E = (d[m] = S_(y, s, nt.lFrame.currentNamespace)),
          w = f.firstCreatePass
            ? (function (r, s, l, c, d, f, m) {
                const y = s.consts,
                  w = tu(s, r, 2, d, hr(y, f));
                return (
                  _h(s, l, w, hr(y, m)),
                  null !== w.attrs && z_(w, w.attrs, !1),
                  null !== w.mergedAttrs && z_(w, w.mergedAttrs, !0),
                  null !== s.queries && s.queries.elementStart(s, w),
                  w
                );
              })(m, f, d, 0, s, l, c)
            : f.data[m];
        ui(w, !0);
        const D = w.mergedAttrs;
        null !== D && xd(y, E, D);
        const I = w.classes;
        null !== I && kC(y, E, I);
        const R = w.styles;
        null !== R && XD(y, E, R),
          64 != (64 & w.flags) && T_(f, d, E, w),
          0 === nt.lFrame.elementDepthCount && Vn(E, d),
          nt.lFrame.elementDepthCount++,
          li(w) && (N_(f, d, w), HC(f, w, d)),
          null !== c && it(d, w);
      }
      function OE() {
        let r = Zt();
        yc() ? vc() : ((r = r.parent), ui(r, !1));
        const s = r;
        nt.lFrame.elementDepthCount--;
        const l = yt();
        l.firstCreatePass && (wc(l, r), qa(r) && l.queries.elementEnd(r)),
          null != s.classesWithoutHost &&
            (function (r) {
              return 0 != (16 & r.flags);
            })(s) &&
            kE(l, s, be(), s.classesWithoutHost, !0),
          null != s.stylesWithoutHost &&
            (function (r) {
              return 0 != (32 & r.flags);
            })(s) &&
            kE(l, s, be(), s.stylesWithoutHost, !1);
      }
      function XM(r, s, l, c) {
        my(r, s, l, c), OE();
      }
      function hm(r, s, l) {
        const c = be(),
          d = yt(),
          f = r + 20,
          m = d.firstCreatePass
            ? (function (r, s, l, c, d) {
                const f = s.consts,
                  m = hr(f, c),
                  y = tu(s, r, 8, "ng-container", m);
                return (
                  null !== m && z_(y, m, !0),
                  _h(s, l, y, hr(f, d)),
                  null !== s.queries && s.queries.elementStart(s, y),
                  y
                );
              })(f, d, c, s, l)
            : d.data[f];
        ui(m, !0);
        const y = (c[f] = c[11].createComment(""));
        T_(d, c, y, m),
          Vn(y, c),
          li(m) && (N_(d, c, m), HC(d, m, c)),
          null != l && it(c, m);
      }
      function gy() {
        let r = Zt();
        const s = yt();
        yc() ? vc() : ((r = r.parent), ui(r, !1)),
          s.firstCreatePass && (wc(s, r), qa(r) && s.queries.elementEnd(r));
      }
      function _y(r, s, l) {
        hm(r, s, l), gy();
      }
      function yy() {
        return be();
      }
      function Eo(r) {
        return !!r && "function" == typeof r.then;
      }
      function Ph(r) {
        return !!r && "function" == typeof r.subscribe;
      }
      const vy = Ph;
      function PE(r, s, l, c) {
        const d = be(),
          f = yt(),
          m = Zt();
        return FE(f, d, d[11], m, r, s, !!l, c), PE;
      }
      function pu(r, s) {
        const l = Zt(),
          c = be(),
          d = yt();
        return FE(d, c, eE(Td(d.data), l, c), l, r, s, !1), pu;
      }
      function FE(r, s, l, c, d, f, m, y) {
        const E = li(c),
          D = r.firstCreatePass && XC(r),
          I = s[8],
          R = G_(s);
        let F = !0;
        if (3 & c.type || y) {
          const Q = Di(c, s),
            we = y ? y(Q) : Q,
            _e = R.length,
            je = y ? (tt) => y(Qt(tt[c.index])) : c.index;
          if (Yt(l)) {
            let tt = null;
            if (
              (!y &&
                E &&
                (tt = (function (r, s, l, c) {
                  const d = r.cleanup;
                  if (null != d)
                    for (let f = 0; f < d.length - 1; f += 2) {
                      const m = d[f];
                      if (m === l && d[f + 1] === c) {
                        const y = s[7],
                          E = d[f + 2];
                        return y.length > E ? y[E] : null;
                      }
                      "string" == typeof m && (f += 2);
                    }
                  return null;
                })(r, s, d, c.index)),
              null !== tt)
            )
              ((tt.__ngLastListenerFn__ || tt).__ngNextListenerFn__ = f),
                (tt.__ngLastListenerFn__ = f),
                (F = !1);
            else {
              f = by(c, s, I, f, !1);
              const Mt = l.listen(we, d, f);
              R.push(f, Mt), D && D.push(d, je, _e, _e + 1);
            }
          } else
            (f = by(c, s, I, f, !0)),
              we.addEventListener(d, f, m),
              R.push(f),
              D && D.push(d, je, _e, m);
        } else f = by(c, s, I, f, !1);
        const $ = c.outputs;
        let oe;
        if (F && null !== $ && (oe = $[d])) {
          const Q = oe.length;
          if (Q)
            for (let we = 0; we < Q; we += 2) {
              const zn = s[oe[we]][oe[we + 1]].subscribe(f),
                Tr = R.length;
              R.push(f, zn), D && D.push(d, c.index, Tr, -(Tr + 1));
            }
        }
      }
      function LE(r, s, l, c) {
        try {
          return !1 !== l(c);
        } catch (d) {
          return tE(r, d), !1;
        }
      }
      function by(r, s, l, c, d) {
        return function f(m) {
          if (m === Function) return c;
          const y = 2 & r.flags ? Mi(r.index, s) : s;
          0 == (32 & s[2]) && qC(y);
          let E = LE(s, 0, c, m),
            w = f.__ngNextListenerFn__;
          for (; w; ) (E = LE(s, 0, w, m) && E), (w = w.__ngNextListenerFn__);
          return d && !1 === E && (m.preventDefault(), (m.returnValue = !1)), E;
        };
      }
      function VE(r = 1) {
        return (function (r) {
          return (nt.lFrame.contextLView = (function (r, s) {
            for (; r > 0; ) (s = s[15]), r--;
            return s;
          })(r, nt.lFrame.contextLView))[8];
        })(r);
      }
      function BE(r, s) {
        let l = null;
        const c = (function (r) {
          const s = r.attrs;
          if (null != s) {
            const l = s.indexOf(5);
            if (0 == (1 & l)) return s[l + 1];
          }
          return null;
        })(r);
        for (let d = 0; d < s.length; d++) {
          const f = s[d];
          if ("*" !== f) {
            if (null === c ? nM(r, f, !0) : Mk(c, f)) return d;
          } else l = d;
        }
        return l;
      }
      function UE(r) {
        const s = be()[16][6];
        if (!s.projection) {
          const c = (s.projection = Hr(r ? r.length : 1, null)),
            d = c.slice();
          let f = s.child;
          for (; null !== f; ) {
            const m = r ? BE(f, r) : 0;
            null !== m &&
              (d[m] ? (d[m].projectionNext = f) : (c[m] = f), (d[m] = f)),
              (f = f.next);
          }
        }
      }
      function HE(r, s = 0, l) {
        const c = be(),
          d = yt(),
          f = tu(d, 20 + r, 16, null, l || null);
        null === f.projection && (f.projection = s),
          vc(),
          64 != (64 & f.flags) &&
            (function (r, s, l) {
              JD(s[11], 0, s, l, jD(r, l, s), WD(l.parent || s[6], l, s));
            })(d, c, f);
      }
      function Sy(r, s, l, c, d) {
        const f = r[l + 1],
          m = null === s;
        let y = c ? ws(f) : ga(f),
          E = !1;
        for (; 0 !== y && (!1 === E || m); ) {
          const D = r[y + 1];
          _i(r[y], s) && ((E = !0), (r[y + 1] = c ? FC(D) : PC(D))),
            (y = c ? ws(D) : ga(D));
        }
        E && (r[l + 1] = c ? PC(f) : FC(f));
      }
      function _i(r, s) {
        return (
          null === r ||
          null == s ||
          (Array.isArray(r) ? r[1] : r) === s ||
          (!(!Array.isArray(r) || "string" != typeof s) && nr(r, s) >= 0)
        );
      }
      const Jt = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function WE(r) {
        return r.substring(Jt.key, Jt.keyEnd);
      }
      function Qr(r) {
        return r.substring(Jt.value, Jt.valueEnd);
      }
      function Dy(r, s) {
        const l = Jt.textEnd;
        return l === s
          ? -1
          : ((s = Jt.keyEnd =
              (function (r, s, l) {
                for (; s < l && r.charCodeAt(s) > 32; ) s++;
                return s;
              })(r, (Jt.key = s), l)),
            kl(r, s, l));
      }
      function My(r, s) {
        const l = Jt.textEnd;
        let c = (Jt.key = kl(r, s, l));
        return l === c
          ? -1
          : ((c = Jt.keyEnd =
              (function (r, s, l) {
                let c;
                for (
                  ;
                  s < l &&
                  (45 === (c = r.charCodeAt(s)) ||
                    95 === c ||
                    ((-33 & c) >= 65 && (-33 & c) <= 90) ||
                    (c >= 48 && c <= 57));

                )
                  s++;
                return s;
              })(r, c, l)),
            (c = wo(r, c, l)),
            (c = Jt.value = kl(r, c, l)),
            (c = Jt.valueEnd =
              (function (r, s, l) {
                let c = -1,
                  d = -1,
                  f = -1,
                  m = s,
                  y = m;
                for (; m < l; ) {
                  const E = r.charCodeAt(m++);
                  if (59 === E) return y;
                  34 === E || 39 === E
                    ? (y = m = Iy(r, E, m, l))
                    : s === m - 4 &&
                      85 === f &&
                      82 === d &&
                      76 === c &&
                      40 === E
                    ? (y = m = Iy(r, 41, m, l))
                    : E > 32 && (y = m),
                    (f = d),
                    (d = c),
                    (c = -33 & E);
                }
                return y;
              })(r, c, l)),
            wo(r, c, l));
      }
      function Ty(r) {
        (Jt.key = 0),
          (Jt.keyEnd = 0),
          (Jt.value = 0),
          (Jt.valueEnd = 0),
          (Jt.textEnd = r.length);
      }
      function kl(r, s, l) {
        for (; s < l && r.charCodeAt(s) <= 32; ) s++;
        return s;
      }
      function wo(r, s, l, c) {
        return (s = kl(r, s, l)) < l && s++, s;
      }
      function Iy(r, s, l, c) {
        let d = -1,
          f = l;
        for (; f < c; ) {
          const m = r.charCodeAt(f++);
          if (m == s && 92 !== d) return f;
          d = 92 == m && 92 === d ? 0 : m;
        }
        throw new Error();
      }
      function fm(r, s, l) {
        return or(r, s, l, !1), fm;
      }
      function Ay(r, s) {
        return or(r, s, null, !0), Ay;
      }
      function JE(r, s) {
        for (
          let l = (function (r) {
            return Ty(r), My(r, kl(r, 0, Jt.textEnd));
          })(s);
          l >= 0;
          l = My(s, l)
        )
          Py(r, WE(s), Qr(s));
      }
      function Xr(r, s) {
        for (
          let l = (function (r) {
            return Ty(r), Dy(r, kl(r, 0, Jt.textEnd));
          })(s);
          l >= 0;
          l = Dy(s, l)
        )
          Tn(r, WE(s), !0);
      }
      function or(r, s, l, c) {
        const d = be(),
          f = yt(),
          m = Ti(2);
        f.firstUpdatePass && ky(f, r, m, c),
          s !== dt &&
            Wn(d, m, s) &&
            nT(
              f,
              f.data[ei()],
              d,
              d[11],
              r,
              (d[m + 1] = (function (r, s) {
                return (
                  null == r ||
                    ("string" == typeof s
                      ? (r += s)
                      : "object" == typeof r && (r = W(ti(r)))),
                  r
                );
              })(s, l)),
              c,
              m
            );
      }
      function br(r, s, l, c) {
        const d = yt(),
          f = Ti(2);
        d.firstUpdatePass && ky(d, null, f, c);
        const m = be();
        if (l !== dt && Wn(m, f, l)) {
          const y = d.data[ei()];
          if (Fh(y, c) && !Ry(d, f)) {
            let E = c ? y.classesWithoutHost : y.stylesWithoutHost;
            null !== E && (l = H(E, l || "")), kE(d, y, m, l, c);
          } else
            !(function (r, s, l, c, d, f, m, y) {
              d === dt && (d = U);
              let E = 0,
                w = 0,
                D = 0 < d.length ? d[0] : null,
                I = 0 < f.length ? f[0] : null;
              for (; null !== D || null !== I; ) {
                const R = E < d.length ? d[E + 1] : void 0,
                  F = w < f.length ? f[w + 1] : void 0;
                let oe,
                  $ = null;
                D === I
                  ? ((E += 2), (w += 2), R !== F && (($ = I), (oe = F)))
                  : null === I || (null !== D && D < I)
                  ? ((E += 2), ($ = D))
                  : ((w += 2), ($ = I), (oe = F)),
                  null !== $ && nT(r, s, l, c, $, oe, m, y),
                  (D = E < d.length ? d[E] : null),
                  (I = w < f.length ? f[w] : null);
              }
            })(
              d,
              y,
              m,
              m[11],
              m[f + 1],
              (m[f + 1] = (function (r, s, l) {
                if (null == l || "" === l) return U;
                const c = [],
                  d = ti(l);
                if (Array.isArray(d))
                  for (let f = 0; f < d.length; f++) r(c, d[f], !0);
                else if ("object" == typeof d)
                  for (const f in d) d.hasOwnProperty(f) && r(c, f, d[f]);
                else "string" == typeof d && s(c, d);
                return c;
              })(r, s, l)),
              c,
              f
            );
        }
      }
      function Ry(r, s) {
        return s >= r.expandoStartIndex;
      }
      function ky(r, s, l, c) {
        const d = r.data;
        if (null === d[l + 1]) {
          const f = d[ei()],
            m = Ry(r, l);
          Fh(f, c) && null === s && !m && (s = !1),
            (s = (function (r, s, l, c) {
              const d = Td(r);
              let f = c ? s.residualClasses : s.residualStyles;
              if (null === d)
                0 === (c ? s.classBindings : s.styleBindings) &&
                  ((l = jn((l = mm(null, r, s, l, c)), s.attrs, c)),
                  (f = null));
              else {
                const m = s.directiveStylingLast;
                if (-1 === m || r[m] !== d)
                  if (((l = mm(d, r, s, l, c)), null === f)) {
                    let E = (function (r, s, l) {
                      const c = l ? s.classBindings : s.styleBindings;
                      if (0 !== ga(c)) return r[ws(c)];
                    })(r, s, c);
                    void 0 !== E &&
                      Array.isArray(E) &&
                      ((E = mm(null, r, s, E[1], c)),
                      (E = jn(E, s.attrs, c)),
                      (function (r, s, l, c) {
                        r[ws(l ? s.classBindings : s.styleBindings)] = c;
                      })(r, s, c, E));
                  } else
                    f = (function (r, s, l) {
                      let c;
                      const d = s.directiveEnd;
                      for (let f = 1 + s.directiveStylingLast; f < d; f++)
                        c = jn(c, r[f].hostAttrs, l);
                      return jn(c, s.attrs, l);
                    })(r, s, c);
              }
              return (
                void 0 !== f &&
                  (c ? (s.residualClasses = f) : (s.residualStyles = f)),
                l
              );
            })(d, f, s, c)),
            (function (r, s, l, c, d, f) {
              let m = f ? s.classBindings : s.styleBindings,
                y = ws(m),
                E = ga(m);
              r[c] = l;
              let D,
                w = !1;
              if (Array.isArray(l)) {
                const I = l;
                (D = I[1]), (null === D || nr(I, D) > 0) && (w = !0);
              } else D = l;
              if (d)
                if (0 !== E) {
                  const R = ws(r[y + 1]);
                  (r[c + 1] = A_(R, y)),
                    0 !== R && (r[R + 1] = NC(r[R + 1], c)),
                    (r[y + 1] = (function (r, s) {
                      return (131071 & r) | (s << 17);
                    })(r[y + 1], c));
                } else
                  (r[c + 1] = A_(y, 0)),
                    0 !== y && (r[y + 1] = NC(r[y + 1], c)),
                    (y = c);
              else
                (r[c + 1] = A_(E, 0)),
                  0 === y ? (y = c) : (r[E + 1] = NC(r[E + 1], c)),
                  (E = c);
              w && (r[c + 1] = PC(r[c + 1])),
                Sy(r, D, c, !0),
                Sy(r, D, c, !1),
                (function (r, s, l, c, d) {
                  const f = d ? r.residualClasses : r.residualStyles;
                  null != f &&
                    "string" == typeof s &&
                    nr(f, s) >= 0 &&
                    (l[c + 1] = FC(l[c + 1]));
                })(s, D, r, c, f),
                (m = A_(y, E)),
                f ? (s.classBindings = m) : (s.styleBindings = m);
            })(d, f, s, l, m, c);
        }
      }
      function mm(r, s, l, c, d) {
        let f = null;
        const m = l.directiveEnd;
        let y = l.directiveStylingLast;
        for (
          -1 === y ? (y = l.directiveStart) : y++;
          y < m && ((f = s[y]), (c = jn(c, f.hostAttrs, d)), f !== r);

        )
          y++;
        return null !== r && (l.directiveStylingLast = y), c;
      }
      function jn(r, s, l) {
        const c = l ? 1 : 2;
        let d = -1;
        if (null !== s)
          for (let f = 0; f < s.length; f++) {
            const m = s[f];
            "number" == typeof m
              ? (d = m)
              : d === c &&
                (Array.isArray(r) || (r = void 0 === r ? [] : ["", r]),
                Tn(r, m, !!l || s[++f]));
          }
        return void 0 === r ? null : r;
      }
      function Py(r, s, l) {
        Tn(r, s, ti(l));
      }
      function nT(r, s, l, c, d, f, m, y) {
        if (!(3 & s.type)) return;
        const E = r.data,
          w = E[y + 1];
        mu(
          (function (r) {
            return 1 == (1 & r);
          })(w)
            ? gm(E, s, l, d, ga(w), m)
            : void 0
        ) ||
          (mu(f) ||
            ((function (r) {
              return 2 == (2 & r);
            })(w) &&
              (f = gm(E, null, l, d, y, m))),
          (function (r, s, l, c, d) {
            const f = Yt(r);
            if (s)
              d
                ? f
                  ? r.addClass(l, c)
                  : l.classList.add(c)
                : f
                ? r.removeClass(l, c)
                : l.classList.remove(c);
            else {
              let m = -1 === c.indexOf("-") ? void 0 : _r.DashCase;
              if (null == d)
                f ? r.removeStyle(l, c, m) : l.style.removeProperty(c);
              else {
                const y = "string" == typeof d && d.endsWith("!important");
                y && ((d = d.slice(0, -10)), (m |= _r.Important)),
                  f
                    ? r.setStyle(l, c, d, m)
                    : l.style.setProperty(c, d, y ? "important" : "");
              }
            }
          })(c, m, Go(ei(), l), d, f));
      }
      function gm(r, s, l, c, d, f) {
        const m = null === s;
        let y;
        for (; d > 0; ) {
          const E = r[d],
            w = Array.isArray(E),
            D = w ? E[1] : E,
            I = null === D;
          let R = l[d + 1];
          R === dt && (R = I ? U : void 0);
          let F = I ? Ud(R, c) : D === c ? R : void 0;
          if ((w && !mu(F) && (F = Ud(E, c)), mu(F) && ((y = F), m))) return y;
          const $ = r[d + 1];
          d = m ? ws($) : ga($);
        }
        if (null !== s) {
          let E = f ? s.residualClasses : s.residualStyles;
          null != E && (y = Ud(E, c));
        }
        return y;
      }
      function mu(r) {
        return void 0 !== r;
      }
      function Fh(r, s) {
        return 0 != (r.flags & (s ? 16 : 32));
      }
      function tw(r, s = "") {
        const l = be(),
          c = yt(),
          d = r + 20,
          f = c.firstCreatePass ? tu(c, d, 1, s, null) : c.data[d],
          m = (l[d] = (function (r, s) {
            return Yt(r) ? r.createText(s) : r.createTextNode(s);
          })(l[11], s));
        T_(c, l, m, f), ui(f, !1);
      }
      function Lh(r) {
        return _m("", r, ""), Lh;
      }
      function _m(r, s, l) {
        const c = be(),
          d = uu(c, r, s, l);
        return d !== dt && Ds(c, ei(), d), _m;
      }
      function nw(r, s, l, c, d) {
        const f = be(),
          m = (function (r, s, l, c, d, f) {
            const y = Ml(r, er(), l, d);
            return Ti(2), y ? s + he(l) + c + he(d) + f : dt;
          })(f, r, s, l, c, d);
        return m !== dt && Ds(f, ei(), m), nw;
      }
      function gu(r, s, l) {
        br(Tn, Xr, uu(be(), r, s, l), !0);
      }
      function sw(r, s, l) {
        !(function (r) {
          br(Py, JE, r, !1);
        })(uu(be(), r, s, l));
      }
      function Hh(r, s, l) {
        const c = be();
        return Wn(c, Vr(), s) && $i(yt(), gn(), c, r, s, c[11], l, !0), Hh;
      }
      function Em(r, s, l) {
        const c = be();
        if (Wn(c, Vr(), s)) {
          const f = yt(),
            m = gn();
          $i(f, m, c, r, s, eE(Td(f.data), m, c), l, !0);
        }
        return Em;
      }
      const So = void 0;
      var vu = [
        "en",
        [["a", "p"], ["AM", "PM"], So],
        [["AM", "PM"], So, So],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        So,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        So,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", So, "{1} 'at' {0}", So],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function (r) {
          const s = Math.floor(Math.abs(r)),
            l = r.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === s && 0 === l ? 1 : 5;
        },
      ];
      let xs = {};
      function Hy(r) {
        const s = (function (r) {
          return r.toLowerCase().replace(/_/g, "-");
        })(r);
        let l = Pl(s);
        if (l) return l;
        const c = s.split("-")[0];
        if (((l = Pl(c)), l)) return l;
        if ("en" === c) return vu;
        throw new Error(`Missing locale data for the locale "${r}".`);
      }
      function bu(r) {
        return Hy(r)[Je.PluralCase];
      }
      function Pl(r) {
        return (
          r in xs ||
            (xs[r] =
              Pt.ng &&
              Pt.ng.common &&
              Pt.ng.common.locales &&
              Pt.ng.common.locales[r]),
          xs[r]
        );
      }
      var Je = (() => (
        ((Je = Je || {})[(Je.LocaleId = 0)] = "LocaleId"),
        (Je[(Je.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
        (Je[(Je.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
        (Je[(Je.DaysFormat = 3)] = "DaysFormat"),
        (Je[(Je.DaysStandalone = 4)] = "DaysStandalone"),
        (Je[(Je.MonthsFormat = 5)] = "MonthsFormat"),
        (Je[(Je.MonthsStandalone = 6)] = "MonthsStandalone"),
        (Je[(Je.Eras = 7)] = "Eras"),
        (Je[(Je.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
        (Je[(Je.WeekendRange = 9)] = "WeekendRange"),
        (Je[(Je.DateFormat = 10)] = "DateFormat"),
        (Je[(Je.TimeFormat = 11)] = "TimeFormat"),
        (Je[(Je.DateTimeFormat = 12)] = "DateTimeFormat"),
        (Je[(Je.NumberSymbols = 13)] = "NumberSymbols"),
        (Je[(Je.NumberFormats = 14)] = "NumberFormats"),
        (Je[(Je.CurrencyCode = 15)] = "CurrencyCode"),
        (Je[(Je.CurrencySymbol = 16)] = "CurrencySymbol"),
        (Je[(Je.CurrencyName = 17)] = "CurrencyName"),
        (Je[(Je.Currencies = 18)] = "Currencies"),
        (Je[(Je.Directionality = 19)] = "Directionality"),
        (Je[(Je.PluralCase = 20)] = "PluralCase"),
        (Je[(Je.ExtraData = 21)] = "ExtraData"),
        Je
      ))();
      const wm = "en-US";
      let Dm = wm;
      function Gy(r) {
        ze(r, "Expected localeId to be defined"),
          "string" == typeof r && (Dm = r.toLowerCase().replace(/_/g, "-"));
      }
      function Xy(r, s, l, c, d) {
        if (((r = N(r)), Array.isArray(r)))
          for (let f = 0; f < r.length; f++) Xy(r[f], s, l, c, d);
        else {
          const f = yt(),
            m = be();
          let y = Sl(r) ? r : N(r.provide),
            E = Y_(r);
          const w = Zt(),
            D = 1048575 & w.providerIndexes,
            I = w.directiveStart,
            R = w.providerIndexes >> 20;
          if (Sl(r) || !r.multi) {
            const F = new tl(E, d, Oh),
              $ = tv(y, s, d ? D : D + R, I);
            -1 === $
              ? (ji(ol(w, m), f, y),
                ev(f, r, s.length),
                s.push(y),
                w.directiveStart++,
                w.directiveEnd++,
                d && (w.providerIndexes += 1048576),
                l.push(F),
                m.push(F))
              : ((l[$] = F), (m[$] = F));
          } else {
            const F = tv(y, s, D + R, I),
              $ = tv(y, s, D, D + R),
              oe = F >= 0 && l[F],
              Q = $ >= 0 && l[$];
            if ((d && !Q) || (!d && !oe)) {
              ji(ol(w, m), f, y);
              const we = (function (r, s, l, c, d) {
                const f = new tl(r, l, Oh);
                return (
                  (f.multi = []),
                  (f.index = s),
                  (f.componentProviders = 0),
                  Uw(f, d, c && !l),
                  f
                );
              })(d ? wu : CO, l.length, d, c, E);
              !d && Q && (l[$].providerFactory = we),
                ev(f, r, s.length, 0),
                s.push(y),
                w.directiveStart++,
                w.directiveEnd++,
                d && (w.providerIndexes += 1048576),
                l.push(we),
                m.push(we);
            } else ev(f, r, F > -1 ? F : $, Uw(l[d ? $ : F], E, !d && c));
            !d && c && Q && l[$].componentProviders++;
          }
        }
      }
      function ev(r, s, l, c) {
        const d = Sl(s);
        if (
          d ||
          (function (r) {
            return !!r.useClass;
          })(s)
        ) {
          const m = (s.useClass || s).prototype.ngOnDestroy;
          if (m) {
            const y = r.destroyHooks || (r.destroyHooks = []);
            if (!d && s.multi) {
              const E = y.indexOf(l);
              -1 === E ? y.push(l, [c, m]) : y[E + 1].push(c, m);
            } else y.push(l, m);
          }
        }
      }
      function Uw(r, s, l) {
        return l && r.componentProviders++, r.multi.push(s) - 1;
      }
      function tv(r, s, l, c) {
        for (let d = l; d < c; d++) if (s[d] === r) return d;
        return -1;
      }
      function CO(r, s, l, c) {
        return xm(this.multi, []);
      }
      function wu(r, s, l, c) {
        const d = this.multi;
        let f;
        if (this.providerFactory) {
          const m = this.providerFactory.componentProviders,
            y = Ic(l, l[1], this.providerFactory.index, c);
          (f = y.slice(0, m)), xm(d, f);
          for (let E = m; E < y.length; E++) f.push(y[E]);
        } else (f = []), xm(d, f);
        return f;
      }
      function xm(r, s) {
        for (let l = 0; l < r.length; l++) s.push((0, r[l])());
        return s;
      }
      function Hw(r, s = []) {
        return (l) => {
          l.providersResolver = (c, d) =>
            (function (r, s, l) {
              const c = yt();
              if (c.firstCreatePass) {
                const d = Hi(r);
                Xy(l, c.data, c.blueprint, d, !0),
                  Xy(s, c.data, c.blueprint, d, !1);
              }
            })(c, d ? d(r) : r, s);
        };
      }
      class jw {}
      const zw = "ngComponent";
      class YT {
        resolveComponentFactory(s) {
          throw (function (r) {
            const s = Error(
              `No component factory found for ${W(
                r
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (s[zw] = r), s;
          })(s);
        }
      }
      class Su {}
      function Rm(...r) {}
      function Fl(r, s) {
        return new Rs(Di(r, s));
      }
      Su.NULL = new YT();
      const km = function () {
        return Fl(Zt(), be());
      };
      let Rs = (() => {
        class r {
          constructor(l) {
            this.nativeElement = l;
          }
        }
        return (r.__NG_ELEMENT_ID__ = km), r;
      })();
      function Ww(r) {
        return r instanceof Rs ? r.nativeElement : r;
      }
      class Xt {}
      let KT = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = () => $h()), r;
      })();
      const $h = function () {
        const r = be(),
          l = Mi(Zt().index, r);
        return (function (r) {
          return r[11];
        })(Qi(l) ? l : r);
      };
      let iv = (() => {
        class r {}
        return (
          (r.ɵprov = st({ token: r, providedIn: "root", factory: () => null })),
          r
        );
      })();
      class Om {
        constructor(s) {
          (this.full = s),
            (this.major = s.split(".")[0]),
            (this.minor = s.split(".")[1]),
            (this.patch = s.split(".").slice(2).join("."));
        }
      }
      const rv = new Om("12.2.4");
      class Yw {
        constructor() {}
        supports(s) {
          return Dh(s);
        }
        create(s) {
          return new nI(s);
        }
      }
      const eI = (r, s) => s;
      class nI {
        constructor(s) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = s || eI);
        }
        forEachItem(s) {
          let l;
          for (l = this._itHead; null !== l; l = l._next) s(l);
        }
        forEachOperation(s) {
          let l = this._itHead,
            c = this._removalsHead,
            d = 0,
            f = null;
          for (; l || c; ) {
            const m = !c || (l && l.currentIndex < Wh(c, d, f)) ? l : c,
              y = Wh(m, d, f),
              E = m.currentIndex;
            if (m === c) d--, (c = c._nextRemoved);
            else if (((l = l._next), null == m.previousIndex)) d++;
            else {
              f || (f = []);
              const w = y - d,
                D = E - d;
              if (w != D) {
                for (let R = 0; R < w; R++) {
                  const F = R < f.length ? f[R] : (f[R] = 0),
                    $ = F + R;
                  D <= $ && $ < w && (f[R] = F + 1);
                }
                f[m.previousIndex] = D - w;
              }
            }
            y !== E && s(m, y, E);
          }
        }
        forEachPreviousItem(s) {
          let l;
          for (l = this._previousItHead; null !== l; l = l._nextPrevious) s(l);
        }
        forEachAddedItem(s) {
          let l;
          for (l = this._additionsHead; null !== l; l = l._nextAdded) s(l);
        }
        forEachMovedItem(s) {
          let l;
          for (l = this._movesHead; null !== l; l = l._nextMoved) s(l);
        }
        forEachRemovedItem(s) {
          let l;
          for (l = this._removalsHead; null !== l; l = l._nextRemoved) s(l);
        }
        forEachIdentityChange(s) {
          let l;
          for (
            l = this._identityChangesHead;
            null !== l;
            l = l._nextIdentityChange
          )
            s(l);
        }
        diff(s) {
          if ((null == s && (s = []), !Dh(s)))
            throw new Error(
              `Error trying to diff '${W(
                s
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(s) ? this : null;
        }
        onDestroy() {}
        check(s) {
          this._reset();
          let d,
            f,
            m,
            l = this._itHead,
            c = !1;
          if (Array.isArray(s)) {
            this.length = s.length;
            for (let y = 0; y < this.length; y++)
              (f = s[y]),
                (m = this._trackByFn(y, f)),
                null !== l && Object.is(l.trackById, m)
                  ? (c && (l = this._verifyReinsertion(l, f, m, y)),
                    Object.is(l.item, f) || this._addIdentityChange(l, f))
                  : ((l = this._mismatch(l, f, m, y)), (c = !0)),
                (l = l._next);
          } else
            (d = 0),
              (function (r, s) {
                if (Array.isArray(r))
                  for (let l = 0; l < r.length; l++) s(r[l]);
                else {
                  const l = r[Dl()]();
                  let c;
                  for (; !(c = l.next()).done; ) s(c.value);
                }
              })(s, (y) => {
                (m = this._trackByFn(d, y)),
                  null !== l && Object.is(l.trackById, m)
                    ? (c && (l = this._verifyReinsertion(l, y, m, d)),
                      Object.is(l.item, y) || this._addIdentityChange(l, y))
                    : ((l = this._mismatch(l, y, m, d)), (c = !0)),
                  (l = l._next),
                  d++;
              }),
              (this.length = d);
          return this._truncate(l), (this.collection = s), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let s;
            for (
              s = this._previousItHead = this._itHead;
              null !== s;
              s = s._next
            )
              s._nextPrevious = s._next;
            for (s = this._additionsHead; null !== s; s = s._nextAdded)
              s.previousIndex = s.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                s = this._movesHead;
              null !== s;
              s = s._nextMoved
            )
              s.previousIndex = s.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(s, l, c, d) {
          let f;
          return (
            null === s ? (f = this._itTail) : ((f = s._prev), this._remove(s)),
            null !==
            (s =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(c, null))
              ? (Object.is(s.item, l) || this._addIdentityChange(s, l),
                this._reinsertAfter(s, f, d))
              : null !==
                (s =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(c, d))
              ? (Object.is(s.item, l) || this._addIdentityChange(s, l),
                this._moveAfter(s, f, d))
              : (s = this._addAfter(new iI(l, c), f, d)),
            s
          );
        }
        _verifyReinsertion(s, l, c, d) {
          let f =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(c, null);
          return (
            null !== f
              ? (s = this._reinsertAfter(f, s._prev, d))
              : s.currentIndex != d &&
                ((s.currentIndex = d), this._addToMoves(s, d)),
            s
          );
        }
        _truncate(s) {
          for (; null !== s; ) {
            const l = s._next;
            this._addToRemovals(this._unlink(s)), (s = l);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(s, l, c) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(s);
          const d = s._prevRemoved,
            f = s._nextRemoved;
          return (
            null === d ? (this._removalsHead = f) : (d._nextRemoved = f),
            null === f ? (this._removalsTail = d) : (f._prevRemoved = d),
            this._insertAfter(s, l, c),
            this._addToMoves(s, c),
            s
          );
        }
        _moveAfter(s, l, c) {
          return (
            this._unlink(s),
            this._insertAfter(s, l, c),
            this._addToMoves(s, c),
            s
          );
        }
        _addAfter(s, l, c) {
          return (
            this._insertAfter(s, l, c),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = s)
                : (this._additionsTail._nextAdded = s)),
            s
          );
        }
        _insertAfter(s, l, c) {
          const d = null === l ? this._itHead : l._next;
          return (
            (s._next = d),
            (s._prev = l),
            null === d ? (this._itTail = s) : (d._prev = s),
            null === l ? (this._itHead = s) : (l._next = s),
            null === this._linkedRecords && (this._linkedRecords = new Zw()),
            this._linkedRecords.put(s),
            (s.currentIndex = c),
            s
          );
        }
        _remove(s) {
          return this._addToRemovals(this._unlink(s));
        }
        _unlink(s) {
          null !== this._linkedRecords && this._linkedRecords.remove(s);
          const l = s._prev,
            c = s._next;
          return (
            null === l ? (this._itHead = c) : (l._next = c),
            null === c ? (this._itTail = l) : (c._prev = l),
            s
          );
        }
        _addToMoves(s, l) {
          return (
            s.previousIndex === l ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = s)
                  : (this._movesTail._nextMoved = s)),
            s
          );
        }
        _addToRemovals(s) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Zw()),
            this._unlinkedRecords.put(s),
            (s.currentIndex = null),
            (s._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = s),
                (s._prevRemoved = null))
              : ((s._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = s)),
            s
          );
        }
        _addIdentityChange(s, l) {
          return (
            (s.item = l),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = s)
                : (this._identityChangesTail._nextIdentityChange = s)),
            s
          );
        }
      }
      class iI {
        constructor(s, l) {
          (this.item = s),
            (this.trackById = l),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class MO {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(s) {
          null === this._head
            ? ((this._head = this._tail = s),
              (s._nextDup = null),
              (s._prevDup = null))
            : ((this._tail._nextDup = s),
              (s._prevDup = this._tail),
              (s._nextDup = null),
              (this._tail = s));
        }
        get(s, l) {
          let c;
          for (c = this._head; null !== c; c = c._nextDup)
            if (
              (null === l || l <= c.currentIndex) &&
              Object.is(c.trackById, s)
            )
              return c;
          return null;
        }
        remove(s) {
          const l = s._prevDup,
            c = s._nextDup;
          return (
            null === l ? (this._head = c) : (l._nextDup = c),
            null === c ? (this._tail = l) : (c._prevDup = l),
            null === this._head
          );
        }
      }
      class Zw {
        constructor() {
          this.map = new Map();
        }
        put(s) {
          const l = s.trackById;
          let c = this.map.get(l);
          c || ((c = new MO()), this.map.set(l, c)), c.add(s);
        }
        get(s, l) {
          const d = this.map.get(s);
          return d ? d.get(s, l) : null;
        }
        remove(s) {
          const l = s.trackById;
          return this.map.get(l).remove(s) && this.map.delete(l), s;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Wh(r, s, l) {
        const c = r.previousIndex;
        if (null === c) return c;
        let d = 0;
        return l && c < l.length && (d = l[c]), c + s + d;
      }
      class sv {
        constructor() {}
        supports(s) {
          return s instanceof Map || Sa(s);
        }
        create() {
          return new rI();
        }
      }
      class rI {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(s) {
          let l;
          for (l = this._mapHead; null !== l; l = l._next) s(l);
        }
        forEachPreviousItem(s) {
          let l;
          for (l = this._previousMapHead; null !== l; l = l._nextPrevious) s(l);
        }
        forEachChangedItem(s) {
          let l;
          for (l = this._changesHead; null !== l; l = l._nextChanged) s(l);
        }
        forEachAddedItem(s) {
          let l;
          for (l = this._additionsHead; null !== l; l = l._nextAdded) s(l);
        }
        forEachRemovedItem(s) {
          let l;
          for (l = this._removalsHead; null !== l; l = l._nextRemoved) s(l);
        }
        diff(s) {
          if (s) {
            if (!(s instanceof Map || Sa(s)))
              throw new Error(
                `Error trying to diff '${W(
                  s
                )}'. Only maps and objects are allowed`
              );
          } else s = new Map();
          return this.check(s) ? this : null;
        }
        onDestroy() {}
        check(s) {
          this._reset();
          let l = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(s, (c, d) => {
              if (l && l.key === d)
                this._maybeAddToChanges(l, c),
                  (this._appendAfter = l),
                  (l = l._next);
              else {
                const f = this._getOrCreateRecordForKey(d, c);
                l = this._insertBeforeOrAppend(l, f);
              }
            }),
            l)
          ) {
            l._prev && (l._prev._next = null), (this._removalsHead = l);
            for (let c = l; null !== c; c = c._nextRemoved)
              c === this._mapHead && (this._mapHead = null),
                this._records.delete(c.key),
                (c._nextRemoved = c._next),
                (c.previousValue = c.currentValue),
                (c.currentValue = null),
                (c._prev = null),
                (c._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(s, l) {
          if (s) {
            const c = s._prev;
            return (
              (l._next = s),
              (l._prev = c),
              (s._prev = l),
              c && (c._next = l),
              s === this._mapHead && (this._mapHead = l),
              (this._appendAfter = s),
              s
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = l), (l._prev = this._appendAfter))
              : (this._mapHead = l),
            (this._appendAfter = l),
            null
          );
        }
        _getOrCreateRecordForKey(s, l) {
          if (this._records.has(s)) {
            const d = this._records.get(s);
            this._maybeAddToChanges(d, l);
            const f = d._prev,
              m = d._next;
            return (
              f && (f._next = m),
              m && (m._prev = f),
              (d._next = null),
              (d._prev = null),
              d
            );
          }
          const c = new Du(s);
          return (
            this._records.set(s, c),
            (c.currentValue = l),
            this._addToAdditions(c),
            c
          );
        }
        _reset() {
          if (this.isDirty) {
            let s;
            for (
              this._previousMapHead = this._mapHead, s = this._previousMapHead;
              null !== s;
              s = s._next
            )
              s._nextPrevious = s._next;
            for (s = this._changesHead; null !== s; s = s._nextChanged)
              s.previousValue = s.currentValue;
            for (s = this._additionsHead; null != s; s = s._nextAdded)
              s.previousValue = s.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(s, l) {
          Object.is(l, s.currentValue) ||
            ((s.previousValue = s.currentValue),
            (s.currentValue = l),
            this._addToChanges(s));
        }
        _addToAdditions(s) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = s)
            : ((this._additionsTail._nextAdded = s), (this._additionsTail = s));
        }
        _addToChanges(s) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = s)
            : ((this._changesTail._nextChanged = s), (this._changesTail = s));
        }
        _forEach(s, l) {
          s instanceof Map
            ? s.forEach(l)
            : Object.keys(s).forEach((c) => l(s[c], c));
        }
      }
      class Du {
        constructor(s) {
          (this.key = s),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function qw() {
        return new Pm([new Yw()]);
      }
      let Pm = (() => {
        class r {
          constructor(l) {
            this.factories = l;
          }
          static create(l, c) {
            if (null != c) {
              const d = c.factories.slice();
              l = l.concat(d);
            }
            return new r(l);
          }
          static extend(l) {
            return {
              provide: r,
              useFactory: (c) => r.create(l, c || qw()),
              deps: [[r, new rr(), new Gr()]],
            };
          }
          find(l) {
            const c = this.factories.find((d) => d.supports(l));
            if (null != c) return c;
            throw new Error(
              `Cannot find a differ supporting object '${l}' of type '${(function (
                r
              ) {
                return r.name || typeof r;
              })(l)}'`
            );
          }
        }
        return (r.ɵprov = st({ token: r, providedIn: "root", factory: qw })), r;
      })();
      function ov() {
        return new av([new sv()]);
      }
      let av = (() => {
        class r {
          constructor(l) {
            this.factories = l;
          }
          static create(l, c) {
            if (c) {
              const d = c.factories.slice();
              l = l.concat(d);
            }
            return new r(l);
          }
          static extend(l) {
            return {
              provide: r,
              useFactory: (c) => r.create(l, c || ov()),
              deps: [[r, new rr(), new Gr()]],
            };
          }
          find(l) {
            const c = this.factories.find((d) => d.supports(l));
            if (c) return c;
            throw new Error(`Cannot find a differ supporting object '${l}'`);
          }
        }
        return (r.ɵprov = st({ token: r, providedIn: "root", factory: ov })), r;
      })();
      function Ll(r, s, l, c, d = !1) {
        for (; null !== l; ) {
          const f = s[l.index];
          if ((null !== f && c.push(Qt(f)), Ui(f)))
            for (let y = 10; y < f.length; y++) {
              const E = f[y],
                w = E[1].firstChild;
              null !== w && Ll(E[1], E, w, c);
            }
          const m = l.type;
          if (8 & m) Ll(r, s, l.child, c);
          else if (32 & m) {
            const y = DC(l, s);
            let E;
            for (; (E = y()); ) c.push(E);
          } else if (16 & m) {
            const y = KD(s, l);
            if (Array.isArray(y)) c.push(...y);
            else {
              const E = jp(s[16]);
              Ll(E[1], E, y, c, !0);
            }
          }
          l = d ? l.projectionNext : l.next;
        }
        return c;
      }
      class Mu {
        constructor(s, l) {
          (this._lView = s),
            (this._cdRefInjectingView = l),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const s = this._lView,
            l = s[1];
          return Ll(l, s, l.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(s) {
          this._lView[8] = s;
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const s = this._lView[3];
            if (Ui(s)) {
              const l = s[8],
                c = l ? l.indexOf(this) : -1;
              c > -1 && (IC(s, c), ia(l, c));
            }
            this._attachedToViewContainer = !1;
          }
          HD(this._lView[1], this._lView);
        }
        onDestroy(s) {
          Zp(this._lView[1], this._lView, null, s);
        }
        markForCheck() {
          qC(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          H_(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (r, s, l) {
            bc(!0);
            try {
              H_(r, s, l);
            } finally {
              bc(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          var s;
          (this._appRef = null),
            Gp(this._lView[1], (s = this._lView), s[11], 2, null, null);
        }
        attachToAppRef(s) {
          if (this._attachedToViewContainer)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = s;
        }
      }
      class TO extends Mu {
        constructor(s) {
          super(s), (this._view = s);
        }
        detectChanges() {
          QC(this._view);
        }
        checkNoChanges() {
          !(function (r) {
            bc(!0);
            try {
              QC(r);
            } finally {
              bc(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      const AO = function (r) {
        return (function (r, s, l) {
          if (Fr(r) && !l) {
            const c = Mi(r.index, s);
            return new Mu(c, c);
          }
          return 47 & r.type ? new Mu(s[16], s) : null;
        })(Zt(), be(), 16 == (16 & r));
      };
      let xO = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = AO), r;
      })();
      const Yh = [new sv()],
        oI = new Pm([new Yw()]),
        Nm = new av(Yh),
        OO = function () {
          return Bl(Zt(), be());
        };
      let Tu = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = OO), r;
      })();
      const PO = Tu,
        Vl = class extends PO {
          constructor(s, l, c) {
            super(),
              (this._declarationLView = s),
              (this._declarationTContainer = l),
              (this.elementRef = c);
          }
          createEmbeddedView(s) {
            const l = this._declarationTContainer.tViews,
              c = eu(
                this._declarationLView,
                l,
                s,
                16,
                null,
                l.declTNode,
                null,
                null,
                null,
                null
              );
            c[17] = this._declarationLView[this._declarationTContainer.index];
            const f = this._declarationLView[19];
            return (
              null !== f && (c[19] = f.createEmbeddedView(l)),
              ph(l, c, s),
              new Mu(c)
            );
          }
        };
      function Bl(r, s) {
        return 4 & r.type ? new Vl(s, r, Fl(r, s)) : null;
      }
      class Iu {}
      class yi {}
      const cI = function () {
        return uv(Zt(), be());
      };
      let Zh = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = cI), r;
      })();
      const LO = Zh,
        Kw = class extends LO {
          constructor(s, l, c) {
            super(),
              (this._lContainer = s),
              (this._hostTNode = l),
              (this._hostLView = c);
          }
          get element() {
            return Fl(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new ea(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const s = Xo(this._hostTNode, this._hostLView);
            if (Jo(s)) {
              const l = il(s, this._hostLView),
                c = eo(s);
              return new ea(l[1].data[c + 8], l);
            }
            return new ea(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(s) {
            const l = cv(this._lContainer);
            return (null !== l && l[s]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(s, l, c) {
            const d = s.createEmbeddedView(l || {});
            return this.insert(d, c), d;
          }
          createComponent(s, l, c, d, f) {
            const m = c || this.parentInjector;
            if (!f && null == s.ngModule && m) {
              const E = m.get(Iu, null);
              E && (f = E);
            }
            const y = s.create(m, d, void 0, f);
            return this.insert(y.hostView, l), y;
          }
          insert(s, l) {
            const c = s._lView,
              d = c[1];
            if (Ui(c[3])) {
              const D = this.indexOf(s);
              if (-1 !== D) this.detach(D);
              else {
                const I = c[3],
                  R = new Kw(I, I[6], I[3]);
                R.detach(R.indexOf(s));
              }
            }
            const f = this._adjustIndex(l),
              m = this._lContainer;
            !(function (r, s, l, c) {
              const d = 10 + c,
                f = l.length;
              c > 0 && (l[d - 1][4] = s),
                c < f - 10
                  ? ((s[4] = l[d]), so(l, 10 + c, s))
                  : (l.push(s), (s[4] = null)),
                (s[3] = l);
              const m = s[17];
              null !== m &&
                l !== m &&
                (function (r, s) {
                  const l = r[9];
                  s[16] !== s[3][3][16] && (r[2] = !0),
                    null === l ? (r[9] = [s]) : l.push(s);
                })(m, s);
              const y = s[19];
              null !== y && y.insertView(r), (s[2] |= 128);
            })(d, c, m, f);
            const y = xC(f, m),
              E = c[11],
              w = M_(E, m[7]);
            return (
              null !== w &&
                (function (r, s, l, c, d, f) {
                  (c[0] = d), (c[6] = s), Gp(r, c, l, 1, d, f);
                })(d, m[6], E, c, w, y),
              s.attachToViewContainerRef(),
              so(qh(m), f, s),
              s
            );
          }
          move(s, l) {
            return this.insert(s, l);
          }
          indexOf(s) {
            const l = cv(this._lContainer);
            return null !== l ? l.indexOf(s) : -1;
          }
          remove(s) {
            const l = this._adjustIndex(s, -1),
              c = IC(this._lContainer, l);
            c && (ia(qh(this._lContainer), l), HD(c[1], c));
          }
          detach(s) {
            const l = this._adjustIndex(s, -1),
              c = IC(this._lContainer, l);
            return c && null != ia(qh(this._lContainer), l) ? new Mu(c) : null;
          }
          _adjustIndex(s, l = 0) {
            return null == s ? this.length + l : s;
          }
        };
      function cv(r) {
        return r[8];
      }
      function qh(r) {
        return r[8] || (r[8] = []);
      }
      function uv(r, s) {
        let l;
        const c = s[r.index];
        if (Ui(c)) l = c;
        else {
          let d;
          if (8 & r.type) d = Qt(c);
          else {
            const f = s[11];
            d = f.createComment("");
            const m = Di(r, s);
            ma(
              f,
              M_(f, m),
              d,
              (function (r, s) {
                return Yt(r) ? r.nextSibling(s) : s.nextSibling;
              })(f, m),
              !1
            );
          }
          (s[r.index] = l = bM(c, s, d, r)), ou(s, l);
        }
        return new Kw(l, r, s);
      }
      const ef = {};
      class y0 extends Su {
        constructor(s) {
          super(), (this.ngModule = s);
        }
        resolveComponentFactory(s) {
          const l = un(s);
          return new Iv(l, this.ngModule);
        }
      }
      function v0(r) {
        const s = [];
        for (let l in r)
          r.hasOwnProperty(l) && s.push({ propName: r[l], templateName: l });
        return s;
      }
      const WI = new hn("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => El,
      });
      class Iv extends jw {
        constructor(s, l) {
          super(),
            (this.componentDef = s),
            (this.ngModule = l),
            (this.componentType = s.type),
            (this.selector = s.selectors.map(Tk).join(",")),
            (this.ngContentSelectors = s.ngContentSelectors
              ? s.ngContentSelectors
              : []),
            (this.isBoundToModule = !!l);
        }
        get inputs() {
          return v0(this.componentDef.inputs);
        }
        get outputs() {
          return v0(this.componentDef.outputs);
        }
        create(s, l, c, d) {
          const f = (d = d || this.ngModule)
              ? (function (r, s) {
                  return {
                    get: (l, c, d) => {
                      const f = r.get(l, ef, d);
                      return f !== ef || c === ef ? f : s.get(l, c, d);
                    },
                  };
                })(s, d.injector)
              : s,
            m = f.get(Xt, Ys),
            y = f.get(iv, null),
            E = m.createRenderer(null, this.componentDef),
            w = this.componentDef.selectors[0][0] || "div",
            D = c
              ? (function (r, s, l) {
                  if (Yt(r)) return r.selectRootElement(s, l === Te.ShadowDom);
                  let c = "string" == typeof s ? r.querySelector(s) : s;
                  return (c.textContent = ""), c;
                })(E, c, this.componentDef.encapsulation)
              : S_(
                  m.createRenderer(null, this.componentDef),
                  w,
                  (function (r) {
                    const s = r.toLowerCase();
                    return "svg" === s
                      ? dc
                      : "math" === s
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(w)
                ),
            I = this.componentDef.onPush ? 576 : 528,
            R = (function (r, s) {
              return {
                components: [],
                scheduler: r || El,
                clean: JC,
                playerHandler: s || null,
                flags: 0,
              };
            })(),
            F = Wp(0, null, null, 1, 0, null, null, null, null, null),
            $ = eu(null, F, R, I, null, null, m, E, y, f);
          let oe, Q;
          Ja($);
          try {
            const we = (function (r, s, l, c, d, f) {
              const m = l[1];
              l[20] = r;
              const E = tu(m, 20, 2, "#host", null),
                w = (E.mergedAttrs = s.hostAttrs);
              null !== w &&
                (z_(E, w, !0),
                null !== r &&
                  (xd(d, r, w),
                  null !== E.classes && kC(d, r, E.classes),
                  null !== E.styles && XD(d, r, E.styles)));
              const D = c.createRenderer(r, s),
                I = eu(
                  l,
                  Un(s),
                  null,
                  s.onPush ? 64 : 16,
                  l[20],
                  E,
                  c,
                  D,
                  f || null,
                  null
                );
              return (
                m.firstCreatePass &&
                  (ji(ol(E, l), m, s.type), V_(m, E), B_(E, l.length, 1)),
                ou(l, I),
                (l[20] = I)
              );
            })(D, this.componentDef, $, m, E);
            if (D)
              if (c) xd(E, D, ["ng-version", rv.full]);
              else {
                const { attrs: _e, classes: je } = (function (r) {
                  const s = [],
                    l = [];
                  let c = 1,
                    d = 2;
                  for (; c < r.length; ) {
                    let f = r[c];
                    if ("string" == typeof f)
                      2 === d
                        ? "" !== f && s.push(f, r[++c])
                        : 8 === d && l.push(f);
                    else {
                      if (!Es(d)) break;
                      d = f;
                    }
                    c++;
                  }
                  return { attrs: s, classes: l };
                })(this.componentDef.selectors[0]);
                _e && xd(E, D, _e),
                  je && je.length > 0 && kC(E, D, je.join(" "));
              }
            if (((Q = gc(F, 20)), void 0 !== l)) {
              const _e = (Q.projection = []);
              for (let je = 0; je < this.ngContentSelectors.length; je++) {
                const tt = l[je];
                _e.push(null != tt ? Array.from(tt) : null);
              }
            }
            (oe = (function (r, s, l, c, d) {
              const f = l[1],
                m = (function (r, s, l) {
                  const c = Zt();
                  r.firstCreatePass &&
                    (l.providersResolver && l.providersResolver(l),
                    yM(r, c, s, Ss(r, s, 1, null), l));
                  const d = Ic(s, r, c.directiveStart, c);
                  Vn(d, s);
                  const f = Di(c, s);
                  return f && Vn(f, s), d;
                })(f, l, s);
              if (
                (c.components.push(m),
                (r[8] = m),
                d && d.forEach((E) => E(m, s)),
                s.contentQueries)
              ) {
                const E = Zt();
                s.contentQueries(1, m, E.directiveStart);
              }
              const y = Zt();
              return (
                !f.firstCreatePass ||
                  (null === s.hostBindings && null === s.hostAttrs) ||
                  (Yo(y.index),
                  GC(l[1], y, 0, y.directiveStart, y.directiveEnd, s),
                  Sn(s, m)),
                m
              );
            })(we, this.componentDef, $, R, [FM])),
              ph(F, $, null);
          } finally {
            Xa();
          }
          return new YI(this.componentType, oe, Fl(Q, $), $, Q);
        }
      }
      class YI extends class {} {
        constructor(s, l, c, d, f) {
          super(),
            (this.location = c),
            (this._rootLView = d),
            (this._tNode = f),
            (this.instance = l),
            (this.hostView = this.changeDetectorRef = new TO(d)),
            (this.componentType = s);
        }
        get injector() {
          return new ea(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(s) {
          this.hostView.onDestroy(s);
        }
      }
      const Pu = new Map();
      class Gm extends Iu {
        constructor(s, l) {
          super(),
            (this._parent = l),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new y0(this));
          const c = Vi(s),
            d = s[Me] || null;
          d && Gy(d),
            (this._bootstrapComponents = zi(c.bootstrap)),
            (this._r3Injector = W_(
              s,
              l,
              [
                { provide: Iu, useValue: this },
                { provide: Su, useValue: this.componentFactoryResolver },
              ],
              W(s)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(s));
        }
        get(s, l = $t.THROW_IF_NOT_FOUND, c = Be.Default) {
          return s === $t || s === Iu || s === au
            ? this
            : this._r3Injector.get(s, l, c);
        }
        destroy() {
          const s = this._r3Injector;
          !s.destroyed && s.destroy(),
            this.destroyCbs.forEach((l) => l()),
            (this.destroyCbs = null);
        }
        onDestroy(s) {
          this.destroyCbs.push(s);
        }
      }
      class zm extends yi {
        constructor(s) {
          super(),
            (this.moduleType = s),
            null !== Vi(s) &&
              (function (r) {
                const s = new Set();
                !(function l(c) {
                  const d = Vi(c, !0),
                    f = d.id;
                  null !== f &&
                    ((function (r, s, l) {
                      if (s && s !== l)
                        throw new Error(
                          `Duplicate module registered for ${r} - ${W(
                            s
                          )} vs ${W(s.name)}`
                        );
                    })(f, Pu.get(f), c),
                    Pu.set(f, c));
                  const m = zi(d.imports);
                  for (const y of m) s.has(y) || (s.add(y), l(y));
                })(r);
              })(s);
        }
        create(s) {
          return new Gm(this.moduleType, s);
        }
      }
      function QI(r, s, l) {
        const c = mn() + r,
          d = be();
        return d[c] === dt
          ? Ts(d, c, l ? s.call(l) : s())
          : (function (r, s) {
              return r[s];
            })(d, c);
      }
      function JI(r, s, l, c) {
        return xv(be(), mn(), r, s, l, c);
      }
      function XI(r, s, l, c, d) {
        return (function (r, s, l, c, d, f, m) {
          const y = s + l;
          return Ml(r, y, d, f)
            ? Ts(r, y + 2, m ? c.call(m, d, f) : c(d, f))
            : nf(r, y + 2);
        })(be(), mn(), r, s, l, c, d);
      }
      function nf(r, s) {
        const l = r[s];
        return l === dt ? void 0 : l;
      }
      function xv(r, s, l, c, d, f) {
        const m = s + l;
        return Wn(r, m, d)
          ? Ts(r, m + 1, f ? c.call(f, d) : c(d))
          : nf(r, m + 1);
      }
      function D0(r, s) {
        const l = yt();
        let c;
        const d = r + 20;
        l.firstCreatePass
          ? ((c = (function (r, s) {
              if (s)
                for (let l = s.length - 1; l >= 0; l--) {
                  const c = s[l];
                  if (r === c.name) return c;
                }
              throw new de("302", `The pipe '${r}' could not be found!`);
            })(s, l.pipeRegistry)),
            (l.data[d] = c),
            c.onDestroy &&
              (l.destroyHooks || (l.destroyHooks = [])).push(d, c.onDestroy))
          : (c = l.data[d]);
        const f = c.factory || (c.factory = Ws(c.type)),
          m = Mn(Oh);
        try {
          const y = rl(!1),
            E = f();
          return (
            rl(y),
            (function (r, s, l, c) {
              l >= r.data.length &&
                ((r.data[l] = null), (r.blueprint[l] = null)),
                (s[l] = c);
            })(l, be(), d, E),
            E
          );
        } finally {
          Mn(m);
        }
      }
      function rf(r, s, l) {
        const c = r + 20,
          d = be(),
          f = fs(d, c);
        return (function (r, s) {
          Kr.isWrapped(s) && ((s = Kr.unwrap(s)), (r[er()] = dt));
          return s;
        })(
          d,
          (function (r, s) {
            return r[1].data[s].pure;
          })(d, c)
            ? xv(d, mn(), s, f.transform, l, f)
            : f.transform(l)
        );
      }
      function kv(r) {
        return (s) => {
          setTimeout(r, void 0, s);
        };
      }
      const ks = class extends o.xQ {
        constructor(s = !1) {
          super(), (this.__isAsync = s);
        }
        emit(s) {
          super.next(s);
        }
        subscribe(s, l, c) {
          var d, f, m;
          let y = s,
            E = l || (() => null),
            w = c;
          if (s && "object" == typeof s) {
            const I = s;
            (y = null === (d = I.next) || void 0 === d ? void 0 : d.bind(I)),
              (E = null === (f = I.error) || void 0 === f ? void 0 : f.bind(I)),
              (w =
                null === (m = I.complete) || void 0 === m ? void 0 : m.bind(I));
          }
          this.__isAsync && ((E = kv(E)), y && (y = kv(y)), w && (w = kv(w)));
          const D = super.subscribe({ next: y, error: E, complete: w });
          return s instanceof ie.w && s.add(D), D;
        }
      };
      function Gl() {
        return this._results[Dl()]();
      }
      class Nu {
        constructor(s = !1) {
          (this._emitDistinctChangesOnly = s),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const l = Dl(),
            c = Nu.prototype;
          c[l] || (c[l] = Gl);
        }
        get changes() {
          return this._changes || (this._changes = new ks());
        }
        get(s) {
          return this._results[s];
        }
        map(s) {
          return this._results.map(s);
        }
        filter(s) {
          return this._results.filter(s);
        }
        find(s) {
          return this._results.find(s);
        }
        reduce(s, l) {
          return this._results.reduce(s, l);
        }
        forEach(s) {
          this._results.forEach(s);
        }
        some(s) {
          return this._results.some(s);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(s, l) {
          const c = this;
          c.dirty = !1;
          const d = hi(s);
          (this._changesDetected = !(function (r, s, l) {
            if (r.length !== s.length) return !1;
            for (let c = 0; c < r.length; c++) {
              let d = r[c],
                f = s[c];
              if ((l && ((d = l(d)), (f = l(f))), f !== d)) return !1;
            }
            return !0;
          })(c._results, d, l)) &&
            ((c._results = d),
            (c.length = d.length),
            (c.last = d[this.length - 1]),
            (c.first = d[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      Symbol;
      class T0 {
        constructor(s) {
          (this.queryList = s), (this.matches = null);
        }
        clone() {
          return new T0(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Pv {
        constructor(s = []) {
          this.queries = s;
        }
        createEmbeddedView(s) {
          const l = s.queries;
          if (null !== l) {
            const c =
                null !== s.contentQueries ? s.contentQueries[0] : l.length,
              d = [];
            for (let f = 0; f < c; f++) {
              const m = l.getByIndex(f);
              d.push(this.queries[m.indexInDeclarationView].clone());
            }
            return new Pv(d);
          }
          return null;
        }
        insertView(s) {
          this.dirtyQueriesWithMatches(s);
        }
        detachView(s) {
          this.dirtyQueriesWithMatches(s);
        }
        dirtyQueriesWithMatches(s) {
          for (let l = 0; l < this.queries.length; l++)
            null !== of(s, l).matches && this.queries[l].setDirty();
        }
      }
      class I0 {
        constructor(s, l, c = null) {
          (this.predicate = s), (this.flags = l), (this.read = c);
        }
      }
      class Nv {
        constructor(s = []) {
          this.queries = s;
        }
        elementStart(s, l) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].elementStart(s, l);
        }
        elementEnd(s) {
          for (let l = 0; l < this.queries.length; l++)
            this.queries[l].elementEnd(s);
        }
        embeddedTView(s) {
          let l = null;
          for (let c = 0; c < this.length; c++) {
            const d = null !== l ? l.length : 0,
              f = this.getByIndex(c).embeddedTView(s, d);
            f &&
              ((f.indexInDeclarationView = c),
              null !== l ? l.push(f) : (l = [f]));
          }
          return null !== l ? new Nv(l) : null;
        }
        template(s, l) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].template(s, l);
        }
        getByIndex(s) {
          return this.queries[s];
        }
        get length() {
          return this.queries.length;
        }
        track(s) {
          this.queries.push(s);
        }
      }
      class Fv {
        constructor(s, l = -1) {
          (this.metadata = s),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = l);
        }
        elementStart(s, l) {
          this.isApplyingToNode(l) && this.matchTNode(s, l);
        }
        elementEnd(s) {
          this._declarationNodeIndex === s.index &&
            (this._appliesToNextNode = !1);
        }
        template(s, l) {
          this.elementStart(s, l);
        }
        embeddedTView(s, l) {
          return this.isApplyingToNode(s)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-s.index, l),
              new Fv(this.metadata))
            : null;
        }
        isApplyingToNode(s) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const l = this._declarationNodeIndex;
            let c = s.parent;
            for (; null !== c && 8 & c.type && c.index !== l; ) c = c.parent;
            return l === (null !== c ? c.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(s, l) {
          const c = this.metadata.predicate;
          if (Array.isArray(c))
            for (let d = 0; d < c.length; d++) {
              const f = c[d];
              this.matchTNodeWithReadOption(s, l, iA(l, f)),
                this.matchTNodeWithReadOption(s, l, bn(l, s, f, !1, !1));
            }
          else
            c === Tu
              ? 4 & l.type && this.matchTNodeWithReadOption(s, l, -1)
              : this.matchTNodeWithReadOption(s, l, bn(l, s, c, !1, !1));
        }
        matchTNodeWithReadOption(s, l, c) {
          if (null !== c) {
            const d = this.metadata.read;
            if (null !== d)
              if (d === Rs || d === Zh || (d === Tu && 4 & l.type))
                this.addMatch(l.index, -2);
              else {
                const f = bn(l, s, d, !1, !1);
                null !== f && this.addMatch(l.index, f);
              }
            else this.addMatch(l.index, c);
          }
        }
        addMatch(s, l) {
          null === this.matches
            ? (this.matches = [s, l])
            : this.matches.push(s, l);
        }
      }
      function iA(r, s) {
        const l = r.localNames;
        if (null !== l)
          for (let c = 0; c < l.length; c += 2) if (l[c] === s) return l[c + 1];
        return null;
      }
      function A0(r, s, l, c) {
        return -1 === l
          ? (function (r, s) {
              return 11 & r.type ? Fl(r, s) : 4 & r.type ? Bl(r, s) : null;
            })(s, r)
          : -2 === l
          ? (function (r, s, l) {
              return l === Rs
                ? Fl(s, r)
                : l === Tu
                ? Bl(s, r)
                : l === Zh
                ? uv(s, r)
                : void 0;
            })(r, s, c)
          : Ic(r, r[1], l, s);
      }
      function x0(r, s, l, c) {
        const d = s[19].queries[c];
        if (null === d.matches) {
          const f = r.data,
            m = l.matches,
            y = [];
          for (let E = 0; E < m.length; E += 2) {
            const w = m[E];
            y.push(w < 0 ? null : A0(s, f[w], m[E + 1], l.metadata.read));
          }
          d.matches = y;
        }
        return d.matches;
      }
      function Wm(r, s, l, c) {
        const d = r.queries.getByIndex(l),
          f = d.matches;
        if (null !== f) {
          const m = x0(r, s, d, l);
          for (let y = 0; y < f.length; y += 2) {
            const E = f[y];
            if (E > 0) c.push(m[y / 2]);
            else {
              const w = f[y + 1],
                D = s[-E];
              for (let I = 10; I < D.length; I++) {
                const R = D[I];
                R[17] === R[3] && Wm(R[1], R, w, c);
              }
              if (null !== D[9]) {
                const I = D[9];
                for (let R = 0; R < I.length; R++) {
                  const F = I[R];
                  Wm(F[1], F, w, c);
                }
              }
            }
          }
        }
        return c;
      }
      function Lv(r) {
        const s = be(),
          l = yt(),
          c = Id();
        Ks(c + 1);
        const d = of(l, c);
        if (r.dirty && yd(s) === (2 == (2 & d.metadata.flags))) {
          if (null === d.matches) r.reset([]);
          else {
            const f = d.crossesNgTemplate ? Wm(l, s, c, []) : x0(l, s, d, c);
            r.reset(f, Ww), r.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function R0(r, s, l) {
        const c = yt();
        c.firstCreatePass &&
          (Vv(c, new I0(r, s, l), -1),
          2 == (2 & s) && (c.staticViewQueries = !0)),
          O0(c, be(), s);
      }
      function Ym(r, s, l, c) {
        const d = yt();
        if (d.firstCreatePass) {
          const f = Zt();
          Vv(d, new I0(s, l, c), f.index),
            (function (r, s) {
              const l = r.contentQueries || (r.contentQueries = []);
              s !== (l.length ? l[l.length - 1] : -1) &&
                l.push(r.queries.length - 1, s);
            })(d, r),
            2 == (2 & l) && (d.staticContentQueries = !0);
        }
        O0(d, be(), l);
      }
      function k0() {
        return (r = be()), (s = Id()), r[19].queries[s].queryList;
        var r, s;
      }
      function O0(r, s, l) {
        const c = new Nu(4 == (4 & l));
        Zp(r, s, c, c.destroy),
          null === s[19] && (s[19] = new Pv()),
          s[19].queries.push(new T0(c));
      }
      function Vv(r, s, l) {
        null === r.queries && (r.queries = new Nv()),
          r.queries.track(new Fv(s, l));
      }
      function of(r, s) {
        return r.queries.getByIndex(s);
      }
      function lA(r, s) {
        return Bl(r, s);
      }
      const Jv = new hn("Application Initializer");
      let Lu = (() => {
        class r {
          constructor(l) {
            (this.appInits = l),
              (this.resolve = Rm),
              (this.reject = Rm),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((c, d) => {
                (this.resolve = c), (this.reject = d);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const l = [],
              c = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let d = 0; d < this.appInits.length; d++) {
                const f = this.appInits[d]();
                if (Eo(f)) l.push(f);
                else if (vy(f)) {
                  const m = new Promise((y, E) => {
                    f.subscribe({ complete: y, error: E });
                  });
                  l.push(m);
                }
              }
            Promise.all(l)
              .then(() => {
                c();
              })
              .catch((d) => {
                this.reject(d);
              }),
              0 === l.length && c(),
              (this.initialized = !0);
          }
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)(qt(Jv, 8));
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const Xv = new hn("AppId"),
        TA = {
          provide: Xv,
          useFactory: function () {
            return `${eb()}${eb()}${eb()}`;
          },
          deps: [],
        };
      function eb() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Z0 = new hn("Platform Initializer"),
        q0 = new hn("Platform ID"),
        K0 = new hn("appBootstrapListener");
      let lf = (() => {
        class r {
          log(l) {
            console.log(l);
          }
          warn(l) {
            console.warn(l);
          }
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)();
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const tg = new hn("LocaleId"),
        Q0 = new hn("DefaultCurrencyCode");
      class J0 {
        constructor(s, l) {
          (this.ngModuleFactory = s), (this.componentFactories = l);
        }
      }
      const ng = function (r) {
          return new zm(r);
        },
        RA = ng,
        kA = function (r) {
          return Promise.resolve(ng(r));
        },
        eS = function (r) {
          const s = ng(r),
            c = zi(Vi(r).declarations).reduce((d, f) => {
              const m = un(f);
              return m && d.push(new Iv(m)), d;
            }, []);
          return new J0(s, c);
        },
        LP = eS,
        OA = function (r) {
          return Promise.resolve(eS(r));
        };
      let Wl = (() => {
        class r {
          constructor() {
            (this.compileModuleSync = RA),
              (this.compileModuleAsync = kA),
              (this.compileModuleAndAllComponentsSync = LP),
              (this.compileModuleAndAllComponentsAsync = OA);
          }
          clearCache() {}
          clearCacheFor(l) {}
          getModuleId(l) {}
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)();
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const PA = (() => Promise.resolve(0))();
      function ig(r) {
        "undefined" == typeof Zone
          ? PA.then(() => {
              r && r.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", r);
      }
      class lr {
        constructor({
          enableLongStackTrace: s = !1,
          shouldCoalesceEventChangeDetection: l = !1,
          shouldCoalesceRunChangeDetection: c = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new ks(!1)),
            (this.onMicrotaskEmpty = new ks(!1)),
            (this.onStable = new ks(!1)),
            (this.onError = new ks(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched();
          const d = this;
          (d._nesting = 0),
            (d._outer = d._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (d._inner = d._inner.fork(new Zone.TaskTrackingZoneSpec())),
            s &&
              Zone.longStackTraceZoneSpec &&
              (d._inner = d._inner.fork(Zone.longStackTraceZoneSpec)),
            (d.shouldCoalesceEventChangeDetection = !c && l),
            (d.shouldCoalesceRunChangeDetection = c),
            (d.lastRequestAnimationFrameId = -1),
            (d.nativeRequestAnimationFrame = (function () {
              let r = Pt.requestAnimationFrame,
                s = Pt.cancelAnimationFrame;
              if ("undefined" != typeof Zone && r && s) {
                const l = r[Zone.__symbol__("OriginalDelegate")];
                l && (r = l);
                const c = s[Zone.__symbol__("OriginalDelegate")];
                c && (s = c);
              }
              return {
                nativeRequestAnimationFrame: r,
                nativeCancelAnimationFrame: s,
              };
            })().nativeRequestAnimationFrame),
            (function (r) {
              const s = () => {
                !(function (r) {
                  r.isCheckStableRunning ||
                    -1 !== r.lastRequestAnimationFrameId ||
                    ((r.lastRequestAnimationFrameId =
                      r.nativeRequestAnimationFrame.call(Pt, () => {
                        r.fakeTopEventTask ||
                          (r.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (r.lastRequestAnimationFrameId = -1),
                                rb(r),
                                (r.isCheckStableRunning = !0),
                                ib(r),
                                (r.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          r.fakeTopEventTask.invoke();
                      })),
                    rb(r));
                })(r);
              };
              r._inner = r._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (l, c, d, f, m, y) => {
                  try {
                    return nS(r), l.invokeTask(d, f, m, y);
                  } finally {
                    ((r.shouldCoalesceEventChangeDetection &&
                      "eventTask" === f.type) ||
                      r.shouldCoalesceRunChangeDetection) &&
                      s(),
                      LA(r);
                  }
                },
                onInvoke: (l, c, d, f, m, y, E) => {
                  try {
                    return nS(r), l.invoke(d, f, m, y, E);
                  } finally {
                    r.shouldCoalesceRunChangeDetection && s(), LA(r);
                  }
                },
                onHasTask: (l, c, d, f) => {
                  l.hasTask(d, f),
                    c === d &&
                      ("microTask" == f.change
                        ? ((r._hasPendingMicrotasks = f.microTask),
                          rb(r),
                          ib(r))
                        : "macroTask" == f.change &&
                          (r.hasPendingMacrotasks = f.macroTask));
                },
                onHandleError: (l, c, d, f) => (
                  l.handleError(d, f),
                  r.runOutsideAngular(() => r.onError.emit(f)),
                  !1
                ),
              });
            })(d);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!lr.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (lr.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(s, l, c) {
          return this._inner.run(s, l, c);
        }
        runTask(s, l, c, d) {
          const f = this._inner,
            m = f.scheduleEventTask("NgZoneEvent: " + d, s, NA, Rm, Rm);
          try {
            return f.runTask(m, l, c);
          } finally {
            f.cancelTask(m);
          }
        }
        runGuarded(s, l, c) {
          return this._inner.runGuarded(s, l, c);
        }
        runOutsideAngular(s) {
          return this._outer.run(s);
        }
      }
      const NA = {};
      function ib(r) {
        if (0 == r._nesting && !r.hasPendingMicrotasks && !r.isStable)
          try {
            r._nesting++, r.onMicrotaskEmpty.emit(null);
          } finally {
            if ((r._nesting--, !r.hasPendingMicrotasks))
              try {
                r.runOutsideAngular(() => r.onStable.emit(null));
              } finally {
                r.isStable = !0;
              }
          }
      }
      function rb(r) {
        r.hasPendingMicrotasks = !!(
          r._hasPendingMicrotasks ||
          ((r.shouldCoalesceEventChangeDetection ||
            r.shouldCoalesceRunChangeDetection) &&
            -1 !== r.lastRequestAnimationFrameId)
        );
      }
      function nS(r) {
        r._nesting++,
          r.isStable && ((r.isStable = !1), r.onUnstable.emit(null));
      }
      function LA(r) {
        r._nesting--, ib(r);
      }
      class VA {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new ks()),
            (this.onMicrotaskEmpty = new ks()),
            (this.onStable = new ks()),
            (this.onError = new ks());
        }
        run(s, l, c) {
          return s.apply(l, c);
        }
        runGuarded(s, l, c) {
          return s.apply(l, c);
        }
        runOutsideAngular(s) {
          return s();
        }
        runTask(s, l, c, d) {
          return s.apply(l, c);
        }
      }
      let iS = (() => {
          class r {
            constructor(l) {
              (this._ngZone = l),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                l.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      lr.assertNotInAngularZone(),
                        ig(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                ig(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let l = this._callbacks.pop();
                    clearTimeout(l.timeoutId), l.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let l = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (c) =>
                    !c.updateCb ||
                    !c.updateCb(l) ||
                    (clearTimeout(c.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((l) => ({
                    source: l.source,
                    creationLocation: l.creationLocation,
                    data: l.data,
                  }))
                : [];
            }
            addCallback(l, c, d) {
              let f = -1;
              c &&
                c > 0 &&
                (f = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (m) => m.timeoutId !== f
                  )),
                    l(this._didWork, this.getPendingTasks());
                }, c)),
                this._callbacks.push({ doneCb: l, timeoutId: f, updateCb: d });
            }
            whenStable(l, c, d) {
              if (d && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(l, c, d), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(l, c, d) {
              return [];
            }
          }
          return (
            (r.ɵfac = function (l) {
              return new (l || r)(qt(lr));
            }),
            (r.ɵprov = st({ token: r, factory: r.ɵfac })),
            r
          );
        })(),
        sb = (() => {
          class r {
            constructor() {
              (this._applications = new Map()), ob.addToWindow(this);
            }
            registerApplication(l, c) {
              this._applications.set(l, c);
            }
            unregisterApplication(l) {
              this._applications.delete(l);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(l) {
              return this._applications.get(l) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(l, c = !0) {
              return ob.findTestabilityInTree(this, l, c);
            }
          }
          return (
            (r.ɵfac = function (l) {
              return new (l || r)();
            }),
            (r.ɵprov = st({ token: r, factory: r.ɵfac })),
            r
          );
        })();
      class BA {
        addToWindow(s) {}
        findTestabilityInTree(s, l, c) {
          return null;
        }
      }
      function rS(r) {
        ob = r;
      }
      let ob = new BA(),
        sS = !0,
        oS = !1;
      function aS() {
        return (oS = !0), sS;
      }
      function lS() {
        if (oS)
          throw new Error("Cannot enable prod mode after platform setup.");
        sS = !1;
      }
      let wr;
      const uS = new hn("AllowMultipleToken");
      class $A {
        constructor(s, l) {
          (this.name = s), (this.token = l);
        }
      }
      function dS(r, s, l = []) {
        const c = `Platform: ${s}`,
          d = new hn(c);
        return (f = []) => {
          let m = hS();
          if (!m || m.injector.get(uS, !1))
            if (r) r(l.concat(f).concat({ provide: d, useValue: !0 }));
            else {
              const y = l
                .concat(f)
                .concat(
                  { provide: d, useValue: !0 },
                  { provide: vh, useValue: "platform" }
                );
              !(function (r) {
                if (wr && !wr.destroyed && !wr.injector.get(uS, !1))
                  throw new Error(
                    "There can be only one platform. Destroy the previous one to create a new one."
                  );
                wr = r.get(fS);
                const s = r.get(Z0, null);
                s && s.forEach((l) => l());
              })($t.create({ providers: y, name: c }));
            }
          return (function (r) {
            const s = hS();
            if (!s) throw new Error("No platform exists!");
            if (!s.injector.get(r, null))
              throw new Error(
                "A platform with a different configuration has been created. Please destroy it first."
              );
            return s;
          })(d);
        };
      }
      function hS() {
        return wr && !wr.destroyed ? wr : null;
      }
      let fS = (() => {
        class r {
          constructor(l) {
            (this._injector = l),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(l, c) {
            const y = (function (r, s) {
                let l;
                return (
                  (l =
                    "noop" === r
                      ? new VA()
                      : ("zone.js" === r ? void 0 : r) ||
                        new lr({
                          enableLongStackTrace: aS(),
                          shouldCoalesceEventChangeDetection: !!(null == s
                            ? void 0
                            : s.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == s
                            ? void 0
                            : s.ngZoneRunCoalescing),
                        })),
                  l
                );
              })(c ? c.ngZone : void 0, {
                ngZoneEventCoalescing: (c && c.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (c && c.ngZoneRunCoalescing) || !1,
              }),
              E = [{ provide: lr, useValue: y }];
            return y.run(() => {
              const w = $t.create({
                  providers: E,
                  parent: this.injector,
                  name: l.moduleType.name,
                }),
                D = l.create(w),
                I = D.injector.get(C, null);
              if (!I)
                throw new Error(
                  "No ErrorHandler. Is platform module (BrowserModule) included?"
                );
              return (
                y.runOutsideAngular(() => {
                  const R = y.onError.subscribe({
                    next: (F) => {
                      I.handleError(F);
                    },
                  });
                  D.onDestroy(() => {
                    ab(this._modules, D), R.unsubscribe();
                  });
                }),
                (function (r, s, l) {
                  try {
                    const c = l();
                    return Eo(c)
                      ? c.catch((d) => {
                          throw (
                            (s.runOutsideAngular(() => r.handleError(d)), d)
                          );
                        })
                      : c;
                  } catch (c) {
                    throw (s.runOutsideAngular(() => r.handleError(c)), c);
                  }
                })(I, y, () => {
                  const R = D.injector.get(Lu);
                  return (
                    R.runInitializers(),
                    R.donePromise.then(
                      () => (
                        Gy(D.injector.get(tg, wm) || wm),
                        this._moduleDoBootstrap(D),
                        D
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(l, c = []) {
            const d = pS({}, c);
            return (function (r, s, l) {
              const c = new zm(l);
              return Promise.resolve(c);
            })(0, 0, l).then((f) => this.bootstrapModuleFactory(f, d));
          }
          _moduleDoBootstrap(l) {
            const c = l.injector.get(uf);
            if (l._bootstrapComponents.length > 0)
              l._bootstrapComponents.forEach((d) => c.bootstrap(d));
            else {
              if (!l.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${W(
                    l.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              l.instance.ngDoBootstrap(c);
            }
            this._modules.push(l);
          }
          onDestroy(l) {
            this._destroyListeners.push(l);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new Error("The platform has already been destroyed!");
            this._modules.slice().forEach((l) => l.destroy()),
              this._destroyListeners.forEach((l) => l()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)(qt($t));
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      function pS(r, s) {
        return Array.isArray(s)
          ? s.reduce(pS, r)
          : Object.assign(Object.assign({}, r), s);
      }
      let uf = (() => {
        class r {
          constructor(l, c, d, f, m) {
            (this._zone = l),
              (this._injector = c),
              (this._exceptionHandler = d),
              (this._componentFactoryResolver = f),
              (this._initStatus = m),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const y = new L.y((w) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    w.next(this._stable), w.complete();
                  });
              }),
              E = new L.y((w) => {
                let D;
                this._zone.runOutsideAngular(() => {
                  D = this._zone.onStable.subscribe(() => {
                    lr.assertNotInAngularZone(),
                      ig(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), w.next(!0));
                      });
                  });
                });
                const I = this._zone.onUnstable.subscribe(() => {
                  lr.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        w.next(!1);
                      }));
                });
                return () => {
                  D.unsubscribe(), I.unsubscribe();
                };
              });
            this.isStable = (0, ne.T)(y, E.pipe((0, re.B)()));
          }
          bootstrap(l, c) {
            if (!this._initStatus.done)
              throw new Error(
                "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
              );
            let d;
            (d =
              l instanceof jw
                ? l
                : this._componentFactoryResolver.resolveComponentFactory(l)),
              this.componentTypes.push(d.componentType);
            const f = (function (r) {
                return r.isBoundToModule;
              })(d)
                ? void 0
                : this._injector.get(Iu),
              y = d.create($t.NULL, [], c || d.selector, f),
              E = y.location.nativeElement,
              w = y.injector.get(iS, null),
              D = w && y.injector.get(sb);
            return (
              w && D && D.registerApplication(E, w),
              y.onDestroy(() => {
                this.detachView(y.hostView),
                  ab(this.components, y),
                  D && D.unregisterApplication(E);
              }),
              this._loadComponent(y),
              y
            );
          }
          tick() {
            if (this._runningTick)
              throw new Error("ApplicationRef.tick is called recursively");
            try {
              this._runningTick = !0;
              for (let l of this._views) l.detectChanges();
            } catch (l) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(l)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(l) {
            const c = l;
            this._views.push(c), c.attachToAppRef(this);
          }
          detachView(l) {
            const c = l;
            ab(this._views, c), c.detachFromAppRef();
          }
          _loadComponent(l) {
            this.attachView(l.hostView),
              this.tick(),
              this.components.push(l),
              this._injector
                .get(K0, [])
                .concat(this._bootstrapListeners)
                .forEach((d) => d(l));
          }
          ngOnDestroy() {
            this._views.slice().forEach((l) => l.destroy()),
              this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)(qt(lr), qt($t), qt(C), qt(Su), qt(Lu));
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      function ab(r, s) {
        const l = r.indexOf(s);
        l > -1 && r.splice(l, 1);
      }
      class KA {}
      class JA {}
      const ag = { factoryPathPrefix: "", factoryPathSuffix: ".ngfactory" };
      let XA = (() => {
        class r {
          constructor(l, c) {
            (this._compiler = l), (this._config = c || ag);
          }
          load(l) {
            return this.loadAndCompile(l);
          }
          loadAndCompile(l) {
            let [c, d] = l.split("#");
            return (
              void 0 === d && (d = "default"),
              k(8255)(c)
                .then((f) => f[d])
                .then((f) => _S(f, c, d))
                .then((f) => this._compiler.compileModuleAsync(f))
            );
          }
          loadFactory(l) {
            let [c, d] = l.split("#"),
              f = "NgFactory";
            return (
              void 0 === d && ((d = "default"), (f = "")),
              k(8255)(
                this._config.factoryPathPrefix +
                  c +
                  this._config.factoryPathSuffix
              )
                .then((m) => m[d + f])
                .then((m) => _S(m, c, d))
            );
          }
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)(qt(Wl), qt(JA, 8));
          }),
          (r.ɵprov = st({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      function _S(r, s, l) {
        if (!r) throw new Error(`Cannot find '${l}' in '${s}'`);
        return r;
      }
      const SS = function (r) {
          return null;
        },
        ox = dS(null, "core", [
          { provide: q0, useValue: "unknown" },
          { provide: fS, deps: [$t] },
          { provide: sb, deps: [] },
          { provide: lf, deps: [] },
        ]),
        lx = [
          { provide: uf, useClass: uf, deps: [lr, $t, C, Su, Lu] },
          {
            provide: WI,
            deps: [lr],
            useFactory: function (r) {
              let s = [];
              return (
                r.onStable.subscribe(() => {
                  for (; s.length; ) s.pop()();
                }),
                function (l) {
                  s.push(l);
                }
              );
            },
          },
          { provide: Lu, useClass: Lu, deps: [[new Gr(), Jv]] },
          { provide: Wl, useClass: Wl, deps: [] },
          TA,
          {
            provide: Pm,
            useFactory: function () {
              return oI;
            },
            deps: [],
          },
          {
            provide: av,
            useFactory: function () {
              return Nm;
            },
            deps: [],
          },
          {
            provide: tg,
            useFactory: function (r) {
              return (
                Gy(
                  (r =
                    r ||
                    ("undefined" != typeof $localize && $localize.locale) ||
                    wm)
                ),
                r
              );
            },
            deps: [[new aa(tg), new Gr(), new rr()]],
          },
          { provide: Q0, useValue: "USD" },
        ];
      let MS = (() => {
        class r {
          constructor(l) {}
        }
        return (
          (r.ɵfac = function (l) {
            return new (l || r)(qt(uf));
          }),
          (r.ɵmod = Vo({ type: r })),
          (r.ɵinj = ln({ providers: lx })),
          r
        );
      })();
    },
    8939: (Re, ye, k) => {
      "use strict";
      k.d(ye, {
        hO: () => Y,
        xv: () => H,
        Dh: () => W,
        GT: () => q,
        on: () => O,
        pX: () => re,
      });
      var o = k(7716),
        ie = k(7841),
        L = k(9126);
      Re = k.hmd(Re);
      const ne = ["ngOnDestroy"],
        re = (K, de, le, Ce = {}) =>
          new Proxy(K, {
            get: (he, Ee) =>
              le.runOutsideAngular(() => {
                var Qe;
                if (K[Ee])
                  return (
                    (null === (Qe = null == Ce ? void 0 : Ce.spy) ||
                    void 0 === Qe
                      ? void 0
                      : Qe.get) && Ce.spy.get(Ee, K[Ee]),
                    K[Ee]
                  );
                if (ne.indexOf(Ee) > -1) return () => {};
                const Ge = de.toPromise().then((Ye) => {
                  const bt = Ye && Ye[Ee];
                  return "function" == typeof bt
                    ? bt.bind(Ye)
                    : bt && bt.then
                    ? bt.then((fe) => le.run(() => fe))
                    : le.run(() => bt);
                });
                return new Proxy(() => {}, {
                  get: (Ye, bt) => Ge[bt],
                  apply: (Ye, bt, fe) =>
                    Ge.then((xt) => {
                      var lt;
                      const ce = xt && xt(...fe);
                      return (
                        (null === (lt = null == Ce ? void 0 : Ce.spy) ||
                        void 0 === lt
                          ? void 0
                          : lt.apply) && Ce.spy.apply(Ee, fe, ce),
                        ce
                      );
                    }),
                });
              }),
          }),
        q = (K, de) => {
          de.forEach((le) => {
            Object.getOwnPropertyNames(le.prototype || le).forEach((Ce) => {
              Object.defineProperty(
                K.prototype,
                Ce,
                Object.getOwnPropertyDescriptor(le.prototype || le, Ce)
              );
            });
          });
        };
      class G {
        constructor(de) {
          return de;
        }
      }
      const W = new o.OlP("angularfire2.app.options"),
        H = new o.OlP("angularfire2.app.name");
      function O(K, de, le) {
        const he = ("object" == typeof le && le) || {};
        he.name = he.name || ("string" == typeof le && le) || "[DEFAULT]";
        const Qe =
          ie.Z.apps.filter((Ge) => Ge && Ge.name === he.name)[0] ||
          de.runOutsideAngular(() => ie.Z.initializeApp(K, he));
        try {
          JSON.stringify(K) !== JSON.stringify(Qe.options) &&
            z(
              "error",
              `${
                Qe.name
              } Firebase App already initialized with different options${
                Re.hot
                  ? ", you may need to reload as Firebase is not HMR aware."
                  : "."
              }`
            );
        } catch (Ge) {}
        return new G(Qe);
      }
      const z = (K, ...de) => {
          (0, o.X6Q)() && "undefined" != typeof console && console[K](...de);
        },
        N = { provide: G, useFactory: O, deps: [W, o.R0b, [new o.FiY(), H]] };
      let Y = (() => {
        class K {
          constructor(le) {
            ie.Z.registerVersion("angularfire", L.q4.full, "core"),
              ie.Z.registerVersion("angularfire", L.q4.full, "app-compat"),
              ie.Z.registerVersion("angular", o.q4F.full, le.toString());
          }
          static initializeApp(le, Ce) {
            return {
              ngModule: K,
              providers: [
                { provide: W, useValue: le },
                { provide: H, useValue: Ce },
              ],
            };
          }
        }
        return (
          (K.ɵfac = function (le) {
            return new (le || K)(o.LFG(o.Lbi));
          }),
          (K.ɵmod = o.oAB({ type: K })),
          (K.ɵinj = o.cJS({ providers: [N] })),
          K
        );
      })();
    },
    9126: (Re, ye, k) => {
      "use strict";
      k.d(ye, { q4: () => O, iC: () => ce, HU: () => Ge, cc: () => Y });
      var o = k(7716);
      (0, k(5452).registerVersion)("firebase", "9.0.1", "app");
      var re = k(7771),
        q = k(3637),
        G = k(3342),
        W = k(9673),
        H = k(9746);
      Re = k.hmd(Re);
      const O = new o.GfV("7.0.4"),
        z = !!Re.hot,
        N = (ue, ...J) => {
          (0, o.X6Q)() && "undefined" != typeof console && console[ue](...J);
        };
      function Y(ue, J, Ie, Ue, gt) {
        const [, Ve, ze] =
          globalThis.ɵAngularfireInstanceCache.find((Ke) => Ke[0] === ue) || [];
        if (Ve)
          return (
            (function (ue, J) {
              try {
                return ue.toString() === J.toString();
              } catch (Ie) {
                return ue === J;
              }
            })(gt, ze) ||
              (N(
                "error",
                `${J} was already initialized on the ${Ie} Firebase App with different settings.${
                  z
                    ? " You may need to reload as Firebase is not HMR aware."
                    : ""
                }`
              ),
              N("warn", { is: gt, was: ze })),
            Ve
          );
        {
          const Ke = Ue();
          return globalThis.ɵAngularfireInstanceCache.push([ue, Ke, gt]), Ke;
        }
      }
      function he() {}
      globalThis.ɵAngularfireInstanceCache ||
        (globalThis.ɵAngularfireInstanceCache = []);
      class Ee {
        constructor(J, Ie = re.N) {
          (this.zone = J), (this.delegate = Ie);
        }
        now() {
          return this.delegate.now();
        }
        schedule(J, Ie, Ue) {
          const gt = this.zone;
          return this.delegate.schedule(
            function (ze) {
              gt.runGuarded(() => {
                J.apply(this, [ze]);
              });
            },
            Ie,
            Ue
          );
        }
      }
      class Qe {
        constructor(J) {
          (this.zone = J), (this.task = null);
        }
        call(J, Ie) {
          const Ue = this.unscheduleTask.bind(this);
          return (
            (this.task = this.zone.run(() =>
              Zone.current.scheduleMacroTask(
                "firebaseZoneBlock",
                he,
                {},
                he,
                he
              )
            )),
            Ie.pipe((0, G.b)({ next: Ue, complete: Ue, error: Ue }))
              .subscribe(J)
              .add(Ue)
          );
        }
        unscheduleTask() {
          setTimeout(() => {
            null != this.task &&
              "scheduled" === this.task.state &&
              (this.task.invoke(), (this.task = null));
          }, 10);
        }
      }
      let Ge = (() => {
        class ue {
          constructor(Ie) {
            (this.ngZone = Ie),
              (this.outsideAngular = Ie.runOutsideAngular(
                () => new Ee(Zone.current)
              )),
              (this.insideAngular = Ie.run(() => new Ee(Zone.current, q.z))),
              globalThis.ɵAngularFireScheduler ||
                (globalThis.ɵAngularFireScheduler = this);
          }
        }
        return (
          (ue.ɵfac = function (Ie) {
            return new (Ie || ue)(o.LFG(o.R0b));
          }),
          (ue.ɵprov = o.Yz7({
            token: ue,
            factory: ue.ɵfac,
            providedIn: "root",
          })),
          ue
        );
      })();
      function Ye() {
        const ue = globalThis.ɵAngularFireScheduler;
        if (!ue) throw new Error("AngularFireModule has not been provided");
        return ue;
      }
      function ce(ue) {
        return (
          Ye(),
          (function (ue) {
            return function (Ie) {
              return (Ie = Ie.lift(new Qe(ue.ngZone))).pipe(
                (0, W.R)(ue.outsideAngular),
                (0, H.QV)(ue.insideAngular)
              );
            };
          })(Ye())(ue)
        );
      }
    },
    4486: (Re, ye, k) => {
      "use strict";
      k.d(ye, { Z: () => le });
      var o = k(4685),
        ie = k(6034),
        L = k(5452),
        ne = k(300);
      class re {
        constructor(he, Ee) {
          (this._delegate = he),
            (this.firebase = Ee),
            (0, L._addComponent)(
              he,
              new ie.wA("app-compat", () => this, "PUBLIC")
            ),
            (this.container = he.container);
        }
        get automaticDataCollectionEnabled() {
          return this._delegate.automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(he) {
          this._delegate.automaticDataCollectionEnabled = he;
        }
        get name() {
          return this._delegate.name;
        }
        get options() {
          return this._delegate.options;
        }
        delete() {
          return new Promise((he) => {
            this._delegate.checkDestroyed(), he();
          }).then(
            () => (
              this.firebase.INTERNAL.removeApp(this.name),
              (0, L.deleteApp)(this._delegate)
            )
          );
        }
        _getService(he, Ee = L._DEFAULT_ENTRY_NAME) {
          var Qe;
          this._delegate.checkDestroyed();
          const Ge = this._delegate.container.getProvider(he);
          return (
            !Ge.isInitialized() &&
              "EXPLICIT" ===
                (null === (Qe = Ge.getComponent()) || void 0 === Qe
                  ? void 0
                  : Qe.instantiationMode) &&
              Ge.initialize(),
            Ge.getImmediate({ identifier: Ee })
          );
        }
        _removeServiceInstance(he, Ee = L._DEFAULT_ENTRY_NAME) {
          this._delegate.container.getProvider(he).clearInstance(Ee);
        }
        _addComponent(he) {
          (0, L._addComponent)(this._delegate, he);
        }
        _addOrOverwriteComponent(he) {
          (0, L._addOrOverwriteComponent)(this._delegate, he);
        }
        toJSON() {
          return {
            name: this.name,
            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,
            options: this.options,
          };
        }
      }
      const G = new o.LL("app-compat", "Firebase", {
          "no-app":
            "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
          "invalid-app-argument":
            "firebase.{$appName}() takes either no argument or a Firebase App instance.",
        }),
        O = (function H() {
          const Ce = (function (Ce) {
            const he = {},
              Ee = {
                __esModule: !0,
                initializeApp: function (lt, ce = {}) {
                  const se = L.initializeApp(lt, ce);
                  if ((0, o.r3)(he, se.name)) return he[se.name];
                  const ge = new Ce(se, Ee);
                  return (he[se.name] = ge), ge;
                },
                app: Ge,
                registerVersion: L.registerVersion,
                setLogLevel: L.setLogLevel,
                onLog: L.onLog,
                apps: null,
                SDK_VERSION: L.SDK_VERSION,
                INTERNAL: {
                  registerComponent: function (lt) {
                    const ce = lt.name,
                      se = ce.replace("-compat", "");
                    if (L._registerComponent(lt) && "PUBLIC" === lt.type) {
                      const ge = (pe = Ge()) => {
                        if ("function" != typeof pe[se])
                          throw G.create("invalid-app-argument", {
                            appName: ce,
                          });
                        return pe[se]();
                      };
                      void 0 !== lt.serviceProps &&
                        (0, o.ZB)(ge, lt.serviceProps),
                        (Ee[se] = ge),
                        (Ce.prototype[se] = function (...pe) {
                          return this._getService
                            .bind(this, ce)
                            .apply(this, lt.multipleInstances ? pe : []);
                        });
                    }
                    return "PUBLIC" === lt.type ? Ee[se] : null;
                  },
                  removeApp: function (lt) {
                    delete he[lt];
                  },
                  useAsService: function (lt, ce) {
                    return "serverAuth" === ce ? null : ce;
                  },
                  modularAPIs: L,
                },
              };
            function Ge(lt) {
              if (!(0, o.r3)(he, (lt = lt || L._DEFAULT_ENTRY_NAME)))
                throw G.create("no-app", { appName: lt });
              return he[lt];
            }
            return (
              (Ee.default = Ee),
              Object.defineProperty(Ee, "apps", {
                get: function () {
                  return Object.keys(he).map((lt) => he[lt]);
                },
              }),
              (Ge.App = Ce),
              Ee
            );
          })(re);
          return (
            (Ce.INTERNAL = Object.assign(Object.assign({}, Ce.INTERNAL), {
              createFirebaseNamespace: H,
              extendNamespace: function (Ee) {
                (0, o.ZB)(Ce, Ee);
              },
              createSubscribe: o.ne,
              ErrorFactory: o.LL,
              deepExtend: o.ZB,
            })),
            Ce
          );
        })(),
        z = new ne.Yd("@firebase/app-compat");
      if ((0, o.jU)() && void 0 !== self.firebase) {
        z.warn(
          "\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  "
        );
        const Ce = self.firebase.SDK_VERSION;
        Ce &&
          Ce.indexOf("LITE") >= 0 &&
          z.warn(
            "\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    "
          );
      }
      const de = O;
      (0, L.registerVersion)("@firebase/app-compat", "0.1.1", undefined);
      const le = de;
    },
    5452: (Re, ye, k) => {
      "use strict";
      k.r(ye),
        k.d(ye, {
          FirebaseError: () => ne.ZR,
          SDK_VERSION: () => No,
          _DEFAULT_ENTRY_NAME: () => gt,
          _addComponent: () => pn,
          _addOrOverwriteComponent: () => xr,
          _apps: () => ze,
          _clearComponents: () => ln,
          _components: () => Ke,
          _getProvider: () => st,
          _registerComponent: () => Gt,
          _removeServiceInstance: () => Rr,
          deleteApp: () => as,
          getApp: () => Yi,
          getApps: () => os,
          initializeApp: () => Fo,
          onLog: () => Pn,
          registerVersion: () => Be,
          setLogLevel: () => kr,
        });
      var o = k(8239),
        ie = k(6034),
        L = k(300),
        ne = k(4685);
      class re {
        constructor(Ze) {
          this.container = Ze;
        }
        getPlatformInfoString() {
          return this.container
            .getProviders()
            .map((wt) => {
              if (
                (function (ut) {
                  const Ze = ut.getComponent();
                  return "VERSION" === (null == Ze ? void 0 : Ze.type);
                })(wt)
              ) {
                const Ct = wt.getImmediate();
                return `${Ct.library}/${Ct.version}`;
              }
              return null;
            })
            .filter((wt) => wt)
            .join(" ");
        }
      }
      const G = "@firebase/app",
        H = new L.Yd("@firebase/app"),
        gt = "[DEFAULT]",
        Ve = {
          [G]: "fire-core",
          "@firebase/app-compat": "fire-core-compat",
          "@firebase/analytics": "fire-analytics",
          "@firebase/analytics-compat": "fire-analytics-compat",
          "@firebase/app-check": "fire-app-check",
          "@firebase/app-check-compat": "fire-app-check-compat",
          "@firebase/auth": "fire-auth",
          "@firebase/auth-compat": "fire-auth-compat",
          "@firebase/database": "fire-rtdb",
          "@firebase/database-compat": "fire-rtdb-compat",
          "@firebase/functions": "fire-fn",
          "@firebase/functions-compat": "fire-fn-compat",
          "@firebase/installations": "fire-iid",
          "@firebase/installations-compat": "fire-iid-compat",
          "@firebase/messaging": "fire-fcm",
          "@firebase/messaging-compat": "fire-fcm-compat",
          "@firebase/performance": "fire-perf",
          "@firebase/performance-compat": "fire-perf-compat",
          "@firebase/remote-config": "fire-rc",
          "@firebase/remote-config-compat": "fire-rc-compat",
          "@firebase/storage": "fire-gcs",
          "@firebase/storage-compat": "fire-gcs-compat",
          "@firebase/firestore": "fire-fst",
          "@firebase/firestore-compat": "fire-fst-compat",
          "fire-js": "fire-js",
          firebase: "fire-js-all",
        },
        ze = new Map(),
        Ke = new Map();
      function pn(ut, Ze) {
        try {
          ut.container.addComponent(Ze);
        } catch (wt) {
          H.debug(
            `Component ${Ze.name} failed to register with FirebaseApp ${ut.name}`,
            wt
          );
        }
      }
      function xr(ut, Ze) {
        ut.container.addOrOverwriteComponent(Ze);
      }
      function Gt(ut) {
        const Ze = ut.name;
        if (Ke.has(Ze))
          return (
            H.debug(
              `There were multiple attempts to register component ${Ze}.`
            ),
            !1
          );
        Ke.set(Ze, ut);
        for (const wt of ze.values()) pn(wt, ut);
        return !0;
      }
      function st(ut, Ze) {
        return ut.container.getProvider(Ze);
      }
      function Rr(ut, Ze, wt = gt) {
        st(ut, Ze).clearInstance(wt);
      }
      function ln() {
        Ke.clear();
      }
      const On = new ne.LL("app", "Firebase", {
        "no-app":
          "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
        "bad-app-name": "Illegal App name: '{$appName}",
        "duplicate-app":
          "Firebase App named '{$appName}' already exists with different options or config",
        "app-deleted": "Firebase App named '{$appName}' already deleted",
        "invalid-app-argument":
          "firebase.{$appName}() takes either no argument or a Firebase App instance.",
        "invalid-log-argument":
          "First argument to `onLog` must be null or a function.",
      });
      class Hs {
        constructor(Ze, wt, Ct) {
          (this._isDeleted = !1),
            (this._options = Object.assign({}, Ze)),
            (this._config = Object.assign({}, wt)),
            (this._name = wt.name),
            (this._automaticDataCollectionEnabled =
              wt.automaticDataCollectionEnabled),
            (this._container = Ct),
            this.container.addComponent(new ie.wA("app", () => this, "PUBLIC"));
        }
        get automaticDataCollectionEnabled() {
          return this.checkDestroyed(), this._automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(Ze) {
          this.checkDestroyed(), (this._automaticDataCollectionEnabled = Ze);
        }
        get name() {
          return this.checkDestroyed(), this._name;
        }
        get options() {
          return this.checkDestroyed(), this._options;
        }
        get config() {
          return this.checkDestroyed(), this._config;
        }
        get container() {
          return this._container;
        }
        get isDeleted() {
          return this._isDeleted;
        }
        set isDeleted(Ze) {
          this._isDeleted = Ze;
        }
        checkDestroyed() {
          if (this.isDeleted)
            throw On.create("app-deleted", { appName: this._name });
        }
      }
      const No = "9.0.0";
      function Fo(ut, Ze = {}) {
        "object" != typeof Ze && (Ze = { name: Ze });
        const wt = Object.assign(
            { name: gt, automaticDataCollectionEnabled: !1 },
            Ze
          ),
          Ct = wt.name;
        if ("string" != typeof Ct || !Ct)
          throw On.create("bad-app-name", { appName: String(Ct) });
        const Nn = ze.get(Ct);
        if (Nn) {
          if ((0, ne.vZ)(ut, Nn.options) && (0, ne.vZ)(wt, Nn.config))
            return Nn;
          throw On.create("duplicate-app", { appName: Ct });
        }
        const Ht = new ie.H0(Ct);
        for (const We of Ke.values()) Ht.addComponent(We);
        const Te = new Hs(ut, wt, Ht);
        return ze.set(Ct, Te), Te;
      }
      function Yi(ut = gt) {
        const Ze = ze.get(ut);
        if (!Ze) throw On.create("no-app", { appName: ut });
        return Ze;
      }
      function os() {
        return Array.from(ze.values());
      }
      function as(ut) {
        return js.apply(this, arguments);
      }
      function js() {
        return (js = (0, o.Z)(function* (ut) {
          const Ze = ut.name;
          ze.has(Ze) &&
            (ze.delete(Ze),
            yield Promise.all(
              ut.container.getProviders().map((wt) => wt.delete())
            ),
            (ut.isDeleted = !0));
        })).apply(this, arguments);
      }
      function Be(ut, Ze, wt) {
        var Ct;
        let Nn = null !== (Ct = Ve[ut]) && void 0 !== Ct ? Ct : ut;
        wt && (Nn += `-${wt}`);
        const Ht = Nn.match(/\s|\//),
          Te = Ze.match(/\s|\//);
        if (Ht || Te) {
          const We = [
            `Unable to register library "${Nn}" with version "${Ze}":`,
          ];
          return (
            Ht &&
              We.push(
                `library name "${Nn}" contains illegal characters (whitespace or "/")`
              ),
            Ht && Te && We.push("and"),
            Te &&
              We.push(
                `version name "${Ze}" contains illegal characters (whitespace or "/")`
              ),
            void H.warn(We.join(" "))
          );
        }
        Gt(
          new ie.wA(
            `${Nn}-version`,
            () => ({ library: Nn, version: Ze }),
            "VERSION"
          )
        );
      }
      function Pn(ut, Ze) {
        if (null !== ut && "function" != typeof ut)
          throw On.create("invalid-log-argument");
        (0, L.Am)(ut, Ze);
      }
      function kr(ut) {
        (0, L.Ub)(ut);
      }
      Gt(new ie.wA("platform-logger", (Ze) => new re(Ze), "PRIVATE")),
        Be(G, "0.7.0", undefined),
        Be("fire-js", "");
    },
    6034: (Re, ye, k) => {
      "use strict";
      k.d(ye, { wA: () => L, H0: () => W, zt: () => re });
      var o = k(4762),
        ie = k(4685),
        L = (function () {
          function H(O, z, N) {
            (this.name = O),
              (this.instanceFactory = z),
              (this.type = N),
              (this.multipleInstances = !1),
              (this.serviceProps = {}),
              (this.instantiationMode = "LAZY"),
              (this.onInstanceCreated = null);
          }
          return (
            (H.prototype.setInstantiationMode = function (O) {
              return (this.instantiationMode = O), this;
            }),
            (H.prototype.setMultipleInstances = function (O) {
              return (this.multipleInstances = O), this;
            }),
            (H.prototype.setServiceProps = function (O) {
              return (this.serviceProps = O), this;
            }),
            (H.prototype.setInstanceCreatedCallback = function (O) {
              return (this.onInstanceCreated = O), this;
            }),
            H
          );
        })(),
        ne = "[DEFAULT]",
        re = (function () {
          function H(O, z) {
            (this.name = O),
              (this.container = z),
              (this.component = null),
              (this.instances = new Map()),
              (this.instancesDeferred = new Map()),
              (this.instancesOptions = new Map()),
              (this.onInitCallbacks = new Map());
          }
          return (
            (H.prototype.get = function (O) {
              var z = this.normalizeInstanceIdentifier(O);
              if (!this.instancesDeferred.has(z)) {
                var N = new ie.BH();
                if (
                  (this.instancesDeferred.set(z, N),
                  this.isInitialized(z) || this.shouldAutoInitialize())
                )
                  try {
                    var Y = this.getOrInitializeService({
                      instanceIdentifier: z,
                    });
                    Y && N.resolve(Y);
                  } catch (K) {}
              }
              return this.instancesDeferred.get(z).promise;
            }),
            (H.prototype.getImmediate = function (O) {
              var z,
                N = this.normalizeInstanceIdentifier(
                  null == O ? void 0 : O.identifier
                ),
                Y =
                  null !== (z = null == O ? void 0 : O.optional) &&
                  void 0 !== z &&
                  z;
              if (!this.isInitialized(N) && !this.shouldAutoInitialize()) {
                if (Y) return null;
                throw Error("Service " + this.name + " is not available");
              }
              try {
                return this.getOrInitializeService({ instanceIdentifier: N });
              } catch (K) {
                if (Y) return null;
                throw K;
              }
            }),
            (H.prototype.getComponent = function () {
              return this.component;
            }),
            (H.prototype.setComponent = function (O) {
              var z, N;
              if (O.name !== this.name)
                throw Error(
                  "Mismatching Component " +
                    O.name +
                    " for Provider " +
                    this.name +
                    "."
                );
              if (this.component)
                throw Error(
                  "Component for " + this.name + " has already been provided"
                );
              if (((this.component = O), this.shouldAutoInitialize())) {
                if (
                  (function (H) {
                    return "EAGER" === H.instantiationMode;
                  })(O)
                )
                  try {
                    this.getOrInitializeService({ instanceIdentifier: ne });
                  } catch (Qe) {}
                try {
                  for (
                    var Y = (0, o.XA)(this.instancesDeferred.entries()),
                      K = Y.next();
                    !K.done;
                    K = Y.next()
                  ) {
                    var de = (0, o.CR)(K.value, 2),
                      Ce = de[1],
                      he = this.normalizeInstanceIdentifier(de[0]);
                    try {
                      var Ee = this.getOrInitializeService({
                        instanceIdentifier: he,
                      });
                      Ce.resolve(Ee);
                    } catch (Qe) {}
                  }
                } catch (Qe) {
                  z = { error: Qe };
                } finally {
                  try {
                    K && !K.done && (N = Y.return) && N.call(Y);
                  } finally {
                    if (z) throw z.error;
                  }
                }
              }
            }),
            (H.prototype.clearInstance = function (O) {
              void 0 === O && (O = ne),
                this.instancesDeferred.delete(O),
                this.instancesOptions.delete(O),
                this.instances.delete(O);
            }),
            (H.prototype.delete = function () {
              return (0, o.mG)(this, void 0, void 0, function () {
                var O;
                return (0, o.Jh)(this, function (z) {
                  switch (z.label) {
                    case 0:
                      return (
                        (O = Array.from(this.instances.values())),
                        [
                          4,
                          Promise.all(
                            (0, o.ev)(
                              (0, o.ev)(
                                [],
                                (0, o.CR)(
                                  O.filter(function (N) {
                                    return "INTERNAL" in N;
                                  }).map(function (N) {
                                    return N.INTERNAL.delete();
                                  })
                                )
                              ),
                              (0, o.CR)(
                                O.filter(function (N) {
                                  return "_delete" in N;
                                }).map(function (N) {
                                  return N._delete();
                                })
                              )
                            )
                          ),
                        ]
                      );
                    case 1:
                      return z.sent(), [2];
                  }
                });
              });
            }),
            (H.prototype.isComponentSet = function () {
              return null != this.component;
            }),
            (H.prototype.isInitialized = function (O) {
              return void 0 === O && (O = ne), this.instances.has(O);
            }),
            (H.prototype.getOptions = function (O) {
              return (
                void 0 === O && (O = ne), this.instancesOptions.get(O) || {}
              );
            }),
            (H.prototype.initialize = function (O) {
              var z, N;
              void 0 === O && (O = {});
              var Y = O.options,
                K = void 0 === Y ? {} : Y,
                de = this.normalizeInstanceIdentifier(O.instanceIdentifier);
              if (this.isInitialized(de))
                throw Error(
                  this.name + "(" + de + ") has already been initialized"
                );
              if (!this.isComponentSet())
                throw Error(
                  "Component " + this.name + " has not been registered yet"
                );
              var le = this.getOrInitializeService({
                instanceIdentifier: de,
                options: K,
              });
              try {
                for (
                  var Ce = (0, o.XA)(this.instancesDeferred.entries()),
                    he = Ce.next();
                  !he.done;
                  he = Ce.next()
                ) {
                  var Ee = (0, o.CR)(he.value, 2),
                    Ge = Ee[1];
                  de === this.normalizeInstanceIdentifier(Ee[0]) &&
                    Ge.resolve(le);
                }
              } catch (bt) {
                z = { error: bt };
              } finally {
                try {
                  he && !he.done && (N = Ce.return) && N.call(Ce);
                } finally {
                  if (z) throw z.error;
                }
              }
              return le;
            }),
            (H.prototype.onInit = function (O, z) {
              var N,
                Y = this.normalizeInstanceIdentifier(z),
                K =
                  null !== (N = this.onInitCallbacks.get(Y)) && void 0 !== N
                    ? N
                    : new Set();
              K.add(O), this.onInitCallbacks.set(Y, K);
              var de = this.instances.get(Y);
              return (
                de && O(de, Y),
                function () {
                  K.delete(O);
                }
              );
            }),
            (H.prototype.invokeOnInitCallbacks = function (O, z) {
              var N,
                Y,
                K = this.onInitCallbacks.get(z);
              if (K)
                try {
                  for (
                    var de = (0, o.XA)(K), le = de.next();
                    !le.done;
                    le = de.next()
                  ) {
                    var Ce = le.value;
                    try {
                      Ce(O, z);
                    } catch (he) {}
                  }
                } catch (he) {
                  N = { error: he };
                } finally {
                  try {
                    le && !le.done && (Y = de.return) && Y.call(de);
                  } finally {
                    if (N) throw N.error;
                  }
                }
            }),
            (H.prototype.getOrInitializeService = function (O) {
              var z = O.instanceIdentifier,
                N = O.options,
                Y = void 0 === N ? {} : N,
                K = this.instances.get(z);
              if (
                !K &&
                this.component &&
                ((K = this.component.instanceFactory(this.container, {
                  instanceIdentifier: q(z),
                  options: Y,
                })),
                this.instances.set(z, K),
                this.instancesOptions.set(z, Y),
                this.invokeOnInitCallbacks(K, z),
                this.component.onInstanceCreated)
              )
                try {
                  this.component.onInstanceCreated(this.container, z, K);
                } catch (de) {}
              return K || null;
            }),
            (H.prototype.normalizeInstanceIdentifier = function (O) {
              return (
                void 0 === O && (O = ne),
                this.component ? (this.component.multipleInstances ? O : ne) : O
              );
            }),
            (H.prototype.shouldAutoInitialize = function () {
              return (
                !!this.component &&
                "EXPLICIT" !== this.component.instantiationMode
              );
            }),
            H
          );
        })();
      function q(H) {
        return H === ne ? void 0 : H;
      }
      var W = (function () {
        function H(O) {
          (this.name = O), (this.providers = new Map());
        }
        return (
          (H.prototype.addComponent = function (O) {
            var z = this.getProvider(O.name);
            if (z.isComponentSet())
              throw new Error(
                "Component " +
                  O.name +
                  " has already been registered with " +
                  this.name
              );
            z.setComponent(O);
          }),
          (H.prototype.addOrOverwriteComponent = function (O) {
            this.getProvider(O.name).isComponentSet() &&
              this.providers.delete(O.name),
              this.addComponent(O);
          }),
          (H.prototype.getProvider = function (O) {
            if (this.providers.has(O)) return this.providers.get(O);
            var z = new re(O, this);
            return this.providers.set(O, z), z;
          }),
          (H.prototype.getProviders = function () {
            return Array.from(this.providers.values());
          }),
          H
        );
      })();
    },
    300: (Re, ye, k) => {
      "use strict";
      function o() {
        for (var N = 0, Y = 0, K = arguments.length; Y < K; Y++)
          N += arguments[Y].length;
        var de = Array(N),
          le = 0;
        for (Y = 0; Y < K; Y++)
          for (
            var Ce = arguments[Y], he = 0, Ee = Ce.length;
            he < Ee;
            he++, le++
          )
            de[le] = Ce[he];
        return de;
      }
      k.d(ye, { in: () => ne, Yd: () => H, Ub: () => O, Am: () => z });
      var ie,
        L = [],
        ne = (() => {
          return (
            ((N = ne || (ne = {}))[(N.DEBUG = 0)] = "DEBUG"),
            (N[(N.VERBOSE = 1)] = "VERBOSE"),
            (N[(N.INFO = 2)] = "INFO"),
            (N[(N.WARN = 3)] = "WARN"),
            (N[(N.ERROR = 4)] = "ERROR"),
            (N[(N.SILENT = 5)] = "SILENT"),
            ne
          );
          var N;
        })(),
        re = {
          debug: ne.DEBUG,
          verbose: ne.VERBOSE,
          info: ne.INFO,
          warn: ne.WARN,
          error: ne.ERROR,
          silent: ne.SILENT,
        },
        q = ne.INFO,
        G =
          (((ie = {})[ne.DEBUG] = "log"),
          (ie[ne.VERBOSE] = "log"),
          (ie[ne.INFO] = "info"),
          (ie[ne.WARN] = "warn"),
          (ie[ne.ERROR] = "error"),
          ie),
        W = function (N, Y) {
          for (var K = [], de = 2; de < arguments.length; de++)
            K[de - 2] = arguments[de];
          if (!(Y < N.logLevel)) {
            var le = new Date().toISOString(),
              Ce = G[Y];
            if (!Ce)
              throw new Error(
                "Attempted to log a message with an invalid logType (value: " +
                  Y +
                  ")"
              );
            console[Ce].apply(console, o(["[" + le + "]  " + N.name + ":"], K));
          }
        },
        H = (function () {
          function N(Y) {
            (this.name = Y),
              (this._logLevel = q),
              (this._logHandler = W),
              (this._userLogHandler = null),
              L.push(this);
          }
          return (
            Object.defineProperty(N.prototype, "logLevel", {
              get: function () {
                return this._logLevel;
              },
              set: function (Y) {
                if (!(Y in ne))
                  throw new TypeError(
                    'Invalid value "' + Y + '" assigned to `logLevel`'
                  );
                this._logLevel = Y;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (N.prototype.setLogLevel = function (Y) {
              this._logLevel = "string" == typeof Y ? re[Y] : Y;
            }),
            Object.defineProperty(N.prototype, "logHandler", {
              get: function () {
                return this._logHandler;
              },
              set: function (Y) {
                if ("function" != typeof Y)
                  throw new TypeError(
                    "Value assigned to `logHandler` must be a function"
                  );
                this._logHandler = Y;
              },
              enumerable: !1,
              configurable: !0,
            }),
            Object.defineProperty(N.prototype, "userLogHandler", {
              get: function () {
                return this._userLogHandler;
              },
              set: function (Y) {
                this._userLogHandler = Y;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (N.prototype.debug = function () {
              for (var Y = [], K = 0; K < arguments.length; K++)
                Y[K] = arguments[K];
              this._userLogHandler &&
                this._userLogHandler.apply(this, o([this, ne.DEBUG], Y)),
                this._logHandler.apply(this, o([this, ne.DEBUG], Y));
            }),
            (N.prototype.log = function () {
              for (var Y = [], K = 0; K < arguments.length; K++)
                Y[K] = arguments[K];
              this._userLogHandler &&
                this._userLogHandler.apply(this, o([this, ne.VERBOSE], Y)),
                this._logHandler.apply(this, o([this, ne.VERBOSE], Y));
            }),
            (N.prototype.info = function () {
              for (var Y = [], K = 0; K < arguments.length; K++)
                Y[K] = arguments[K];
              this._userLogHandler &&
                this._userLogHandler.apply(this, o([this, ne.INFO], Y)),
                this._logHandler.apply(this, o([this, ne.INFO], Y));
            }),
            (N.prototype.warn = function () {
              for (var Y = [], K = 0; K < arguments.length; K++)
                Y[K] = arguments[K];
              this._userLogHandler &&
                this._userLogHandler.apply(this, o([this, ne.WARN], Y)),
                this._logHandler.apply(this, o([this, ne.WARN], Y));
            }),
            (N.prototype.error = function () {
              for (var Y = [], K = 0; K < arguments.length; K++)
                Y[K] = arguments[K];
              this._userLogHandler &&
                this._userLogHandler.apply(this, o([this, ne.ERROR], Y)),
                this._logHandler.apply(this, o([this, ne.ERROR], Y));
            }),
            N
          );
        })();
      function O(N) {
        L.forEach(function (Y) {
          Y.setLogLevel(N);
        });
      }
      function z(N, Y) {
        for (
          var K = function (he) {
              var Ee = null;
              Y && Y.level && (Ee = re[Y.level]),
                (he.userLogHandler =
                  null === N
                    ? null
                    : function (Qe, Ge) {
                        for (var Ye = [], bt = 2; bt < arguments.length; bt++)
                          Ye[bt - 2] = arguments[bt];
                        var fe = Ye.map(function (xt) {
                          if (null == xt) return null;
                          if ("string" == typeof xt) return xt;
                          if ("number" == typeof xt || "boolean" == typeof xt)
                            return xt.toString();
                          if (xt instanceof Error) return xt.message;
                          try {
                            return JSON.stringify(xt);
                          } catch (lt) {
                            return null;
                          }
                        })
                          .filter(function (xt) {
                            return xt;
                          })
                          .join(" ");
                        Ge >= (null != Ee ? Ee : Qe.logLevel) &&
                          N({
                            level: ne[Ge].toLowerCase(),
                            message: fe,
                            args: Ye,
                            type: Qe.name,
                          });
                      });
            },
            de = 0,
            le = L;
          de < le.length;
          de++
        )
          K(le[de]);
      }
    },
    4685: (Re, ye, k) => {
      "use strict";
      k.d(ye, {
        BH: () => K,
        LL: () => Ie,
        ZR: () => J,
        gQ: () => as,
        hu: () => L,
        g5: () => ne,
        US: () => G,
        tV: () => O,
        h$: () => W,
        r3: () => Rr,
        Sg: () => de,
        ne: () => js,
        p$: () => z,
        vZ: () => Hs,
        ZB: () => N,
        gK: () => Ze,
        pd: () => os,
        m9: () => Ft,
        z$: () => le,
        GJ: () => st,
        jU: () => Ee,
        ru: () => Qe,
        xb: () => kn,
        w1: () => bt,
        hl: () => ce,
        uI: () => Ce,
        UG: () => he,
        Yr: () => xt,
        b$: () => Ge,
        w9: () => Gt,
        cI: () => Ve,
        UI: () => On,
        xO: () => Fo,
        zd: () => Yi,
        DV: () => ln,
        ug: () => Te,
        dS: () => Ht,
        Pz: () => ze,
        Dv: () => ut,
        Wj: () => Ct,
        lb: () => Nn,
      });
      var o = k(4762),
        L = function (U, V) {
          if (!U) throw ne(V);
        },
        ne = function (U) {
          return new Error(
            "Firebase Database (${JSCORE_VERSION}) INTERNAL ASSERT FAILED: " + U
          );
        },
        re = function (U) {
          for (var V = [], te = 0, ae = 0; ae < U.length; ae++) {
            var ee = U.charCodeAt(ae);
            ee < 128
              ? (V[te++] = ee)
              : ee < 2048
              ? ((V[te++] = (ee >> 6) | 192), (V[te++] = (63 & ee) | 128))
              : 55296 == (64512 & ee) &&
                ae + 1 < U.length &&
                56320 == (64512 & U.charCodeAt(ae + 1))
              ? ((ee =
                  65536 + ((1023 & ee) << 10) + (1023 & U.charCodeAt(++ae))),
                (V[te++] = (ee >> 18) | 240),
                (V[te++] = ((ee >> 12) & 63) | 128),
                (V[te++] = ((ee >> 6) & 63) | 128),
                (V[te++] = (63 & ee) | 128))
              : ((V[te++] = (ee >> 12) | 224),
                (V[te++] = ((ee >> 6) & 63) | 128),
                (V[te++] = (63 & ee) | 128));
          }
          return V;
        },
        G = {
          byteToCharMap_: null,
          charToByteMap_: null,
          byteToCharMapWebSafe_: null,
          charToByteMapWebSafe_: null,
          ENCODED_VALS_BASE:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
          get ENCODED_VALS() {
            return this.ENCODED_VALS_BASE + "+/=";
          },
          get ENCODED_VALS_WEBSAFE() {
            return this.ENCODED_VALS_BASE + "-_.";
          },
          HAS_NATIVE_SUPPORT: "function" == typeof atob,
          encodeByteArray: function (U, V) {
            if (!Array.isArray(U))
              throw Error("encodeByteArray takes an array as a parameter");
            this.init_();
            for (
              var te = V ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
                ae = [],
                ee = 0;
              ee < U.length;
              ee += 3
            ) {
              var Me = U[ee],
                Pe = ee + 1 < U.length,
                St = Pe ? U[ee + 1] : 0,
                Rt = ee + 2 < U.length,
                ft = Rt ? U[ee + 2] : 0,
                Jn = ((15 & St) << 2) | (ft >> 6),
                Or = 63 & ft;
              Rt || ((Or = 64), Pe || (Jn = 64)),
                ae.push(
                  te[Me >> 2],
                  te[((3 & Me) << 4) | (St >> 4)],
                  te[Jn],
                  te[Or]
                );
            }
            return ae.join("");
          },
          encodeString: function (U, V) {
            return this.HAS_NATIVE_SUPPORT && !V
              ? btoa(U)
              : this.encodeByteArray(re(U), V);
          },
          decodeString: function (U, V) {
            return this.HAS_NATIVE_SUPPORT && !V
              ? atob(U)
              : (function (U) {
                  for (var V = [], te = 0, ae = 0; te < U.length; ) {
                    var ee = U[te++];
                    if (ee < 128) V[ae++] = String.fromCharCode(ee);
                    else if (ee > 191 && ee < 224) {
                      var Me = U[te++];
                      V[ae++] = String.fromCharCode(
                        ((31 & ee) << 6) | (63 & Me)
                      );
                    } else if (ee > 239 && ee < 365) {
                      var Rt =
                        (((7 & ee) << 18) |
                          ((63 & (Me = U[te++])) << 12) |
                          ((63 & (Pe = U[te++])) << 6) |
                          (63 & U[te++])) -
                        65536;
                      (V[ae++] = String.fromCharCode(55296 + (Rt >> 10))),
                        (V[ae++] = String.fromCharCode(56320 + (1023 & Rt)));
                    } else {
                      Me = U[te++];
                      var Pe = U[te++];
                      V[ae++] = String.fromCharCode(
                        ((15 & ee) << 12) | ((63 & Me) << 6) | (63 & Pe)
                      );
                    }
                  }
                  return V.join("");
                })(this.decodeStringToByteArray(U, V));
          },
          decodeStringToByteArray: function (U, V) {
            this.init_();
            for (
              var te = V ? this.charToByteMapWebSafe_ : this.charToByteMap_,
                ae = [],
                ee = 0;
              ee < U.length;

            ) {
              var Me = te[U.charAt(ee++)],
                St = ee < U.length ? te[U.charAt(ee)] : 0,
                ft = ++ee < U.length ? te[U.charAt(ee)] : 64,
                Qn = ++ee < U.length ? te[U.charAt(ee)] : 64;
              if ((++ee, null == Me || null == St || null == ft || null == Qn))
                throw Error();
              ae.push((Me << 2) | (St >> 4)),
                64 !== ft &&
                  (ae.push(((St << 4) & 240) | (ft >> 2)),
                  64 !== Qn && ae.push(((ft << 6) & 192) | Qn));
            }
            return ae;
          },
          init_: function () {
            if (!this.byteToCharMap_) {
              (this.byteToCharMap_ = {}),
                (this.charToByteMap_ = {}),
                (this.byteToCharMapWebSafe_ = {}),
                (this.charToByteMapWebSafe_ = {});
              for (var U = 0; U < this.ENCODED_VALS.length; U++)
                (this.byteToCharMap_[U] = this.ENCODED_VALS.charAt(U)),
                  (this.charToByteMap_[this.byteToCharMap_[U]] = U),
                  (this.byteToCharMapWebSafe_[U] =
                    this.ENCODED_VALS_WEBSAFE.charAt(U)),
                  (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[U]] =
                    U),
                  U >= this.ENCODED_VALS_BASE.length &&
                    ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(U)] =
                      U),
                    (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(U)] =
                      U));
            }
          },
        },
        W = function (U) {
          var V = re(U);
          return G.encodeByteArray(V, !0);
        },
        H = function (U) {
          return W(U).replace(/\./g, "");
        },
        O = function (U) {
          try {
            return G.decodeString(U, !0);
          } catch (V) {
            console.error("base64Decode failed: ", V);
          }
          return null;
        };
      function z(U) {
        return N(void 0, U);
      }
      function N(U, V) {
        if (!(V instanceof Object)) return V;
        switch (V.constructor) {
          case Date:
            return new Date(V.getTime());
          case Object:
            void 0 === U && (U = {});
            break;
          case Array:
            U = [];
            break;
          default:
            return V;
        }
        for (var ae in V)
          !V.hasOwnProperty(ae) || !Y(ae) || (U[ae] = N(U[ae], V[ae]));
        return U;
      }
      function Y(U) {
        return "__proto__" !== U;
      }
      var K = (function () {
        function U() {
          var V = this;
          (this.reject = function () {}),
            (this.resolve = function () {}),
            (this.promise = new Promise(function (te, ae) {
              (V.resolve = te), (V.reject = ae);
            }));
        }
        return (
          (U.prototype.wrapCallback = function (V) {
            var te = this;
            return function (ae, ee) {
              ae ? te.reject(ae) : te.resolve(ee),
                "function" == typeof V &&
                  (te.promise.catch(function () {}),
                  1 === V.length ? V(ae) : V(ae, ee));
            };
          }),
          U
        );
      })();
      function de(U, V) {
        if (U.uid)
          throw new Error(
            'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
          );
        var ae = V || "demo-project",
          ee = U.iat || 0,
          Me = U.sub || U.user_id;
        if (!Me)
          throw new Error(
            "mockUserToken must contain 'sub' or 'user_id' field!"
          );
        var Pe = (0, o.pi)(
          {
            iss: "https://securetoken.google.com/" + ae,
            aud: ae,
            iat: ee,
            exp: ee + 3600,
            auth_time: ee,
            sub: Me,
            user_id: Me,
            firebase: { sign_in_provider: "custom", identities: {} },
          },
          U
        );
        return [
          H(JSON.stringify({ alg: "none", type: "JWT" })),
          H(JSON.stringify(Pe)),
          "",
        ].join(".");
      }
      function le() {
        return "undefined" != typeof navigator &&
          "string" == typeof navigator.userAgent
          ? navigator.userAgent
          : "";
      }
      function Ce() {
        return (
          "undefined" != typeof window &&
          !!(window.cordova || window.phonegap || window.PhoneGap) &&
          /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(le())
        );
      }
      function he() {
        try {
          return (
            "[object process]" ===
            Object.prototype.toString.call(global.process)
          );
        } catch (U) {
          return !1;
        }
      }
      function Ee() {
        return "object" == typeof self && self.self === self;
      }
      function Qe() {
        var U =
          "object" == typeof chrome
            ? chrome.runtime
            : "object" == typeof browser
            ? browser.runtime
            : void 0;
        return "object" == typeof U && void 0 !== U.id;
      }
      function Ge() {
        return (
          "object" == typeof navigator && "ReactNative" === navigator.product
        );
      }
      function bt() {
        var U = le();
        return U.indexOf("MSIE ") >= 0 || U.indexOf("Trident/") >= 0;
      }
      function xt() {
        return !1;
      }
      function ce() {
        return "indexedDB" in self && null != indexedDB;
      }
      var J = (function (U) {
          function V(te, ae, ee) {
            var Me = U.call(this, ae) || this;
            return (
              (Me.code = te),
              (Me.customData = ee),
              (Me.name = "FirebaseError"),
              Object.setPrototypeOf(Me, V.prototype),
              Error.captureStackTrace &&
                Error.captureStackTrace(Me, Ie.prototype.create),
              Me
            );
          }
          return (0, o.ZT)(V, U), V;
        })(Error),
        Ie = (function () {
          function U(V, te, ae) {
            (this.service = V), (this.serviceName = te), (this.errors = ae);
          }
          return (
            (U.prototype.create = function (V) {
              for (var te = [], ae = 1; ae < arguments.length; ae++)
                te[ae - 1] = arguments[ae];
              var ee = te[0] || {},
                Me = this.service + "/" + V,
                Pe = this.errors[V],
                St = Pe ? Ue(Pe, ee) : "Error",
                Rt = this.serviceName + ": " + St + " (" + Me + ").",
                ft = new J(Me, Rt, ee);
              return ft;
            }),
            U
          );
        })();
      function Ue(U, V) {
        return U.replace(gt, function (te, ae) {
          var ee = V[ae];
          return null != ee ? String(ee) : "<" + ae + "?>";
        });
      }
      var gt = /\{\$([^}]+)}/g;
      function Ve(U) {
        return JSON.parse(U);
      }
      function ze(U) {
        return JSON.stringify(U);
      }
      var Ke = function (U) {
          var V = {},
            te = {},
            ae = {},
            ee = "";
          try {
            var Me = U.split(".");
            (V = Ve(O(Me[0]) || "")),
              (te = Ve(O(Me[1]) || "")),
              (ee = Me[2]),
              (ae = te.d || {}),
              delete te.d;
          } catch (Pe) {}
          return { header: V, claims: te, data: ae, signature: ee };
        },
        Gt = function (U) {
          var te = Ke(U).claims;
          return !!te && "object" == typeof te && te.hasOwnProperty("iat");
        },
        st = function (U) {
          var V = Ke(U).claims;
          return "object" == typeof V && !0 === V.admin;
        };
      function Rr(U, V) {
        return Object.prototype.hasOwnProperty.call(U, V);
      }
      function ln(U, V) {
        if (Object.prototype.hasOwnProperty.call(U, V)) return U[V];
      }
      function kn(U) {
        for (var V in U)
          if (Object.prototype.hasOwnProperty.call(U, V)) return !1;
        return !0;
      }
      function On(U, V, te) {
        var ae = {};
        for (var ee in U)
          Object.prototype.hasOwnProperty.call(U, ee) &&
            (ae[ee] = V.call(te, U[ee], ee, U));
        return ae;
      }
      function Hs(U, V) {
        if (U === V) return !0;
        for (
          var te = Object.keys(U), ae = Object.keys(V), ee = 0, Me = te;
          ee < Me.length;
          ee++
        ) {
          if (!ae.includes((Pe = Me[ee]))) return !1;
          var St = U[Pe],
            Rt = V[Pe];
          if (No(St) && No(Rt)) {
            if (!Hs(St, Rt)) return !1;
          } else if (St !== Rt) return !1;
        }
        for (var ft = 0, cn = ae; ft < cn.length; ft++) {
          var Pe;
          if (!te.includes((Pe = cn[ft]))) return !1;
        }
        return !0;
      }
      function No(U) {
        return null !== U && "object" == typeof U;
      }
      function Fo(U) {
        for (
          var V = [],
            te = function (Rt, ft) {
              Array.isArray(ft)
                ? ft.forEach(function (cn) {
                    V.push(
                      encodeURIComponent(Rt) + "=" + encodeURIComponent(cn)
                    );
                  })
                : V.push(encodeURIComponent(Rt) + "=" + encodeURIComponent(ft));
            },
            ae = 0,
            ee = Object.entries(U);
          ae < ee.length;
          ae++
        ) {
          var Me = ee[ae];
          te(Me[0], Me[1]);
        }
        return V.length ? "&" + V.join("&") : "";
      }
      function Yi(U) {
        var V = {};
        return (
          U.replace(/^\?/, "")
            .split("&")
            .forEach(function (ae) {
              if (ae) {
                var ee = ae.split("="),
                  Pe = ee[1];
                V[decodeURIComponent(ee[0])] = decodeURIComponent(Pe);
              }
            }),
          V
        );
      }
      function os(U) {
        var V = U.indexOf("?");
        if (!V) return "";
        var te = U.indexOf("#", V);
        return U.substring(V, te > 0 ? te : void 0);
      }
      var as = (function () {
        function U() {
          (this.chain_ = []),
            (this.buf_ = []),
            (this.W_ = []),
            (this.pad_ = []),
            (this.inbuf_ = 0),
            (this.total_ = 0),
            (this.blockSize = 64),
            (this.pad_[0] = 128);
          for (var V = 1; V < this.blockSize; ++V) this.pad_[V] = 0;
          this.reset();
        }
        return (
          (U.prototype.reset = function () {
            (this.chain_[0] = 1732584193),
              (this.chain_[1] = 4023233417),
              (this.chain_[2] = 2562383102),
              (this.chain_[3] = 271733878),
              (this.chain_[4] = 3285377520),
              (this.inbuf_ = 0),
              (this.total_ = 0);
          }),
          (U.prototype.compress_ = function (V, te) {
            te || (te = 0);
            var ae = this.W_;
            if ("string" == typeof V)
              for (var ee = 0; ee < 16; ee++)
                (ae[ee] =
                  (V.charCodeAt(te) << 24) |
                  (V.charCodeAt(te + 1) << 16) |
                  (V.charCodeAt(te + 2) << 8) |
                  V.charCodeAt(te + 3)),
                  (te += 4);
            else
              for (ee = 0; ee < 16; ee++)
                (ae[ee] =
                  (V[te] << 24) |
                  (V[te + 1] << 16) |
                  (V[te + 2] << 8) |
                  V[te + 3]),
                  (te += 4);
            for (ee = 16; ee < 80; ee++)
              ae[ee] =
                4294967295 &
                (((Me = ae[ee - 3] ^ ae[ee - 8] ^ ae[ee - 14] ^ ae[ee - 16]) <<
                  1) |
                  (Me >>> 31));
            var Qn,
              Jn,
              Pe = this.chain_[0],
              St = this.chain_[1],
              Rt = this.chain_[2],
              ft = this.chain_[3],
              cn = this.chain_[4];
            for (ee = 0; ee < 80; ee++) {
              ee < 40
                ? ee < 20
                  ? ((Qn = ft ^ (St & (Rt ^ ft))), (Jn = 1518500249))
                  : ((Qn = St ^ Rt ^ ft), (Jn = 1859775393))
                : ee < 60
                ? ((Qn = (St & Rt) | (ft & (St | Rt))), (Jn = 2400959708))
                : ((Qn = St ^ Rt ^ ft), (Jn = 3395469782));
              var Me =
                (((Pe << 5) | (Pe >>> 27)) + Qn + cn + Jn + ae[ee]) &
                4294967295;
              (cn = ft),
                (ft = Rt),
                (Rt = 4294967295 & ((St << 30) | (St >>> 2))),
                (St = Pe),
                (Pe = Me);
            }
            (this.chain_[0] = (this.chain_[0] + Pe) & 4294967295),
              (this.chain_[1] = (this.chain_[1] + St) & 4294967295),
              (this.chain_[2] = (this.chain_[2] + Rt) & 4294967295),
              (this.chain_[3] = (this.chain_[3] + ft) & 4294967295),
              (this.chain_[4] = (this.chain_[4] + cn) & 4294967295);
          }),
          (U.prototype.update = function (V, te) {
            if (null != V) {
              void 0 === te && (te = V.length);
              for (
                var ae = te - this.blockSize,
                  ee = 0,
                  Me = this.buf_,
                  Pe = this.inbuf_;
                ee < te;

              ) {
                if (0 === Pe)
                  for (; ee <= ae; )
                    this.compress_(V, ee), (ee += this.blockSize);
                if ("string" == typeof V) {
                  for (; ee < te; )
                    if (
                      ((Me[Pe] = V.charCodeAt(ee)),
                      ++ee,
                      ++Pe === this.blockSize)
                    ) {
                      this.compress_(Me), (Pe = 0);
                      break;
                    }
                } else
                  for (; ee < te; )
                    if (((Me[Pe] = V[ee]), ++ee, ++Pe === this.blockSize)) {
                      this.compress_(Me), (Pe = 0);
                      break;
                    }
              }
              (this.inbuf_ = Pe), (this.total_ += te);
            }
          }),
          (U.prototype.digest = function () {
            var V = [],
              te = 8 * this.total_;
            this.update(
              this.pad_,
              this.inbuf_ < 56
                ? 56 - this.inbuf_
                : this.blockSize - (this.inbuf_ - 56)
            );
            for (var ae = this.blockSize - 1; ae >= 56; ae--)
              (this.buf_[ae] = 255 & te), (te /= 256);
            this.compress_(this.buf_);
            var ee = 0;
            for (ae = 0; ae < 5; ae++)
              for (var Me = 24; Me >= 0; Me -= 8)
                (V[ee] = (this.chain_[ae] >> Me) & 255), ++ee;
            return V;
          }),
          U
        );
      })();
      function js(U, V) {
        var te = new Be(U, V);
        return te.subscribe.bind(te);
      }
      var Be = (function () {
        function U(V, te) {
          var ae = this;
          (this.observers = []),
            (this.unsubscribes = []),
            (this.observerCount = 0),
            (this.task = Promise.resolve()),
            (this.finalized = !1),
            (this.onNoObservers = te),
            this.task
              .then(function () {
                V(ae);
              })
              .catch(function (ee) {
                ae.error(ee);
              });
        }
        return (
          (U.prototype.next = function (V) {
            this.forEachObserver(function (te) {
              te.next(V);
            });
          }),
          (U.prototype.error = function (V) {
            this.forEachObserver(function (te) {
              te.error(V);
            }),
              this.close(V);
          }),
          (U.prototype.complete = function () {
            this.forEachObserver(function (V) {
              V.complete();
            }),
              this.close();
          }),
          (U.prototype.subscribe = function (V, te, ae) {
            var Me,
              ee = this;
            if (void 0 === V && void 0 === te && void 0 === ae)
              throw new Error("Missing Observer.");
            void 0 ===
              (Me = (function (U, V) {
                if ("object" != typeof U || null === U) return !1;
                for (
                  var te = 0, ae = ["next", "error", "complete"];
                  te < ae.length;
                  te++
                ) {
                  var ee = ae[te];
                  if (ee in U && "function" == typeof U[ee]) return !0;
                }
                return !1;
              })(V)
                ? V
                : { next: V, error: te, complete: ae }).next && (Me.next = Mn),
              void 0 === Me.error && (Me.error = Mn),
              void 0 === Me.complete && (Me.complete = Mn);
            var Pe = this.unsubscribeOne.bind(this, this.observers.length);
            return (
              this.finalized &&
                this.task.then(function () {
                  try {
                    ee.finalError ? Me.error(ee.finalError) : Me.complete();
                  } catch (St) {}
                }),
              this.observers.push(Me),
              Pe
            );
          }),
          (U.prototype.unsubscribeOne = function (V) {
            void 0 === this.observers ||
              void 0 === this.observers[V] ||
              (delete this.observers[V],
              (this.observerCount -= 1),
              0 === this.observerCount &&
                void 0 !== this.onNoObservers &&
                this.onNoObservers(this));
          }),
          (U.prototype.forEachObserver = function (V) {
            if (!this.finalized)
              for (var te = 0; te < this.observers.length; te++)
                this.sendOne(te, V);
          }),
          (U.prototype.sendOne = function (V, te) {
            var ae = this;
            this.task.then(function () {
              if (void 0 !== ae.observers && void 0 !== ae.observers[V])
                try {
                  te(ae.observers[V]);
                } catch (ee) {
                  "undefined" != typeof console &&
                    console.error &&
                    console.error(ee);
                }
            });
          }),
          (U.prototype.close = function (V) {
            var te = this;
            this.finalized ||
              ((this.finalized = !0),
              void 0 !== V && (this.finalError = V),
              this.task.then(function () {
                (te.observers = void 0), (te.onNoObservers = void 0);
              }));
          }),
          U
        );
      })();
      function Mn() {}
      var ut = function (U, V, te, ae) {
        var ee;
        if (
          (ae < V
            ? (ee = "at least " + V)
            : ae > te && (ee = 0 === te ? "none" : "no more than " + te),
          ee)
        )
          throw new Error(
            U +
              " failed: Was called with " +
              ae +
              (1 === ae ? " argument." : " arguments.") +
              " Expects " +
              ee +
              "."
          );
      };
      function Ze(U, V) {
        return U + " failed: " + V + " argument ";
      }
      function Ct(U, V, te, ae) {
        if ((!ae || te) && "function" != typeof te)
          throw new Error(Ze(U, V) + "must be a valid function.");
      }
      function Nn(U, V, te, ae) {
        if ((!ae || te) && ("object" != typeof te || null === te))
          throw new Error(Ze(U, V) + "must be a valid context object.");
      }
      var Ht = function (U) {
          for (var V = [], te = 0, ae = 0; ae < U.length; ae++) {
            var ee = U.charCodeAt(ae);
            if (ee >= 55296 && ee <= 56319) {
              var Me = ee - 55296;
              ae++,
                L(ae < U.length, "Surrogate pair missing trail surrogate."),
                (ee = 65536 + (Me << 10) + (U.charCodeAt(ae) - 56320));
            }
            ee < 128
              ? (V[te++] = ee)
              : ee < 2048
              ? ((V[te++] = (ee >> 6) | 192), (V[te++] = (63 & ee) | 128))
              : ee < 65536
              ? ((V[te++] = (ee >> 12) | 224),
                (V[te++] = ((ee >> 6) & 63) | 128),
                (V[te++] = (63 & ee) | 128))
              : ((V[te++] = (ee >> 18) | 240),
                (V[te++] = ((ee >> 12) & 63) | 128),
                (V[te++] = ((ee >> 6) & 63) | 128),
                (V[te++] = (63 & ee) | 128));
          }
          return V;
        },
        Te = function (U) {
          for (var V = 0, te = 0; te < U.length; te++) {
            var ae = U.charCodeAt(te);
            ae < 128
              ? V++
              : ae < 2048
              ? (V += 2)
              : ae >= 55296 && ae <= 56319
              ? ((V += 4), te++)
              : (V += 3);
          }
          return V;
        };
      function Ft(U) {
        return U && U._delegate ? U._delegate : U;
      }
    },
    7841: (Re, ye, k) => {
      "use strict";
      k.d(ye, { Z: () => o.Z });
      var o = k(4486);
      o.Z.registerVersion("firebase", "9.0.1", "app-compat");
    },
    9083: (Re, ye, k) => {
      "use strict";
      k.r(ye);
      var o = k(8239),
        ie = k(4486),
        L = k(4685),
        ne = k(5452),
        re = k(4762),
        q = k(300),
        G = k(6034);
      const de = function () {
          return {
            "admin-restricted-operation":
              "This operation is restricted to administrators only.",
            "argument-error": "",
            "app-not-authorized":
              "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
            "app-not-installed":
              "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
            "captcha-check-failed":
              "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
            "code-expired":
              "The SMS code has expired. Please re-send the verification code to try again.",
            "cordova-not-ready": "Cordova framework is not ready.",
            "cors-unsupported": "This browser is not supported.",
            "credential-already-in-use":
              "This credential is already associated with a different user account.",
            "custom-token-mismatch":
              "The custom token corresponds to a different audience.",
            "requires-recent-login":
              "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
            "dependent-sdk-initialized-before-auth":
              "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
            "dynamic-link-not-activated":
              "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",
            "email-change-needs-verification":
              "Multi-factor users must always have a verified email.",
            "email-already-in-use":
              "The email address is already in use by another account.",
            "emulator-config-failed":
              'Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling "connectAuthEmulator()" sooner.',
            "expired-action-code": "The action code has expired.",
            "cancelled-popup-request":
              "This operation has been cancelled due to another conflicting popup being opened.",
            "internal-error": "An internal AuthError has occurred.",
            "invalid-app-credential":
              "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
            "invalid-app-id":
              "The mobile app identifier is not registed for the current project.",
            "invalid-user-token":
              "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
            "invalid-auth-event": "An internal AuthError has occurred.",
            "invalid-verification-code":
              "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.",
            "invalid-continue-uri":
              "The continue URL provided in the request is invalid.",
            "invalid-cordova-configuration":
              "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
            "invalid-custom-token":
              "The custom token format is incorrect. Please check the documentation.",
            "invalid-dynamic-link-domain":
              "The provided dynamic link domain is not configured or authorized for the current project.",
            "invalid-email": "The email address is badly formatted.",
            "invalid-emulator-scheme":
              "Emulator URL must start with a valid scheme (http:// or https://).",
            "invalid-api-key":
              "Your API key is invalid, please check you have copied it correctly.",
            "invalid-cert-hash":
              "The SHA-1 certificate hash provided is invalid.",
            "invalid-credential":
              "The supplied auth credential is malformed or has expired.",
            "invalid-message-payload":
              "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
            "invalid-multi-factor-session":
              "The request does not contain a valid proof of first factor successful sign-in.",
            "invalid-oauth-provider":
              "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",
            "invalid-oauth-client-id":
              "The OAuth client ID provided is either invalid or does not match the specified API key.",
            "unauthorized-domain":
              "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
            "invalid-action-code":
              "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",
            "wrong-password":
              "The password is invalid or the user does not have a password.",
            "invalid-persistence-type":
              "The specified persistence type is invalid. It can only be local, session or none.",
            "invalid-phone-number":
              "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
            "invalid-provider-id": "The specified provider ID is invalid.",
            "invalid-recipient-email":
              "The email corresponding to this action failed to send as the provided recipient email address is invalid.",
            "invalid-sender":
              "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
            "invalid-verification-id":
              "The verification ID used to create the phone auth credential is invalid.",
            "invalid-tenant-id": "The Auth instance's tenant ID is invalid.",
            "missing-android-pkg-name":
              "An Android Package Name must be provided if the Android App is required to be installed.",
            "auth-domain-config-required":
              "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",
            "missing-app-credential":
              "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
            "missing-verification-code":
              "The phone auth credential was created with an empty SMS verification code.",
            "missing-continue-uri":
              "A continue URL must be provided in the request.",
            "missing-iframe-start": "An internal AuthError has occurred.",
            "missing-ios-bundle-id":
              "An iOS Bundle ID must be provided if an App Store ID is provided.",
            "missing-or-invalid-nonce":
              "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
            "missing-multi-factor-info":
              "No second factor identifier is provided.",
            "missing-multi-factor-session":
              "The request is missing proof of first factor successful sign-in.",
            "missing-phone-number":
              "To send verification codes, provide a phone number for the recipient.",
            "missing-verification-id":
              "The phone auth credential was created with an empty verification ID.",
            "app-deleted": "This instance of FirebaseApp has been deleted.",
            "multi-factor-info-not-found":
              "The user does not have a second factor matching the identifier provided.",
            "multi-factor-auth-required":
              "Proof of ownership of a second factor is required to complete sign-in.",
            "account-exists-with-different-credential":
              "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
            "network-request-failed":
              "A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.",
            "no-auth-event": "An internal AuthError has occurred.",
            "no-such-provider":
              "User was not linked to an account with the given provider.",
            "null-user":
              "A null user object was provided as the argument for an operation which requires a non-null user object.",
            "operation-not-allowed":
              "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",
            "operation-not-supported-in-this-environment":
              'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
            "popup-blocked":
              "Unable to establish a connection with the popup. It may have been blocked by the browser.",
            "popup-closed-by-user":
              "The popup has been closed by the user before finalizing the operation.",
            "provider-already-linked":
              "User can only be linked to one identity for the given provider.",
            "quota-exceeded":
              "The project's quota for this operation has been exceeded.",
            "redirect-cancelled-by-user":
              "The redirect operation has been cancelled by the user before finalizing.",
            "redirect-operation-pending":
              "A redirect sign-in operation is already pending.",
            "rejected-credential":
              "The request contains malformed or mismatching credentials.",
            "second-factor-already-in-use":
              "The second factor is already enrolled on this account.",
            "maximum-second-factor-count-exceeded":
              "The maximum allowed number of second factors on a user has been exceeded.",
            "tenant-id-mismatch":
              "The provided tenant ID does not match the Auth instance's tenant ID",
            timeout: "The operation has timed out.",
            "user-token-expired":
              "The user's credential is no longer valid. The user must sign in again.",
            "too-many-requests":
              "We have blocked all requests from this device due to unusual activity. Try again later.",
            "unauthorized-continue-uri":
              "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",
            "unsupported-first-factor":
              "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.",
            "unsupported-persistence-type":
              "The current environment does not support the specified persistence type.",
            "unsupported-tenant-operation":
              "This operation is not supported in a multi-tenant context.",
            "unverified-email": "The operation requires a verified email.",
            "user-cancelled":
              "The user did not grant your application the permissions it requested.",
            "user-not-found":
              "There is no user record corresponding to this identifier. The user may have been deleted.",
            "user-disabled":
              "The user account has been disabled by an administrator.",
            "user-mismatch":
              "The supplied credentials do not correspond to the previously signed in user.",
            "user-signed-out": "",
            "weak-password": "The password must be 6 characters long or more.",
            "web-storage-unsupported":
              "This browser is not supported or 3rd party cookies and data may be disabled.",
            "already-initialized":
              "initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.",
          };
        },
        Ce = new L.LL("auth", "Firebase", {
          "dependent-sdk-initialized-before-auth":
            "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
        }),
        Ee = new q.Yd("@firebase/auth");
      function Qe(v, ...p) {
        Ee.logLevel <= q.in.ERROR &&
          Ee.error(`Auth (${ne.SDK_VERSION}): ${v}`, ...p);
      }
      function Ge(v, ...p) {
        throw bt(v, ...p);
      }
      function Ye(v, ...p) {
        return bt(v, ...p);
      }
      function bt(v, ...p) {
        if ("string" != typeof v) {
          const g = p[0],
            C = [...p.slice(1)];
          return (
            C[0] && (C[0].appName = v.name), v._errorFactory.create(g, ...C)
          );
        }
        return Ce.create(v, ...p);
      }
      function fe(v, p, ...g) {
        if (!v) throw bt(p, ...g);
      }
      function xt(v) {
        const p = "INTERNAL ASSERTION FAILED: " + v;
        throw (Qe(p), new Error(p));
      }
      function lt(v, p) {
        v || xt(p);
      }
      const ce = new Map();
      function se(v) {
        lt(v instanceof Function, "Expected a class definition");
        let p = ce.get(v);
        return p
          ? (lt(
              p instanceof v,
              "Instance stored in cache mismatched with class"
            ),
            p)
          : ((p = new v()), ce.set(v, p), p);
      }
      function ue() {
        var v;
        return (
          ("undefined" != typeof self &&
            (null === (v = self.location) || void 0 === v ? void 0 : v.href)) ||
          ""
        );
      }
      function J() {
        return "http:" === Ie() || "https:" === Ie();
      }
      function Ie() {
        var v;
        return (
          ("undefined" != typeof self &&
            (null === (v = self.location) || void 0 === v
              ? void 0
              : v.protocol)) ||
          null
        );
      }
      class Ve {
        constructor(p, g) {
          (this.shortDelay = p),
            (this.longDelay = g),
            lt(g > p, "Short delay should be less than long delay!"),
            (this.isMobile = (0, L.uI)() || (0, L.b$)());
        }
        get() {
          return "undefined" != typeof navigator &&
            navigator &&
            "onLine" in navigator &&
            "boolean" == typeof navigator.onLine &&
            (J() || (0, L.ru)() || "connection" in navigator) &&
            !navigator.onLine
            ? Math.min(5e3, this.shortDelay)
            : this.isMobile
            ? this.longDelay
            : this.shortDelay;
        }
      }
      function ze(v, p) {
        lt(v.emulator, "Emulator should always be set here");
        const { url: g } = v.emulator;
        return p ? `${g}${p.startsWith("/") ? p.slice(1) : p}` : g;
      }
      class Ke {
        static initialize(p, g, C) {
          (this.fetchImpl = p),
            g && (this.headersImpl = g),
            C && (this.responseImpl = C);
        }
        static fetch() {
          return this.fetchImpl
            ? this.fetchImpl
            : "undefined" != typeof self && "fetch" in self
            ? self.fetch
            : void xt(
                "Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
        static headers() {
          return this.headersImpl
            ? this.headersImpl
            : "undefined" != typeof self && "Headers" in self
            ? self.Headers
            : void xt(
                "Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
        static response() {
          return this.responseImpl
            ? this.responseImpl
            : "undefined" != typeof self && "Response" in self
            ? self.Response
            : void xt(
                "Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
      }
      const pn = {
          CREDENTIAL_MISMATCH: "custom-token-mismatch",
          MISSING_CUSTOM_TOKEN: "internal-error",
          INVALID_IDENTIFIER: "invalid-email",
          MISSING_CONTINUE_URI: "internal-error",
          INVALID_PASSWORD: "wrong-password",
          MISSING_PASSWORD: "internal-error",
          EMAIL_EXISTS: "email-already-in-use",
          PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
          INVALID_IDP_RESPONSE: "invalid-credential",
          INVALID_PENDING_TOKEN: "invalid-credential",
          FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
          MISSING_REQ_TYPE: "internal-error",
          EMAIL_NOT_FOUND: "user-not-found",
          RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
          EXPIRED_OOB_CODE: "expired-action-code",
          INVALID_OOB_CODE: "invalid-action-code",
          MISSING_OOB_CODE: "internal-error",
          CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
          INVALID_ID_TOKEN: "invalid-user-token",
          TOKEN_EXPIRED: "user-token-expired",
          USER_NOT_FOUND: "user-token-expired",
          TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
          INVALID_CODE: "invalid-verification-code",
          INVALID_SESSION_INFO: "invalid-verification-id",
          INVALID_TEMPORARY_PROOF: "invalid-credential",
          MISSING_SESSION_INFO: "missing-verification-id",
          SESSION_EXPIRED: "code-expired",
          MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
          UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
          INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
          ADMIN_ONLY_OPERATION: "admin-restricted-operation",
          INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",
          MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
          MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
          MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",
          SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
          SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
        },
        xr = new Ve(3e4, 6e4);
      function Gt(v, p) {
        return v.tenantId && !p.tenantId
          ? Object.assign(Object.assign({}, p), { tenantId: v.tenantId })
          : p;
      }
      function st(v, p, g, C) {
        return Rr.apply(this, arguments);
      }
      function Rr() {
        return (Rr = (0, o.Z)(function* (v, p, g, C, M = {}) {
          return ln(v, M, () => {
            let x = {},
              Z = {};
            C && ("GET" === p ? (Z = C) : (x = { body: JSON.stringify(C) }));
            const me = (0, L.xO)(
                Object.assign({ key: v.config.apiKey }, Z)
              ).slice(1),
              Se = new (Ke.headers())();
            return (
              Se.set("Content-Type", "application/json"),
              Se.set("X-Client-Version", v._getSdkClientVersion()),
              v.languageCode && Se.set("X-Firebase-Locale", v.languageCode),
              Ke.fetch()(
                No(v, v.config.apiHost, g, me),
                Object.assign(
                  { method: p, headers: Se, referrerPolicy: "no-referrer" },
                  x
                )
              )
            );
          });
        })).apply(this, arguments);
      }
      function ln(v, p, g) {
        return kn.apply(this, arguments);
      }
      function kn() {
        return (kn = (0, o.Z)(function* (v, p, g) {
          v._canInitEmulator = !1;
          const C = Object.assign(Object.assign({}, pn), p);
          try {
            const M = new Fo(v),
              x = yield Promise.race([g(), M.promise]);
            M.clearNetworkTimeout();
            const Z = yield x.json();
            if ("needConfirmation" in Z)
              throw Yi(v, "account-exists-with-different-credential", Z);
            if (x.ok && !("errorMessage" in Z)) return Z;
            {
              const Se = (x.ok ? Z.errorMessage : Z.error.message).split(
                " : "
              )[0];
              if ("FEDERATED_USER_ID_ALREADY_LINKED" === Se)
                throw Yi(v, "credential-already-in-use", Z);
              if ("EMAIL_EXISTS" === Se) throw Yi(v, "email-already-in-use", Z);
              Ge(v, C[Se] || Se.toLowerCase().replace(/[_\s]+/g, "-"));
            }
          } catch (M) {
            if (M instanceof L.ZR) throw M;
            Ge(v, "network-request-failed");
          }
        })).apply(this, arguments);
      }
      function On(v, p, g, C) {
        return Hs.apply(this, arguments);
      }
      function Hs() {
        return (Hs = (0, o.Z)(function* (v, p, g, C, M = {}) {
          const x = yield st(v, p, g, C, M);
          return (
            "mfaPendingCredential" in x &&
              Ge(v, "multi-factor-auth-required", { serverResponse: x }),
            x
          );
        })).apply(this, arguments);
      }
      function No(v, p, g, C) {
        const M = `${p}${g}?${C}`;
        return v.config.emulator
          ? ze(v.config, M)
          : `${v.config.apiScheme}://${M}`;
      }
      class Fo {
        constructor(p) {
          (this.auth = p),
            (this.timer = null),
            (this.promise = new Promise((g, C) => {
              this.timer = setTimeout(
                () => C(Ye(this.auth, "timeout")),
                xr.get()
              );
            }));
        }
        clearNetworkTimeout() {
          clearTimeout(this.timer);
        }
      }
      function Yi(v, p, g) {
        const C = { appName: v.name };
        g.email && (C.email = g.email),
          g.phoneNumber && (C.phoneNumber = g.phoneNumber);
        const M = Ye(v, p, C);
        return (M.customData._tokenResponse = g), M;
      }
      function as() {
        return (as = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:delete", p);
        })).apply(this, arguments);
      }
      function js(v, p) {
        return Be.apply(this, arguments);
      }
      function Be() {
        return (Be = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:update", p);
        })).apply(this, arguments);
      }
      function Pn(v, p) {
        return kr.apply(this, arguments);
      }
      function kr() {
        return (kr = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:lookup", p);
        })).apply(this, arguments);
      }
      function Mn(v) {
        if (v)
          try {
            const p = new Date(Number(v));
            if (!isNaN(p.getTime())) return p.toUTCString();
          } catch (p) {}
      }
      function wt() {
        return (wt = (0, o.Z)(function* (v, p = !1) {
          const g = (0, L.m9)(v),
            C = yield g.getIdToken(p),
            M = Nn(C);
          fe(M && M.exp && M.auth_time && M.iat, g.auth, "internal-error");
          const x = "object" == typeof M.firebase ? M.firebase : void 0,
            Z = null == x ? void 0 : x.sign_in_provider;
          return {
            claims: M,
            token: C,
            authTime: Mn(Ct(M.auth_time)),
            issuedAtTime: Mn(Ct(M.iat)),
            expirationTime: Mn(Ct(M.exp)),
            signInProvider: Z || null,
            signInSecondFactor:
              (null == x ? void 0 : x.sign_in_second_factor) || null,
          };
        })).apply(this, arguments);
      }
      function Ct(v) {
        return 1e3 * Number(v);
      }
      function Nn(v) {
        const [p, g, C] = v.split(".");
        if (void 0 === p || void 0 === g || void 0 === C)
          return Qe("JWT malformed, contained fewer than 3 sections"), null;
        try {
          const M = (0, L.tV)(g);
          return M
            ? JSON.parse(M)
            : (Qe("Failed to decode base64 JWT payload"), null);
        } catch (M) {
          return Qe("Caught error parsing JWT payload as JSON", M), null;
        }
      }
      function Te(v, p) {
        return We.apply(this, arguments);
      }
      function We() {
        return (We = (0, o.Z)(function* (v, p, g = !1) {
          if (g) return p;
          try {
            return yield p;
          } catch (C) {
            throw (
              (C instanceof L.ZR &&
                rd(C) &&
                v.auth.currentUser === v &&
                (yield v.auth.signOut()),
              C)
            );
          }
        })).apply(this, arguments);
      }
      function rd({ code: v }) {
        return "auth/user-disabled" === v || "auth/user-token-expired" === v;
      }
      class Lo {
        constructor(p) {
          (this.user = p),
            (this.isRunning = !1),
            (this.timerId = null),
            (this.errorBackoff = 3e4);
        }
        _start() {
          this.isRunning || ((this.isRunning = !0), this.schedule());
        }
        _stop() {
          !this.isRunning ||
            ((this.isRunning = !1),
            null !== this.timerId && clearTimeout(this.timerId));
        }
        getInterval(p) {
          var g;
          if (p) {
            const C = this.errorBackoff;
            return (
              (this.errorBackoff = Math.min(2 * this.errorBackoff, 96e4)), C
            );
          }
          {
            this.errorBackoff = 3e4;
            const M =
              (null !== (g = this.user.stsTokenManager.expirationTime) &&
              void 0 !== g
                ? g
                : 0) -
              Date.now() -
              3e5;
            return Math.max(0, M);
          }
        }
        schedule(p = !1) {
          var g = this;
          if (!this.isRunning) return;
          const C = this.getInterval(p);
          this.timerId = setTimeout(
            (0, o.Z)(function* () {
              yield g.iteration();
            }),
            C
          );
        }
        iteration() {
          var p = this;
          return (0, o.Z)(function* () {
            try {
              yield p.user.getIdToken(!0);
            } catch (g) {
              return void (
                "auth/network-request-failed" === g.code && p.schedule(!0)
              );
            }
            p.schedule();
          })();
        }
      }
      class Li {
        constructor(p, g) {
          (this.createdAt = p), (this.lastLoginAt = g), this._initializeTime();
        }
        _initializeTime() {
          (this.lastSignInTime = Mn(this.lastLoginAt)),
            (this.creationTime = Mn(this.createdAt));
        }
        _copy(p) {
          (this.createdAt = p.createdAt),
            (this.lastLoginAt = p.lastLoginAt),
            this._initializeTime();
        }
        toJSON() {
          return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
        }
      }
      function Pt(v) {
        return wi.apply(this, arguments);
      }
      function wi() {
        return (wi = (0, o.Z)(function* (v) {
          var p;
          const g = v.auth,
            C = yield v.getIdToken(),
            M = yield Te(v, Pn(g, { idToken: C }));
          fe(null == M ? void 0 : M.users.length, g, "internal-error");
          const x = M.users[0];
          v._notifyReloadListener(x);
          const Z = (
              null === (p = x.providerUserInfo) || void 0 === p
                ? void 0
                : p.length
            )
              ? V(x.providerUserInfo)
              : [],
            me = U(v.providerData, Z),
            He =
              !!v.isAnonymous &&
              !(
                (v.email && x.passwordHash) ||
                (null == me ? void 0 : me.length)
              ),
            $e = {
              uid: x.localId,
              displayName: x.displayName || null,
              photoURL: x.photoUrl || null,
              email: x.email || null,
              emailVerified: x.emailVerified || !1,
              phoneNumber: x.phoneNumber || null,
              tenantId: x.tenantId || null,
              providerData: me,
              metadata: new Li(x.createdAt, x.lastLoginAt),
              isAnonymous: He,
            };
          Object.assign(v, $e);
        })).apply(this, arguments);
      }
      function Ft() {
        return (Ft = (0, o.Z)(function* (v) {
          const p = (0, L.m9)(v);
          yield Pt(p),
            yield p.auth._persistUserIfCurrent(p),
            p.auth._notifyListenersIfCurrent(p);
        })).apply(this, arguments);
      }
      function U(v, p) {
        return [
          ...v.filter((C) => !p.some((M) => M.providerId === C.providerId)),
          ...p,
        ];
      }
      function V(v) {
        return v.map((p) => {
          var { providerId: g } = p,
            C = (0, re._T)(p, ["providerId"]);
          return {
            providerId: g,
            uid: C.rawId || "",
            displayName: C.displayName || null,
            email: C.email || null,
            phoneNumber: C.phoneNumber || null,
            photoURL: C.photoUrl || null,
          };
        });
      }
      function ae() {
        return (ae = (0, o.Z)(function* (v, p) {
          const g = yield ln(v, {}, () => {
            const C = (0, L.xO)({
                grant_type: "refresh_token",
                refresh_token: p,
              }).slice(1),
              { tokenApiHost: M, apiKey: x } = v.config,
              Z = No(v, M, "/v1/token", `key=${x}`);
            return Ke.fetch()(Z, {
              method: "POST",
              headers: {
                "X-Client-Version": v._getSdkClientVersion(),
                "Content-Type": "application/x-www-form-urlencoded",
              },
              body: C,
            });
          });
          return {
            accessToken: g.access_token,
            expiresIn: g.expires_in,
            refreshToken: g.refresh_token,
          };
        })).apply(this, arguments);
      }
      class ee {
        constructor() {
          (this.refreshToken = null),
            (this.accessToken = null),
            (this.expirationTime = null);
        }
        get isExpired() {
          return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
        }
        updateFromServerResponse(p) {
          fe(p.idToken, "internal-error"),
            fe(void 0 !== p.idToken, "internal-error"),
            fe(void 0 !== p.refreshToken, "internal-error");
          const g =
            "expiresIn" in p && void 0 !== p.expiresIn
              ? Number(p.expiresIn)
              : (function (v) {
                  const p = Nn(v);
                  return (
                    fe(p, "internal-error"),
                    fe(void 0 !== p.exp, "internal-error"),
                    fe(void 0 !== p.iat, "internal-error"),
                    Number(p.exp) - Number(p.iat)
                  );
                })(p.idToken);
          this.updateTokensAndExpiration(p.idToken, p.refreshToken, g);
        }
        getToken(p, g = !1) {
          var C = this;
          return (0, o.Z)(function* () {
            return (
              fe(!C.accessToken || C.refreshToken, p, "user-token-expired"),
              g || !C.accessToken || C.isExpired
                ? C.refreshToken
                  ? (yield C.refresh(p, C.refreshToken), C.accessToken)
                  : null
                : C.accessToken
            );
          })();
        }
        clearRefreshToken() {
          this.refreshToken = null;
        }
        refresh(p, g) {
          var C = this;
          return (0, o.Z)(function* () {
            const {
              accessToken: M,
              refreshToken: x,
              expiresIn: Z,
            } = yield (function (v, p) {
              return ae.apply(this, arguments);
            })(p, g);
            C.updateTokensAndExpiration(M, x, Number(Z));
          })();
        }
        updateTokensAndExpiration(p, g, C) {
          (this.refreshToken = g || null),
            (this.accessToken = p || null),
            (this.expirationTime = Date.now() + 1e3 * C);
        }
        static fromJSON(p, g) {
          const { refreshToken: C, accessToken: M, expirationTime: x } = g,
            Z = new ee();
          return (
            C &&
              (fe("string" == typeof C, "internal-error", { appName: p }),
              (Z.refreshToken = C)),
            M &&
              (fe("string" == typeof M, "internal-error", { appName: p }),
              (Z.accessToken = M)),
            x &&
              (fe("number" == typeof x, "internal-error", { appName: p }),
              (Z.expirationTime = x)),
            Z
          );
        }
        toJSON() {
          return {
            refreshToken: this.refreshToken,
            accessToken: this.accessToken,
            expirationTime: this.expirationTime,
          };
        }
        _assign(p) {
          (this.accessToken = p.accessToken),
            (this.refreshToken = p.refreshToken),
            (this.expirationTime = p.expirationTime);
        }
        _clone() {
          return Object.assign(new ee(), this.toJSON());
        }
        _performRefresh() {
          return xt("not implemented");
        }
      }
      function Me(v, p) {
        fe("string" == typeof v || void 0 === v, "internal-error", {
          appName: p,
        });
      }
      class Pe {
        constructor(p) {
          var { uid: g, auth: C, stsTokenManager: M } = p,
            x = (0, re._T)(p, ["uid", "auth", "stsTokenManager"]);
          (this.providerId = "firebase"),
            (this.emailVerified = !1),
            (this.isAnonymous = !1),
            (this.tenantId = null),
            (this.providerData = []),
            (this.proactiveRefresh = new Lo(this)),
            (this.reloadUserInfo = null),
            (this.reloadListener = null),
            (this.uid = g),
            (this.auth = C),
            (this.stsTokenManager = M),
            (this.accessToken = M.accessToken),
            (this.displayName = x.displayName || null),
            (this.email = x.email || null),
            (this.phoneNumber = x.phoneNumber || null),
            (this.photoURL = x.photoURL || null),
            (this.isAnonymous = x.isAnonymous || !1),
            (this.metadata = new Li(
              x.createdAt || void 0,
              x.lastLoginAt || void 0
            ));
        }
        getIdToken(p) {
          var g = this;
          return (0, o.Z)(function* () {
            const C = yield Te(g, g.stsTokenManager.getToken(g.auth, p));
            return (
              fe(C, g.auth, "internal-error"),
              g.accessToken !== C &&
                ((g.accessToken = C),
                yield g.auth._persistUserIfCurrent(g),
                g.auth._notifyListenersIfCurrent(g)),
              C
            );
          })();
        }
        getIdTokenResult(p) {
          return (function (v) {
            return wt.apply(this, arguments);
          })(this, p);
        }
        reload() {
          return (function (v) {
            return Ft.apply(this, arguments);
          })(this);
        }
        _assign(p) {
          this !== p &&
            (fe(this.uid === p.uid, this.auth, "internal-error"),
            (this.displayName = p.displayName),
            (this.photoURL = p.photoURL),
            (this.email = p.email),
            (this.emailVerified = p.emailVerified),
            (this.phoneNumber = p.phoneNumber),
            (this.isAnonymous = p.isAnonymous),
            (this.tenantId = p.tenantId),
            (this.providerData = p.providerData.map((g) =>
              Object.assign({}, g)
            )),
            this.metadata._copy(p.metadata),
            this.stsTokenManager._assign(p.stsTokenManager));
        }
        _clone(p) {
          return new Pe(
            Object.assign(Object.assign({}, this), {
              auth: p,
              stsTokenManager: this.stsTokenManager._clone(),
            })
          );
        }
        _onReload(p) {
          fe(!this.reloadListener, this.auth, "internal-error"),
            (this.reloadListener = p),
            this.reloadUserInfo &&
              (this._notifyReloadListener(this.reloadUserInfo),
              (this.reloadUserInfo = null));
        }
        _notifyReloadListener(p) {
          this.reloadListener
            ? this.reloadListener(p)
            : (this.reloadUserInfo = p);
        }
        _startProactiveRefresh() {
          this.proactiveRefresh._start();
        }
        _stopProactiveRefresh() {
          this.proactiveRefresh._stop();
        }
        _updateTokensIfNecessary(p, g = !1) {
          var C = this;
          return (0, o.Z)(function* () {
            let M = !1;
            p.idToken &&
              p.idToken !== C.stsTokenManager.accessToken &&
              (C.stsTokenManager.updateFromServerResponse(p), (M = !0)),
              g && (yield Pt(C)),
              yield C.auth._persistUserIfCurrent(C),
              M && C.auth._notifyListenersIfCurrent(C);
          })();
        }
        delete() {
          var p = this;
          return (0, o.Z)(function* () {
            const g = yield p.getIdToken();
            return (
              yield Te(
                p,
                (function (v, p) {
                  return as.apply(this, arguments);
                })(p.auth, { idToken: g })
              ),
              p.stsTokenManager.clearRefreshToken(),
              p.auth.signOut()
            );
          })();
        }
        toJSON() {
          return Object.assign(
            Object.assign(
              {
                uid: this.uid,
                email: this.email || void 0,
                emailVerified: this.emailVerified,
                displayName: this.displayName || void 0,
                isAnonymous: this.isAnonymous,
                photoURL: this.photoURL || void 0,
                phoneNumber: this.phoneNumber || void 0,
                tenantId: this.tenantId || void 0,
                providerData: this.providerData.map((p) =>
                  Object.assign({}, p)
                ),
                stsTokenManager: this.stsTokenManager.toJSON(),
                _redirectEventId: this._redirectEventId,
              },
              this.metadata.toJSON()
            ),
            { apiKey: this.auth.config.apiKey, appName: this.auth.name }
          );
        }
        get refreshToken() {
          return this.stsTokenManager.refreshToken || "";
        }
        static _fromJSON(p, g) {
          var C, M, x, Z, me, Se, ke, He;
          const $e = null !== (C = g.displayName) && void 0 !== C ? C : void 0,
            Cn = null !== (M = g.email) && void 0 !== M ? M : void 0,
            gr = null !== (x = g.phoneNumber) && void 0 !== x ? x : void 0,
            xe = null !== (Z = g.photoURL) && void 0 !== Z ? Z : void 0,
            Bn = null !== (me = g.tenantId) && void 0 !== me ? me : void 0,
            El =
              null !== (Se = g._redirectEventId) && void 0 !== Se ? Se : void 0,
            gi = null !== (ke = g.createdAt) && void 0 !== ke ? ke : void 0,
            Oe = null !== (He = g.lastLoginAt) && void 0 !== He ? He : void 0,
            {
              uid: Bp,
              emailVerified: Yr,
              isAnonymous: zi,
              providerData: b_,
              stsTokenManager: pa,
            } = g;
          fe(Bp && pa, p, "internal-error");
          const Up = ee.fromJSON(this.name, pa);
          fe("string" == typeof Bp, p, "internal-error"),
            Me($e, p.name),
            Me(Cn, p.name),
            fe("boolean" == typeof Yr, p, "internal-error"),
            fe("boolean" == typeof zi, p, "internal-error"),
            Me(gr, p.name),
            Me(xe, p.name),
            Me(Bn, p.name),
            Me(El, p.name),
            Me(gi, p.name),
            Me(Oe, p.name);
          const Hp = new Pe({
            uid: Bp,
            auth: p,
            email: Cn,
            emailVerified: Yr,
            displayName: $e,
            isAnonymous: zi,
            photoURL: xe,
            phoneNumber: gr,
            tenantId: Bn,
            stsTokenManager: Up,
            createdAt: gi,
            lastLoginAt: Oe,
          });
          return (
            b_ &&
              Array.isArray(b_) &&
              (Hp.providerData = b_.map((_r) => Object.assign({}, _r))),
            El && (Hp._redirectEventId = El),
            Hp
          );
        }
        static _fromIdTokenResponse(p, g, C = !1) {
          return (0, o.Z)(function* () {
            const M = new ee();
            M.updateFromServerResponse(g);
            const x = new Pe({
              uid: g.localId,
              auth: p,
              stsTokenManager: M,
              isAnonymous: C,
            });
            return yield Pt(x), x;
          })();
        }
      }
      const Rt = (() => {
        class v {
          constructor() {
            (this.type = "NONE"), (this.storage = {});
          }
          _isAvailable() {
            return (0, o.Z)(function* () {
              return !0;
            })();
          }
          _set(g, C) {
            var M = this;
            return (0, o.Z)(function* () {
              M.storage[g] = C;
            })();
          }
          _get(g) {
            var C = this;
            return (0, o.Z)(function* () {
              const M = C.storage[g];
              return void 0 === M ? null : M;
            })();
          }
          _remove(g) {
            var C = this;
            return (0, o.Z)(function* () {
              delete C.storage[g];
            })();
          }
          _addListener(g, C) {}
          _removeListener(g, C) {}
        }
        return (v.type = "NONE"), v;
      })();
      function ft(v, p, g) {
        return `firebase:${v}:${p}:${g}`;
      }
      class cn {
        constructor(p, g, C) {
          (this.persistence = p), (this.auth = g), (this.userKey = C);
          const { config: M, name: x } = this.auth;
          (this.fullUserKey = ft(this.userKey, M.apiKey, x)),
            (this.fullPersistenceKey = ft("persistence", M.apiKey, x)),
            (this.boundEventHandler = g._onStorageEvent.bind(g)),
            this.persistence._addListener(
              this.fullUserKey,
              this.boundEventHandler
            );
        }
        setCurrentUser(p) {
          return this.persistence._set(this.fullUserKey, p.toJSON());
        }
        getCurrentUser() {
          var p = this;
          return (0, o.Z)(function* () {
            const g = yield p.persistence._get(p.fullUserKey);
            return g ? Pe._fromJSON(p.auth, g) : null;
          })();
        }
        removeCurrentUser() {
          return this.persistence._remove(this.fullUserKey);
        }
        savePersistenceForRedirect() {
          return this.persistence._set(
            this.fullPersistenceKey,
            this.persistence.type
          );
        }
        setPersistence(p) {
          var g = this;
          return (0, o.Z)(function* () {
            if (g.persistence === p) return;
            const C = yield g.getCurrentUser();
            return (
              yield g.removeCurrentUser(),
              (g.persistence = p),
              C ? g.setCurrentUser(C) : void 0
            );
          })();
        }
        delete() {
          this.persistence._removeListener(
            this.fullUserKey,
            this.boundEventHandler
          );
        }
        static create(p, g, C = "authUser") {
          return (0, o.Z)(function* () {
            if (!g.length) return new cn(se(Rt), p, C);
            const M = (yield Promise.all(
              g.map(
                (function () {
                  var ke = (0, o.Z)(function* (He) {
                    if (yield He._isAvailable()) return He;
                  });
                  return function (He) {
                    return ke.apply(this, arguments);
                  };
                })()
              )
            )).filter((ke) => ke);
            let x = M[0] || se(Rt);
            const Z = ft(C, p.config.apiKey, p.name);
            let me = null;
            for (const ke of g)
              try {
                const He = yield ke._get(Z);
                if (He) {
                  const $e = Pe._fromJSON(p, He);
                  ke !== x && (me = $e), (x = ke);
                  break;
                }
              } catch (He) {}
            const Se = M.filter((ke) => ke._shouldAllowMigration);
            return x._shouldAllowMigration && Se.length
              ? ((x = Se[0]),
                me && (yield x._set(Z, me.toJSON())),
                yield Promise.all(
                  g.map(
                    (function () {
                      var ke = (0, o.Z)(function* (He) {
                        if (He !== x)
                          try {
                            yield He._remove(Z);
                          } catch ($e) {}
                      });
                      return function (He) {
                        return ke.apply(this, arguments);
                      };
                    })()
                  )
                ),
                new cn(x, p, C))
              : new cn(x, p, C);
          })();
        }
      }
      function Qn(v) {
        const p = v.toLowerCase();
        if (p.includes("opera/") || p.includes("opr/") || p.includes("opios/"))
          return "Opera";
        if (sd(p)) return "IEMobile";
        if (p.includes("msie") || p.includes("trident/")) return "IE";
        if (p.includes("edge/")) return "Edge";
        if (Jn(p)) return "Firefox";
        if (p.includes("silk/")) return "Silk";
        if (lc(p)) return "Blackberry";
        if (od(p)) return "Webos";
        if (Or(p)) return "Safari";
        if ((p.includes("chrome/") || Vo(p)) && !p.includes("edge/"))
          return "Chrome";
        if (Bo(p)) return "Android";
        {
          const C = v.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/);
          if (2 === (null == C ? void 0 : C.length)) return C[1];
        }
        return "Other";
      }
      function Jn(v = (0, L.z$)()) {
        return /firefox\//i.test(v);
      }
      function Or(v = (0, L.z$)()) {
        const p = v.toLowerCase();
        return (
          p.includes("safari/") &&
          !p.includes("chrome/") &&
          !p.includes("crios/") &&
          !p.includes("android")
        );
      }
      function Vo(v = (0, L.z$)()) {
        return /crios\//i.test(v);
      }
      function sd(v = (0, L.z$)()) {
        return /iemobile/i.test(v);
      }
      function Bo(v = (0, L.z$)()) {
        return /android/i.test(v);
      }
      function lc(v = (0, L.z$)()) {
        return /blackberry/i.test(v);
      }
      function od(v = (0, L.z$)()) {
        return /webos/i.test(v);
      }
      function un(v = (0, L.z$)()) {
        return /iphone|ipad|ipod/i.test(v);
      }
      function Vf(v = (0, L.z$)()) {
        return (
          un(v) || Bo(v) || od(v) || lc(v) || /windows phone/i.test(v) || sd(v)
        );
      }
      function Ae(v, p = []) {
        let g;
        switch (v) {
          case "Browser":
            g = Qn((0, L.z$)());
            break;
          case "Worker":
            g = `${Qn((0, L.z$)())}-${v}`;
            break;
          default:
            g = v;
        }
        const C = p.length ? p.join(",") : "FirebaseCore-web";
        return `${g}/JsCore/${ne.SDK_VERSION}/${C}`;
      }
      class _t {
        constructor(p, g) {
          (this.app = p),
            (this.config = g),
            (this.currentUser = null),
            (this.emulatorConfig = null),
            (this.operations = Promise.resolve()),
            (this.authStateSubscription = new oi(this)),
            (this.idTokenSubscription = new oi(this)),
            (this.redirectUser = null),
            (this.isProactiveRefreshEnabled = !1),
            (this._canInitEmulator = !0),
            (this._isInitialized = !1),
            (this._deleted = !1),
            (this._initializationPromise = null),
            (this._popupRedirectResolver = null),
            (this._errorFactory = Ce),
            (this.lastNotifiedUid = void 0),
            (this.languageCode = null),
            (this.tenantId = null),
            (this.settings = { appVerificationDisabledForTesting: !1 }),
            (this.frameworks = []),
            (this.name = p.name),
            (this.clientVersion = g.sdkClientVersion);
        }
        _initializeWithPersistence(p, g) {
          var C = this;
          return (
            g && (this._popupRedirectResolver = se(g)),
            (this._initializationPromise = this.queue(
              (0, o.Z)(function* () {
                var M;
                C._deleted ||
                  ((C.persistenceManager = yield cn.create(C, p)),
                  !C._deleted &&
                    ((null === (M = C._popupRedirectResolver) || void 0 === M
                      ? void 0
                      : M._shouldInitProactively) &&
                      (yield C._popupRedirectResolver._initialize(C)),
                    yield C.initializeCurrentUser(g),
                    !C._deleted && (C._isInitialized = !0)));
              })
            )),
            this._initializationPromise
          );
        }
        _onStorageEvent() {
          var p = this;
          return (0, o.Z)(function* () {
            if (p._deleted) return;
            const g = yield p.assertedPersistence.getCurrentUser();
            if (p.currentUser || g) {
              if (p.currentUser && g && p.currentUser.uid === g.uid)
                return (
                  p._currentUser._assign(g),
                  void (yield p.currentUser.getIdToken())
                );
              yield p._updateCurrentUser(g);
            }
          })();
        }
        initializeCurrentUser(p) {
          var g = this;
          return (0, o.Z)(function* () {
            var C;
            let M = yield g.assertedPersistence.getCurrentUser();
            if (p && g.config.authDomain) {
              yield g.getOrInitRedirectPersistenceManager();
              const x =
                  null === (C = g.redirectUser) || void 0 === C
                    ? void 0
                    : C._redirectEventId,
                Z = null == M ? void 0 : M._redirectEventId,
                me = yield g.tryRedirectSignIn(p);
              (!x || x === Z) &&
                (null == me ? void 0 : me.user) &&
                (M = me.user);
            }
            return M
              ? M._redirectEventId
                ? (fe(g._popupRedirectResolver, g, "argument-error"),
                  yield g.getOrInitRedirectPersistenceManager(),
                  g.redirectUser &&
                  g.redirectUser._redirectEventId === M._redirectEventId
                    ? g.directlySetCurrentUser(M)
                    : g.reloadAndSetCurrentUserOrClear(M))
                : g.reloadAndSetCurrentUserOrClear(M)
              : g.directlySetCurrentUser(null);
          })();
        }
        tryRedirectSignIn(p) {
          var g = this;
          return (0, o.Z)(function* () {
            let C = null;
            try {
              C = yield g._popupRedirectResolver._completeRedirectFn(g, p, !0);
            } catch (M) {
              yield g._setRedirectUser(null);
            }
            return C;
          })();
        }
        reloadAndSetCurrentUserOrClear(p) {
          var g = this;
          return (0, o.Z)(function* () {
            try {
              yield Pt(p);
            } catch (C) {
              if ("auth/network-request-failed" !== C.code)
                return g.directlySetCurrentUser(null);
            }
            return g.directlySetCurrentUser(p);
          })();
        }
        useDeviceLanguage() {
          this.languageCode = (function () {
            if ("undefined" == typeof navigator) return null;
            const v = navigator;
            return (v.languages && v.languages[0]) || v.language || null;
          })();
        }
        _delete() {
          var p = this;
          return (0, o.Z)(function* () {
            p._deleted = !0;
          })();
        }
        updateCurrentUser(p) {
          var g = this;
          return (0, o.Z)(function* () {
            const C = p ? (0, L.m9)(p) : null;
            return (
              C &&
                fe(
                  C.auth.config.apiKey === g.config.apiKey,
                  g,
                  "invalid-user-token"
                ),
              g._updateCurrentUser(C && C._clone(g))
            );
          })();
        }
        _updateCurrentUser(p) {
          var g = this;
          return (0, o.Z)(function* () {
            if (!g._deleted)
              return (
                p && fe(g.tenantId === p.tenantId, g, "tenant-id-mismatch"),
                g.queue(
                  (0, o.Z)(function* () {
                    yield g.directlySetCurrentUser(p), g.notifyAuthListeners();
                  })
                )
              );
          })();
        }
        signOut() {
          var p = this;
          return (0, o.Z)(function* () {
            return (
              (p.redirectPersistenceManager || p._popupRedirectResolver) &&
                (yield p._setRedirectUser(null)),
              p._updateCurrentUser(null)
            );
          })();
        }
        setPersistence(p) {
          var g = this;
          return this.queue(
            (0, o.Z)(function* () {
              yield g.assertedPersistence.setPersistence(se(p));
            })
          );
        }
        _getPersistence() {
          return this.assertedPersistence.persistence.type;
        }
        _updateErrorMap(p) {
          this._errorFactory = new L.LL("auth", "Firebase", p());
        }
        onAuthStateChanged(p, g, C) {
          return this.registerStateListener(
            this.authStateSubscription,
            p,
            g,
            C
          );
        }
        onIdTokenChanged(p, g, C) {
          return this.registerStateListener(this.idTokenSubscription, p, g, C);
        }
        toJSON() {
          var p;
          return {
            apiKey: this.config.apiKey,
            authDomain: this.config.authDomain,
            appName: this.name,
            currentUser:
              null === (p = this._currentUser) || void 0 === p
                ? void 0
                : p.toJSON(),
          };
        }
        _setRedirectUser(p, g) {
          var C = this;
          return (0, o.Z)(function* () {
            const M = yield C.getOrInitRedirectPersistenceManager(g);
            return null === p ? M.removeCurrentUser() : M.setCurrentUser(p);
          })();
        }
        getOrInitRedirectPersistenceManager(p) {
          var g = this;
          return (0, o.Z)(function* () {
            if (!g.redirectPersistenceManager) {
              const C = (p && se(p)) || g._popupRedirectResolver;
              fe(C, g, "argument-error"),
                (g.redirectPersistenceManager = yield cn.create(
                  g,
                  [se(C._redirectPersistence)],
                  "redirectUser"
                )),
                (g.redirectUser =
                  yield g.redirectPersistenceManager.getCurrentUser());
            }
            return g.redirectPersistenceManager;
          })();
        }
        _redirectUserForId(p) {
          var g = this;
          return (0, o.Z)(function* () {
            var C, M;
            return (
              g._isInitialized && (yield g.queue((0, o.Z)(function* () {}))),
              (null === (C = g._currentUser) || void 0 === C
                ? void 0
                : C._redirectEventId) === p
                ? g._currentUser
                : (null === (M = g.redirectUser) || void 0 === M
                    ? void 0
                    : M._redirectEventId) === p
                ? g.redirectUser
                : null
            );
          })();
        }
        _persistUserIfCurrent(p) {
          var g = this;
          return (0, o.Z)(function* () {
            if (p === g.currentUser)
              return g.queue(
                (0, o.Z)(function* () {
                  return g.directlySetCurrentUser(p);
                })
              );
          })();
        }
        _notifyListenersIfCurrent(p) {
          p === this.currentUser && this.notifyAuthListeners();
        }
        _key() {
          return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
        }
        _startProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !0),
            this.currentUser && this._currentUser._startProactiveRefresh();
        }
        _stopProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !1),
            this.currentUser && this._currentUser._stopProactiveRefresh();
        }
        get _currentUser() {
          return this.currentUser;
        }
        notifyAuthListeners() {
          var p, g;
          if (!this._isInitialized) return;
          this.idTokenSubscription.next(this.currentUser);
          const C =
            null !==
              (g =
                null === (p = this.currentUser) || void 0 === p
                  ? void 0
                  : p.uid) && void 0 !== g
              ? g
              : null;
          this.lastNotifiedUid !== C &&
            ((this.lastNotifiedUid = C),
            this.authStateSubscription.next(this.currentUser));
        }
        registerStateListener(p, g, C, M) {
          if (this._deleted) return () => {};
          const x = "function" == typeof g ? g : g.next.bind(g),
            Z = this._isInitialized
              ? Promise.resolve()
              : this._initializationPromise;
          return (
            fe(Z, this, "internal-error"),
            Z.then(() => x(this.currentUser)),
            "function" == typeof g ? p.addObserver(g, C, M) : p.addObserver(g)
          );
        }
        directlySetCurrentUser(p) {
          var g = this;
          return (0, o.Z)(function* () {
            g.currentUser &&
              g.currentUser !== p &&
              (g._currentUser._stopProactiveRefresh(),
              p && g.isProactiveRefreshEnabled && p._startProactiveRefresh()),
              (g.currentUser = p),
              p
                ? yield g.assertedPersistence.setCurrentUser(p)
                : yield g.assertedPersistence.removeCurrentUser();
          })();
        }
        queue(p) {
          return (
            (this.operations = this.operations.then(p, p)), this.operations
          );
        }
        get assertedPersistence() {
          return (
            fe(this.persistenceManager, this, "internal-error"),
            this.persistenceManager
          );
        }
        _logFramework(p) {
          !p ||
            this.frameworks.includes(p) ||
            (this.frameworks.push(p),
            this.frameworks.sort(),
            (this.clientVersion = Ae(
              this.config.clientPlatform,
              this._getFrameworks()
            )));
        }
        _getFrameworks() {
          return this.frameworks;
        }
        _getSdkClientVersion() {
          return this.clientVersion;
        }
      }
      function ct(v) {
        return (0, L.m9)(v);
      }
      class oi {
        constructor(p) {
          (this.auth = p),
            (this.observer = null),
            (this.addObserver = (0, L.ne)((g) => (this.observer = g)));
        }
        get next() {
          return (
            fe(this.observer, this.auth, "internal-error"),
            this.observer.next.bind(this.observer)
          );
        }
      }
      function vn(v) {
        const p = v.indexOf(":");
        return p < 0 ? "" : v.substr(0, p + 1);
      }
      function nn(v) {
        if (!v) return null;
        const p = Number(v);
        return isNaN(p) ? null : p;
      }
      class Ki {
        constructor(p, g) {
          (this.providerId = p), (this.signInMethod = g);
        }
        toJSON() {
          return xt("not implemented");
        }
        _getIdTokenResponse(p) {
          return xt("not implemented");
        }
        _linkToIdToken(p, g) {
          return xt("not implemented");
        }
        _getReauthenticationResolver(p) {
          return xt("not implemented");
        }
      }
      function ot(v, p) {
        return Nr.apply(this, arguments);
      }
      function Nr() {
        return (Nr = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:resetPassword", Gt(v, p));
        })).apply(this, arguments);
      }
      function ls(v, p) {
        return Wa.apply(this, arguments);
      }
      function Wa() {
        return (Wa = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:update", p);
        })).apply(this, arguments);
      }
      function Ya(v, p) {
        return Fn.apply(this, arguments);
      }
      function Fn() {
        return (Fn = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:update", Gt(v, p));
        })).apply(this, arguments);
      }
      function cs() {
        return (cs = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithPassword", Gt(v, p));
        })).apply(this, arguments);
      }
      function ai(v, p) {
        return kt.apply(this, arguments);
      }
      function kt() {
        return (kt = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:sendOobCode", Gt(v, p));
        })).apply(this, arguments);
      }
      function Bf(v, p) {
        return ad.apply(this, arguments);
      }
      function ad() {
        return (ad = (0, o.Z)(function* (v, p) {
          return ai(v, p);
        })).apply(this, arguments);
      }
      function Bi(v, p) {
        return Za.apply(this, arguments);
      }
      function Za() {
        return (Za = (0, o.Z)(function* (v, p) {
          return ai(v, p);
        })).apply(this, arguments);
      }
      function Uo(v, p) {
        return us.apply(this, arguments);
      }
      function us() {
        return (us = (0, o.Z)(function* (v, p) {
          return ai(v, p);
        })).apply(this, arguments);
      }
      function Xn(v, p) {
        return Kt.apply(this, arguments);
      }
      function Kt() {
        return (Kt = (0, o.Z)(function* (v, p) {
          return ai(v, p);
        })).apply(this, arguments);
      }
      function Qi() {
        return (Qi = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithEmailLink", Gt(v, p));
        })).apply(this, arguments);
      }
      function qa() {
        return (qa = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithEmailLink", Gt(v, p));
        })).apply(this, arguments);
      }
      class Fr extends Ki {
        constructor(p, g, C, M = null) {
          super("password", C),
            (this._email = p),
            (this._password = g),
            (this._tenantId = M);
        }
        static _fromEmailAndPassword(p, g) {
          return new Fr(p, g, "password");
        }
        static _fromEmailAndCode(p, g, C = null) {
          return new Fr(p, g, "emailLink", C);
        }
        toJSON() {
          return {
            email: this._email,
            password: this._password,
            signInMethod: this.signInMethod,
            tenantId: this._tenantId,
          };
        }
        static fromJSON(p) {
          const g = "string" == typeof p ? JSON.parse(p) : p;
          if (
            (null == g ? void 0 : g.email) &&
            (null == g ? void 0 : g.password)
          ) {
            if ("password" === g.signInMethod)
              return this._fromEmailAndPassword(g.email, g.password);
            if ("emailLink" === g.signInMethod)
              return this._fromEmailAndCode(g.email, g.password, g.tenantId);
          }
          return null;
        }
        _getIdTokenResponse(p) {
          var g = this;
          return (0, o.Z)(function* () {
            switch (g.signInMethod) {
              case "password":
                return (function (v, p) {
                  return cs.apply(this, arguments);
                })(p, {
                  returnSecureToken: !0,
                  email: g._email,
                  password: g._password,
                });
              case "emailLink":
                return (function (v, p) {
                  return Qi.apply(this, arguments);
                })(p, { email: g._email, oobCode: g._password });
              default:
                Ge(p, "internal-error");
            }
          })();
        }
        _linkToIdToken(p, g) {
          var C = this;
          return (0, o.Z)(function* () {
            switch (C.signInMethod) {
              case "password":
                return ls(p, {
                  idToken: g,
                  returnSecureToken: !0,
                  email: C._email,
                  password: C._password,
                });
              case "emailLink":
                return (function (v, p) {
                  return qa.apply(this, arguments);
                })(p, { idToken: g, email: C._email, oobCode: C._password });
              default:
                Ge(p, "internal-error");
            }
          })();
        }
        _getReauthenticationResolver(p) {
          return this._getIdTokenResponse(p);
        }
      }
      function li(v, p) {
        return Hi.apply(this, arguments);
      }
      function Hi() {
        return (Hi = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithIdp", Gt(v, p));
        })).apply(this, arguments);
      }
      class Lr extends Ki {
        constructor() {
          super(...arguments), (this.pendingToken = null);
        }
        static _fromParams(p) {
          const g = new Lr(p.providerId, p.signInMethod);
          return (
            p.idToken || p.accessToken
              ? (p.idToken && (g.idToken = p.idToken),
                p.accessToken && (g.accessToken = p.accessToken),
                p.nonce && !p.pendingToken && (g.nonce = p.nonce),
                p.pendingToken && (g.pendingToken = p.pendingToken))
              : p.oauthToken && p.oauthTokenSecret
              ? ((g.accessToken = p.oauthToken),
                (g.secret = p.oauthTokenSecret))
              : Ge("argument-error"),
            g
          );
        }
        toJSON() {
          return {
            idToken: this.idToken,
            accessToken: this.accessToken,
            secret: this.secret,
            nonce: this.nonce,
            pendingToken: this.pendingToken,
            providerId: this.providerId,
            signInMethod: this.signInMethod,
          };
        }
        static fromJSON(p) {
          const g = "string" == typeof p ? JSON.parse(p) : p,
            { providerId: C, signInMethod: M } = g,
            x = (0, re._T)(g, ["providerId", "signInMethod"]);
          if (!C || !M) return null;
          const Z = new Lr(C, M);
          return Object.assign(Z, x), Z;
        }
        _getIdTokenResponse(p) {
          return li(p, this.buildRequest());
        }
        _linkToIdToken(p, g) {
          const C = this.buildRequest();
          return (C.idToken = g), li(p, C);
        }
        _getReauthenticationResolver(p) {
          const g = this.buildRequest();
          return (g.autoCreate = !1), li(p, g);
        }
        buildRequest() {
          const p = { requestUri: "http://localhost", returnSecureToken: !0 };
          if (this.pendingToken) p.pendingToken = this.pendingToken;
          else {
            const g = {};
            this.idToken && (g.id_token = this.idToken),
              this.accessToken && (g.access_token = this.accessToken),
              this.secret && (g.oauth_token_secret = this.secret),
              (g.providerId = this.providerId),
              this.nonce && !this.pendingToken && (g.nonce = this.nonce),
              (p.postBody = (0, L.xO)(g));
          }
          return p;
        }
      }
      function Ug(v, p) {
        return cd.apply(this, arguments);
      }
      function cd() {
        return (cd = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:sendVerificationCode", Gt(v, p));
        })).apply(this, arguments);
      }
      function ud() {
        return (ud = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithPhoneNumber", Gt(v, p));
        })).apply(this, arguments);
      }
      function Uf() {
        return (Uf = (0, o.Z)(function* (v, p) {
          const g = yield On(
            v,
            "POST",
            "/v1/accounts:signInWithPhoneNumber",
            Gt(v, p)
          );
          if (g.temporaryProof)
            throw Yi(v, "account-exists-with-different-credential", g);
          return g;
        })).apply(this, arguments);
      }
      const fC = { USER_NOT_FOUND: "user-not-found" };
      function Hf() {
        return (Hf = (0, o.Z)(function* (v, p) {
          return On(
            v,
            "POST",
            "/v1/accounts:signInWithPhoneNumber",
            Gt(v, Object.assign(Object.assign({}, p), { operation: "REAUTH" })),
            fC
          );
        })).apply(this, arguments);
      }
      class Ho extends Ki {
        constructor(p) {
          super("phone", "phone"), (this.params = p);
        }
        static _fromVerification(p, g) {
          return new Ho({ verificationId: p, verificationCode: g });
        }
        static _fromTokenResponse(p, g) {
          return new Ho({ phoneNumber: p, temporaryProof: g });
        }
        _getIdTokenResponse(p) {
          return (function (v, p) {
            return ud.apply(this, arguments);
          })(p, this._makeVerificationRequest());
        }
        _linkToIdToken(p, g) {
          return (function (v, p) {
            return Uf.apply(this, arguments);
          })(p, Object.assign({ idToken: g }, this._makeVerificationRequest()));
        }
        _getReauthenticationResolver(p) {
          return (function (v, p) {
            return Hf.apply(this, arguments);
          })(p, this._makeVerificationRequest());
        }
        _makeVerificationRequest() {
          const {
            temporaryProof: p,
            phoneNumber: g,
            verificationId: C,
            verificationCode: M,
          } = this.params;
          return p && g
            ? { temporaryProof: p, phoneNumber: g }
            : { sessionInfo: C, code: M };
        }
        toJSON() {
          const p = { providerId: this.providerId };
          return (
            this.params.phoneNumber &&
              (p.phoneNumber = this.params.phoneNumber),
            this.params.temporaryProof &&
              (p.temporaryProof = this.params.temporaryProof),
            this.params.verificationCode &&
              (p.verificationCode = this.params.verificationCode),
            this.params.verificationId &&
              (p.verificationId = this.params.verificationId),
            p
          );
        }
        static fromJSON(p) {
          "string" == typeof p && (p = JSON.parse(p));
          const {
            verificationId: g,
            verificationCode: C,
            phoneNumber: M,
            temporaryProof: x,
          } = p;
          return C || g || M || x
            ? new Ho({
                verificationId: g,
                verificationCode: C,
                phoneNumber: M,
                temporaryProof: x,
              })
            : null;
        }
      }
      class cc {
        constructor(p) {
          var g, C, M, x, Z, me;
          const Se = (0, L.zd)((0, L.pd)(p)),
            ke = null !== (g = Se.apiKey) && void 0 !== g ? g : null,
            He = null !== (C = Se.oobCode) && void 0 !== C ? C : null,
            $e = (function (v) {
              switch (v) {
                case "recoverEmail":
                  return "RECOVER_EMAIL";
                case "resetPassword":
                  return "PASSWORD_RESET";
                case "signIn":
                  return "EMAIL_SIGNIN";
                case "verifyEmail":
                  return "VERIFY_EMAIL";
                case "verifyAndChangeEmail":
                  return "VERIFY_AND_CHANGE_EMAIL";
                case "revertSecondFactorAddition":
                  return "REVERT_SECOND_FACTOR_ADDITION";
                default:
                  return null;
              }
            })(null !== (M = Se.mode) && void 0 !== M ? M : null);
          fe(ke && He && $e, "argument-error"),
            (this.apiKey = ke),
            (this.operation = $e),
            (this.code = He),
            (this.continueUrl =
              null !== (x = Se.continueUrl) && void 0 !== x ? x : null),
            (this.languageCode =
              null !== (Z = Se.languageCode) && void 0 !== Z ? Z : null),
            (this.tenantId =
              null !== (me = Se.tenantId) && void 0 !== me ? me : null);
        }
        static parseLink(p) {
          const g = (function (v) {
            const p = (0, L.zd)((0, L.pd)(v)).link,
              g = p ? (0, L.zd)((0, L.pd)(p)).deep_link_id : null,
              C = (0, L.zd)((0, L.pd)(v)).deep_link_id;
            return (
              (C ? (0, L.zd)((0, L.pd)(C)).link : null) || C || g || p || v
            );
          })(p);
          try {
            return new cc(g);
          } catch (C) {
            return null;
          }
        }
      }
      let jf = (() => {
        class v {
          constructor() {
            this.providerId = v.PROVIDER_ID;
          }
          static credential(g, C) {
            return Fr._fromEmailAndPassword(g, C);
          }
          static credentialWithLink(g, C) {
            const M = cc.parseLink(C);
            return (
              fe(M, "argument-error"),
              Fr._fromEmailAndCode(g, M.code, M.tenantId)
            );
          }
        }
        return (
          (v.PROVIDER_ID = "password"),
          (v.EMAIL_PASSWORD_SIGN_IN_METHOD = "password"),
          (v.EMAIL_LINK_SIGN_IN_METHOD = "emailLink"),
          v
        );
      })();
      class ds {
        constructor(p) {
          (this.providerId = p),
            (this.defaultLanguageCode = null),
            (this.customParameters = {});
        }
        setDefaultLanguage(p) {
          this.defaultLanguageCode = p;
        }
        setCustomParameters(p) {
          return (this.customParameters = p), this;
        }
        getCustomParameters() {
          return this.customParameters;
        }
      }
      class $s extends ds {
        constructor() {
          super(...arguments), (this.scopes = []);
        }
        addScope(p) {
          return this.scopes.includes(p) || this.scopes.push(p), this;
        }
        getScopes() {
          return [...this.scopes];
        }
      }
      class hs extends $s {
        static credentialFromJSON(p) {
          const g = "string" == typeof p ? JSON.parse(p) : p;
          return (
            fe("providerId" in g && "signInMethod" in g, "argument-error"),
            Lr._fromParams(g)
          );
        }
        credential(p) {
          return this._credential(p);
        }
        _credential(p) {
          return (
            fe(p.idToken || p.accessToken, "argument-error"),
            Lr._fromParams(
              Object.assign(Object.assign({}, p), {
                providerId: this.providerId,
                signInMethod: this.providerId,
              })
            )
          );
        }
        static credentialFromResult(p) {
          return hs.oauthCredentialFromTaggedObject(p);
        }
        static credentialFromError(p) {
          return hs.oauthCredentialFromTaggedObject(p.customData || {});
        }
        static oauthCredentialFromTaggedObject({ _tokenResponse: p }) {
          if (!p) return null;
          const {
            oauthIdToken: g,
            oauthAccessToken: C,
            oauthTokenSecret: M,
            pendingToken: x,
            nonce: Z,
            providerId: me,
          } = p;
          if ((!C && !M && !g && !x) || !me) return null;
          try {
            return new hs(me)._credential({
              idToken: g,
              accessToken: C,
              rawNonce: Z,
              pendingToken: x,
            });
          } catch (Se) {
            return null;
          }
        }
      }
      let Hg = (() => {
          class v extends $s {
            constructor() {
              super("facebook.com");
            }
            static credential(g) {
              return Lr._fromParams({
                providerId: v.PROVIDER_ID,
                signInMethod: v.FACEBOOK_SIGN_IN_METHOD,
                accessToken: g,
              });
            }
            static credentialFromResult(g) {
              return v.credentialFromTaggedObject(g);
            }
            static credentialFromError(g) {
              return v.credentialFromTaggedObject(g.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: g }) {
              if (!g || !("oauthAccessToken" in g) || !g.oauthAccessToken)
                return null;
              try {
                return v.credential(g.oauthAccessToken);
              } catch (C) {
                return null;
              }
            }
          }
          return (
            (v.FACEBOOK_SIGN_IN_METHOD = "facebook.com"),
            (v.PROVIDER_ID = "facebook.com"),
            v
          );
        })(),
        dd = (() => {
          class v extends $s {
            constructor() {
              super("google.com"), this.addScope("profile");
            }
            static credential(g, C) {
              return Lr._fromParams({
                providerId: v.PROVIDER_ID,
                signInMethod: v.GOOGLE_SIGN_IN_METHOD,
                idToken: g,
                accessToken: C,
              });
            }
            static credentialFromResult(g) {
              return v.credentialFromTaggedObject(g);
            }
            static credentialFromError(g) {
              return v.credentialFromTaggedObject(g.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: g }) {
              if (!g) return null;
              const { oauthIdToken: C, oauthAccessToken: M } = g;
              if (!C && !M) return null;
              try {
                return v.credential(C, M);
              } catch (x) {
                return null;
              }
            }
          }
          return (
            (v.GOOGLE_SIGN_IN_METHOD = "google.com"),
            (v.PROVIDER_ID = "google.com"),
            v
          );
        })(),
        hd = (() => {
          class v extends $s {
            constructor() {
              super("github.com");
            }
            static credential(g) {
              return Lr._fromParams({
                providerId: v.PROVIDER_ID,
                signInMethod: v.GITHUB_SIGN_IN_METHOD,
                accessToken: g,
              });
            }
            static credentialFromResult(g) {
              return v.credentialFromTaggedObject(g);
            }
            static credentialFromError(g) {
              return v.credentialFromTaggedObject(g.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: g }) {
              if (!g || !("oauthAccessToken" in g) || !g.oauthAccessToken)
                return null;
              try {
                return v.credential(g.oauthAccessToken);
              } catch (C) {
                return null;
              }
            }
          }
          return (
            (v.GITHUB_SIGN_IN_METHOD = "github.com"),
            (v.PROVIDER_ID = "github.com"),
            v
          );
        })();
      class jo extends Ki {
        constructor(p, g) {
          super(p, p), (this.pendingToken = g);
        }
        _getIdTokenResponse(p) {
          return li(p, this.buildRequest());
        }
        _linkToIdToken(p, g) {
          const C = this.buildRequest();
          return (C.idToken = g), li(p, C);
        }
        _getReauthenticationResolver(p) {
          const g = this.buildRequest();
          return (g.autoCreate = !1), li(p, g);
        }
        toJSON() {
          return {
            signInMethod: this.signInMethod,
            providerId: this.providerId,
            pendingToken: this.pendingToken,
          };
        }
        static fromJSON(p) {
          const g = "string" == typeof p ? JSON.parse(p) : p,
            { providerId: C, signInMethod: M, pendingToken: x } = g;
          return C && M && x && C === M ? new jo(C, x) : null;
        }
        static _create(p, g) {
          return new jo(p, g);
        }
        buildRequest() {
          return {
            requestUri: "http://localhost",
            returnSecureToken: !0,
            pendingToken: this.pendingToken,
          };
        }
      }
      let Gf = (() => {
        class v extends $s {
          constructor() {
            super("twitter.com");
          }
          static credential(g, C) {
            return Lr._fromParams({
              providerId: v.PROVIDER_ID,
              signInMethod: v.TWITTER_SIGN_IN_METHOD,
              oauthToken: g,
              oauthTokenSecret: C,
            });
          }
          static credentialFromResult(g) {
            return v.credentialFromTaggedObject(g);
          }
          static credentialFromError(g) {
            return v.credentialFromTaggedObject(g.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: g }) {
            if (!g) return null;
            const { oauthAccessToken: C, oauthTokenSecret: M } = g;
            if (!C || !M) return null;
            try {
              return v.credential(C, M);
            } catch (x) {
              return null;
            }
          }
        }
        return (
          (v.TWITTER_SIGN_IN_METHOD = "twitter.com"),
          (v.PROVIDER_ID = "twitter.com"),
          v
        );
      })();
      function zf(v, p) {
        return uc.apply(this, arguments);
      }
      function uc() {
        return (uc = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signUp", Gt(v, p));
        })).apply(this, arguments);
      }
      class Si {
        constructor(p) {
          (this.user = p.user),
            (this.providerId = p.providerId),
            (this._tokenResponse = p._tokenResponse),
            (this.operationType = p.operationType);
        }
        static _fromIdTokenResponse(p, g, C, M = !1) {
          return (0, o.Z)(function* () {
            const x = yield Pe._fromIdTokenResponse(p, C, M),
              Z = $f(C);
            return new Si({
              user: x,
              providerId: Z,
              _tokenResponse: C,
              operationType: g,
            });
          })();
        }
        static _forOperation(p, g, C) {
          return (0, o.Z)(function* () {
            yield p._updateTokensIfNecessary(C, !0);
            const M = $f(C);
            return new Si({
              user: p,
              providerId: M,
              _tokenResponse: C,
              operationType: g,
            });
          })();
        }
      }
      function $f(v) {
        return v.providerId
          ? v.providerId
          : "phoneNumber" in v
          ? "phone"
          : null;
      }
      function Yf() {
        return (Yf = (0, o.Z)(function* (v) {
          var p;
          const g = ct(v);
          if (
            (yield g._initializationPromise,
            null === (p = g.currentUser) || void 0 === p
              ? void 0
              : p.isAnonymous)
          )
            return new Si({
              user: g.currentUser,
              providerId: null,
              operationType: "signIn",
            });
          const C = yield zf(g, { returnSecureToken: !0 }),
            M = yield Si._fromIdTokenResponse(g, "signIn", C, !0);
          return yield g._updateCurrentUser(M.user), M;
        })).apply(this, arguments);
      }
      class ci extends L.ZR {
        constructor(p, g, C, M) {
          var x;
          super(g.code, g.message),
            (this.operationType = C),
            (this.user = M),
            (this.name = "FirebaseError"),
            Object.setPrototypeOf(this, ci.prototype),
            (this.appName = p.name),
            (this.code = g.code),
            (this.tenantId =
              null !== (x = p.tenantId) && void 0 !== x ? x : void 0),
            (this.serverResponse = g.customData.serverResponse);
        }
        static _fromErrorAndOperation(p, g, C, M) {
          return new ci(p, g, C, M);
        }
      }
      function dc(v, p, g, C) {
        return (
          "reauthenticate" === p
            ? g._getReauthenticationResolver(v)
            : g._getIdTokenResponse(v)
        ).catch((x) => {
          throw "auth/multi-factor-auth-required" === x.code
            ? ci._fromErrorAndOperation(v, x, p, C)
            : x;
        });
      }
      function fd(v) {
        return new Set(v.map(({ providerId: p }) => p).filter((p) => !!p));
      }
      function pd() {
        return (pd = (0, o.Z)(function* (v, p) {
          const g = (0, L.m9)(v);
          yield Yt(!0, g, p);
          const { providerUserInfo: C } = yield js(g.auth, {
              idToken: yield g.getIdToken(),
              deleteProvider: [p],
            }),
            M = fd(C || []);
          return (
            (g.providerData = g.providerData.filter((x) =>
              M.has(x.providerId)
            )),
            M.has("phone") || (g.phoneNumber = null),
            yield g.auth._persistUserIfCurrent(g),
            g
          );
        })).apply(this, arguments);
      }
      function fc(v, p) {
        return md.apply(this, arguments);
      }
      function md() {
        return (md = (0, o.Z)(function* (v, p, g = !1) {
          const C = yield Te(
            v,
            p._linkToIdToken(v.auth, yield v.getIdToken()),
            g
          );
          return Si._forOperation(v, "link", C);
        })).apply(this, arguments);
      }
      function Yt(v, p, g) {
        return pc.apply(this, arguments);
      }
      function pc() {
        return (pc = (0, o.Z)(function* (v, p, g) {
          yield Pt(p);
          const M = !1 === v ? "provider-already-linked" : "no-such-provider";
          fe(fd(p.providerData).has(g) === v, p.auth, M);
        })).apply(this, arguments);
      }
      function Ys(v, p) {
        return gd.apply(this, arguments);
      }
      function gd() {
        return (gd = (0, o.Z)(function* (v, p, g = !1) {
          const { auth: C } = v,
            M = "reauthenticate";
          try {
            const x = yield Te(v, dc(C, M, p, v), g);
            fe(x.idToken, C, "internal-error");
            const Z = Nn(x.idToken);
            fe(Z, C, "internal-error");
            const { sub: me } = Z;
            return (
              fe(v.uid === me, C, "user-mismatch"), Si._forOperation(v, M, x)
            );
          } catch (x) {
            throw (
              ("auth/user-not-found" === (null == x ? void 0 : x.code) &&
                Ge(C, "user-mismatch"),
              x)
            );
          }
        })).apply(this, arguments);
      }
      function Qt(v, p) {
        return _d.apply(this, arguments);
      }
      function _d() {
        return (_d = (0, o.Z)(function* (v, p, g = !1) {
          const C = "signIn",
            M = yield dc(v, C, p),
            x = yield Si._fromIdTokenResponse(v, C, M);
          return g || (yield v._updateCurrentUser(x.user)), x;
        })).apply(this, arguments);
      }
      function mc(v, p) {
        return Go.apply(this, arguments);
      }
      function Go() {
        return (Go = (0, o.Z)(function* (v, p) {
          return Qt(ct(v), p);
        })).apply(this, arguments);
      }
      function Di(v, p) {
        return Qa.apply(this, arguments);
      }
      function Qa() {
        return (Qa = (0, o.Z)(function* (v, p) {
          const g = (0, L.m9)(v);
          return yield Yt(!1, g, p.providerId), fc(g, p);
        })).apply(this, arguments);
      }
      function gc(v, p) {
        return fs.apply(this, arguments);
      }
      function fs() {
        return (fs = (0, o.Z)(function* (v, p) {
          return Ys((0, L.m9)(v), p);
        })).apply(this, arguments);
      }
      function Mi(v, p) {
        return yd.apply(this, arguments);
      }
      function yd() {
        return (yd = (0, o.Z)(function* (v, p) {
          return On(v, "POST", "/v1/accounts:signInWithCustomToken", Gt(v, p));
        })).apply(this, arguments);
      }
      function zo() {
        return (zo = (0, o.Z)(function* (v, p) {
          const g = ct(v),
            C = yield Mi(g, { token: p, returnSecureToken: !0 }),
            M = yield Si._fromIdTokenResponse(g, "signIn", C);
          return yield g._updateCurrentUser(M.user), M;
        })).apply(this, arguments);
      }
      class hr {
        constructor(p, g) {
          (this.factorId = p),
            (this.uid = g.mfaEnrollmentId),
            (this.enrollmentTime = new Date(g.enrolledAt).toUTCString()),
            (this.displayName = g.displayName);
        }
        static _fromServerResponse(p, g) {
          return "phoneInfo" in g
            ? _c._fromServerResponse(p, g)
            : Ge(p, "internal-error");
        }
      }
      class _c extends hr {
        constructor(p) {
          super("phone", p), (this.phoneNumber = p.phoneInfo);
        }
        static _fromServerResponse(p, g) {
          return new _c(g);
        }
      }
      function $o(v, p, g) {
        var C;
        fe(
          (null === (C = g.url) || void 0 === C ? void 0 : C.length) > 0,
          v,
          "invalid-continue-uri"
        ),
          fe(
            void 0 === g.dynamicLinkDomain || g.dynamicLinkDomain.length > 0,
            v,
            "invalid-dynamic-link-domain"
          ),
          (p.continueUrl = g.url),
          (p.dynamicLinkDomain = g.dynamicLinkDomain),
          (p.canHandleCodeInApp = g.handleCodeInApp),
          g.iOS &&
            (fe(g.iOS.bundleId.length > 0, v, "missing-ios-bundle-id"),
            (p.iosBundleId = g.iOS.bundleId)),
          g.android &&
            (fe(
              g.android.packageName.length > 0,
              v,
              "missing-android-pkg-name"
            ),
            (p.androidInstallApp = g.android.installApp),
            (p.androidMinimumVersionCode = g.android.minimumVersion),
            (p.androidPackageName = g.android.packageName));
      }
      function vd() {
        return (vd = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v),
            M = { requestType: "PASSWORD_RESET", email: p };
          g && $o(C, M, g), yield Bi(C, M);
        })).apply(this, arguments);
      }
      function bd() {
        return (bd = (0, o.Z)(function* (v, p, g) {
          yield ot((0, L.m9)(v), { oobCode: p, newPassword: g });
        })).apply(this, arguments);
      }
      function Cd() {
        return (Cd = (0, o.Z)(function* (v, p) {
          yield Ya((0, L.m9)(v), { oobCode: p });
        })).apply(this, arguments);
      }
      function qf(v, p) {
        return Zs.apply(this, arguments);
      }
      function Zs() {
        return (Zs = (0, o.Z)(function* (v, p) {
          const g = (0, L.m9)(v),
            C = yield ot(g, { oobCode: p }),
            M = C.requestType;
          switch ((fe(M, g, "internal-error"), M)) {
            case "EMAIL_SIGNIN":
              break;
            case "VERIFY_AND_CHANGE_EMAIL":
              fe(C.newEmail, g, "internal-error");
              break;
            case "REVERT_SECOND_FACTOR_ADDITION":
              fe(C.mfaInfo, g, "internal-error");
            default:
              fe(C.email, g, "internal-error");
          }
          let x = null;
          return (
            C.mfaInfo && (x = hr._fromServerResponse(ct(g), C.mfaInfo)),
            {
              data: {
                email:
                  ("VERIFY_AND_CHANGE_EMAIL" === C.requestType
                    ? C.newEmail
                    : C.email) || null,
                previousEmail:
                  ("VERIFY_AND_CHANGE_EMAIL" === C.requestType
                    ? C.email
                    : C.newEmail) || null,
                multiFactorInfo: x,
              },
              operation: M,
            }
          );
        })).apply(this, arguments);
      }
      function yt() {
        return (yt = (0, o.Z)(function* (v, p) {
          const { data: g } = yield qf((0, L.m9)(v), p);
          return g.email;
        })).apply(this, arguments);
      }
      function Zt() {
        return (Zt = (0, o.Z)(function* (v, p, g) {
          const C = ct(v),
            M = yield zf(C, { returnSecureToken: !0, email: p, password: g }),
            x = yield Si._fromIdTokenResponse(C, "signIn", M);
          return yield C._updateCurrentUser(x.user), x;
        })).apply(this, arguments);
      }
      function ui() {
        return (ui = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v),
            M = { requestType: "EMAIL_SIGNIN", email: p };
          fe(g.handleCodeInApp, C, "argument-error"),
            g && $o(C, M, g),
            yield Uo(C, M);
        })).apply(this, arguments);
      }
      function Kf() {
        return (Kf = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v),
            M = jf.credentialWithLink(p, g || ue());
          return (
            fe(M._tenantId === (C.tenantId || null), C, "tenant-id-mismatch"),
            mc(C, M)
          );
        })).apply(this, arguments);
      }
      function zg(v, p) {
        return Wo.apply(this, arguments);
      }
      function Wo() {
        return (Wo = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:createAuthUri", Gt(v, p));
        })).apply(this, arguments);
      }
      function mn() {
        return (mn = (0, o.Z)(function* (v, p) {
          const C = {
              identifier: p,
              continueUri: J() ? ue() : "http://localhost",
            },
            { signinMethods: M } = yield zg((0, L.m9)(v), C);
          return M || [];
        })).apply(this, arguments);
      }
      function Sd() {
        return (Sd = (0, o.Z)(function* (v, p) {
          const g = (0, L.m9)(v),
            M = { requestType: "VERIFY_EMAIL", idToken: yield v.getIdToken() };
          p && $o(g.auth, M, p);
          const { email: x } = yield Bf(g.auth, M);
          x !== v.email && (yield v.reload());
        })).apply(this, arguments);
      }
      function Ti() {
        return (Ti = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v),
            x = {
              requestType: "VERIFY_AND_CHANGE_EMAIL",
              idToken: yield v.getIdToken(),
              newEmail: p,
            };
          g && $o(C.auth, x, g);
          const { email: Z } = yield Xn(C.auth, x);
          Z !== v.email && (yield v.reload());
        })).apply(this, arguments);
      }
      function _C(v, p) {
        return Cc.apply(this, arguments);
      }
      function Cc() {
        return (Cc = (0, o.Z)(function* (v, p) {
          return st(v, "POST", "/v1/accounts:update", p);
        })).apply(this, arguments);
      }
      function Dd() {
        return (Dd = (0, o.Z)(function* (v, { displayName: p, photoURL: g }) {
          if (void 0 === p && void 0 === g) return;
          const C = (0, L.m9)(v),
            x = {
              idToken: yield C.getIdToken(),
              displayName: p,
              photoUrl: g,
              returnSecureToken: !0,
            },
            Z = yield Te(C, _C(C.auth, x));
          (C.displayName = Z.displayName || null),
            (C.photoURL = Z.photoUrl || null);
          const me = C.providerData.find(
            ({ providerId: Se }) => "password" === Se
          );
          me && ((me.displayName = C.displayName), (me.photoURL = C.photoURL)),
            yield C._updateTokensIfNecessary(Z);
        })).apply(this, arguments);
      }
      function Id(v, p, g) {
        return Ks.apply(this, arguments);
      }
      function Ks() {
        return (Ks = (0, o.Z)(function* (v, p, g) {
          const { auth: C } = v,
            x = { idToken: yield v.getIdToken(), returnSecureToken: !0 };
          p && (x.email = p), g && (x.password = g);
          const Z = yield Te(v, ls(C, x));
          yield v._updateTokensIfNecessary(Z, !0);
        })).apply(this, arguments);
      }
      class Qs {
        constructor(p, g, C = {}) {
          (this.isNewUser = p), (this.providerId = g), (this.profile = C);
        }
      }
      class Ja extends Qs {
        constructor(p, g, C, M) {
          super(p, g, C), (this.username = M);
        }
      }
      class Xf extends Qs {
        constructor(p, g) {
          super(p, "facebook.com", g);
        }
      }
      class $g extends Ja {
        constructor(p, g) {
          super(
            p,
            "github.com",
            g,
            "string" == typeof (null == g ? void 0 : g.login)
              ? null == g
                ? void 0
                : g.login
              : null
          );
        }
      }
      class ep extends Qs {
        constructor(p, g) {
          super(p, "google.com", g);
        }
      }
      class Wg extends Ja {
        constructor(p, g, C) {
          super(p, "twitter.com", g, C);
        }
      }
      function Xa(v) {
        const { user: p, _tokenResponse: g } = v;
        return p.isAnonymous && !g
          ? { providerId: null, isNewUser: !1, profile: null }
          : (function (v) {
              var p, g;
              if (!v) return null;
              const { providerId: C } = v,
                M = v.rawUserInfo ? JSON.parse(v.rawUserInfo) : {},
                x =
                  v.isNewUser ||
                  "identitytoolkit#SignupNewUserResponse" === v.kind;
              if (!C && (null == v ? void 0 : v.idToken)) {
                const Z =
                  null ===
                    (g =
                      null === (p = Nn(v.idToken)) || void 0 === p
                        ? void 0
                        : p.firebase) || void 0 === g
                    ? void 0
                    : g.sign_in_provider;
                if (Z)
                  return new Qs(
                    x,
                    "anonymous" !== Z && "custom" !== Z ? Z : null
                  );
              }
              if (!C) return null;
              switch (C) {
                case "facebook.com":
                  return new Xf(x, M);
                case "github.com":
                  return new $g(x, M);
                case "google.com":
                  return new ep(x, M);
                case "twitter.com":
                  return new Wg(x, M, v.screenName || null);
                case "custom":
                case "anonymous":
                  return new Qs(x, null);
                default:
                  return new Qs(x, C, M);
              }
            })(g);
      }
      class Js {
        constructor(p, g) {
          (this.type = p), (this.credential = g);
        }
        static _fromIdtoken(p) {
          return new Js("enroll", p);
        }
        static _fromMfaPendingCredential(p) {
          return new Js("signin", p);
        }
        toJSON() {
          return {
            multiFactorSession: {
              ["enroll" === this.type ? "idToken" : "pendingCredential"]:
                this.credential,
            },
          };
        }
        static fromJSON(p) {
          var g, C;
          if (null == p ? void 0 : p.multiFactorSession) {
            if (
              null === (g = p.multiFactorSession) || void 0 === g
                ? void 0
                : g.pendingCredential
            )
              return Js._fromMfaPendingCredential(
                p.multiFactorSession.pendingCredential
              );
            if (
              null === (C = p.multiFactorSession) || void 0 === C
                ? void 0
                : C.idToken
            )
              return Js._fromIdtoken(p.multiFactorSession.idToken);
          }
          return null;
        }
      }
      class Ad {
        constructor(p, g, C) {
          (this.session = p), (this.hints = g), (this.signInResolver = C);
        }
        static _fromError(p, g) {
          const C = ct(p),
            M = (g.serverResponse.mfaInfo || []).map((Z) =>
              hr._fromServerResponse(C, Z)
            );
          fe(g.serverResponse.mfaPendingCredential, C, "internal-error");
          const x = Js._fromMfaPendingCredential(
            g.serverResponse.mfaPendingCredential
          );
          return new Ad(
            x,
            M,
            (function () {
              var Z = (0, o.Z)(function* (me) {
                const Se = yield me._process(C, x);
                delete g.serverResponse.mfaInfo,
                  delete g.serverResponse.mfaPendingCredential;
                const ke = Object.assign(Object.assign({}, g.serverResponse), {
                  idToken: Se.idToken,
                  refreshToken: Se.refreshToken,
                });
                switch (g.operationType) {
                  case "signIn":
                    const He = yield Si._fromIdTokenResponse(
                      C,
                      g.operationType,
                      ke
                    );
                    return yield C._updateCurrentUser(He.user), He;
                  case "reauthenticate":
                    return (
                      fe(g.user, C, "internal-error"),
                      Si._forOperation(g.user, g.operationType, ke)
                    );
                  default:
                    Ge(C, "internal-error");
                }
              });
              return function (me) {
                return Z.apply(this, arguments);
              };
            })()
          );
        }
        resolveSignIn(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return g.signInResolver(p);
          })();
        }
      }
      function wc(v, p) {
        return st(
          v,
          "POST",
          "/v2/accounts/mfaEnrollment:start",
          Object.assign({ tenantId: v.tenantId }, p)
        );
      }
      class el {
        constructor(p) {
          (this.user = p),
            (this.enrolledFactors = []),
            p._onReload((g) => {
              g.mfaInfo &&
                (this.enrolledFactors = g.mfaInfo.map((C) =>
                  hr._fromServerResponse(p.auth, C)
                ));
            });
        }
        static _fromUser(p) {
          return new el(p);
        }
        getSession() {
          var p = this;
          return (0, o.Z)(function* () {
            return Js._fromIdtoken(yield p.user.getIdToken());
          })();
        }
        enroll(p, g) {
          var C = this;
          return (0, o.Z)(function* () {
            const M = p,
              x = yield C.getSession(),
              Z = yield Te(C.user, M._process(C.user.auth, x, g));
            return yield C.user._updateTokensIfNecessary(Z), C.user.reload();
          })();
        }
        unenroll(p) {
          var g = this;
          return (0, o.Z)(function* () {
            const C = "string" == typeof p ? p : p.uid,
              M = yield g.user.getIdToken(),
              x = yield Te(
                g.user,
                (function (v, p) {
                  return st(
                    v,
                    "POST",
                    "/v2/accounts/mfaEnrollment:withdraw",
                    Object.assign({ tenantId: v.tenantId }, p)
                  );
                })(g.user.auth, { idToken: M, mfaEnrollmentId: C })
              );
            (g.enrolledFactors = g.enrolledFactors.filter(
              ({ uid: Z }) => Z !== C
            )),
              yield g.user._updateTokensIfNecessary(x);
            try {
              yield g.user.reload();
            } catch (Z) {
              if ("auth/user-token-expired" !== Z.code) throw Z;
            }
          })();
        }
      }
      const Dc = new WeakMap(),
        tr = "__sak";
      class tl {
        constructor(p, g) {
          (this.storage = p), (this.type = g);
        }
        _isAvailable() {
          try {
            return this.storage
              ? (this.storage.setItem(tr, "1"),
                this.storage.removeItem(tr),
                Promise.resolve(!0))
              : Promise.resolve(!1);
          } catch (p) {
            return Promise.resolve(!1);
          }
        }
        _set(p, g) {
          return this.storage.setItem(p, JSON.stringify(g)), Promise.resolve();
        }
        _get(p) {
          const g = this.storage.getItem(p);
          return Promise.resolve(g ? JSON.parse(g) : null);
        }
        _remove(p) {
          return this.storage.removeItem(p), Promise.resolve();
        }
      }
      const Ko = (() => {
          class v extends tl {
            constructor() {
              super(window.localStorage, "LOCAL"),
                (this.listeners = {}),
                (this.localCache = {}),
                (this.pollTimer = null),
                (this.safariLocalStorageNotSynced =
                  (function () {
                    const v = (0, L.z$)();
                    return Or(v) || un(v);
                  })() &&
                  (function () {
                    try {
                      return !(!window || window === window.top);
                    } catch (v) {
                      return !1;
                    }
                  })()),
                (this.fallbackToPolling = Vf()),
                (this._shouldAllowMigration = !0),
                (this.boundEventHandler = this.onStorageEvent.bind(this));
            }
            forAllChangedKeys(g) {
              for (const C of Object.keys(this.listeners)) {
                const M = this.storage.getItem(C),
                  x = this.localCache[C];
                M !== x && g(C, x, M);
              }
            }
            onStorageEvent(g, C = !1) {
              if (!g.key)
                return void this.forAllChangedKeys((me, Se, ke) => {
                  this.notifyListeners(me, ke);
                });
              const M = g.key;
              if (
                (C ? this.detachListener() : this.stopPolling(),
                this.safariLocalStorageNotSynced)
              ) {
                const me = this.storage.getItem(M);
                if (g.newValue !== me)
                  null !== g.newValue
                    ? this.storage.setItem(M, g.newValue)
                    : this.storage.removeItem(M);
                else if (this.localCache[M] === g.newValue && !C) return;
              }
              const x = () => {
                  const me = this.storage.getItem(M);
                  (!C && this.localCache[M] === me) ||
                    this.notifyListeners(M, me);
                },
                Z = this.storage.getItem(M);
              (0, L.w1)() &&
              10 === document.documentMode &&
              Z !== g.newValue &&
              g.newValue !== g.oldValue
                ? setTimeout(x, 10)
                : x();
            }
            notifyListeners(g, C) {
              this.localCache[g] = C;
              const M = this.listeners[g];
              if (M) for (const x of Array.from(M)) x(C && JSON.parse(C));
            }
            startPolling() {
              this.stopPolling(),
                (this.pollTimer = setInterval(() => {
                  this.forAllChangedKeys((g, C, M) => {
                    this.onStorageEvent(
                      new StorageEvent("storage", {
                        key: g,
                        oldValue: C,
                        newValue: M,
                      }),
                      !0
                    );
                  });
                }, 1e3));
            }
            stopPolling() {
              this.pollTimer &&
                (clearInterval(this.pollTimer), (this.pollTimer = null));
            }
            attachListener() {
              window.addEventListener("storage", this.boundEventHandler);
            }
            detachListener() {
              window.removeEventListener("storage", this.boundEventHandler);
            }
            _addListener(g, C) {
              0 === Object.keys(this.listeners).length &&
                (this.fallbackToPolling
                  ? this.startPolling()
                  : this.attachListener()),
                this.listeners[g] ||
                  ((this.listeners[g] = new Set()),
                  (this.localCache[g] = this.storage.getItem(g))),
                this.listeners[g].add(C);
            }
            _removeListener(g, C) {
              this.listeners[g] &&
                (this.listeners[g].delete(C),
                0 === this.listeners[g].size && delete this.listeners[g]),
                0 === Object.keys(this.listeners).length &&
                  (this.detachListener(), this.stopPolling());
            }
            _set(g, C) {
              var M = () => super._set,
                x = this;
              return (0, o.Z)(function* () {
                yield M().call(x, g, C), (x.localCache[g] = JSON.stringify(C));
              })();
            }
            _get(g) {
              var C = () => super._get,
                M = this;
              return (0, o.Z)(function* () {
                const x = yield C().call(M, g);
                return (M.localCache[g] = JSON.stringify(x)), x;
              })();
            }
            _remove(g) {
              var C = () => super._remove,
                M = this;
              return (0, o.Z)(function* () {
                yield C().call(M, g), delete M.localCache[g];
              })();
            }
          }
          return (v.type = "LOCAL"), v;
        })(),
        Xs = (() => {
          class v extends tl {
            constructor() {
              super(window.sessionStorage, "SESSION");
            }
            _addListener(g, C) {}
            _removeListener(g, C) {}
          }
          return (v.type = "SESSION"), v;
        })();
      let xd = (() => {
        class v {
          constructor(g) {
            (this.eventTarget = g),
              (this.handlersMap = {}),
              (this.boundEventHandler = this.handleEvent.bind(this));
          }
          static _getInstance(g) {
            const C = this.receivers.find((x) => x.isListeningto(g));
            if (C) return C;
            const M = new v(g);
            return this.receivers.push(M), M;
          }
          isListeningto(g) {
            return this.eventTarget === g;
          }
          handleEvent(g) {
            var C = this;
            return (0, o.Z)(function* () {
              const M = g,
                { eventId: x, eventType: Z, data: me } = M.data,
                Se = C.handlersMap[Z];
              if (!(null == Se ? void 0 : Se.size)) return;
              M.ports[0].postMessage({
                status: "ack",
                eventId: x,
                eventType: Z,
              });
              const ke = Array.from(Se).map(
                  (function () {
                    var $e = (0, o.Z)(function* (Cn) {
                      return Cn(M.origin, me);
                    });
                    return function (Cn) {
                      return $e.apply(this, arguments);
                    };
                  })()
                ),
                He = yield (function (v) {
                  return Promise.all(
                    v.map(
                      (function () {
                        var p = (0, o.Z)(function* (g) {
                          try {
                            return { fulfilled: !0, value: yield g };
                          } catch (C) {
                            return { fulfilled: !1, reason: C };
                          }
                        });
                        return function (g) {
                          return p.apply(this, arguments);
                        };
                      })()
                    )
                  );
                })(ke);
              M.ports[0].postMessage({
                status: "done",
                eventId: x,
                eventType: Z,
                response: He,
              });
            })();
          }
          _subscribe(g, C) {
            0 === Object.keys(this.handlersMap).length &&
              this.eventTarget.addEventListener(
                "message",
                this.boundEventHandler
              ),
              this.handlersMap[g] || (this.handlersMap[g] = new Set()),
              this.handlersMap[g].add(C);
          }
          _unsubscribe(g, C) {
            this.handlersMap[g] && C && this.handlersMap[g].delete(C),
              (!C || 0 === this.handlersMap[g].size) &&
                delete this.handlersMap[g],
              0 === Object.keys(this.handlersMap).length &&
                this.eventTarget.removeEventListener(
                  "message",
                  this.boundEventHandler
                );
          }
        }
        return (v.receivers = []), v;
      })();
      function Qo(v = "", p = 10) {
        let g = "";
        for (let C = 0; C < p; C++) g += Math.floor(10 * Math.random());
        return v + g;
      }
      class fr {
        constructor(p) {
          (this.target = p), (this.handlers = new Set());
        }
        removeMessageHandler(p) {
          p.messageChannel &&
            (p.messageChannel.port1.removeEventListener("message", p.onMessage),
            p.messageChannel.port1.close()),
            this.handlers.delete(p);
        }
        _send(p, g, C = 50) {
          var M = this;
          return (0, o.Z)(function* () {
            const x =
              "undefined" != typeof MessageChannel
                ? new MessageChannel()
                : null;
            if (!x) throw new Error("connection_unavailable");
            let Z, me;
            return new Promise((Se, ke) => {
              const He = Qo("", 20);
              x.port1.start();
              const $e = setTimeout(() => {
                ke(new Error("unsupported_event"));
              }, C);
              (me = {
                messageChannel: x,
                onMessage(Cn) {
                  const gr = Cn;
                  if (gr.data.eventId === He)
                    switch (gr.data.status) {
                      case "ack":
                        clearTimeout($e),
                          (Z = setTimeout(() => {
                            ke(new Error("timeout"));
                          }, 3e3));
                        break;
                      case "done":
                        clearTimeout(Z), Se(gr.data.response);
                        break;
                      default:
                        clearTimeout($e),
                          clearTimeout(Z),
                          ke(new Error("invalid_response"));
                    }
                },
              }),
                M.handlers.add(me),
                x.port1.addEventListener("message", me.onMessage),
                M.target.postMessage({ eventType: p, eventId: He, data: g }, [
                  x.port2,
                ]);
            }).finally(() => {
              me && M.removeMessageHandler(me);
            });
          })();
        }
      }
      function rn() {
        return window;
      }
      function Jo() {
        return (
          void 0 !== rn().WorkerGlobalScope &&
          "function" == typeof rn().importScripts
        );
      }
      function ip() {
        return (ip = (0, o.Z)(function* () {
          if (!(null == navigator ? void 0 : navigator.serviceWorker))
            return null;
          try {
            return (yield navigator.serviceWorker.ready).active;
          } catch (v) {
            return null;
          }
        })).apply(this, arguments);
      }
      const rl = "firebaseLocalStorageDb",
        sl = "firebaseLocalStorage",
        sp = "fbase_key";
      class Mc {
        constructor(p) {
          this.request = p;
        }
        toPromise() {
          return new Promise((p, g) => {
            this.request.addEventListener("success", () => {
              p(this.request.result);
            }),
              this.request.addEventListener("error", () => {
                g(this.request.error);
              });
          });
        }
      }
      function Rd(v, p) {
        return v
          .transaction([sl], p ? "readwrite" : "readonly")
          .objectStore(sl);
      }
      function Tc() {
        const v = indexedDB.open(rl, 1);
        return new Promise((p, g) => {
          v.addEventListener("error", () => {
            g(v.error);
          }),
            v.addEventListener("upgradeneeded", () => {
              const C = v.result;
              try {
                C.createObjectStore(sl, { keyPath: sp });
              } catch (M) {
                g(M);
              }
            }),
            v.addEventListener(
              "success",
              (0, o.Z)(function* () {
                const C = v.result;
                C.objectStoreNames.contains(sl)
                  ? p(C)
                  : (C.close(),
                    yield (function () {
                      const v = indexedDB.deleteDatabase(rl);
                      return new Mc(v).toPromise();
                    })(),
                    p(yield Tc()));
              })
            );
        });
      }
      function al(v, p, g) {
        return Xo.apply(this, arguments);
      }
      function Xo() {
        return (Xo = (0, o.Z)(function* (v, p, g) {
          const C = Rd(v, !0).put({ [sp]: p, value: g });
          return new Mc(C).toPromise();
        })).apply(this, arguments);
      }
      function Ii() {
        return (Ii = (0, o.Z)(function* (v, p) {
          const g = Rd(v, !1).get(p),
            C = yield new Mc(g).toPromise();
          return void 0 === C ? null : C.value;
        })).apply(this, arguments);
      }
      function Ln(v, p) {
        const g = Rd(v, !0).delete(p);
        return new Mc(g).toPromise();
      }
      const dn = (() => {
        class v {
          constructor() {
            (this.type = "LOCAL"),
              (this._shouldAllowMigration = !0),
              (this.listeners = {}),
              (this.localCache = {}),
              (this.pollTimer = null),
              (this.pendingWrites = 0),
              (this.receiver = null),
              (this.sender = null),
              (this.serviceWorkerReceiverAvailable = !1),
              (this.activeServiceWorker = null),
              (this._workerInitializationPromise =
                this.initializeServiceWorkerMessaging().then(
                  () => {},
                  () => {}
                ));
          }
          _openDb() {
            var g = this;
            return (0, o.Z)(function* () {
              return g.db || (g.db = yield Tc()), g.db;
            })();
          }
          _withRetries(g) {
            var C = this;
            return (0, o.Z)(function* () {
              let M = 0;
              for (;;)
                try {
                  const x = yield C._openDb();
                  return yield g(x);
                } catch (x) {
                  if (M++ > 3) throw x;
                  C.db && (C.db.close(), (C.db = void 0));
                }
            })();
          }
          initializeServiceWorkerMessaging() {
            var g = this;
            return (0, o.Z)(function* () {
              return Jo() ? g.initializeReceiver() : g.initializeSender();
            })();
          }
          initializeReceiver() {
            var g = this;
            return (0, o.Z)(function* () {
              (g.receiver = xd._getInstance(Jo() ? self : null)),
                g.receiver._subscribe(
                  "keyChanged",
                  (function () {
                    var C = (0, o.Z)(function* (M, x) {
                      return {
                        keyProcessed: (yield g._poll()).includes(x.key),
                      };
                    });
                    return function (M, x) {
                      return C.apply(this, arguments);
                    };
                  })()
                ),
                g.receiver._subscribe(
                  "ping",
                  (function () {
                    var C = (0, o.Z)(function* (M, x) {
                      return ["keyChanged"];
                    });
                    return function (M, x) {
                      return C.apply(this, arguments);
                    };
                  })()
                );
            })();
          }
          initializeSender() {
            var g = this;
            return (0, o.Z)(function* () {
              var C, M;
              if (
                ((g.activeServiceWorker = yield (function () {
                  return ip.apply(this, arguments);
                })()),
                !g.activeServiceWorker)
              )
                return;
              g.sender = new fr(g.activeServiceWorker);
              const x = yield g.sender._send("ping", {}, 800);
              !x ||
                ((null === (C = x[0]) || void 0 === C ? void 0 : C.fulfilled) &&
                  (null === (M = x[0]) || void 0 === M
                    ? void 0
                    : M.value.includes("keyChanged")) &&
                  (g.serviceWorkerReceiverAvailable = !0));
            })();
          }
          notifyServiceWorker(g) {
            var C = this;
            return (0, o.Z)(function* () {
              if (
                C.sender &&
                C.activeServiceWorker &&
                (function () {
                  var v;
                  return (
                    (null ===
                      (v =
                        null == navigator ? void 0 : navigator.serviceWorker) ||
                    void 0 === v
                      ? void 0
                      : v.controller) || null
                  );
                })() === C.activeServiceWorker
              )
                try {
                  yield C.sender._send(
                    "keyChanged",
                    { key: g },
                    C.serviceWorkerReceiverAvailable ? 800 : 50
                  );
                } catch (M) {}
            })();
          }
          _isAvailable() {
            return (0, o.Z)(function* () {
              try {
                if (!indexedDB) return !1;
                const g = yield Tc();
                return yield al(g, tr, "1"), yield Ln(g, tr), !0;
              } catch (g) {}
              return !1;
            })();
          }
          _withPendingWrite(g) {
            var C = this;
            return (0, o.Z)(function* () {
              C.pendingWrites++;
              try {
                yield g();
              } finally {
                C.pendingWrites--;
              }
            })();
          }
          _set(g, C) {
            var M = this;
            return (0, o.Z)(function* () {
              return M._withPendingWrite(
                (0, o.Z)(function* () {
                  return (
                    yield M._withRetries((x) => al(x, g, C)),
                    (M.localCache[g] = C),
                    M.notifyServiceWorker(g)
                  );
                })
              );
            })();
          }
          _get(g) {
            var C = this;
            return (0, o.Z)(function* () {
              const M = yield C._withRetries((x) =>
                (function (v, p) {
                  return Ii.apply(this, arguments);
                })(x, g)
              );
              return (C.localCache[g] = M), M;
            })();
          }
          _remove(g) {
            var C = this;
            return (0, o.Z)(function* () {
              return C._withPendingWrite(
                (0, o.Z)(function* () {
                  return (
                    yield C._withRetries((M) => Ln(M, g)),
                    delete C.localCache[g],
                    C.notifyServiceWorker(g)
                  );
                })
              );
            })();
          }
          _poll() {
            var g = this;
            return (0, o.Z)(function* () {
              const C = yield g._withRetries((Z) => {
                const me = Rd(Z, !1).getAll();
                return new Mc(me).toPromise();
              });
              if (!C) return [];
              if (0 !== g.pendingWrites) return [];
              const M = [],
                x = new Set();
              for (const { fbase_key: Z, value: me } of C)
                x.add(Z),
                  JSON.stringify(g.localCache[Z]) !== JSON.stringify(me) &&
                    (g.notifyListeners(Z, me), M.push(Z));
              for (const Z of Object.keys(g.localCache))
                g.localCache[Z] &&
                  !x.has(Z) &&
                  (g.notifyListeners(Z, null), M.push(Z));
              return M;
            })();
          }
          notifyListeners(g, C) {
            this.localCache[g] = C;
            const M = this.listeners[g];
            if (M) for (const x of Array.from(M)) x(C);
          }
          startPolling() {
            var g = this;
            this.stopPolling(),
              (this.pollTimer = setInterval(
                (0, o.Z)(function* () {
                  return g._poll();
                }),
                800
              ));
          }
          stopPolling() {
            this.pollTimer &&
              (clearInterval(this.pollTimer), (this.pollTimer = null));
          }
          _addListener(g, C) {
            0 === Object.keys(this.listeners).length && this.startPolling(),
              this.listeners[g] ||
                ((this.listeners[g] = new Set()), this._get(g)),
              this.listeners[g].add(C);
          }
          _removeListener(g, C) {
            this.listeners[g] &&
              (this.listeners[g].delete(C),
              0 === this.listeners[g].size && delete this.listeners[g]),
              0 === Object.keys(this.listeners).length && this.stopPolling();
          }
        }
        return (v.type = "LOCAL"), v;
      })();
      function EC(v, p) {
        return st(
          v,
          "POST",
          "/v2/accounts/mfaSignIn:start",
          Object.assign({ tenantId: v.tenantId }, p)
        );
      }
      function Od() {
        return (Od = (0, o.Z)(function* (v) {
          return (
            (yield st(v, "GET", "/v1/recaptchaParams")).recaptchaSiteKey || ""
          );
        })).apply(this, arguments);
      }
      function Pd(v) {
        return new Promise((p, g) => {
          const C = document.createElement("script");
          C.setAttribute("src", v),
            (C.onload = p),
            (C.onerror = (M) => {
              const x = Ye("internal-error");
              (x.customData = M), g(x);
            }),
            (C.type = "text/javascript"),
            (C.charset = "UTF-8"),
            (function () {
              var v, p;
              return null !==
                (p =
                  null === (v = document.getElementsByTagName("head")) ||
                  void 0 === v
                    ? void 0
                    : v[0]) && void 0 !== p
                ? p
                : document;
            })().appendChild(C);
        });
      }
      function ea(v) {
        return `__${v}${Math.floor(1e6 * Math.random())}`;
      }
      const to = 1e12;
      class ms {
        constructor(p) {
          (this.auth = p), (this.counter = to), (this._widgets = new Map());
        }
        render(p, g) {
          const C = this.counter;
          return (
            this._widgets.set(C, new no(p, this.auth.name, g || {})),
            this.counter++,
            C
          );
        }
        reset(p) {
          var g;
          const C = p || to;
          null === (g = this._widgets.get(C)) || void 0 === g || g.delete(),
            this._widgets.delete(C);
        }
        getResponse(p) {
          var g;
          return (
            (null === (g = this._widgets.get(p || to)) || void 0 === g
              ? void 0
              : g.getResponse()) || ""
          );
        }
        execute(p) {
          var g = this;
          return (0, o.Z)(function* () {
            var C;
            return (
              null === (C = g._widgets.get(p || to)) ||
                void 0 === C ||
                C.execute(),
              ""
            );
          })();
        }
      }
      class no {
        constructor(p, g, C) {
          (this.params = C),
            (this.timerId = null),
            (this.deleted = !1),
            (this.responseToken = null),
            (this.clickHandler = () => {
              this.execute();
            });
          const M = "string" == typeof p ? document.getElementById(p) : p;
          fe(M, "argument-error", { appName: g }),
            (this.container = M),
            (this.isVisible = "invisible" !== this.params.size),
            this.isVisible
              ? this.execute()
              : this.container.addEventListener("click", this.clickHandler);
        }
        getResponse() {
          return this.checkIfDeleted(), this.responseToken;
        }
        delete() {
          this.checkIfDeleted(),
            (this.deleted = !0),
            this.timerId && (clearTimeout(this.timerId), (this.timerId = null)),
            this.container.removeEventListener("click", this.clickHandler);
        }
        execute() {
          this.checkIfDeleted(),
            !this.timerId &&
              (this.timerId = window.setTimeout(() => {
                this.responseToken = (function (v) {
                  const p = [],
                    g =
                      "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
                  for (let C = 0; C < 50; C++)
                    p.push(g.charAt(Math.floor(Math.random() * g.length)));
                  return p.join("");
                })();
                const { callback: p, "expired-callback": g } = this.params;
                if (p)
                  try {
                    p(this.responseToken);
                  } catch (C) {}
                this.timerId = window.setTimeout(() => {
                  if (((this.timerId = null), (this.responseToken = null), g))
                    try {
                      g();
                    } catch (C) {}
                  this.isVisible && this.execute();
                }, 6e4);
              }, 500));
        }
        checkIfDeleted() {
          if (this.deleted)
            throw new Error("reCAPTCHA mock was already deleted!");
        }
      }
      const di = ea("rcb"),
        Ac = new Ve(3e4, 6e4);
      class op {
        constructor() {
          (this.hostLanguage = ""),
            (this.counter = 0),
            (this.librarySeparatelyLoaded = !!rn().grecaptcha);
        }
        load(p, g = "") {
          return (
            fe(
              (v = g).length <= 6 && /^\s*[a-zA-Z0-9\-]*\s*$/.test(v),
              p,
              "argument-error"
            ),
            this.shouldResolveImmediately(g)
              ? Promise.resolve(rn().grecaptcha)
              : new Promise((C, M) => {
                  const x = rn().setTimeout(() => {
                    M(Ye(p, "network-request-failed"));
                  }, Ac.get());
                  (rn()[di] = () => {
                    rn().clearTimeout(x), delete rn()[di];
                    const me = rn().grecaptcha;
                    if (!me) return void M(Ye(p, "internal-error"));
                    const Se = me.render;
                    (me.render = (ke, He) => {
                      const $e = Se(ke, He);
                      return this.counter++, $e;
                    }),
                      (this.hostLanguage = g),
                      C(me);
                  }),
                    Pd(
                      `https://www.google.com/recaptcha/api.js??${(0, L.xO)({
                        onload: di,
                        render: "explicit",
                        hl: g,
                      })}`
                    ).catch(() => {
                      clearTimeout(x), M(Ye(p, "internal-error"));
                    });
                })
          );
          var v;
        }
        clearedOneInstance() {
          this.counter--;
        }
        shouldResolveImmediately(p) {
          return (
            !!rn().grecaptcha &&
            (p === this.hostLanguage ||
              this.counter > 0 ||
              this.librarySeparatelyLoaded)
          );
        }
      }
      class Ai {
        load(p) {
          return (0, o.Z)(function* () {
            return new ms(p);
          })();
        }
        clearedOneInstance() {}
      }
      const lp = "recaptcha",
        Fd = { theme: "light", type: "image" };
      class hn {
        constructor(p, g = Object.assign({}, Fd), C) {
          (this.parameters = g),
            (this.type = lp),
            (this.destroyed = !1),
            (this.widgetId = null),
            (this.tokenChangeListeners = new Set()),
            (this.renderPromise = null),
            (this.recaptcha = null),
            (this.auth = ct(C)),
            (this.isInvisible = "invisible" === this.parameters.size),
            fe(
              "undefined" != typeof document,
              this.auth,
              "operation-not-supported-in-this-environment"
            );
          const M = "string" == typeof p ? document.getElementById(p) : p;
          fe(M, this.auth, "argument-error"),
            (this.container = M),
            (this.parameters.callback = this.makeTokenCallback(
              this.parameters.callback
            )),
            (this._recaptchaLoader = this.auth.settings
              .appVerificationDisabledForTesting
              ? new Ai()
              : new op()),
            this.validateStartingState();
        }
        verify() {
          var p = this;
          return (0, o.Z)(function* () {
            p.assertNotDestroyed();
            const g = yield p.render(),
              C = p.getAssertedRecaptcha();
            return (
              C.getResponse(g) ||
              new Promise((x) => {
                const Z = (me) => {
                  !me || (p.tokenChangeListeners.delete(Z), x(me));
                };
                p.tokenChangeListeners.add(Z), p.isInvisible && C.execute(g);
              })
            );
          })();
        }
        render() {
          try {
            this.assertNotDestroyed();
          } catch (p) {
            return Promise.reject(p);
          }
          return (
            this.renderPromise ||
              (this.renderPromise = this.makeRenderPromise().catch((p) => {
                throw ((this.renderPromise = null), p);
              })),
            this.renderPromise
          );
        }
        _reset() {
          this.assertNotDestroyed(),
            null !== this.widgetId &&
              this.getAssertedRecaptcha().reset(this.widgetId);
        }
        clear() {
          this.assertNotDestroyed(),
            (this.destroyed = !0),
            this._recaptchaLoader.clearedOneInstance(),
            this.isInvisible ||
              this.container.childNodes.forEach((p) => {
                this.container.removeChild(p);
              });
        }
        validateStartingState() {
          fe(!this.parameters.sitekey, this.auth, "argument-error"),
            fe(
              this.isInvisible || !this.container.hasChildNodes(),
              this.auth,
              "argument-error"
            ),
            fe(
              "undefined" != typeof document,
              this.auth,
              "operation-not-supported-in-this-environment"
            );
        }
        makeTokenCallback(p) {
          return (g) => {
            if (
              (this.tokenChangeListeners.forEach((C) => C(g)),
              "function" == typeof p)
            )
              p(g);
            else if ("string" == typeof p) {
              const C = rn()[p];
              "function" == typeof C && C(g);
            }
          };
        }
        assertNotDestroyed() {
          fe(!this.destroyed, this.auth, "internal-error");
        }
        makeRenderPromise() {
          var p = this;
          return (0, o.Z)(function* () {
            if ((yield p.init(), !p.widgetId)) {
              let g = p.container;
              if (!p.isInvisible) {
                const C = document.createElement("div");
                g.appendChild(C), (g = C);
              }
              p.widgetId = p.getAssertedRecaptcha().render(g, p.parameters);
            }
            return p.widgetId;
          })();
        }
        init() {
          var p = this;
          return (0, o.Z)(function* () {
            fe(J() && !Jo(), p.auth, "internal-error"),
              yield (function () {
                let v = null;
                return new Promise((p) => {
                  "complete" !== document.readyState
                    ? ((v = () => p()), window.addEventListener("load", v))
                    : p();
                }).catch((p) => {
                  throw (v && window.removeEventListener("load", v), p);
                });
              })(),
              (p.recaptcha = yield p._recaptchaLoader.load(
                p.auth,
                p.auth.languageCode || void 0
              ));
            const g = yield (function (v) {
              return Od.apply(this, arguments);
            })(p.auth);
            fe(g, p.auth, "internal-error"), (p.parameters.sitekey = g);
          })();
        }
        getAssertedRecaptcha() {
          return (
            fe(this.recaptcha, this.auth, "internal-error"), this.recaptcha
          );
        }
      }
      class Vd {
        constructor(p, g) {
          (this.verificationId = p), (this.onConfirmation = g);
        }
        confirm(p) {
          const g = Ho._fromVerification(this.verificationId, p);
          return this.onConfirmation(g);
        }
      }
      function Jg() {
        return (Jg = (0, o.Z)(function* (v, p, g) {
          const C = ct(v),
            M = yield ll(C, p, (0, L.m9)(g));
          return new Vd(M, (x) => mc(C, x));
        })).apply(this, arguments);
      }
      function cp() {
        return (cp = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v);
          yield Yt(!1, C, "phone");
          const M = yield ll(C.auth, p, (0, L.m9)(g));
          return new Vd(M, (x) => Di(C, x));
        })).apply(this, arguments);
      }
      function Bd() {
        return (Bd = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v),
            M = yield ll(C.auth, p, (0, L.m9)(g));
          return new Vd(M, (x) => gc(C, x));
        })).apply(this, arguments);
      }
      function ll(v, p, g) {
        return up.apply(this, arguments);
      }
      function up() {
        return (up = (0, o.Z)(function* (v, p, g) {
          var C;
          const M = yield g.verify();
          try {
            let x;
            if (
              (fe("string" == typeof M, v, "argument-error"),
              fe(g.type === lp, v, "argument-error"),
              (x = "string" == typeof p ? { phoneNumber: p } : p),
              "session" in x)
            ) {
              const Z = x.session;
              if ("phoneNumber" in x)
                return (
                  fe("enroll" === Z.type, v, "internal-error"),
                  (yield wc(v, {
                    idToken: Z.credential,
                    phoneEnrollmentInfo: {
                      phoneNumber: x.phoneNumber,
                      recaptchaToken: M,
                    },
                  })).phoneSessionInfo.sessionInfo
                );
              {
                fe("signin" === Z.type, v, "internal-error");
                const me =
                  (null === (C = x.multiFactorHint) || void 0 === C
                    ? void 0
                    : C.uid) || x.multiFactorUid;
                return (
                  fe(me, v, "missing-multi-factor-info"),
                  (yield EC(v, {
                    mfaPendingCredential: Z.credential,
                    mfaEnrollmentId: me,
                    phoneSignInInfo: { recaptchaToken: M },
                  })).phoneResponseInfo.sessionInfo
                );
              }
            }
            {
              const { sessionInfo: Z } = yield Ug(v, {
                phoneNumber: x.phoneNumber,
                recaptchaToken: M,
              });
              return Z;
            }
          } finally {
            g._reset();
          }
        })).apply(this, arguments);
      }
      function Ur() {
        return (Ur = (0, o.Z)(function* (v, p) {
          yield fc((0, L.m9)(v), p);
        })).apply(this, arguments);
      }
      let na = (() => {
        class v {
          constructor(g) {
            (this.providerId = v.PROVIDER_ID), (this.auth = ct(g));
          }
          verifyPhoneNumber(g, C) {
            return ll(this.auth, g, (0, L.m9)(C));
          }
          static credential(g, C) {
            return Ho._fromVerification(g, C);
          }
          static credentialFromResult(g) {
            return v.credentialFromTaggedObject(g);
          }
          static credentialFromError(g) {
            return v.credentialFromTaggedObject(g.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: g }) {
            if (!g) return null;
            const { phoneNumber: C, temporaryProof: M } = g;
            return C && M ? Ho._fromTokenResponse(C, M) : null;
          }
        }
        return (v.PROVIDER_ID = "phone"), (v.PHONE_SIGN_IN_METHOD = "phone"), v;
      })();
      function zt(v, p) {
        return p
          ? se(p)
          : (fe(v._popupRedirectResolver, v, "argument-error"),
            v._popupRedirectResolver);
      }
      class io extends Ki {
        constructor(p) {
          super("custom", "custom"), (this.params = p);
        }
        _getIdTokenResponse(p) {
          return li(p, this._buildIdpRequest());
        }
        _linkToIdToken(p, g) {
          return li(p, this._buildIdpRequest(g));
        }
        _getReauthenticationResolver(p) {
          return li(p, this._buildIdpRequest());
        }
        _buildIdpRequest(p) {
          const g = {
            requestUri: this.params.requestUri,
            sessionId: this.params.sessionId,
            postBody: this.params.postBody,
            tenantId: this.params.tenantId,
            pendingToken: this.params.pendingToken,
            returnSecureToken: !0,
            returnIdpCredential: !0,
          };
          return p && (g.idToken = p), g;
        }
      }
      function ro(v) {
        return Qt(v.auth, new io(v), v.bypassAuthState);
      }
      function wC(v) {
        const { auth: p, user: g } = v;
        return fe(g, p, "internal-error"), Ys(g, new io(v), v.bypassAuthState);
      }
      function hp(v) {
        return hi.apply(this, arguments);
      }
      function hi() {
        return (hi = (0, o.Z)(function* (v) {
          const { auth: p, user: g } = v;
          return (
            fe(g, p, "internal-error"), fc(g, new io(v), v.bypassAuthState)
          );
        })).apply(this, arguments);
      }
      class xi {
        constructor(p, g, C, M, x = !1) {
          (this.auth = p),
            (this.resolver = C),
            (this.user = M),
            (this.bypassAuthState = x),
            (this.pendingPromise = null),
            (this.eventManager = null),
            (this.filter = Array.isArray(g) ? g : [g]);
        }
        execute() {
          var p = this;
          return new Promise(
            (function () {
              var g = (0, o.Z)(function* (C, M) {
                p.pendingPromise = { resolve: C, reject: M };
                try {
                  (p.eventManager = yield p.resolver._initialize(p.auth)),
                    yield p.onExecution(),
                    p.eventManager.registerConsumer(p);
                } catch (x) {
                  p.reject(x);
                }
              });
              return function (C, M) {
                return g.apply(this, arguments);
              };
            })()
          );
        }
        onAuthEvent(p) {
          var g = this;
          return (0, o.Z)(function* () {
            const {
              urlResponse: C,
              sessionId: M,
              postBody: x,
              tenantId: Z,
              error: me,
              type: Se,
            } = p;
            if (me) return void g.reject(me);
            const ke = {
              auth: g.auth,
              requestUri: C,
              sessionId: M,
              tenantId: Z || void 0,
              postBody: x || void 0,
              user: g.user,
              bypassAuthState: g.bypassAuthState,
            };
            try {
              g.resolve(yield g.getIdpTask(Se)(ke));
            } catch (He) {
              g.reject(He);
            }
          })();
        }
        onError(p) {
          this.reject(p);
        }
        getIdpTask(p) {
          switch (p) {
            case "signInViaPopup":
            case "signInViaRedirect":
              return ro;
            case "linkViaPopup":
            case "linkViaRedirect":
              return hp;
            case "reauthViaPopup":
            case "reauthViaRedirect":
              return wC;
            default:
              Ge(this.auth, "internal-error");
          }
        }
        resolve(p) {
          lt(this.pendingPromise, "Pending promise was never set"),
            this.pendingPromise.resolve(p),
            this.unregisterAndCleanUp();
        }
        reject(p) {
          lt(this.pendingPromise, "Pending promise was never set"),
            this.pendingPromise.reject(p),
            this.unregisterAndCleanUp();
        }
        unregisterAndCleanUp() {
          this.eventManager && this.eventManager.unregisterConsumer(this),
            (this.pendingPromise = null),
            this.cleanUp();
        }
      }
      const so = new Ve(2e3, 1e4);
      function Hr() {
        return (Hr = (0, o.Z)(function* (v, p, g) {
          const C = ct(v);
          fe(p instanceof ds, v, "argument-error");
          const M = zt(C, g);
          return new _s(C, "signInViaPopup", p, M).executeNotNull();
        })).apply(this, arguments);
      }
      function ra() {
        return (ra = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v);
          fe(p instanceof ds, C.auth, "argument-error");
          const M = zt(C.auth, g);
          return new _s(C.auth, "reauthViaPopup", p, M, C).executeNotNull();
        })).apply(this, arguments);
      }
      function xc() {
        return (xc = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v);
          fe(p instanceof ds, C.auth, "argument-error");
          const M = zt(C.auth, g);
          return new _s(C.auth, "linkViaPopup", p, M, C).executeNotNull();
        })).apply(this, arguments);
      }
      let _s = (() => {
        class v extends xi {
          constructor(g, C, M, x, Z) {
            super(g, C, x, Z),
              (this.provider = M),
              (this.authWindow = null),
              (this.pollId = null),
              v.currentPopupAction && v.currentPopupAction.cancel(),
              (v.currentPopupAction = this);
          }
          executeNotNull() {
            var g = this;
            return (0, o.Z)(function* () {
              const C = yield g.execute();
              return fe(C, g.auth, "internal-error"), C;
            })();
          }
          onExecution() {
            var g = this;
            return (0, o.Z)(function* () {
              lt(
                1 === g.filter.length,
                "Popup operations only handle one event"
              );
              const C = Qo();
              (g.authWindow = yield g.resolver._openPopup(
                g.auth,
                g.provider,
                g.filter[0],
                C
              )),
                (g.authWindow.associatedEvent = C),
                g.resolver._originValidation(g.auth).catch((M) => {
                  g.reject(M);
                }),
                g.resolver._isIframeWebStorageSupported(g.auth, (M) => {
                  M || g.reject(Ye(g.auth, "web-storage-unsupported"));
                }),
                g.pollUserCancellation();
            })();
          }
          get eventId() {
            var g;
            return (
              (null === (g = this.authWindow) || void 0 === g
                ? void 0
                : g.associatedEvent) || null
            );
          }
          cancel() {
            this.reject(Ye(this.auth, "cancelled-popup-request"));
          }
          cleanUp() {
            this.authWindow && this.authWindow.close(),
              this.pollId && window.clearTimeout(this.pollId),
              (this.authWindow = null),
              (this.pollId = null),
              (v.currentPopupAction = null);
          }
          pollUserCancellation() {
            const g = () => {
              var C, M;
              this.pollId = (
                null ===
                  (M =
                    null === (C = this.authWindow) || void 0 === C
                      ? void 0
                      : C.window) || void 0 === M
                  ? void 0
                  : M.closed
              )
                ? window.setTimeout(() => {
                    (this.pollId = null),
                      this.reject(Ye(this.auth, "popup-closed-by-user"));
                  }, 2e3)
                : window.setTimeout(g, so.get());
            };
            g();
          }
        }
        return (v.currentPopupAction = null), v;
      })();
      const Tn = new Map();
      class Ud extends xi {
        constructor(p, g, C = !1) {
          super(
            p,
            [
              "signInViaRedirect",
              "linkViaRedirect",
              "reauthViaRedirect",
              "unknown",
            ],
            g,
            void 0,
            C
          ),
            (this.eventId = null);
        }
        execute() {
          var p = () => super.execute,
            g = this;
          return (0, o.Z)(function* () {
            let C = Tn.get(g.auth._key());
            if (!C) {
              try {
                const x = (yield (function (v, p) {
                  return Hd.apply(this, arguments);
                })(g.resolver, g.auth))
                  ? yield p().call(g)
                  : null;
                C = () => Promise.resolve(x);
              } catch (M) {
                C = () => Promise.reject(M);
              }
              Tn.set(g.auth._key(), C);
            }
            return C();
          })();
        }
        onAuthEvent(p) {
          var g = () => super.onAuthEvent,
            C = this;
          return (0, o.Z)(function* () {
            if ("signInViaRedirect" === p.type) return g().call(C, p);
            if ("unknown" !== p.type) {
              if (p.eventId) {
                const M = yield C.auth._redirectUserForId(p.eventId);
                if (M) return (C.user = M), g().call(C, p);
                C.resolve(null);
              }
            } else C.resolve(null);
          })();
        }
        onExecution() {
          return (0, o.Z)(function* () {})();
        }
        cleanUp() {}
      }
      function Hd() {
        return (Hd = (0, o.Z)(function* (v, p) {
          const g = ys(p),
            C = "true" === (yield Gi(v)._get(g));
          return yield Gi(v)._remove(g), C;
        })).apply(this, arguments);
      }
      function ir(v, p) {
        return kc.apply(this, arguments);
      }
      function kc() {
        return (kc = (0, o.Z)(function* (v, p) {
          return Gi(v)._set(ys(p), "true");
        })).apply(this, arguments);
      }
      function Gi(v) {
        return se(v._redirectPersistence);
      }
      function ys(v) {
        return ft("pendingRedirect", v.config.apiKey, v.name);
      }
      function oo() {
        return (oo = (0, o.Z)(function* (v, p, g) {
          const C = ct(v);
          fe(p instanceof ds, v, "argument-error");
          const M = zt(C, g);
          return yield ir(M, C), M._openRedirect(C, p, "signInViaRedirect");
        })).apply(this, arguments);
      }
      function pr() {
        return (pr = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v);
          fe(p instanceof ds, C.auth, "argument-error");
          const M = zt(C.auth, g);
          yield ir(M, C.auth);
          const x = yield ao(C);
          return M._openRedirect(C.auth, p, "reauthViaRedirect", x);
        })).apply(this, arguments);
      }
      function zd() {
        return (zd = (0, o.Z)(function* (v, p, g) {
          const C = (0, L.m9)(v);
          fe(p instanceof ds, C.auth, "argument-error");
          const M = zt(C.auth, g);
          yield Yt(!1, C, p.providerId), yield ir(M, C.auth);
          const x = yield ao(C);
          return M._openRedirect(C.auth, p, "linkViaRedirect", x);
        })).apply(this, arguments);
      }
      function Oc() {
        return (Oc = (0, o.Z)(function* (v, p) {
          return yield ct(v)._initializationPromise, In(v, p, !1);
        })).apply(this, arguments);
      }
      function In(v, p) {
        return Pc.apply(this, arguments);
      }
      function Pc() {
        return (Pc = (0, o.Z)(function* (v, p, g = !1) {
          const C = ct(v),
            M = zt(C, p),
            Z = yield new Ud(C, M, g).execute();
          return (
            Z &&
              !g &&
              (delete Z.user._redirectEventId,
              yield C._persistUserIfCurrent(Z.user),
              yield C._setRedirectUser(null, p)),
            Z
          );
        })).apply(this, arguments);
      }
      function ao(v) {
        return lo.apply(this, arguments);
      }
      function lo() {
        return (lo = (0, o.Z)(function* (v) {
          const p = Qo(`${v.uid}:::`);
          return (
            (v._redirectEventId = p),
            yield v.auth._setRedirectUser(v),
            yield v.auth._persistUserIfCurrent(v),
            p
          );
        })).apply(this, arguments);
      }
      class gp {
        constructor(p) {
          (this.auth = p),
            (this.cachedEventUids = new Set()),
            (this.consumers = new Set()),
            (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1),
            (this.lastProcessedEventTime = Date.now());
        }
        registerConsumer(p) {
          this.consumers.add(p),
            this.queuedRedirectEvent &&
              this.isEventForConsumer(this.queuedRedirectEvent, p) &&
              (this.sendToConsumer(this.queuedRedirectEvent, p),
              this.saveEventToCache(this.queuedRedirectEvent),
              (this.queuedRedirectEvent = null));
        }
        unregisterConsumer(p) {
          this.consumers.delete(p);
        }
        onEvent(p) {
          if (this.hasEventBeenHandled(p)) return !1;
          let g = !1;
          return (
            this.consumers.forEach((C) => {
              this.isEventForConsumer(p, C) &&
                ((g = !0), this.sendToConsumer(p, C), this.saveEventToCache(p));
            }),
            this.hasHandledPotentialRedirect ||
              !(function (v) {
                switch (v.type) {
                  case "signInViaRedirect":
                  case "linkViaRedirect":
                  case "reauthViaRedirect":
                    return !0;
                  case "unknown":
                    return oa(v);
                  default:
                    return !1;
                }
              })(p) ||
              ((this.hasHandledPotentialRedirect = !0),
              g || ((this.queuedRedirectEvent = p), (g = !0))),
            g
          );
        }
        sendToConsumer(p, g) {
          var C;
          if (p.error && !oa(p)) {
            const M =
              (null === (C = p.error.code) || void 0 === C
                ? void 0
                : C.split("auth/")[1]) || "internal-error";
            g.onError(Ye(this.auth, M));
          } else g.onAuthEvent(p);
        }
        isEventForConsumer(p, g) {
          const C =
            null === g.eventId || (!!p.eventId && p.eventId === g.eventId);
          return g.filter.includes(p.type) && C;
        }
        hasEventBeenHandled(p) {
          return (
            Date.now() - this.lastProcessedEventTime >= 6e5 &&
              this.cachedEventUids.clear(),
            this.cachedEventUids.has(qt(p))
          );
        }
        saveEventToCache(p) {
          this.cachedEventUids.add(qt(p)),
            (this.lastProcessedEventTime = Date.now());
        }
      }
      function qt(v) {
        return [v.type, v.eventId, v.sessionId, v.tenantId]
          .filter((p) => p)
          .join("-");
      }
      function oa({ type: v, error: p }) {
        return (
          "unknown" === v &&
          "auth/no-auth-event" === (null == p ? void 0 : p.code)
        );
      }
      function jr(v) {
        return co.apply(this, arguments);
      }
      function co() {
        return (co = (0, o.Z)(function* (v, p = {}) {
          return st(v, "GET", "/v1/projects", p);
        })).apply(this, arguments);
      }
      const $d = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
        Wd = /^https?/;
      function vp() {
        return (vp = (0, o.Z)(function* (v) {
          if (v.config.emulator) return;
          const { authorizedDomains: p } = yield jr(v);
          for (const g of p)
            try {
              if (aa(g)) return;
            } catch (C) {}
          Ge(v, "unauthorized-domain");
        })).apply(this, arguments);
      }
      function aa(v) {
        const p = ue(),
          { protocol: g, hostname: C } = new URL(p);
        if (v.startsWith("chrome-extension://")) {
          const Z = new URL(v);
          return "" === Z.hostname && "" === C
            ? "chrome-extension:" === g &&
                v.replace("chrome-extension://", "") ===
                  p.replace("chrome-extension://", "")
            : "chrome-extension:" === g && Z.hostname === C;
        }
        if (!Wd.test(g)) return !1;
        if ($d.test(v)) return C === v;
        const M = v.replace(/\./g, "\\.");
        return new RegExp("^(.+\\." + M + "|" + M + ")$", "i").test(C);
      }
      const Gr = new Ve(3e4, 6e4);
      function fl() {
        const v = rn().___jsl;
        if (null == v ? void 0 : v.H)
          for (const p of Object.keys(v.H))
            if (
              ((v.H[p].r = v.H[p].r || []),
              (v.H[p].L = v.H[p].L || []),
              (v.H[p].r = [...v.H[p].L]),
              v.CP)
            )
              for (let g = 0; g < v.CP.length; g++) v.CP[g] = null;
      }
      let Nc = null;
      function bs(v) {
        return (
          (Nc =
            Nc ||
            (function (v) {
              return new Promise((p, g) => {
                var C, M, x;
                function Z() {
                  fl(),
                    gapi.load("gapi.iframes", {
                      callback: () => {
                        p(gapi.iframes.getContext());
                      },
                      ontimeout: () => {
                        fl(), g(Ye(v, "network-request-failed"));
                      },
                      timeout: Gr.get(),
                    });
                }
                if (
                  null ===
                    (M =
                      null === (C = rn().gapi) || void 0 === C
                        ? void 0
                        : C.iframes) || void 0 === M
                    ? void 0
                    : M.Iframe
                )
                  p(gapi.iframes.getContext());
                else {
                  if (
                    !(null === (x = rn().gapi) || void 0 === x
                      ? void 0
                      : x.load)
                  ) {
                    const me = ea("iframefcb");
                    return (
                      (rn()[me] = () => {
                        gapi.load ? Z() : g(Ye(v, "network-request-failed"));
                      }),
                      Pd(`https://apis.google.com/js/api.js?onload=${me}`)
                    );
                  }
                  Z();
                }
              }).catch((p) => {
                throw ((Nc = null), p);
              });
            })(v)),
          Nc
        );
      }
      const pl = new Ve(5e3, 15e3),
        e_ = {
          style: {
            position: "absolute",
            top: "-100px",
            width: "1px",
            height: "1px",
          },
        },
        t_ = new Map([
          ["identitytoolkit.googleapis.com", "p"],
          ["staging-identitytoolkit.sandbox.googleapis.com", "s"],
          ["test-identitytoolkit.sandbox.googleapis.com", "t"],
        ]);
      function ca(v) {
        const p = v.config;
        fe(p.authDomain, v, "auth-domain-config-required");
        const g = p.emulator
            ? ze(p, "emulator/auth/iframe")
            : `https://${v.config.authDomain}/__/auth/iframe`,
          C = { apiKey: p.apiKey, appName: v.name, v: ne.SDK_VERSION },
          M = t_.get(v.config.apiHost);
        M && (C.eid = M);
        const x = v._getFrameworks();
        return (
          x.length && (C.fw = x.join(",")), `${g}?${(0, L.xO)(C).slice(1)}`
        );
      }
      function Yd() {
        return (Yd = (0, o.Z)(function* (v) {
          const p = yield bs(v),
            g = rn().gapi;
          return (
            fe(g, v, "internal-error"),
            p.open(
              {
                where: document.body,
                url: ca(v),
                messageHandlersFilter: g.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
                attributes: e_,
                dontclear: !0,
              },
              (C) =>
                new Promise(
                  (function () {
                    var M = (0, o.Z)(function* (x, Z) {
                      yield C.restyle({ setHideOnLeave: !1 });
                      const me = Ye(v, "network-request-failed"),
                        Se = rn().setTimeout(() => {
                          Z(me);
                        }, pl.get());
                      function ke() {
                        rn().clearTimeout(Se), x(C);
                      }
                      C.ping(ke).then(ke, () => {
                        Z(me);
                      });
                    });
                    return function (x, Z) {
                      return M.apply(this, arguments);
                    };
                  })()
                )
            )
          );
        })).apply(this, arguments);
      }
      const bp = {
        location: "yes",
        resizable: "yes",
        statusbar: "yes",
        toolbar: "no",
      };
      class wp {
        constructor(p) {
          (this.window = p), (this.associatedEvent = null);
        }
        close() {
          if (this.window)
            try {
              this.window.close();
            } catch (p) {}
        }
      }
      function Mp(v, p, g, C, M, x) {
        fe(v.config.authDomain, v, "auth-domain-config-required"),
          fe(v.config.apiKey, v, "invalid-api-key");
        const Z = {
          apiKey: v.config.apiKey,
          appName: v.name,
          authType: g,
          redirectUrl: C,
          v: ne.SDK_VERSION,
          eventId: M,
        };
        if (p instanceof ds) {
          p.setDefaultLanguage(v.languageCode),
            (Z.providerId = p.providerId || ""),
            (0, L.xb)(p.getCustomParameters()) ||
              (Z.customParameters = JSON.stringify(p.getCustomParameters()));
          for (const [Se, ke] of Object.entries(x || {})) Z[Se] = ke;
        }
        if (p instanceof $s) {
          const Se = p.getScopes().filter((ke) => "" !== ke);
          Se.length > 0 && (Z.scopes = Se.join(","));
        }
        v.tenantId && (Z.tid = v.tenantId);
        const me = Z;
        for (const Se of Object.keys(me)) void 0 === me[Se] && delete me[Se];
        return `${(function ({ config: v }) {
          return v.emulator
            ? ze(v, "emulator/auth/handler")
            : `https://${v.authDomain}/__/auth/handler`;
        })(v)}?${(0, L.xO)(me).slice(1)}`;
      }
      const i_ = "webStorageSupport";
      class ua extends class {
        constructor(p) {
          this.factorId = p;
        }
        _process(p, g, C) {
          switch (g.type) {
            case "enroll":
              return this._finalizeEnroll(p, g.credential, C);
            case "signin":
              return this._finalizeSignIn(p, g.credential);
            default:
              return xt("unexpected MultiFactorSessionType");
          }
        }
      } {
        constructor(p) {
          super("phone"), (this.credential = p);
        }
        static _fromCredential(p) {
          return new ua(p);
        }
        _finalizeEnroll(p, g, C) {
          return (function (v, p) {
            return st(
              v,
              "POST",
              "/v2/accounts/mfaEnrollment:finalize",
              Object.assign({ tenantId: v.tenantId }, p)
            );
          })(p, {
            idToken: g,
            displayName: C,
            phoneVerificationInfo: this.credential._makeVerificationRequest(),
          });
        }
        _finalizeSignIn(p, g) {
          return (function (v, p) {
            return st(
              v,
              "POST",
              "/v2/accounts/mfaSignIn:finalize",
              Object.assign({ tenantId: v.tenantId }, p)
            );
          })(p, {
            mfaPendingCredential: g,
            phoneVerificationInfo: this.credential._makeVerificationRequest(),
          });
        }
      }
      class qd {
        constructor() {}
        static assertion(p) {
          return ua._fromCredential(p);
        }
      }
      var v;
      class s_ {
        constructor(p) {
          (this.auth = p), (this.internalListeners = new Map());
        }
        getUid() {
          var p;
          return (
            this.assertAuthConfigured(),
            (null === (p = this.auth.currentUser) || void 0 === p
              ? void 0
              : p.uid) || null
          );
        }
        getToken(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return (
              g.assertAuthConfigured(),
              yield g.auth._initializationPromise,
              g.auth.currentUser
                ? { accessToken: yield g.auth.currentUser.getIdToken(p) }
                : null
            );
          })();
        }
        addAuthTokenListener(p) {
          if ((this.assertAuthConfigured(), this.internalListeners.has(p)))
            return;
          const g = this.auth.onIdTokenChanged((C) => {
            var M;
            p(
              (null === (M = C) || void 0 === M
                ? void 0
                : M.stsTokenManager.accessToken) || null
            );
          });
          this.internalListeners.set(p, g), this.updateProactiveRefresh();
        }
        removeAuthTokenListener(p) {
          this.assertAuthConfigured();
          const g = this.internalListeners.get(p);
          !g ||
            (this.internalListeners.delete(p),
            g(),
            this.updateProactiveRefresh());
        }
        assertAuthConfigured() {
          fe(
            this.auth._initializationPromise,
            "dependent-sdk-initialized-before-auth"
          );
        }
        updateProactiveRefresh() {
          this.internalListeners.size > 0
            ? this.auth._startProactiveRefresh()
            : this.auth._stopProactiveRefresh();
        }
      }
      function ti() {
        return window;
      }
      function Qd() {
        return (Qd = (0, o.Z)(function* (v, p, g) {
          var C;
          const { BuildInfo: M } = ti();
          lt(p.sessionId, "AuthEvent did not contain a session ID");
          const x = yield d_(p.sessionId),
            Z = {};
          return (
            un()
              ? (Z.ibi = M.packageName)
              : Bo()
              ? (Z.apn = M.packageName)
              : Ge(v, "operation-not-supported-in-this-environment"),
            M.displayName && (Z.appDisplayName = M.displayName),
            (Z.sessionId = x),
            Mp(
              v,
              g,
              p.type,
              void 0,
              null !== (C = p.eventId) && void 0 !== C ? C : void 0,
              Z
            )
          );
        })).apply(this, arguments);
      }
      function Hc() {
        return (Hc = (0, o.Z)(function* (v) {
          const { BuildInfo: p } = ti(),
            g = {};
          un()
            ? (g.iosBundleId = p.packageName)
            : Bo()
            ? (g.androidPackageName = p.packageName)
            : Ge(v, "operation-not-supported-in-this-environment"),
            yield jr(v, g);
        })).apply(this, arguments);
      }
      function jc() {
        return (jc = (0, o.Z)(function* (v, p, g) {
          const { cordova: C } = ti();
          let M = () => {};
          try {
            yield new Promise((x, Z) => {
              let me = null;
              function Se() {
                var $e;
                x();
                const Cn =
                  null === ($e = C.plugins.browsertab) || void 0 === $e
                    ? void 0
                    : $e.close;
                "function" == typeof Cn && Cn(),
                  "function" == typeof (null == g ? void 0 : g.close) &&
                    g.close();
              }
              function ke() {
                me ||
                  (me = window.setTimeout(() => {
                    Z(Ye(v, "redirect-cancelled-by-user"));
                  }, 2e3));
              }
              function He() {
                "visible" ===
                  (null == document ? void 0 : document.visibilityState) &&
                  ke();
              }
              p.addPassiveListener(Se),
                document.addEventListener("resume", ke, !1),
                Bo() && document.addEventListener("visibilitychange", He, !1),
                (M = () => {
                  p.removePassiveListener(Se),
                    document.removeEventListener("resume", ke, !1),
                    document.removeEventListener("visibilitychange", He, !1),
                    me && window.clearTimeout(me);
                });
            });
          } finally {
            M();
          }
        })).apply(this, arguments);
      }
      function d_(v) {
        return fi.apply(this, arguments);
      }
      function fi() {
        return (fi = (0, o.Z)(function* (v) {
          const p = Jd(v),
            g = yield crypto.subtle.digest("SHA-256", p);
          return Array.from(new Uint8Array(g))
            .map((M) => M.toString(16).padStart(2, "0"))
            .join("");
        })).apply(this, arguments);
      }
      function Jd(v) {
        if (
          (lt(/[0-9a-zA-Z]+/.test(v), "Can only convert alpha-numeric strings"),
          "undefined" != typeof TextEncoder)
        )
          return new TextEncoder().encode(v);
        const p = new ArrayBuffer(v.length),
          g = new Uint8Array(p);
        for (let C = 0; C < v.length; C++) g[C] = v.charCodeAt(C);
        return g;
      }
      (v = "Browser"),
        (0, ne._registerComponent)(
          new G.wA(
            "auth",
            (p, { options: g }) => {
              const C = p.getProvider("app").getImmediate(),
                { apiKey: M, authDomain: x } = C.options;
              return ((Z) => {
                fe(M && !M.includes(":"), "invalid-api-key", {
                  appName: Z.name,
                }),
                  fe(
                    !(null == x ? void 0 : x.includes(":")),
                    "argument-error",
                    { appName: Z.name }
                  );
                const me = {
                    apiKey: M,
                    authDomain: x,
                    clientPlatform: v,
                    apiHost: "identitytoolkit.googleapis.com",
                    tokenApiHost: "securetoken.googleapis.com",
                    apiScheme: "https",
                    sdkClientVersion: Ae(v),
                  },
                  Se = new _t(Z, me);
                return (
                  (function (v, p) {
                    const g = (null == p ? void 0 : p.persistence) || [],
                      C = (Array.isArray(g) ? g : [g]).map(se);
                    (null == p ? void 0 : p.errorMap) &&
                      v._updateErrorMap(p.errorMap),
                      v._initializeWithPersistence(
                        C,
                        null == p ? void 0 : p.popupRedirectResolver
                      );
                  })(Se, g),
                  Se
                );
              })(C);
            },
            "PUBLIC"
          )
            .setInstantiationMode("EXPLICIT")
            .setInstanceCreatedCallback((p, g, C) => {
              p.getProvider("auth-internal").initialize();
            })
        ),
        (0, ne._registerComponent)(
          new G.wA(
            "auth-internal",
            (p) => {
              const g = ct(p.getProvider("auth").getImmediate());
              return new s_(g);
            },
            "PRIVATE"
          ).setInstantiationMode("EXPLICIT")
        ),
        (0, ne.registerVersion)("@firebase/auth", "0.17.1", void 0);
      class Xd extends gp {
        constructor() {
          super(...arguments),
            (this.passiveListeners = new Set()),
            (this.initPromise = new Promise((p) => {
              this.resolveInialized = p;
            }));
        }
        addPassiveListener(p) {
          this.passiveListeners.add(p);
        }
        removePassiveListener(p) {
          this.passiveListeners.delete(p);
        }
        resetRedirect() {
          (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1);
        }
        onEvent(p) {
          return (
            this.resolveInialized(),
            this.passiveListeners.forEach((g) => g(p)),
            super.onEvent(p)
          );
        }
        initialized() {
          var p = this;
          return (0, o.Z)(function* () {
            yield p.initPromise;
          })();
        }
      }
      function Ri(v) {
        return ho.apply(this, arguments);
      }
      function ho() {
        return (ho = (0, o.Z)(function* (v) {
          const p = yield zc()._get(eh(v));
          return p && (yield zc()._remove(eh(v))), p;
        })).apply(this, arguments);
      }
      function yl() {
        const v = [],
          p = "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
        for (let g = 0; g < 20; g++) {
          const C = Math.floor(Math.random() * p.length);
          v.push(p.charAt(C));
        }
        return v.join("");
      }
      function zc() {
        return se(Ko);
      }
      function eh(v) {
        return ft("authEvent", v.config.apiKey, v.name);
      }
      function zr(v) {
        if (!(null == v ? void 0 : v.includes("?"))) return {};
        const [p, ...g] = v.split("?");
        return (0, L.zd)(g.join("?"));
      }
      function p_() {
        return {
          type: "unknown",
          eventId: null,
          sessionId: null,
          urlResponse: null,
          postBody: null,
          tenantId: null,
          error: Ye("no-auth-event"),
        };
      }
      function fo() {
        var v;
        return (
          (null === (v = null == self ? void 0 : self.location) || void 0 === v
            ? void 0
            : v.protocol) || null
        );
      }
      function mr(v = (0, L.z$)()) {
        return !(
          ("file:" !== fo() && "ionic:" !== fo()) ||
          !v.toLowerCase().match(/iphone|ipad|ipod|android/)
        );
      }
      function ih() {
        try {
          const v = self.localStorage,
            p = Qo();
          if (v)
            return (
              v.setItem(p, "1"),
              v.removeItem(p),
              !(function (v = (0, L.z$)()) {
                return (
                  ((0, L.w1)() &&
                    11 ===
                      (null == document ? void 0 : document.documentMode)) ||
                  (function (v = (0, L.z$)()) {
                    return /Edge\/\d+/.test(v);
                  })(v)
                );
              })() || (0, L.hl)()
            );
        } catch (v) {
          return rh() && (0, L.hl)();
        }
        return !1;
      }
      function rh() {
        return (
          "undefined" != typeof global &&
          "WorkerGlobalScope" in global &&
          "importScripts" in global
        );
      }
      function bl() {
        return (
          ("http:" === fo() || "https:" === fo() || (0, L.ru)() || mr()) &&
          !((0, L.b$)() || (0, L.UG)()) &&
          ih() &&
          !rh()
        );
      }
      function Wc() {
        return mr() && "undefined" != typeof document;
      }
      function sh() {
        return (sh = (0, o.Z)(function* () {
          return (
            !!Wc() &&
            new Promise((v) => {
              const p = setTimeout(() => {
                v(!1);
              }, 1e3);
              document.addEventListener("deviceready", () => {
                clearTimeout(p), v(!0);
              });
            })
          );
        })).apply(this, arguments);
      }
      const mi = { LOCAL: "local", NONE: "none", SESSION: "session" },
        po = fe,
        oh = "persistence";
      function Yc(v) {
        return mo.apply(this, arguments);
      }
      function mo() {
        return (mo = (0, o.Z)(function* (v) {
          yield v._initializationPromise;
          const p = Zc(),
            g = ft(oh, v.config.apiKey, v.name);
          (null == p ? void 0 : p.sessionStorage) &&
            p.sessionStorage.setItem(g, v._getPersistence());
        })).apply(this, arguments);
      }
      function Zc() {
        return "undefined" != typeof window ? window : null;
      }
      const lh = fe;
      class $r {
        constructor() {
          (this.browserResolver = se(
            class {
              constructor() {
                (this.eventManagers = {}),
                  (this.iframes = {}),
                  (this.originValidationPromises = {}),
                  (this._redirectPersistence = Xs),
                  (this._completeRedirectFn = In);
              }
              _openPopup(p, g, C, M) {
                var x = this;
                return (0, o.Z)(function* () {
                  var Z;
                  lt(
                    null === (Z = x.eventManagers[p._key()]) || void 0 === Z
                      ? void 0
                      : Z.manager,
                    "_initialize() not called before _openPopup()"
                  );
                  const me = Mp(p, g, C, ue(), M);
                  return (function (v, p, g, C = 500, M = 600) {
                    const x = Math.max(
                        (window.screen.availHeight - M) / 2,
                        0
                      ).toString(),
                      Z = Math.max(
                        (window.screen.availWidth - C) / 2,
                        0
                      ).toString();
                    let me = "";
                    const Se = Object.assign(Object.assign({}, bp), {
                        width: C.toString(),
                        height: M.toString(),
                        top: x,
                        left: Z,
                      }),
                      ke = (0, L.z$)().toLowerCase();
                    g && (me = Vo(ke) ? "_blank" : g),
                      Jn(ke) &&
                        ((p = p || "http://localhost"),
                        (Se.scrollbars = "yes"));
                    const He = Object.entries(Se).reduce(
                      (Cn, [gr, xe]) => `${Cn}${gr}=${xe},`,
                      ""
                    );
                    if (
                      (function (v = (0, L.z$)()) {
                        var p;
                        return (
                          un(v) &&
                          !!(null === (p = window.navigator) || void 0 === p
                            ? void 0
                            : p.standalone)
                        );
                      })(ke) &&
                      "_self" !== me
                    )
                      return (
                        (function (v, p) {
                          const g = document.createElement("a");
                          (g.href = v), (g.target = p);
                          const C = document.createEvent("MouseEvent");
                          C.initMouseEvent(
                            "click",
                            !0,
                            !0,
                            window,
                            1,
                            0,
                            0,
                            0,
                            0,
                            !1,
                            !1,
                            !1,
                            !1,
                            1,
                            null
                          ),
                            g.dispatchEvent(C);
                        })(p || "", me),
                        new wp(null)
                      );
                    const $e = window.open(p || "", me, He);
                    fe($e, v, "popup-blocked");
                    try {
                      $e.focus();
                    } catch (Cn) {}
                    return new wp($e);
                  })(p, me, Qo());
                })();
              }
              _openRedirect(p, g, C, M) {
                var x = this;
                return (0, o.Z)(function* () {
                  return (
                    yield x._originValidation(p),
                    (v = Mp(p, g, C, ue(), M)),
                    (rn().location.href = v),
                    new Promise(() => {})
                  );
                  var v;
                })();
              }
              _initialize(p) {
                const g = p._key();
                if (this.eventManagers[g]) {
                  const { manager: M, promise: x } = this.eventManagers[g];
                  return M
                    ? Promise.resolve(M)
                    : (lt(x, "If manager is not set, promise should be"), x);
                }
                const C = this.initAndGetManager(p);
                return (this.eventManagers[g] = { promise: C }), C;
              }
              initAndGetManager(p) {
                var g = this;
                return (0, o.Z)(function* () {
                  const C = yield (function (v) {
                      return Yd.apply(this, arguments);
                    })(p),
                    M = new gp(p);
                  return (
                    C.register(
                      "authEvent",
                      (x) => (
                        fe(
                          null == x ? void 0 : x.authEvent,
                          p,
                          "invalid-auth-event"
                        ),
                        { status: M.onEvent(x.authEvent) ? "ACK" : "ERROR" }
                      ),
                      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                    ),
                    (g.eventManagers[p._key()] = { manager: M }),
                    (g.iframes[p._key()] = C),
                    M
                  );
                })();
              }
              _isIframeWebStorageSupported(p, g) {
                this.iframes[p._key()].send(
                  i_,
                  { type: i_ },
                  (M) => {
                    var x;
                    const Z =
                      null === (x = null == M ? void 0 : M[0]) || void 0 === x
                        ? void 0
                        : x[i_];
                    void 0 !== Z && g(!!Z), Ge(p, "internal-error");
                  },
                  gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                );
              }
              _originValidation(p) {
                const g = p._key();
                return (
                  this.originValidationPromises[g] ||
                    (this.originValidationPromises[g] = (function (v) {
                      return vp.apply(this, arguments);
                    })(p)),
                  this.originValidationPromises[g]
                );
              }
              get _shouldInitProactively() {
                return Vf() || Or() || un();
              }
            }
          )),
            (this.cordovaResolver = se(
              class {
                constructor() {
                  (this._redirectPersistence = Xs),
                    (this._shouldInitProactively = !0),
                    (this.eventManagers = new Map()),
                    (this.originValidationPromises = {}),
                    (this._completeRedirectFn = In);
                }
                _initialize(p) {
                  var g = this;
                  return (0, o.Z)(function* () {
                    const C = p._key();
                    let M = g.eventManagers.get(C);
                    return (
                      M ||
                        ((M = new Xd(p)),
                        g.eventManagers.set(C, M),
                        g.attachCallbackListeners(p, M)),
                      M
                    );
                  })();
                }
                _openPopup(p) {
                  Ge(p, "operation-not-supported-in-this-environment");
                }
                _openRedirect(p, g, C, M) {
                  var x = this;
                  return (0, o.Z)(function* () {
                    !(function (v) {
                      var p, g, C, M, x, Z, me, Se, ke, He;
                      const $e = ti();
                      fe(
                        "function" ==
                          typeof (null ===
                            (p = null == $e ? void 0 : $e.universalLinks) ||
                          void 0 === p
                            ? void 0
                            : p.subscribe),
                        v,
                        "invalid-cordova-configuration",
                        { missingPlugin: "cordova-universal-links-plugin-fix" }
                      ),
                        fe(
                          void 0 !==
                            (null ===
                              (g = null == $e ? void 0 : $e.BuildInfo) ||
                            void 0 === g
                              ? void 0
                              : g.packageName),
                          v,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-buildInfo" }
                        ),
                        fe(
                          "function" ==
                            typeof (null ===
                              (x =
                                null ===
                                  (M =
                                    null ===
                                      (C = null == $e ? void 0 : $e.cordova) ||
                                    void 0 === C
                                      ? void 0
                                      : C.plugins) || void 0 === M
                                  ? void 0
                                  : M.browsertab) || void 0 === x
                              ? void 0
                              : x.openUrl),
                          v,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-browsertab" }
                        ),
                        fe(
                          "function" ==
                            typeof (null ===
                              (Se =
                                null ===
                                  (me =
                                    null ===
                                      (Z = null == $e ? void 0 : $e.cordova) ||
                                    void 0 === Z
                                      ? void 0
                                      : Z.plugins) || void 0 === me
                                  ? void 0
                                  : me.browsertab) || void 0 === Se
                              ? void 0
                              : Se.isAvailable),
                          v,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-browsertab" }
                        ),
                        fe(
                          "function" ==
                            typeof (null ===
                              (He =
                                null ===
                                  (ke = null == $e ? void 0 : $e.cordova) ||
                                void 0 === ke
                                  ? void 0
                                  : ke.InAppBrowser) || void 0 === He
                              ? void 0
                              : He.open),
                          v,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-inappbrowser" }
                        );
                    })(p);
                    const Z = yield x._initialize(p);
                    yield Z.initialized(),
                      Z.resetRedirect(),
                      Tn.clear(),
                      yield x._originValidation(p);
                    const me = (function (v, p, g = null) {
                      return {
                        type: p,
                        eventId: g,
                        urlResponse: null,
                        sessionId: yl(),
                        postBody: null,
                        tenantId: v.tenantId,
                        error: Ye(v, "no-auth-event"),
                      };
                    })(p, C, M);
                    yield (function (v, p) {
                      return zc()._set(eh(v), p);
                    })(p, me);
                    const Se = yield (function (v, p, g) {
                        return Qd.apply(this, arguments);
                      })(p, me, g),
                      ke = yield (function (v) {
                        const { cordova: p } = ti();
                        return new Promise((g) => {
                          p.plugins.browsertab.isAvailable((C) => {
                            let M = null;
                            C
                              ? p.plugins.browsertab.openUrl(v)
                              : (M = p.InAppBrowser.open(
                                  v,
                                  (function (v = (0, L.z$)()) {
                                    return (
                                      /(iPad|iPhone|iPod).*OS 7_\d/i.test(v) ||
                                      /(iPad|iPhone|iPod).*OS 8_\d/i.test(v)
                                    );
                                  })()
                                    ? "_blank"
                                    : "_system",
                                  "location=yes"
                                )),
                              g(M);
                          });
                        });
                      })(Se);
                    return (function (v, p, g) {
                      return jc.apply(this, arguments);
                    })(p, Z, ke);
                  })();
                }
                _isIframeWebStorageSupported(p, g) {
                  throw new Error("Method not implemented.");
                }
                _originValidation(p) {
                  const g = p._key();
                  return (
                    this.originValidationPromises[g] ||
                      (this.originValidationPromises[g] = (function (v) {
                        return Hc.apply(this, arguments);
                      })(p)),
                    this.originValidationPromises[g]
                  );
                }
                attachCallbackListeners(p, g) {
                  const {
                      universalLinks: C,
                      handleOpenURL: M,
                      BuildInfo: x,
                    } = ti(),
                    Z = setTimeout(
                      (0, o.Z)(function* () {
                        yield Ri(p), g.onEvent(p_());
                      }),
                      500
                    ),
                    me = (function () {
                      var He = (0, o.Z)(function* ($e) {
                        clearTimeout(Z);
                        const Cn = yield Ri(p);
                        let gr = null;
                        Cn &&
                          (null == $e ? void 0 : $e.url) &&
                          (gr = (function (v, p) {
                            var g, C;
                            const M = (function (v) {
                              const p = zr(v),
                                g = p.link
                                  ? decodeURIComponent(p.link)
                                  : void 0,
                                C = zr(g).link,
                                M = p.deep_link_id
                                  ? decodeURIComponent(p.deep_link_id)
                                  : void 0;
                              return zr(M).link || M || C || g || v;
                            })(p);
                            if (M.includes("/__/auth/callback")) {
                              const x = zr(M),
                                Z = x.firebaseError
                                  ? (function (v) {
                                      try {
                                        return JSON.parse(v);
                                      } catch (p) {
                                        return null;
                                      }
                                    })(decodeURIComponent(x.firebaseError))
                                  : null,
                                me =
                                  null ===
                                    (C =
                                      null ===
                                        (g = null == Z ? void 0 : Z.code) ||
                                      void 0 === g
                                        ? void 0
                                        : g.split("auth/")) || void 0 === C
                                    ? void 0
                                    : C[1],
                                Se = me ? Ye(me) : null;
                              return Se
                                ? {
                                    type: v.type,
                                    eventId: v.eventId,
                                    tenantId: v.tenantId,
                                    error: Se,
                                    urlResponse: null,
                                    sessionId: null,
                                    postBody: null,
                                  }
                                : {
                                    type: v.type,
                                    eventId: v.eventId,
                                    tenantId: v.tenantId,
                                    sessionId: v.sessionId,
                                    urlResponse: M,
                                    postBody: null,
                                  };
                            }
                            return null;
                          })(Cn, $e.url)),
                          g.onEvent(gr || p_());
                      });
                      return function (Cn) {
                        return He.apply(this, arguments);
                      };
                    })();
                  void 0 !== C &&
                    "function" == typeof C.subscribe &&
                    C.subscribe(null, me);
                  const Se = M,
                    ke = `${x.packageName.toLowerCase()}://`;
                  ti().handleOpenURL = (function () {
                    var He = (0, o.Z)(function* ($e) {
                      if (
                        ($e.toLowerCase().startsWith(ke) && me({ url: $e }),
                        "function" == typeof Se)
                      )
                        try {
                          Se($e);
                        } catch (Cn) {
                          console.error(Cn);
                        }
                    });
                    return function ($e) {
                      return He.apply(this, arguments);
                    };
                  })();
                }
              }
            )),
            (this.underlyingResolver = null),
            (this._redirectPersistence = Xs),
            (this._completeRedirectFn = In);
        }
        _initialize(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return (
              yield g.selectUnderlyingResolver(),
              g.assertedUnderlyingResolver._initialize(p)
            );
          })();
        }
        _openPopup(p, g, C, M) {
          var x = this;
          return (0, o.Z)(function* () {
            return (
              yield x.selectUnderlyingResolver(),
              x.assertedUnderlyingResolver._openPopup(p, g, C, M)
            );
          })();
        }
        _openRedirect(p, g, C, M) {
          var x = this;
          return (0, o.Z)(function* () {
            return (
              yield x.selectUnderlyingResolver(),
              x.assertedUnderlyingResolver._openRedirect(p, g, C, M)
            );
          })();
        }
        _isIframeWebStorageSupported(p, g) {
          this.assertedUnderlyingResolver._isIframeWebStorageSupported(p, g);
        }
        _originValidation(p) {
          return this.assertedUnderlyingResolver._originValidation(p);
        }
        get _shouldInitProactively() {
          return Wc() || this.browserResolver._shouldInitProactively;
        }
        get assertedUnderlyingResolver() {
          return (
            lh(this.underlyingResolver, "internal-error"),
            this.underlyingResolver
          );
        }
        selectUnderlyingResolver() {
          var p = this;
          return (0, o.Z)(function* () {
            if (p.underlyingResolver) return;
            const g = yield (function () {
              return sh.apply(this, arguments);
            })();
            p.underlyingResolver = g ? p.cordovaResolver : p.browserResolver;
          })();
        }
      }
      function Vn(v) {
        return v.unwrap();
      }
      function qc(v) {
        return Np(v);
      }
      function y_(v, p) {
        var g;
        const C =
          null === (g = p.customData) || void 0 === g
            ? void 0
            : g._tokenResponse;
        if ("auth/multi-factor-auth-required" === p.code)
          p.resolver = new Fp(
            v,
            (function (v, p) {
              var g;
              const C = (0, L.m9)(v),
                M = p;
              return (
                fe(p.operationType, C, "argument-error"),
                fe(
                  null === (g = M.serverResponse) || void 0 === g
                    ? void 0
                    : g.mfaPendingCredential,
                  C,
                  "argument-error"
                ),
                Ad._fromError(C, M)
              );
            })(v, p)
          );
        else if (C) {
          const M = Np(p),
            x = p;
          M &&
            ((x.credential = M),
            (x.tenantId = C.tenantId || void 0),
            (x.email = C.email || void 0),
            (x.phoneNumber = C.phoneNumber || void 0));
        }
      }
      function Np(v) {
        const { _tokenResponse: p } = v instanceof L.ZR ? v.customData : v;
        if (!p) return null;
        if (!(v instanceof L.ZR) && "temporaryProof" in p && "phoneNumber" in p)
          return na.credentialFromResult(v);
        const g = p.providerId;
        if (!g || "password" === g) return null;
        let C;
        switch (g) {
          case "google.com":
            C = dd;
            break;
          case "facebook.com":
            C = Hg;
            break;
          case "github.com":
            C = hd;
            break;
          case "twitter.com":
            C = Gf;
            break;
          default:
            const {
              oauthIdToken: M,
              oauthAccessToken: x,
              oauthTokenSecret: Z,
              pendingToken: me,
              nonce: Se,
            } = p;
            return x || Z || M || me
              ? me
                ? g.startsWith("saml.")
                  ? jo._create(g, me)
                  : Lr._fromParams({
                      providerId: g,
                      signInMethod: g,
                      pendingToken: me,
                      idToken: M,
                      accessToken: x,
                    })
                : new hs(g).credential({
                    idToken: M,
                    accessToken: x,
                    rawNonce: Se,
                  })
              : null;
        }
        return v instanceof L.ZR
          ? C.credentialFromError(v)
          : C.credentialFromResult(v);
      }
      function ii(v, p) {
        return Kc.apply(this, arguments);
      }
      function Kc() {
        return (Kc = (0, o.Z)(function* (v, p) {
          let g;
          try {
            g = yield p;
          } catch (x) {
            throw (x instanceof L.ZR && y_(v, x), x);
          }
          const { operationType: C, user: M } = g;
          return {
            operationType: C,
            credential: qc(g),
            additionalUserInfo: Xa(g),
            user: Wr.getOrCreate(M),
          };
        })).apply(this, arguments);
      }
      function ch(v, p) {
        return Qc.apply(this, arguments);
      }
      function Qc() {
        return (Qc = (0, o.Z)(function* (v, p) {
          const g = yield p;
          return {
            verificationId: g.verificationId,
            confirm: (C) => ii(v, g.confirm(C)),
          };
        })).apply(this, arguments);
      }
      class Fp {
        constructor(p, g) {
          (this.resolver = g),
            (this.auth = (function (v) {
              return v.wrapped();
            })(p));
        }
        get session() {
          return this.resolver.session;
        }
        get hints() {
          return this.resolver.hints;
        }
        resolveSignIn(p) {
          return ii(Vn(this.auth), this.resolver.resolveSignIn(p));
        }
      }
      class Wr {
        constructor(p) {
          (this._delegate = p),
            (this.multiFactor = (function (v) {
              const p = (0, L.m9)(v);
              return Dc.has(p) || Dc.set(p, el._fromUser(p)), Dc.get(p);
            })(p));
        }
        static getOrCreate(p) {
          return (
            Wr.USER_MAP.has(p) || Wr.USER_MAP.set(p, new Wr(p)),
            Wr.USER_MAP.get(p)
          );
        }
        delete() {
          return this._delegate.delete();
        }
        reload() {
          return this._delegate.reload();
        }
        toJSON() {
          return this._delegate.toJSON();
        }
        getIdTokenResult(p) {
          return this._delegate.getIdTokenResult(p);
        }
        getIdToken(p) {
          return this._delegate.getIdToken(p);
        }
        linkAndRetrieveDataWithCredential(p) {
          return this.linkWithCredential(p);
        }
        linkWithCredential(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return ii(g.auth, Di(g._delegate, p));
          })();
        }
        linkWithPhoneNumber(p, g) {
          var C = this;
          return (0, o.Z)(function* () {
            return ch(
              C.auth,
              (function (v, p, g) {
                return cp.apply(this, arguments);
              })(C._delegate, p, g)
            );
          })();
        }
        linkWithPopup(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return ii(
              g.auth,
              (function (v, p, g) {
                return xc.apply(this, arguments);
              })(g._delegate, p, $r)
            );
          })();
        }
        linkWithRedirect(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return (
              yield Yc(ct(g.auth)),
              (function (v, p, g) {
                return (function (v, p, g) {
                  return zd.apply(this, arguments);
                })(v, p, g);
              })(g._delegate, p, $r)
            );
          })();
        }
        reauthenticateAndRetrieveDataWithCredential(p) {
          return this.reauthenticateWithCredential(p);
        }
        reauthenticateWithCredential(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return ii(g.auth, gc(g._delegate, p));
          })();
        }
        reauthenticateWithPhoneNumber(p, g) {
          return ch(
            this.auth,
            (function (v, p, g) {
              return Bd.apply(this, arguments);
            })(this._delegate, p, g)
          );
        }
        reauthenticateWithPopup(p) {
          return ii(
            this.auth,
            (function (v, p, g) {
              return ra.apply(this, arguments);
            })(this._delegate, p, $r)
          );
        }
        reauthenticateWithRedirect(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return (
              yield Yc(ct(g.auth)),
              (function (v, p, g) {
                return (function (v, p, g) {
                  return pr.apply(this, arguments);
                })(v, p, g);
              })(g._delegate, p, $r)
            );
          })();
        }
        sendEmailVerification(p) {
          return (function (v, p) {
            return Sd.apply(this, arguments);
          })(this._delegate, p);
        }
        unlink(p) {
          var g = this;
          return (0, o.Z)(function* () {
            return (
              yield (function (v, p) {
                return pd.apply(this, arguments);
              })(g._delegate, p),
              g
            );
          })();
        }
        updateEmail(p) {
          return (function (v, p) {
            return Id((0, L.m9)(v), p, null);
          })(this._delegate, p);
        }
        updatePassword(p) {
          return (function (v, p) {
            return Id((0, L.m9)(v), null, p);
          })(this._delegate, p);
        }
        updatePhoneNumber(p) {
          return (function (v, p) {
            return Ur.apply(this, arguments);
          })(this._delegate, p);
        }
        updateProfile(p) {
          return (function (v, p) {
            return Dd.apply(this, arguments);
          })(this._delegate, p);
        }
        verifyBeforeUpdateEmail(p, g) {
          return (function (v, p, g) {
            return Ti.apply(this, arguments);
          })(this._delegate, p, g);
        }
        get emailVerified() {
          return this._delegate.emailVerified;
        }
        get isAnonymous() {
          return this._delegate.isAnonymous;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get phoneNumber() {
          return this._delegate.phoneNumber;
        }
        get providerData() {
          return this._delegate.providerData;
        }
        get refreshToken() {
          return this._delegate.refreshToken;
        }
        get tenantId() {
          return this._delegate.tenantId;
        }
        get displayName() {
          return this._delegate.displayName;
        }
        get email() {
          return this._delegate.email;
        }
        get photoURL() {
          return this._delegate.photoURL;
        }
        get providerId() {
          return this._delegate.providerId;
        }
        get uid() {
          return this._delegate.uid;
        }
        get auth() {
          return this._delegate.auth;
        }
      }
      Wr.USER_MAP = new WeakMap();
      const fa = fe;
      let Lp = (() => {
        class v {
          constructor(g, C) {
            if (((this.app = g), C.isInitialized()))
              return (
                (this._delegate = C.getImmediate()),
                void this.linkUnderlyingAuth()
              );
            const { apiKey: M } = g.options;
            fa(M, "invalid-api-key", { appName: g.name });
            let x = [Rt];
            if ("undefined" != typeof window) {
              x = (function (v, p) {
                const g = Zc();
                if (!(null == g ? void 0 : g.sessionStorage)) return [];
                const C = ft(oh, v, p);
                switch (g.sessionStorage.getItem(C)) {
                  case mi.NONE:
                    return [Rt];
                  case mi.LOCAL:
                    return [dn, Xs];
                  case mi.SESSION:
                    return [Xs];
                  default:
                    return [];
                }
              })(M, g.name);
              for (const me of [dn, Ko, Xs]) x.includes(me) || x.push(me);
            }
            fa(M, "invalid-api-key", { appName: g.name });
            const Z = "undefined" != typeof window ? $r : void 0;
            (this._delegate = C.initialize({
              options: { persistence: x, popupRedirectResolver: Z },
            })),
              this._delegate._updateErrorMap(de),
              this.linkUnderlyingAuth();
          }
          get emulatorConfig() {
            return this._delegate.emulatorConfig;
          }
          get currentUser() {
            return this._delegate.currentUser
              ? Wr.getOrCreate(this._delegate.currentUser)
              : null;
          }
          get languageCode() {
            return this._delegate.languageCode;
          }
          set languageCode(g) {
            this._delegate.languageCode = g;
          }
          get settings() {
            return this._delegate.settings;
          }
          get tenantId() {
            return this._delegate.tenantId;
          }
          set tenantId(g) {
            this._delegate.tenantId = g;
          }
          useDeviceLanguage() {
            this._delegate.useDeviceLanguage();
          }
          signOut() {
            return this._delegate.signOut();
          }
          useEmulator(g, C) {
            !(function (v, p, g) {
              const C = ct(v);
              fe(C._canInitEmulator, C, "emulator-config-failed"),
                fe(/^https?:\/\//.test(p), C, "invalid-emulator-scheme");
              const M = !!(null == g ? void 0 : g.disableWarnings),
                x = vn(p),
                { host: Z, port: me } = (function (v) {
                  const p = vn(v),
                    g = /(\/\/)?([^?#/]+)/.exec(v.substr(p.length));
                  if (!g) return { host: "", port: null };
                  const C = g[2].split("@").pop() || "",
                    M = /^(\[[^\]]+\])(:|$)/.exec(C);
                  if (M) {
                    const x = M[1];
                    return { host: x, port: nn(C.substr(x.length + 1)) };
                  }
                  {
                    const [x, Z] = C.split(":");
                    return { host: x, port: nn(Z) };
                  }
                })(p);
              (C.config.emulator = {
                url: `${x}//${Z}${null === me ? "" : `:${me}`}/`,
              }),
                (C.settings.appVerificationDisabledForTesting = !0),
                (C.emulatorConfig = Object.freeze({
                  host: Z,
                  port: me,
                  protocol: x.replace(":", ""),
                  options: Object.freeze({ disableWarnings: M }),
                })),
                (function (v) {
                  function p() {
                    const g = document.createElement("p"),
                      C = g.style;
                    (g.innerText =
                      "Running in emulator mode. Do not use with production credentials."),
                      (C.position = "fixed"),
                      (C.width = "100%"),
                      (C.backgroundColor = "#ffffff"),
                      (C.border = ".1em solid #000000"),
                      (C.color = "#b50000"),
                      (C.bottom = "0px"),
                      (C.left = "0px"),
                      (C.margin = "0px"),
                      (C.zIndex = "10000"),
                      (C.textAlign = "center"),
                      g.classList.add("firebase-emulator-warning"),
                      document.body.appendChild(g);
                  }
                  "undefined" != typeof console &&
                    "function" == typeof console.info &&
                    console.info(
                      "WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."
                    ),
                    "undefined" != typeof window &&
                      "undefined" != typeof document &&
                      !v &&
                      ("loading" === document.readyState
                        ? window.addEventListener("DOMContentLoaded", p)
                        : p());
                })(M);
            })(this._delegate, g, C);
          }
          applyActionCode(g) {
            return (function (v, p) {
              return Cd.apply(this, arguments);
            })(this._delegate, g);
          }
          checkActionCode(g) {
            return qf(this._delegate, g);
          }
          confirmPasswordReset(g, C) {
            return (function (v, p, g) {
              return bd.apply(this, arguments);
            })(this._delegate, g, C);
          }
          createUserWithEmailAndPassword(g, C) {
            var M = this;
            return (0, o.Z)(function* () {
              return ii(
                M._delegate,
                (function (v, p, g) {
                  return Zt.apply(this, arguments);
                })(M._delegate, g, C)
              );
            })();
          }
          fetchProvidersForEmail(g) {
            return this.fetchSignInMethodsForEmail(g);
          }
          fetchSignInMethodsForEmail(g) {
            return (function (v, p) {
              return mn.apply(this, arguments);
            })(this._delegate, g);
          }
          isSignInWithEmailLink(g) {
            return (function (v, p) {
              const g = cc.parseLink(p);
              return "EMAIL_SIGNIN" === (null == g ? void 0 : g.operation);
            })(0, g);
          }
          getRedirectResult() {
            var g = this;
            return (0, o.Z)(function* () {
              fa(
                bl(),
                g._delegate,
                "operation-not-supported-in-this-environment"
              );
              const C = yield (function (v, p) {
                return Oc.apply(this, arguments);
              })(g._delegate, $r);
              return C
                ? ii(g._delegate, Promise.resolve(C))
                : { credential: null, user: null };
            })();
          }
          addFrameworkForLogging(g) {
            !(function (v, p) {
              ct(v)._logFramework(p);
            })(this._delegate, g);
          }
          onAuthStateChanged(g, C, M) {
            const { next: x, error: Z, complete: me } = uh(g, C, M);
            return this._delegate.onAuthStateChanged(x, Z, me);
          }
          onIdTokenChanged(g, C, M) {
            const { next: x, error: Z, complete: me } = uh(g, C, M);
            return this._delegate.onIdTokenChanged(x, Z, me);
          }
          sendSignInLinkToEmail(g, C) {
            return (function (v, p, g) {
              return ui.apply(this, arguments);
            })(this._delegate, g, C);
          }
          sendPasswordResetEmail(g, C) {
            return (function (v, p, g) {
              return vd.apply(this, arguments);
            })(this._delegate, g, C || void 0);
          }
          setPersistence(g) {
            var C = this;
            return (0, o.Z)(function* () {
              let M;
              switch (
                ((function (v, p) {
                  po(
                    Object.values(mi).includes(p),
                    v,
                    "invalid-persistence-type"
                  ),
                    (0, L.b$)()
                      ? po(p !== mi.SESSION, v, "unsupported-persistence-type")
                      : (0, L.UG)()
                      ? po(p === mi.NONE, v, "unsupported-persistence-type")
                      : rh()
                      ? po(
                          p === mi.NONE || (p === mi.LOCAL && (0, L.hl)()),
                          v,
                          "unsupported-persistence-type"
                        )
                      : po(
                          p === mi.NONE || ih(),
                          v,
                          "unsupported-persistence-type"
                        );
                })(C._delegate, g),
                g)
              ) {
                case mi.SESSION:
                  M = Xs;
                  break;
                case mi.LOCAL:
                  M = (yield se(dn)._isAvailable()) ? dn : Ko;
                  break;
                case mi.NONE:
                  M = Rt;
                  break;
                default:
                  return Ge("argument-error", { appName: C._delegate.name });
              }
              return C._delegate.setPersistence(M);
            })();
          }
          signInAndRetrieveDataWithCredential(g) {
            return this.signInWithCredential(g);
          }
          signInAnonymously() {
            return ii(
              this._delegate,
              (function (v) {
                return Yf.apply(this, arguments);
              })(this._delegate)
            );
          }
          signInWithCredential(g) {
            return ii(this._delegate, mc(this._delegate, g));
          }
          signInWithCustomToken(g) {
            return ii(
              this._delegate,
              (function (v, p) {
                return zo.apply(this, arguments);
              })(this._delegate, g)
            );
          }
          signInWithEmailAndPassword(g, C) {
            return ii(
              this._delegate,
              (function (v, p, g) {
                return mc((0, L.m9)(v), jf.credential(p, g));
              })(this._delegate, g, C)
            );
          }
          signInWithEmailLink(g, C) {
            return ii(
              this._delegate,
              (function (v, p, g) {
                return Kf.apply(this, arguments);
              })(this._delegate, g, C)
            );
          }
          signInWithPhoneNumber(g, C) {
            return ch(
              this._delegate,
              (function (v, p, g) {
                return Jg.apply(this, arguments);
              })(this._delegate, g, C)
            );
          }
          signInWithPopup(g) {
            var C = this;
            return (0, o.Z)(function* () {
              return (
                fa(
                  bl(),
                  C._delegate,
                  "operation-not-supported-in-this-environment"
                ),
                ii(
                  C._delegate,
                  (function (v, p, g) {
                    return Hr.apply(this, arguments);
                  })(C._delegate, g, $r)
                )
              );
            })();
          }
          signInWithRedirect(g) {
            var C = this;
            return (0, o.Z)(function* () {
              return (
                fa(
                  bl(),
                  C._delegate,
                  "operation-not-supported-in-this-environment"
                ),
                yield Yc(C._delegate),
                (function (v, p, g) {
                  return (function (v, p, g) {
                    return oo.apply(this, arguments);
                  })(v, p, g);
                })(C._delegate, g, $r)
              );
            })();
          }
          updateCurrentUser(g) {
            return this._delegate.updateCurrentUser(g);
          }
          verifyPasswordResetCode(g) {
            return (function (v, p) {
              return yt.apply(this, arguments);
            })(this._delegate, g);
          }
          unwrap() {
            return this._delegate;
          }
          _delete() {
            return this._delegate._delete();
          }
          linkUnderlyingAuth() {
            this._delegate.wrapped = () => this;
          }
        }
        return (v.Persistence = mi), v;
      })();
      function uh(v, p, g) {
        let C = v;
        "function" != typeof v && ({ next: C, error: p, complete: g } = v);
        const M = C;
        return {
          next: (Z) => M(Z && Wr.getOrCreate(Z)),
          error: p,
          complete: g,
        };
      }
      class Cl {
        constructor() {
          (this.providerId = "phone"),
            (this._delegate = new na(Vn(ie.Z.auth())));
        }
        static credential(p, g) {
          return na.credential(p, g);
        }
        verifyPhoneNumber(p, g) {
          return this._delegate.verifyPhoneNumber(p, g);
        }
        unwrap() {
          return this._delegate;
        }
      }
      (Cl.PHONE_SIGN_IN_METHOD = na.PHONE_SIGN_IN_METHOD),
        (Cl.PROVIDER_ID = na.PROVIDER_ID);
      const dh = fe;
      class Jc {
        constructor(p, g, C = ie.Z.app()) {
          var M;
          dh(
            null === (M = C.options) || void 0 === M ? void 0 : M.apiKey,
            "invalid-api-key",
            { appName: C.name }
          ),
            (this._delegate = new hn(p, g, C.auth())),
            (this.type = this._delegate.type);
        }
        clear() {
          this._delegate.clear();
        }
        render() {
          return this._delegate.render();
        }
        verify() {
          return this._delegate.verify();
        }
      }
      !(function (v) {
        v.INTERNAL.registerComponent(
          new G.wA(
            "auth-compat",
            (p) => {
              const g = p.getProvider("app-compat").getImmediate(),
                C = p.getProvider("auth");
              return new Lp(g, C);
            },
            "PUBLIC"
          )
            .setServiceProps({
              ActionCodeInfo: {
                Operation: {
                  EMAIL_SIGNIN: "EMAIL_SIGNIN",
                  PASSWORD_RESET: "PASSWORD_RESET",
                  RECOVER_EMAIL: "RECOVER_EMAIL",
                  REVERT_SECOND_FACTOR_ADDITION:
                    "REVERT_SECOND_FACTOR_ADDITION",
                  VERIFY_AND_CHANGE_EMAIL: "VERIFY_AND_CHANGE_EMAIL",
                  VERIFY_EMAIL: "VERIFY_EMAIL",
                },
              },
              EmailAuthProvider: jf,
              FacebookAuthProvider: Hg,
              GithubAuthProvider: hd,
              GoogleAuthProvider: dd,
              OAuthProvider: hs,
              PhoneAuthProvider: Cl,
              PhoneMultiFactorGenerator: qd,
              RecaptchaVerifier: Jc,
              TwitterAuthProvider: Gf,
              Auth: Lp,
              AuthCredential: Ki,
              Error: L.ZR,
            })
            .setInstantiationMode("LAZY")
            .setMultipleInstances(!1)
        ),
          v.registerVersion("@firebase/auth-compat", "0.1.1");
      })(ie.Z);
    },
    3098: (Re, ye, k) => {
      "use strict";
      k.d(ye, { P: () => re });
      var o = k(9193),
        ie = k(5917),
        L = k(205);
      class re {
        constructor(G, W, H) {
          (this.kind = G),
            (this.value = W),
            (this.error = H),
            (this.hasValue = "N" === G);
        }
        observe(G) {
          switch (this.kind) {
            case "N":
              return G.next && G.next(this.value);
            case "E":
              return G.error && G.error(this.error);
            case "C":
              return G.complete && G.complete();
          }
        }
        do(G, W, H) {
          switch (this.kind) {
            case "N":
              return G && G(this.value);
            case "E":
              return W && W(this.error);
            case "C":
              return H && H();
          }
        }
        accept(G, W, H) {
          return G && "function" == typeof G.next
            ? this.observe(G)
            : this.do(G, W, H);
        }
        toObservable() {
          switch (this.kind) {
            case "N":
              return (0, ie.of)(this.value);
            case "E":
              return (0, L._)(this.error);
            case "C":
              return (0, o.c)();
          }
          throw new Error("unexpected notification kind value");
        }
        static createNext(G) {
          return void 0 !== G ? new re("N", G) : re.undefinedValueNotification;
        }
        static createError(G) {
          return new re("E", void 0, G);
        }
        static createComplete() {
          return re.completeNotification;
        }
      }
      (re.completeNotification = new re("C")),
        (re.undefinedValueNotification = new re("N", void 0));
    },
    7574: (Re, ye, k) => {
      "use strict";
      k.d(ye, { y: () => z });
      var o = k(7393),
        L = k(9181),
        ne = k(6490),
        q = k(6554),
        G = k(4487);
      var O = k(2494);
      let z = (() => {
        class Y {
          constructor(de) {
            (this._isScalar = !1), de && (this._subscribe = de);
          }
          lift(de) {
            const le = new Y();
            return (le.source = this), (le.operator = de), le;
          }
          subscribe(de, le, Ce) {
            const { operator: he } = this,
              Ee = (function (Y, K, de) {
                if (Y) {
                  if (Y instanceof o.L) return Y;
                  if (Y[L.b]) return Y[L.b]();
                }
                return Y || K || de ? new o.L(Y, K, de) : new o.L(ne.c);
              })(de, le, Ce);
            if (
              (Ee.add(
                he
                  ? he.call(Ee, this.source)
                  : this.source ||
                    (O.v.useDeprecatedSynchronousErrorHandling &&
                      !Ee.syncErrorThrowable)
                  ? this._subscribe(Ee)
                  : this._trySubscribe(Ee)
              ),
              O.v.useDeprecatedSynchronousErrorHandling &&
                Ee.syncErrorThrowable &&
                ((Ee.syncErrorThrowable = !1), Ee.syncErrorThrown))
            )
              throw Ee.syncErrorValue;
            return Ee;
          }
          _trySubscribe(de) {
            try {
              return this._subscribe(de);
            } catch (le) {
              O.v.useDeprecatedSynchronousErrorHandling &&
                ((de.syncErrorThrown = !0), (de.syncErrorValue = le)),
                (function (Y) {
                  for (; Y; ) {
                    const { closed: K, destination: de, isStopped: le } = Y;
                    if (K || le) return !1;
                    Y = de && de instanceof o.L ? de : null;
                  }
                  return !0;
                })(de)
                  ? de.error(le)
                  : console.warn(le);
            }
          }
          forEach(de, le) {
            return new (le = N(le))((Ce, he) => {
              let Ee;
              Ee = this.subscribe(
                (Qe) => {
                  try {
                    de(Qe);
                  } catch (Ge) {
                    he(Ge), Ee && Ee.unsubscribe();
                  }
                },
                he,
                Ce
              );
            });
          }
          _subscribe(de) {
            const { source: le } = this;
            return le && le.subscribe(de);
          }
          [q.L]() {
            return this;
          }
          pipe(...de) {
            return 0 === de.length
              ? this
              : (function (Y) {
                  return 0 === Y.length
                    ? G.y
                    : 1 === Y.length
                    ? Y[0]
                    : function (de) {
                        return Y.reduce((le, Ce) => Ce(le), de);
                      };
                })(de)(this);
          }
          toPromise(de) {
            return new (de = N(de))((le, Ce) => {
              let he;
              this.subscribe(
                (Ee) => (he = Ee),
                (Ee) => Ce(Ee),
                () => le(he)
              );
            });
          }
        }
        return (Y.create = (K) => new Y(K)), Y;
      })();
      function N(Y) {
        if ((Y || (Y = O.v.Promise || Promise), !Y))
          throw new Error("no Promise impl found");
        return Y;
      }
    },
    6490: (Re, ye, k) => {
      "use strict";
      k.d(ye, { c: () => L });
      var o = k(2494),
        ie = k(4449);
      const L = {
        closed: !0,
        next(ne) {},
        error(ne) {
          if (o.v.useDeprecatedSynchronousErrorHandling) throw ne;
          (0, ie.z)(ne);
        },
        complete() {},
      };
    },
    9765: (Re, ye, k) => {
      "use strict";
      k.d(ye, { Yc: () => G, xQ: () => W });
      var o = k(7574),
        ie = k(7393),
        L = k(5319),
        ne = k(7971),
        re = k(8858),
        q = k(9181);
      class G extends ie.L {
        constructor(z) {
          super(z), (this.destination = z);
        }
      }
      let W = (() => {
        class O extends o.y {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [q.b]() {
            return new G(this);
          }
          lift(N) {
            const Y = new H(this, this);
            return (Y.operator = N), Y;
          }
          next(N) {
            if (this.closed) throw new ne.N();
            if (!this.isStopped) {
              const { observers: Y } = this,
                K = Y.length,
                de = Y.slice();
              for (let le = 0; le < K; le++) de[le].next(N);
            }
          }
          error(N) {
            if (this.closed) throw new ne.N();
            (this.hasError = !0), (this.thrownError = N), (this.isStopped = !0);
            const { observers: Y } = this,
              K = Y.length,
              de = Y.slice();
            for (let le = 0; le < K; le++) de[le].error(N);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new ne.N();
            this.isStopped = !0;
            const { observers: N } = this,
              Y = N.length,
              K = N.slice();
            for (let de = 0; de < Y; de++) K[de].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(N) {
            if (this.closed) throw new ne.N();
            return super._trySubscribe(N);
          }
          _subscribe(N) {
            if (this.closed) throw new ne.N();
            return this.hasError
              ? (N.error(this.thrownError), L.w.EMPTY)
              : this.isStopped
              ? (N.complete(), L.w.EMPTY)
              : (this.observers.push(N), new re.W(this, N));
          }
          asObservable() {
            const N = new o.y();
            return (N.source = this), N;
          }
        }
        return (O.create = (z, N) => new H(z, N)), O;
      })();
      class H extends W {
        constructor(z, N) {
          super(), (this.destination = z), (this.source = N);
        }
        next(z) {
          const { destination: N } = this;
          N && N.next && N.next(z);
        }
        error(z) {
          const { destination: N } = this;
          N && N.error && this.destination.error(z);
        }
        complete() {
          const { destination: z } = this;
          z && z.complete && this.destination.complete();
        }
        _subscribe(z) {
          const { source: N } = this;
          return N ? this.source.subscribe(z) : L.w.EMPTY;
        }
      }
    },
    8858: (Re, ye, k) => {
      "use strict";
      k.d(ye, { W: () => ie });
      var o = k(5319);
      class ie extends o.w {
        constructor(ne, re) {
          super(),
            (this.subject = ne),
            (this.subscriber = re),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const ne = this.subject,
            re = ne.observers;
          if (
            ((this.subject = null),
            !re || 0 === re.length || ne.isStopped || ne.closed)
          )
            return;
          const q = re.indexOf(this.subscriber);
          -1 !== q && re.splice(q, 1);
        }
      }
    },
    7393: (Re, ye, k) => {
      "use strict";
      k.d(ye, { L: () => G });
      var o = k(9105),
        ie = k(6490),
        L = k(5319),
        ne = k(9181),
        re = k(2494),
        q = k(4449);
      class G extends L.w {
        constructor(O, z, N) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = ie.c;
              break;
            case 1:
              if (!O) {
                this.destination = ie.c;
                break;
              }
              if ("object" == typeof O) {
                O instanceof G
                  ? ((this.syncErrorThrowable = O.syncErrorThrowable),
                    (this.destination = O),
                    O.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new W(this, O)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new W(this, O, z, N));
          }
        }
        [ne.b]() {
          return this;
        }
        static create(O, z, N) {
          const Y = new G(O, z, N);
          return (Y.syncErrorThrowable = !1), Y;
        }
        next(O) {
          this.isStopped || this._next(O);
        }
        error(O) {
          this.isStopped || ((this.isStopped = !0), this._error(O));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(O) {
          this.destination.next(O);
        }
        _error(O) {
          this.destination.error(O), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: O } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = O),
            this
          );
        }
      }
      class W extends G {
        constructor(O, z, N, Y) {
          super(), (this._parentSubscriber = O);
          let K,
            de = this;
          (0, o.m)(z)
            ? (K = z)
            : z &&
              ((K = z.next),
              (N = z.error),
              (Y = z.complete),
              z !== ie.c &&
                ((de = Object.create(z)),
                (0, o.m)(de.unsubscribe) && this.add(de.unsubscribe.bind(de)),
                (de.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = de),
            (this._next = K),
            (this._error = N),
            (this._complete = Y);
        }
        next(O) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: z } = this;
            re.v.useDeprecatedSynchronousErrorHandling && z.syncErrorThrowable
              ? this.__tryOrSetError(z, this._next, O) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, O);
          }
        }
        error(O) {
          if (!this.isStopped) {
            const { _parentSubscriber: z } = this,
              { useDeprecatedSynchronousErrorHandling: N } = re.v;
            if (this._error)
              N && z.syncErrorThrowable
                ? (this.__tryOrSetError(z, this._error, O), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, O), this.unsubscribe());
            else if (z.syncErrorThrowable)
              N
                ? ((z.syncErrorValue = O), (z.syncErrorThrown = !0))
                : (0, q.z)(O),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), N)) throw O;
              (0, q.z)(O);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: O } = this;
            if (this._complete) {
              const z = () => this._complete.call(this._context);
              re.v.useDeprecatedSynchronousErrorHandling && O.syncErrorThrowable
                ? (this.__tryOrSetError(O, z), this.unsubscribe())
                : (this.__tryOrUnsub(z), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(O, z) {
          try {
            O.call(this._context, z);
          } catch (N) {
            if (
              (this.unsubscribe(), re.v.useDeprecatedSynchronousErrorHandling)
            )
              throw N;
            (0, q.z)(N);
          }
        }
        __tryOrSetError(O, z, N) {
          if (!re.v.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            z.call(this._context, N);
          } catch (Y) {
            return re.v.useDeprecatedSynchronousErrorHandling
              ? ((O.syncErrorValue = Y), (O.syncErrorThrown = !0), !0)
              : ((0, q.z)(Y), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: O } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            O.unsubscribe();
        }
      }
    },
    5319: (Re, ye, k) => {
      "use strict";
      k.d(ye, { w: () => q });
      var o = k(9796),
        ie = k(1555),
        L = k(9105);
      const re = (() => {
        function W(H) {
          return (
            Error.call(this),
            (this.message = H
              ? `${H.length} errors occurred during unsubscription:\n${H.map(
                  (O, z) => `${z + 1}) ${O.toString()}`
                ).join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = H),
            this
          );
        }
        return (W.prototype = Object.create(Error.prototype)), W;
      })();
      class q {
        constructor(H) {
          (this.closed = !1),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            H && ((this._ctorUnsubscribe = !0), (this._unsubscribe = H));
        }
        unsubscribe() {
          let H;
          if (this.closed) return;
          let {
            _parentOrParents: O,
            _ctorUnsubscribe: z,
            _unsubscribe: N,
            _subscriptions: Y,
          } = this;
          if (
            ((this.closed = !0),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            O instanceof q)
          )
            O.remove(this);
          else if (null !== O)
            for (let K = 0; K < O.length; ++K) O[K].remove(this);
          if ((0, L.m)(N)) {
            z && (this._unsubscribe = void 0);
            try {
              N.call(this);
            } catch (K) {
              H = K instanceof re ? G(K.errors) : [K];
            }
          }
          if ((0, o.k)(Y)) {
            let K = -1,
              de = Y.length;
            for (; ++K < de; ) {
              const le = Y[K];
              if ((0, ie.K)(le))
                try {
                  le.unsubscribe();
                } catch (Ce) {
                  (H = H || []),
                    Ce instanceof re
                      ? (H = H.concat(G(Ce.errors)))
                      : H.push(Ce);
                }
            }
          }
          if (H) throw new re(H);
        }
        add(H) {
          let O = H;
          if (!H) return q.EMPTY;
          switch (typeof H) {
            case "function":
              O = new q(H);
            case "object":
              if (O === this || O.closed || "function" != typeof O.unsubscribe)
                return O;
              if (this.closed) return O.unsubscribe(), O;
              if (!(O instanceof q)) {
                const Y = O;
                (O = new q()), (O._subscriptions = [Y]);
              }
              break;
            default:
              throw new Error(
                "unrecognized teardown " + H + " added to Subscription."
              );
          }
          let { _parentOrParents: z } = O;
          if (null === z) O._parentOrParents = this;
          else if (z instanceof q) {
            if (z === this) return O;
            O._parentOrParents = [z, this];
          } else {
            if (-1 !== z.indexOf(this)) return O;
            z.push(this);
          }
          const N = this._subscriptions;
          return null === N ? (this._subscriptions = [O]) : N.push(O), O;
        }
        remove(H) {
          const O = this._subscriptions;
          if (O) {
            const z = O.indexOf(H);
            -1 !== z && O.splice(z, 1);
          }
        }
      }
      var W;
      function G(W) {
        return W.reduce((H, O) => H.concat(O instanceof re ? O.errors : O), []);
      }
      q.EMPTY = (((W = new q()).closed = !0), W);
    },
    2494: (Re, ye, k) => {
      "use strict";
      k.d(ye, { v: () => ie });
      let o = !1;
      const ie = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(L) {
          if (L) {
            const ne = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                ne.stack
            );
          } else
            o &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          o = L;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return o;
        },
      };
    },
    5345: (Re, ye, k) => {
      "use strict";
      k.d(ye, { IY: () => ne, Ds: () => q, ft: () => W });
      var o = k(7393),
        ie = k(7574),
        L = k(7444);
      class ne extends o.L {
        constructor(O) {
          super(), (this.parent = O);
        }
        _next(O) {
          this.parent.notifyNext(O);
        }
        _error(O) {
          this.parent.notifyError(O), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(), this.unsubscribe();
        }
      }
      class q extends o.L {
        notifyNext(O) {
          this.destination.next(O);
        }
        notifyError(O) {
          this.destination.error(O);
        }
        notifyComplete() {
          this.destination.complete();
        }
      }
      function W(H, O) {
        if (O.closed) return;
        if (H instanceof ie.y) return H.subscribe(O);
        let z;
        try {
          z = (0, L.s)(H)(O);
        } catch (N) {
          O.error(N);
        }
        return z;
      }
    },
    2441: (Re, ye, k) => {
      "use strict";
      k.d(ye, { c: () => re, N: () => q });
      var o = k(9765),
        ie = k(7574),
        L = k(5319),
        ne = k(1307);
      class re extends ie.y {
        constructor(z, N) {
          super(),
            (this.source = z),
            (this.subjectFactory = N),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(z) {
          return this.getSubject().subscribe(z);
        }
        getSubject() {
          const z = this._subject;
          return (
            (!z || z.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let z = this._connection;
          return (
            z ||
              ((this._isComplete = !1),
              (z = this._connection = new L.w()),
              z.add(this.source.subscribe(new G(this.getSubject(), this))),
              z.closed && ((this._connection = null), (z = L.w.EMPTY))),
            z
          );
        }
        refCount() {
          return (0, ne.x)()(this);
        }
      }
      const q = (() => {
        const O = re.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: O._subscribe },
          _isComplete: { value: O._isComplete, writable: !0 },
          getSubject: { value: O.getSubject },
          connect: { value: O.connect },
          refCount: { value: O.refCount },
        };
      })();
      class G extends o.Yc {
        constructor(z, N) {
          super(z), (this.connectable = N);
        }
        _error(z) {
          this._unsubscribe(), super._error(z);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const z = this.connectable;
          if (z) {
            this.connectable = null;
            const N = z._connection;
            (z._refCount = 0),
              (z._subject = null),
              (z._connection = null),
              N && N.unsubscribe();
          }
        }
      }
    },
    9193: (Re, ye, k) => {
      "use strict";
      k.d(ye, { E: () => ie, c: () => L });
      var o = k(7574);
      const ie = new o.y((re) => re.complete());
      function L(re) {
        return re
          ? (function (re) {
              return new o.y((q) => re.schedule(() => q.complete()));
            })(re)
          : ie;
      }
    },
    4402: (Re, ye, k) => {
      "use strict";
      k.d(ye, { D: () => de });
      var o = k(7574),
        ie = k(7444),
        L = k(5319),
        ne = k(6554),
        G = k(4087),
        W = k(377),
        z = k(4072),
        N = k(9489);
      function de(le, Ce) {
        return Ce
          ? (function (le, Ce) {
              if (null != le) {
                if (
                  (function (le) {
                    return le && "function" == typeof le[ne.L];
                  })(le)
                )
                  return (function (le, Ce) {
                    return new o.y((he) => {
                      const Ee = new L.w();
                      return (
                        Ee.add(
                          Ce.schedule(() => {
                            const Qe = le[ne.L]();
                            Ee.add(
                              Qe.subscribe({
                                next(Ge) {
                                  Ee.add(Ce.schedule(() => he.next(Ge)));
                                },
                                error(Ge) {
                                  Ee.add(Ce.schedule(() => he.error(Ge)));
                                },
                                complete() {
                                  Ee.add(Ce.schedule(() => he.complete()));
                                },
                              })
                            );
                          })
                        ),
                        Ee
                      );
                    });
                  })(le, Ce);
                if ((0, z.t)(le))
                  return (function (le, Ce) {
                    return new o.y((he) => {
                      const Ee = new L.w();
                      return (
                        Ee.add(
                          Ce.schedule(() =>
                            le.then(
                              (Qe) => {
                                Ee.add(
                                  Ce.schedule(() => {
                                    he.next(Qe),
                                      Ee.add(Ce.schedule(() => he.complete()));
                                  })
                                );
                              },
                              (Qe) => {
                                Ee.add(Ce.schedule(() => he.error(Qe)));
                              }
                            )
                          )
                        ),
                        Ee
                      );
                    });
                  })(le, Ce);
                if ((0, N.z)(le)) return (0, G.r)(le, Ce);
                if (
                  (function (le) {
                    return le && "function" == typeof le[W.hZ];
                  })(le) ||
                  "string" == typeof le
                )
                  return (function (le, Ce) {
                    if (!le) throw new Error("Iterable cannot be null");
                    return new o.y((he) => {
                      const Ee = new L.w();
                      let Qe;
                      return (
                        Ee.add(() => {
                          Qe && "function" == typeof Qe.return && Qe.return();
                        }),
                        Ee.add(
                          Ce.schedule(() => {
                            (Qe = le[W.hZ]()),
                              Ee.add(
                                Ce.schedule(function () {
                                  if (he.closed) return;
                                  let Ge, Ye;
                                  try {
                                    const bt = Qe.next();
                                    (Ge = bt.value), (Ye = bt.done);
                                  } catch (bt) {
                                    return void he.error(bt);
                                  }
                                  Ye
                                    ? he.complete()
                                    : (he.next(Ge), this.schedule());
                                })
                              );
                          })
                        ),
                        Ee
                      );
                    });
                  })(le, Ce);
              }
              throw new TypeError(
                ((null !== le && typeof le) || le) + " is not observable"
              );
            })(le, Ce)
          : le instanceof o.y
          ? le
          : new o.y((0, ie.s)(le));
      }
    },
    6693: (Re, ye, k) => {
      "use strict";
      k.d(ye, { n: () => ne });
      var o = k(7574),
        ie = k(5015),
        L = k(4087);
      function ne(re, q) {
        return q ? (0, L.r)(re, q) : new o.y((0, ie.V)(re));
      }
    },
    6682: (Re, ye, k) => {
      "use strict";
      k.d(ye, { T: () => re });
      var o = k(7574),
        ie = k(4869),
        L = k(3282),
        ne = k(6693);
      function re(...q) {
        let G = Number.POSITIVE_INFINITY,
          W = null,
          H = q[q.length - 1];
        return (
          (0, ie.K)(H)
            ? ((W = q.pop()),
              q.length > 1 &&
                "number" == typeof q[q.length - 1] &&
                (G = q.pop()))
            : "number" == typeof H && (G = q.pop()),
          null === W && 1 === q.length && q[0] instanceof o.y
            ? q[0]
            : (0, L.J)(G)((0, ne.n)(q, W))
        );
      }
    },
    5917: (Re, ye, k) => {
      "use strict";
      k.d(ye, { of: () => ne });
      var o = k(4869),
        ie = k(6693),
        L = k(4087);
      function ne(...re) {
        let q = re[re.length - 1];
        return (0, o.K)(q) ? (re.pop(), (0, L.r)(re, q)) : (0, ie.n)(re);
      }
    },
    205: (Re, ye, k) => {
      "use strict";
      k.d(ye, { _: () => ie });
      var o = k(7574);
      function ie(ne, re) {
        return new o.y(
          re
            ? (q) => re.schedule(L, 0, { error: ne, subscriber: q })
            : (q) => q.error(ne)
        );
      }
      function L({ error: ne, subscriber: re }) {
        re.error(ne);
      }
    },
    8002: (Re, ye, k) => {
      "use strict";
      k.d(ye, { U: () => ie });
      var o = k(7393);
      function ie(re, q) {
        return function (W) {
          if ("function" != typeof re)
            throw new TypeError(
              "argument is not a function. Are you looking for `mapTo()`?"
            );
          return W.lift(new L(re, q));
        };
      }
      class L {
        constructor(q, G) {
          (this.project = q), (this.thisArg = G);
        }
        call(q, G) {
          return G.subscribe(new ne(q, this.project, this.thisArg));
        }
      }
      class ne extends o.L {
        constructor(q, G, W) {
          super(q),
            (this.project = G),
            (this.count = 0),
            (this.thisArg = W || this);
        }
        _next(q) {
          let G;
          try {
            G = this.project.call(this.thisArg, q, this.count++);
          } catch (W) {
            return void this.destination.error(W);
          }
          this.destination.next(G);
        }
      }
    },
    3282: (Re, ye, k) => {
      "use strict";
      k.d(ye, { J: () => L });
      var o = k(9773),
        ie = k(4487);
      function L(ne = Number.POSITIVE_INFINITY) {
        return (0, o.zg)(ie.y, ne);
      }
    },
    9773: (Re, ye, k) => {
      "use strict";
      k.d(ye, { zg: () => ne });
      var o = k(8002),
        ie = k(4402),
        L = k(5345);
      function ne(W, H, O = Number.POSITIVE_INFINITY) {
        return "function" == typeof H
          ? (z) =>
              z.pipe(
                ne(
                  (N, Y) =>
                    (0, ie.D)(W(N, Y)).pipe(
                      (0, o.U)((K, de) => H(N, K, Y, de))
                    ),
                  O
                )
              )
          : ("number" == typeof H && (O = H), (z) => z.lift(new re(W, O)));
      }
      class re {
        constructor(H, O = Number.POSITIVE_INFINITY) {
          (this.project = H), (this.concurrent = O);
        }
        call(H, O) {
          return O.subscribe(new q(H, this.project, this.concurrent));
        }
      }
      class q extends L.Ds {
        constructor(H, O, z = Number.POSITIVE_INFINITY) {
          super(H),
            (this.project = O),
            (this.concurrent = z),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(H) {
          this.active < this.concurrent
            ? this._tryNext(H)
            : this.buffer.push(H);
        }
        _tryNext(H) {
          let O;
          const z = this.index++;
          try {
            O = this.project(H, z);
          } catch (N) {
            return void this.destination.error(N);
          }
          this.active++, this._innerSub(O);
        }
        _innerSub(H) {
          const O = new L.IY(this),
            z = this.destination;
          z.add(O);
          const N = (0, L.ft)(H, O);
          N !== O && z.add(N);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(H) {
          this.destination.next(H);
        }
        notifyComplete() {
          const H = this.buffer;
          this.active--,
            H.length > 0
              ? this._next(H.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
    },
    9746: (Re, ye, k) => {
      "use strict";
      k.d(ye, { QV: () => L, ht: () => re });
      var o = k(7393),
        ie = k(3098);
      function L(G, W = 0) {
        return function (O) {
          return O.lift(new ne(G, W));
        };
      }
      class ne {
        constructor(W, H = 0) {
          (this.scheduler = W), (this.delay = H);
        }
        call(W, H) {
          return H.subscribe(new re(W, this.scheduler, this.delay));
        }
      }
      class re extends o.L {
        constructor(W, H, O = 0) {
          super(W), (this.scheduler = H), (this.delay = O);
        }
        static dispatch(W) {
          const { notification: H, destination: O } = W;
          H.observe(O), this.unsubscribe();
        }
        scheduleMessage(W) {
          this.destination.add(
            this.scheduler.schedule(
              re.dispatch,
              this.delay,
              new q(W, this.destination)
            )
          );
        }
        _next(W) {
          this.scheduleMessage(ie.P.createNext(W));
        }
        _error(W) {
          this.scheduleMessage(ie.P.createError(W)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(ie.P.createComplete()), this.unsubscribe();
        }
      }
      class q {
        constructor(W, H) {
          (this.notification = W), (this.destination = H);
        }
      }
    },
    1307: (Re, ye, k) => {
      "use strict";
      k.d(ye, { x: () => ie });
      var o = k(7393);
      function ie() {
        return function (q) {
          return q.lift(new L(q));
        };
      }
      class L {
        constructor(q) {
          this.connectable = q;
        }
        call(q, G) {
          const { connectable: W } = this;
          W._refCount++;
          const H = new ne(q, W),
            O = G.subscribe(H);
          return H.closed || (H.connection = W.connect()), O;
        }
      }
      class ne extends o.L {
        constructor(q, G) {
          super(q), (this.connectable = G);
        }
        _unsubscribe() {
          const { connectable: q } = this;
          if (!q) return void (this.connection = null);
          this.connectable = null;
          const G = q._refCount;
          if (G <= 0) return void (this.connection = null);
          if (((q._refCount = G - 1), G > 1))
            return void (this.connection = null);
          const { connection: W } = this,
            H = q._connection;
          (this.connection = null), H && (!W || H === W) && H.unsubscribe();
        }
      }
    },
    8819: (Re, ye, k) => {
      "use strict";
      k.d(ye, { B: () => G });
      var o = k(2441);
      var ne = k(1307),
        re = k(9765);
      function q() {
        return new re.xQ();
      }
      function G() {
        return (W) =>
          (0, ne.x)()(
            (function (W, H) {
              return function (z) {
                let N;
                N =
                  "function" == typeof W
                    ? W
                    : function () {
                        return W;
                      };
                const Y = Object.create(z, o.N);
                return (Y.source = z), (Y.subjectFactory = N), Y;
              };
            })(q)(W)
          );
      }
    },
    9673: (Re, ye, k) => {
      "use strict";
      k.d(ye, { R: () => re });
      var o = k(7574),
        ie = k(4581),
        L = k(6561);
      class ne extends o.y {
        constructor(W, H = 0, O = ie.e) {
          super(),
            (this.source = W),
            (this.delayTime = H),
            (this.scheduler = O),
            (!(0, L.k)(H) || H < 0) && (this.delayTime = 0),
            (!O || "function" != typeof O.schedule) && (this.scheduler = ie.e);
        }
        static create(W, H = 0, O = ie.e) {
          return new ne(W, H, O);
        }
        static dispatch(W) {
          const { source: H, subscriber: O } = W;
          return this.add(H.subscribe(O));
        }
        _subscribe(W) {
          return this.scheduler.schedule(ne.dispatch, this.delayTime, {
            source: this.source,
            subscriber: W,
          });
        }
      }
      function re(G, W = 0) {
        return function (O) {
          return O.lift(new q(G, W));
        };
      }
      class q {
        constructor(W, H) {
          (this.scheduler = W), (this.delay = H);
        }
        call(W, H) {
          return new ne(H, this.delay, this.scheduler).subscribe(W);
        }
      }
    },
    3342: (Re, ye, k) => {
      "use strict";
      k.d(ye, { b: () => ne });
      var o = k(7393);
      function ie() {}
      var L = k(9105);
      function ne(G, W, H) {
        return function (z) {
          return z.lift(new re(G, W, H));
        };
      }
      class re {
        constructor(W, H, O) {
          (this.nextOrObserver = W), (this.error = H), (this.complete = O);
        }
        call(W, H) {
          return H.subscribe(
            new q(W, this.nextOrObserver, this.error, this.complete)
          );
        }
      }
      class q extends o.L {
        constructor(W, H, O, z) {
          super(W),
            (this._tapNext = ie),
            (this._tapError = ie),
            (this._tapComplete = ie),
            (this._tapError = O || ie),
            (this._tapComplete = z || ie),
            (0, L.m)(H)
              ? ((this._context = this), (this._tapNext = H))
              : H &&
                ((this._context = H),
                (this._tapNext = H.next || ie),
                (this._tapError = H.error || ie),
                (this._tapComplete = H.complete || ie));
        }
        _next(W) {
          try {
            this._tapNext.call(this._context, W);
          } catch (H) {
            return void this.destination.error(H);
          }
          this.destination.next(W);
        }
        _error(W) {
          try {
            this._tapError.call(this._context, W);
          } catch (H) {
            return void this.destination.error(H);
          }
          this.destination.error(W);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (W) {
            return void this.destination.error(W);
          }
          return this.destination.complete();
        }
      }
    },
    4087: (Re, ye, k) => {
      "use strict";
      k.d(ye, { r: () => L });
      var o = k(7574),
        ie = k(5319);
      function L(ne, re) {
        return new o.y((q) => {
          const G = new ie.w();
          let W = 0;
          return (
            G.add(
              re.schedule(function () {
                W !== ne.length
                  ? (q.next(ne[W++]), q.closed || G.add(this.schedule()))
                  : q.complete();
              })
            ),
            G
          );
        });
      }
    },
    6465: (Re, ye, k) => {
      "use strict";
      k.d(ye, { o: () => L });
      var o = k(5319);
      class ie extends o.w {
        constructor(re, q) {
          super();
        }
        schedule(re, q = 0) {
          return this;
        }
      }
      class L extends ie {
        constructor(re, q) {
          super(re, q),
            (this.scheduler = re),
            (this.work = q),
            (this.pending = !1);
        }
        schedule(re, q = 0) {
          if (this.closed) return this;
          this.state = re;
          const G = this.id,
            W = this.scheduler;
          return (
            null != G && (this.id = this.recycleAsyncId(W, G, q)),
            (this.pending = !0),
            (this.delay = q),
            (this.id = this.id || this.requestAsyncId(W, this.id, q)),
            this
          );
        }
        requestAsyncId(re, q, G = 0) {
          return setInterval(re.flush.bind(re, this), G);
        }
        recycleAsyncId(re, q, G = 0) {
          if (null !== G && this.delay === G && !1 === this.pending) return q;
          clearInterval(q);
        }
        execute(re, q) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const G = this._execute(re, q);
          if (G) return G;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(re, q) {
          let W,
            G = !1;
          try {
            this.work(re);
          } catch (H) {
            (G = !0), (W = (!!H && H) || new Error(H));
          }
          if (G) return this.unsubscribe(), W;
        }
        _unsubscribe() {
          const re = this.id,
            q = this.scheduler,
            G = q.actions,
            W = G.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== W && G.splice(W, 1),
            null != re && (this.id = this.recycleAsyncId(q, re, null)),
            (this.delay = null);
        }
      }
    },
    6102: (Re, ye, k) => {
      "use strict";
      k.d(ye, { v: () => ie });
      let o = (() => {
        class L {
          constructor(re, q = L.now) {
            (this.SchedulerAction = re), (this.now = q);
          }
          schedule(re, q = 0, G) {
            return new this.SchedulerAction(this, re).schedule(G, q);
          }
        }
        return (L.now = () => Date.now()), L;
      })();
      class ie extends o {
        constructor(ne, re = o.now) {
          super(ne, () =>
            ie.delegate && ie.delegate !== this ? ie.delegate.now() : re()
          ),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(ne, re = 0, q) {
          return ie.delegate && ie.delegate !== this
            ? ie.delegate.schedule(ne, re, q)
            : super.schedule(ne, re, q);
        }
        flush(ne) {
          const { actions: re } = this;
          if (this.active) return void re.push(ne);
          let q;
          this.active = !0;
          do {
            if ((q = ne.execute(ne.state, ne.delay))) break;
          } while ((ne = re.shift()));
          if (((this.active = !1), q)) {
            for (; (ne = re.shift()); ) ne.unsubscribe();
            throw q;
          }
        }
      }
    },
    4581: (Re, ye, k) => {
      "use strict";
      k.d(ye, { e: () => N, E: () => z });
      let o = 1;
      const ie = Promise.resolve(),
        L = {};
      function ne(Y) {
        return Y in L && (delete L[Y], !0);
      }
      const re = {
        setImmediate(Y) {
          const K = o++;
          return (L[K] = !0), ie.then(() => ne(K) && Y()), K;
        },
        clearImmediate(Y) {
          ne(Y);
        },
      };
      var G = k(6465),
        H = k(6102);
      const z = new (class extends H.v {
          flush(K) {
            (this.active = !0), (this.scheduled = void 0);
            const { actions: de } = this;
            let le,
              Ce = -1,
              he = de.length;
            K = K || de.shift();
            do {
              if ((le = K.execute(K.state, K.delay))) break;
            } while (++Ce < he && (K = de.shift()));
            if (((this.active = !1), le)) {
              for (; ++Ce < he && (K = de.shift()); ) K.unsubscribe();
              throw le;
            }
          }
        })(
          class extends G.o {
            constructor(K, de) {
              super(K, de), (this.scheduler = K), (this.work = de);
            }
            requestAsyncId(K, de, le = 0) {
              return null !== le && le > 0
                ? super.requestAsyncId(K, de, le)
                : (K.actions.push(this),
                  K.scheduled ||
                    (K.scheduled = re.setImmediate(K.flush.bind(K, null))));
            }
            recycleAsyncId(K, de, le = 0) {
              if ((null !== le && le > 0) || (null === le && this.delay > 0))
                return super.recycleAsyncId(K, de, le);
              0 === K.actions.length &&
                (re.clearImmediate(de), (K.scheduled = void 0));
            }
          }
        ),
        N = z;
    },
    3637: (Re, ye, k) => {
      "use strict";
      k.d(ye, { z: () => L, P: () => ne });
      var o = k(6465);
      const L = new (k(6102).v)(o.o),
        ne = L;
    },
    7771: (Re, ye, k) => {
      "use strict";
      k.d(ye, { c: () => q, N: () => re });
      var o = k(6465),
        L = k(6102);
      const re = new (class extends L.v {})(
          class extends o.o {
            constructor(W, H) {
              super(W, H), (this.scheduler = W), (this.work = H);
            }
            schedule(W, H = 0) {
              return H > 0
                ? super.schedule(W, H)
                : ((this.delay = H),
                  (this.state = W),
                  this.scheduler.flush(this),
                  this);
            }
            execute(W, H) {
              return H > 0 || this.closed
                ? super.execute(W, H)
                : this._execute(W, H);
            }
            requestAsyncId(W, H, O = 0) {
              return (null !== O && O > 0) || (null === O && this.delay > 0)
                ? super.requestAsyncId(W, H, O)
                : W.flush(this);
            }
          }
        ),
        q = re;
    },
    377: (Re, ye, k) => {
      "use strict";
      k.d(ye, { hZ: () => ie });
      const ie =
        "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
    },
    6554: (Re, ye, k) => {
      "use strict";
      k.d(ye, { L: () => o });
      const o =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
    },
    9181: (Re, ye, k) => {
      "use strict";
      k.d(ye, { b: () => o });
      const o =
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random();
    },
    7971: (Re, ye, k) => {
      "use strict";
      k.d(ye, { N: () => ie });
      const ie = (() => {
        function L() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (L.prototype = Object.create(Error.prototype)), L;
      })();
    },
    4449: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        setTimeout(() => {
          throw ie;
        }, 0);
      }
      k.d(ye, { z: () => o });
    },
    4487: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        return ie;
      }
      k.d(ye, { y: () => o });
    },
    9796: (Re, ye, k) => {
      "use strict";
      k.d(ye, { k: () => o });
      const o = Array.isArray || ((ie) => ie && "number" == typeof ie.length);
    },
    9489: (Re, ye, k) => {
      "use strict";
      k.d(ye, { z: () => o });
      const o = (ie) =>
        ie && "number" == typeof ie.length && "function" != typeof ie;
    },
    9105: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        return "function" == typeof ie;
      }
      k.d(ye, { m: () => o });
    },
    6561: (Re, ye, k) => {
      "use strict";
      k.d(ye, { k: () => ie });
      var o = k(9796);
      function ie(L) {
        return !(0, o.k)(L) && L - parseFloat(L) + 1 >= 0;
      }
    },
    1555: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        return null !== ie && "object" == typeof ie;
      }
      k.d(ye, { K: () => o });
    },
    4072: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        return (
          !!ie &&
          "function" != typeof ie.subscribe &&
          "function" == typeof ie.then
        );
      }
      k.d(ye, { t: () => o });
    },
    4869: (Re, ye, k) => {
      "use strict";
      function o(ie) {
        return ie && "function" == typeof ie.schedule;
      }
      k.d(ye, { K: () => o });
    },
    7444: (Re, ye, k) => {
      "use strict";
      k.d(ye, { s: () => z });
      var o = k(5015),
        ie = k(4449),
        ne = k(377),
        q = k(6554),
        W = k(9489),
        H = k(4072),
        O = k(1555);
      const z = (N) => {
        if (N && "function" == typeof N[q.L])
          return ((N) => (Y) => {
            const K = N[q.L]();
            if ("function" != typeof K.subscribe)
              throw new TypeError(
                "Provided object does not correctly implement Symbol.observable"
              );
            return K.subscribe(Y);
          })(N);
        if ((0, W.z)(N)) return (0, o.V)(N);
        if ((0, H.t)(N))
          return ((N) => (Y) => (
            N.then(
              (K) => {
                Y.closed || (Y.next(K), Y.complete());
              },
              (K) => Y.error(K)
            ).then(null, ie.z),
            Y
          ))(N);
        if (N && "function" == typeof N[ne.hZ])
          return ((N) => (Y) => {
            const K = N[ne.hZ]();
            for (;;) {
              let de;
              try {
                de = K.next();
              } catch (le) {
                return Y.error(le), Y;
              }
              if (de.done) {
                Y.complete();
                break;
              }
              if ((Y.next(de.value), Y.closed)) break;
            }
            return (
              "function" == typeof K.return &&
                Y.add(() => {
                  K.return && K.return();
                }),
              Y
            );
          })(N);
        {
          const K = `You provided ${
            (0, O.K)(N) ? "an invalid object" : `'${N}'`
          } where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`;
          throw new TypeError(K);
        }
      };
    },
    5015: (Re, ye, k) => {
      "use strict";
      k.d(ye, { V: () => o });
      const o = (ie) => (L) => {
        for (let ne = 0, re = ie.length; ne < re && !L.closed; ne++)
          L.next(ie[ne]);
        L.complete();
      };
    },
    9056: (Re, ye, k) => {
      "use strict";
      var o = k(7716);
      let ie = null;
      function L() {
        return ie;
      }
      const G = new o.OlP("DocumentToken");
      let W = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = (0, o.Yz7)({
            factory: H,
            token: n,
            providedIn: "platform",
          })),
          n
        );
      })();
      function H() {
        return (0, o.LFG)(z);
      }
      const O = new o.OlP("Location Initialized");
      let z = (() => {
        class n extends W {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return L().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = L().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = L().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, i, a) {
            N() ? this._history.pushState(e, i, a) : (this.location.hash = a);
          }
          replaceState(e, i, a) {
            N()
              ? this._history.replaceState(e, i, a)
              : (this.location.hash = a);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(G));
          }),
          (n.ɵprov = (0, o.Yz7)({
            factory: Y,
            token: n,
            providedIn: "platform",
          })),
          n
        );
      })();
      function N() {
        return !!window.history.pushState;
      }
      function Y() {
        return new z((0, o.LFG)(G));
      }
      function K(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
        );
      }
      function de(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function le(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let Ce = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = (0, o.Yz7)({ factory: he, token: n, providedIn: "root" })),
          n
        );
      })();
      function he(n) {
        const t = (0, o.LFG)(G).location;
        return new Qe((0, o.LFG)(W), (t && t.origin) || "");
      }
      const Ee = new o.OlP("appBaseHref");
      let Qe = (() => {
          class n extends Ce {
            constructor(e, i) {
              if (
                (super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                null == i && (i = this._platformLocation.getBaseHrefFromDOM()),
                null == i)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = i;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return K(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  le(this._platformLocation.search),
                a = this._platformLocation.hash;
              return a && e ? `${i}${a}` : i;
            }
            pushState(e, i, a, u) {
              const h = this.prepareExternalUrl(a + le(u));
              this._platformLocation.pushState(e, i, h);
            }
            replaceState(e, i, a, u) {
              const h = this.prepareExternalUrl(a + le(u));
              this._platformLocation.replaceState(e, i, h);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(e = 0) {
              var i, a;
              null === (a = (i = this._platformLocation).historyGo) ||
                void 0 === a ||
                a.call(i, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(W), o.LFG(Ee, 8));
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ge = (() => {
          class n extends Ce {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = K(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, a, u) {
              let h = this.prepareExternalUrl(a + le(u));
              0 == h.length && (h = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, h);
            }
            replaceState(e, i, a, u) {
              let h = this.prepareExternalUrl(a + le(u));
              0 == h.length && (h = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, h);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(e = 0) {
              var i, a;
              null === (a = (i = this._platformLocation).historyGo) ||
                void 0 === a ||
                a.call(i, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(W), o.LFG(Ee, 8));
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ye = (() => {
          class n {
            constructor(e, i) {
              (this._subject = new o.vpe()),
                (this._urlChangeListeners = []),
                (this._platformStrategy = e);
              const a = this._platformStrategy.getBaseHref();
              (this._platformLocation = i),
                (this._baseHref = de(xt(a))),
                this._platformStrategy.onPopState((u) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: u.state,
                    type: u.type,
                  });
                });
            }
            path(e = !1) {
              return this.normalize(this._platformStrategy.path(e));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + le(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function (n, t) {
                  return n && t.startsWith(n) ? t.substring(n.length) : t;
                })(this._baseHref, xt(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._platformStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", a = null) {
              this._platformStrategy.pushState(a, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + le(i)),
                  a
                );
            }
            replaceState(e, i = "", a = null) {
              this._platformStrategy.replaceState(a, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + le(i)),
                  a
                );
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            historyGo(e = 0) {
              var i, a;
              null === (a = (i = this._platformStrategy).historyGo) ||
                void 0 === a ||
                a.call(i, e);
            }
            onUrlChange(e) {
              this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  }));
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((a) => a(e, i));
            }
            subscribe(e, i, a) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: a,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Ce), o.LFG(W));
            }),
            (n.normalizeQueryParams = le),
            (n.joinWithSlash = K),
            (n.stripTrailingSlash = de),
            (n.ɵprov = (0, o.Yz7)({
              factory: bt,
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      function bt() {
        return new Ye((0, o.LFG)(Ce), (0, o.LFG)(W));
      }
      function xt(n) {
        return n.replace(/\/index.html$/, "");
      }
      var se = (() => (
        ((se = se || {})[(se.Zero = 0)] = "Zero"),
        (se[(se.One = 1)] = "One"),
        (se[(se.Two = 2)] = "Two"),
        (se[(se.Few = 3)] = "Few"),
        (se[(se.Many = 4)] = "Many"),
        (se[(se.Other = 5)] = "Other"),
        se
      ))();
      const Yi = o.kL8;
      class Nr {}
      let Wa = (() => {
        class n extends Nr {
          constructor(e) {
            super(), (this.locale = e);
          }
          getPluralCategory(e, i) {
            switch (Yi(i || this.locale)(e)) {
              case se.Zero:
                return "zero";
              case se.One:
                return "one";
              case se.Two:
                return "two";
              case se.Few:
                return "few";
              case se.Many:
                return "many";
              default:
                return "other";
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(o.soG));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      let zs = (() => {
        class n {
          constructor(e, i, a, u) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = a),
              (this._renderer = u),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                ((0, o.sIi)(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              e.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              e.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${(0,
                  o.AaK)(i.item)}`
                );
              this._toggleClass(i.item, !0);
            }),
              e.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !!e[i])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(e, i) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((a) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, a)
                  : this._renderer.removeClass(this._ngEl.nativeElement, a);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(o.ZZ4),
              o.Y36(o.aQg),
              o.Y36(o.SBq),
              o.Y36(o.Qsj)
            );
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
          })),
          n
        );
      })();
      class ai {
        constructor(t, e, i, a) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = a);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let kt = (() => {
        class n {
          constructor(e, i, a) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = a),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              if (!this._differ && e)
                try {
                  this._differ = this._differs
                    .find(e)
                    .create(this.ngForTrackBy);
                } catch (i) {
                  throw new Error(
                    `Cannot find a differ supporting object '${e}' of type '${(function (
                      n
                    ) {
                      return n.name || typeof n;
                    })(
                      e
                    )}'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = [];
            e.forEachOperation((a, u, h) => {
              if (null == a.previousIndex) {
                const _ = this._viewContainer.createEmbeddedView(
                    this._template,
                    new ai(null, this._ngForOf, -1, -1),
                    null === h ? void 0 : h
                  ),
                  b = new Bf(a, _);
                i.push(b);
              } else if (null == h)
                this._viewContainer.remove(null === u ? void 0 : u);
              else if (null !== u) {
                const _ = this._viewContainer.get(u);
                this._viewContainer.move(_, h);
                const b = new Bf(a, _);
                i.push(b);
              }
            });
            for (let a = 0; a < i.length; a++)
              this._perViewChange(i[a].view, i[a].record);
            for (let a = 0, u = this._viewContainer.length; a < u; a++) {
              const h = this._viewContainer.get(a);
              (h.context.index = a),
                (h.context.count = u),
                (h.context.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((a) => {
              this._viewContainer.get(a.currentIndex).context.$implicit =
                a.item;
            });
          }
          _perViewChange(e, i) {
            e.context.$implicit = i.item;
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(o.s_b), o.Y36(o.Rgc), o.Y36(o.ZZ4));
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
          })),
          n
        );
      })();
      class Bf {
        constructor(t, e) {
          (this.record = t), (this.view = e);
        }
      }
      let Bi = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new Za()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            Uo("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            Uo("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(o.s_b), o.Y36(o.Rgc));
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
          })),
          n
        );
      })();
      class Za {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Uo(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${(0, o.AaK)(t)}'.`
          );
      }
      class us {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let Xn = (() => {
          class n {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
            })),
            n
          );
        })(),
        Kt = (() => {
          class n {
            constructor(e, i, a) {
              (this.ngSwitch = a), a._addCase(), (this._view = new us(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.s_b), o.Y36(o.Rgc), o.Y36(Xn, 9));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
            })),
            n
          );
        })(),
        ld = (() => {
          class n {
            constructor(e, i, a) {
              a._addDefault(new us(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.s_b), o.Y36(o.Rgc), o.Y36(Xn, 9));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "ngSwitchDefault", ""]],
            })),
            n
          );
        })(),
        Fr = (() => {
          class n {
            constructor(e, i, a) {
              (this._ngEl = e),
                (this._differs = i),
                (this._renderer = a),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(e) {
              (this._ngStyle = e),
                !this._differ &&
                  e &&
                  (this._differ = this._differs.find(e).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const e = this._differ.diff(this._ngStyle);
                e && this._applyChanges(e);
              }
            }
            _setStyle(e, i) {
              const [a, u] = e.split(".");
              null != (i = null != i && u ? `${i}${u}` : i)
                ? this._renderer.setStyle(this._ngEl.nativeElement, a, i)
                : this._renderer.removeStyle(this._ngEl.nativeElement, a);
            }
            _applyChanges(e) {
              e.forEachRemovedItem((i) => this._setStyle(i.key, null)),
                e.forEachAddedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                ),
                e.forEachChangedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(o.aQg), o.Y36(o.Qsj));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
            })),
            n
          );
        })(),
        li = (() => {
          class n {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(e) {
              if (e.ngTemplateOutlet) {
                const i = this._viewContainerRef;
                this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? i.createEmbeddedView(
                        this.ngTemplateOutlet,
                        this.ngTemplateOutletContext
                      )
                    : null);
              } else
                this._viewRef &&
                  e.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.s_b));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
              },
              features: [o.TTD],
            })),
            n
          );
        })();
      class Lr {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (i) => {
              throw i;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
        onDestroy(t) {
          t.unsubscribe();
        }
      }
      class Ug {
        createSubscription(t, e) {
          return t.then(e, (i) => {
            throw i;
          });
        }
        dispose(t) {}
        onDestroy(t) {}
      }
      const cd = new Ug(),
        dC = new Lr();
      let ud = (() => {
          class n {
            constructor(e) {
              (this._ref = e),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : this._latestValue
                : (e && this._subscribe(e), this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (i) => this._updateLatestValue(e, i)
                ));
            }
            _selectStrategy(e) {
              if ((0, o.QGY)(e)) return cd;
              if ((0, o.F4k)(e)) return dC;
              throw (function (n, t) {
                return Error(
                  `InvalidPipeArgument: '${t}' for pipe '${(0, o.AaK)(n)}'`
                );
              })(n, e);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, i) {
              e === this._obj &&
                ((this._latestValue = i), this._ref.markForCheck());
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.sBO, 16));
            }),
            (n.ɵpipe = o.Yjl({ name: "async", type: n, pure: !1 })),
            n
          );
        })(),
        Xi = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ providers: [{ provide: Nr, useClass: Wa }] })),
            n
          );
        })();
      let dc = (() => {
        class n {}
        return (
          (n.ɵprov = (0, o.Yz7)({
            token: n,
            providedIn: "root",
            factory: () => new fd((0, o.LFG)(G), window),
          })),
          n
        );
      })();
      class fd {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function (n, t) {
            const e = n.getElementById(t) || n.getElementsByName(t)[0];
            if (e) return e;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let a = i.currentNode;
              for (; a; ) {
                const u = a.shadowRoot;
                if (u) {
                  const h =
                    u.getElementById(t) || u.querySelector(`[name="${t}"]`);
                  if (h) return h;
                }
                a = i.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), this.attemptFocus(e));
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            a = e.top + this.window.pageYOffset,
            u = this.offset();
          this.window.scrollTo(i - u[0], a - u[1]);
        }
        attemptFocus(t) {
          return t.focus(), this.document.activeElement === t;
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              hc(this.window.history) ||
              hc(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch (t) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch (t) {
            return !1;
          }
        }
      }
      function hc(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class pc extends class extends class {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          var n;
          (n = new pc()), ie || (ie = n);
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e =
            ((Ys = Ys || document.querySelector("base")),
            Ys ? Ys.getAttribute("href") : null);
          return null == e
            ? null
            : (function (n) {
                (Qt = Qt || document.createElement("a")),
                  Qt.setAttribute("href", n);
                const t = Qt.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          Ys = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return (function (n, t) {
            t = encodeURIComponent(t);
            for (const e of n.split(";")) {
              const i = e.indexOf("="),
                [a, u] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
              if (a.trim() === t) return decodeURIComponent(u);
            }
            return null;
          })(document.cookie, t);
        }
      }
      let Qt,
        Ys = null;
      const mc = new o.OlP("TRANSITION_ID"),
        Di = [
          {
            provide: o.ip1,
            useFactory: function (n, t, e) {
              return () => {
                e.get(o.CZH).donePromise.then(() => {
                  const i = L(),
                    a = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let u = 0; u < a.length; u++) i.remove(a[u]);
                });
              };
            },
            deps: [mc, G, o.zs3],
            multi: !0,
          },
        ];
      class Qa {
        static init() {
          (0, o.VLi)(new Qa());
        }
        addToWindow(t) {
          (o.dqk.getAngularTestability = (i, a = !0) => {
            const u = t.findTestabilityInTree(i, a);
            if (null == u)
              throw new Error("Could not find testability for element.");
            return u;
          }),
            (o.dqk.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (o.dqk.getAllAngularRootElements = () => t.getAllRootElements()),
            o.dqk.frameworkStabilizers || (o.dqk.frameworkStabilizers = []),
            o.dqk.frameworkStabilizers.push((i) => {
              const a = o.dqk.getAllAngularTestabilities();
              let u = a.length,
                h = !1;
              const _ = function (b) {
                (h = h || b), u--, 0 == u && i(h);
              };
              a.forEach(function (b) {
                b.whenStable(_);
              });
            });
        }
        findTestabilityInTree(t, e, i) {
          if (null == e) return null;
          const a = t.getTestability(e);
          return null != a
            ? a
            : i
            ? L().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      let gc = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Zs = new o.OlP("EventManagerPlugins");
      let be = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((a) => (a.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, a) {
            return this._findPluginFor(i).addEventListener(e, i, a);
          }
          addGlobalEventListener(e, i, a) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, a);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const a = this._plugins;
            for (let u = 0; u < a.length; u++) {
              const h = a[u];
              if (h.supports(e)) return this._eventNameToPlugin.set(e, h), h;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(Zs), o.LFG(o.R0b));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class yt {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const a = L().getGlobalEventTarget(this._doc, t);
          if (!a)
            throw new Error(`Unsupported event target ${a} for event ${e}`);
          return this.addEventListener(a, e, i);
        }
      }
      let Ed = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((a) => {
                this._stylesSet.has(a) || (this._stylesSet.add(a), i.add(a));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Zt = (() => {
          class n extends Ed {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, a) {
              e.forEach((u) => {
                const h = this._doc.createElement("style");
                (h.textContent = u), a.push(i.appendChild(h));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(wd), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, a) => {
                this._addStylesToHost(e, a, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(wd));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G));
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function wd(n) {
        L().remove(n);
      }
      const qs = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        ui = /%COMP%/g;
      function mn(n, t, e) {
        for (let i = 0; i < t.length; i++) {
          let a = t[i];
          Array.isArray(a) ? mn(n, a, e) : ((a = a.replace(ui, n)), e.push(a));
        }
        return e;
      }
      function er(n) {
        return (t) => {
          if ("__ngUnwrap__" === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let Vr = (() => {
        class n {
          constructor(e, i, a) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = a),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Ti(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case o.ifc.Emulated: {
                let a = this.rendererByCompId.get(i.id);
                return (
                  a ||
                    ((a = new Dd(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, a)),
                  a.applyToHost(e),
                  a
                );
              }
              case 1:
              case o.ifc.ShadowDom:
                return new Md(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const a = mn(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(a),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(be), o.LFG(Zt), o.LFG(o.AFp));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Ti {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(qs[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, i) {
          t && t.insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = "string" == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, a) {
          if (a) {
            e = a + ":" + e;
            const u = qs[a];
            u ? t.setAttributeNS(u, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const a = qs[i];
            a ? t.removeAttributeNS(a, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, a) {
          a & (o.JOm.DashCase | o.JOm.Important)
            ? t.style.setProperty(e, i, a & o.JOm.Important ? "important" : "")
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & o.JOm.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, er(i))
            : this.eventManager.addEventListener(t, e, er(i));
        }
      }
      class Dd extends Ti {
        constructor(t, e, i, a) {
          super(t), (this.component = i);
          const u = mn(a + "-" + i.id, i.styles, []);
          e.addStyles(u),
            (this.contentAttr = "_ngcontent-%COMP%".replace(
              ui,
              a + "-" + i.id
            )),
            (this.hostAttr = "_nghost-%COMP%".replace(ui, a + "-" + i.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class Md extends Ti {
        constructor(t, e, i, a) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const u = mn(a.id, a.styles, []);
          for (let h = 0; h < u.length; h++) {
            const _ = document.createElement("style");
            (_.textContent = u[h]), this.shadowRoot.appendChild(_);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let Td = (() => {
        class n extends yt {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, a) {
            return (
              e.addEventListener(i, a, !1),
              () => this.removeEventListener(e, i, a)
            );
          }
          removeEventListener(e, i, a) {
            return e.removeEventListener(i, a);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(G));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Xa = ["alt", "control", "meta", "shift"],
        vC = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        ei = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        Ec = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let Js = (() => {
          class n extends yt {
            constructor(e) {
              super(e);
            }
            supports(e) {
              return null != n.parseEventName(e);
            }
            addEventListener(e, i, a) {
              const u = n.parseEventName(i),
                h = n.eventCallback(u.fullKey, a, this.manager.getZone());
              return this.manager
                .getZone()
                .runOutsideAngular(() => L().onAndCancel(e, u.domEventName, h));
            }
            static parseEventName(e) {
              const i = e.toLowerCase().split("."),
                a = i.shift();
              if (0 === i.length || ("keydown" !== a && "keyup" !== a))
                return null;
              const u = n._normalizeKey(i.pop());
              let h = "";
              if (
                (Xa.forEach((b) => {
                  const S = i.indexOf(b);
                  S > -1 && (i.splice(S, 1), (h += b + "."));
                }),
                (h += u),
                0 != i.length || 0 === u.length)
              )
                return null;
              const _ = {};
              return (_.domEventName = a), (_.fullKey = h), _;
            }
            static getEventFullKey(e) {
              let i = "",
                a = (function (n) {
                  let t = n.key;
                  if (null == t) {
                    if (((t = n.keyIdentifier), null == t))
                      return "Unidentified";
                    t.startsWith("U+") &&
                      ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                      3 === n.location && ei.hasOwnProperty(t) && (t = ei[t]));
                  }
                  return vC[t] || t;
                })(e);
              return (
                (a = a.toLowerCase()),
                " " === a ? (a = "space") : "." === a && (a = "dot"),
                Xa.forEach((u) => {
                  u != a && Ec[u](e) && (i += u + ".");
                }),
                (i += a),
                i
              );
            }
            static eventCallback(e, i, a) {
              return (u) => {
                n.getEventFullKey(u) === e && a.runGuarded(() => i(u));
              };
            }
            static _normalizeKey(e) {
              switch (e) {
                case "esc":
                  return "escape";
                default:
                  return e;
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G));
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Zo = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = (0, o.Yz7)({
              factory: function () {
                return (0, o.LFG)(qo);
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        qo = (() => {
          class n extends Zo {
            constructor(e) {
              super(), (this._doc = e);
            }
            sanitize(e, i) {
              if (null == i) return null;
              switch (e) {
                case o.q3G.NONE:
                  return i;
                case o.q3G.HTML:
                  return (0, o.qzn)(i, "HTML")
                    ? (0, o.z3N)(i)
                    : (0, o.EiD)(this._doc, String(i)).toString();
                case o.q3G.STYLE:
                  return (0, o.qzn)(i, "Style") ? (0, o.z3N)(i) : i;
                case o.q3G.SCRIPT:
                  if ((0, o.qzn)(i, "Script")) return (0, o.z3N)(i);
                  throw new Error("unsafe value used in a script context");
                case o.q3G.URL:
                  return (
                    (0, o.yhl)(i),
                    (0, o.qzn)(i, "URL") ? (0, o.z3N)(i) : (0, o.mCW)(String(i))
                  );
                case o.q3G.RESOURCE_URL:
                  if ((0, o.qzn)(i, "ResourceURL")) return (0, o.z3N)(i);
                  throw new Error(
                    "unsafe value used in a resource URL context (see https://g.co/ng/security#xss)"
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`
                  );
              }
            }
            bypassSecurityTrustHtml(e) {
              return (0, o.JVY)(e);
            }
            bypassSecurityTrustStyle(e) {
              return (0, o.L6k)(e);
            }
            bypassSecurityTrustScript(e) {
              return (0, o.eBb)(e);
            }
            bypassSecurityTrustUrl(e) {
              return (0, o.LAX)(e);
            }
            bypassSecurityTrustResourceUrl(e) {
              return (0, o.pB0)(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G));
            }),
            (n.ɵprov = (0, o.Yz7)({
              factory: function () {
                return (function (n) {
                  return new qo(n.get(G));
                })((0, o.LFG)(o.gxx));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      const nl = (0, o.eFA)(o._c5, "browser", [
          { provide: o.Lbi, useValue: "browser" },
          {
            provide: o.g9A,
            useValue: function () {
              pc.makeCurrent(), Qa.init();
            },
            multi: !0,
          },
          {
            provide: G,
            useFactory: function () {
              return (0, o.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        tp = [
          [],
          { provide: o.zSh, useValue: "root" },
          {
            provide: o.qLn,
            useFactory: function () {
              return new o.qLn();
            },
            deps: [],
          },
          { provide: Zs, useClass: Td, multi: !0, deps: [G, o.R0b, o.Lbi] },
          { provide: Zs, useClass: Js, multi: !0, deps: [G] },
          [],
          { provide: Vr, useClass: Vr, deps: [be, Zt, o.AFp] },
          { provide: o.FYo, useExisting: Vr },
          { provide: Ed, useExisting: Zt },
          { provide: Zt, useClass: Zt, deps: [G] },
          { provide: o.dDg, useClass: o.dDg, deps: [o.R0b] },
          { provide: be, useClass: be, deps: [Zs, o.R0b] },
          { provide: class {}, useClass: gc, deps: [] },
          [],
        ];
      let Ko = (() => {
        class n {
          constructor(e) {
            if (e)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: n,
              providers: [
                { provide: o.AFp, useValue: e.appId },
                { provide: mc, useExisting: o.AFp },
                Di,
              ],
            };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(n, 12));
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({ providers: tp, imports: [Xi, o.hGG] })),
          n
        );
      })();
      "undefined" != typeof window && window;
      class al {}
      const ji = "*";
      function Ii(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function Ln(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function kd(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function Lt(n) {
        return { type: 6, styles: n, offset: null };
      }
      function dn(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function bn(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function Od(n = null) {
        return { type: 9, options: n };
      }
      function Pd(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function Nd(n) {
        Promise.resolve(null).then(n);
      }
      class ps {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Nd(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this._started = !1;
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class to {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            a = 0;
          const u = this.players.length;
          0 == u
            ? Nd(() => this._onFinish())
            : this.players.forEach((h) => {
                h.onDone(() => {
                  ++e == u && this._onFinish();
                }),
                  h.onDestroy(() => {
                    ++i == u && this._onDestroy();
                  }),
                  h.onStart(() => {
                    ++a == u && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (h, _) => Math.max(h, _.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const a = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(a);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function no() {
        return "undefined" != typeof window && void 0 !== window.document;
      }
      function gs() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function di(n) {
        switch (n.length) {
          case 0:
            return new ps();
          case 1:
            return n[0];
          default:
            return new to(n);
        }
      }
      function Ac(n, t, e, i, a = {}, u = {}) {
        const h = [],
          _ = [];
        let b = -1,
          S = null;
        if (
          (i.forEach((T) => {
            const A = T.offset,
              B = A == b,
              j = (B && S) || {};
            Object.keys(T).forEach((X) => {
              let ve = X,
                De = T[X];
              if ("offset" !== X)
                switch (((ve = t.normalizePropertyName(ve, h)), De)) {
                  case "!":
                    De = a[X];
                    break;
                  case ji:
                    De = u[X];
                    break;
                  default:
                    De = t.normalizeStyleValue(X, ve, De, h);
                }
              j[ve] = De;
            }),
              B || _.push(j),
              (S = j),
              (b = A);
          }),
          h.length)
        ) {
          const T = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${T}${h.join(T)}`
          );
        }
        return _;
      }
      function Br(n, t, e, i) {
        switch (t) {
          case "start":
            n.onStart(() => i(e && op(e, "start", n)));
            break;
          case "done":
            n.onDone(() => i(e && op(e, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(e && op(e, "destroy", n)));
        }
      }
      function op(n, t, e) {
        const i = e.totalTime,
          u = ap(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            null == i ? n.totalTime : i,
            !!e.disabled
          ),
          h = n._data;
        return null != h && (u._data = h), u;
      }
      function ap(n, t, e, i, a = "", u = 0, h) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: a,
          totalTime: u,
          disabled: !!h,
        };
      }
      function Ai(n, t, e) {
        let i;
        return (
          n instanceof Map
            ? ((i = n.get(t)), i || n.set(t, (i = e)))
            : ((i = n[t]), i || (i = n[t] = e)),
          i
        );
      }
      function lp(n) {
        const t = n.indexOf(":");
        return [n.substring(1, t), n.substr(t + 1)];
      }
      let Fd = (n, t) => !1,
        Ld = (n, t) => !1,
        Qg = (n, t, e) => [];
      const Xg = gs();
      (Xg || "undefined" != typeof Element) &&
        ((Fd = no()
          ? (n, t) => {
              for (; t && t !== document.documentElement; ) {
                if (t === n) return !0;
                t = t.parentNode || t.host;
              }
              return !1;
            }
          : (n, t) => n.contains(t)),
        (Ld = (() => {
          if (Xg || Element.prototype.matches) return (n, t) => n.matches(t);
          {
            const n = Element.prototype,
              t =
                n.matchesSelector ||
                n.mozMatchesSelector ||
                n.msMatchesSelector ||
                n.oMatchesSelector ||
                n.webkitMatchesSelector;
            return t ? (e, i) => t.apply(e, [i]) : Ld;
          }
        })()),
        (Qg = (n, t, e) => {
          let i = [];
          if (e) {
            const a = n.querySelectorAll(t);
            for (let u = 0; u < a.length; u++) i.push(a[u]);
          } else {
            const a = n.querySelector(t);
            a && i.push(a);
          }
          return i;
        }));
      let ta = null,
        Bd = !1;
      function ll(n) {
        ta ||
          ((ta = ("undefined" != typeof document ? document.body : null) || {}),
          (Bd = !!ta.style && "WebkitAppearance" in ta.style));
        let t = !0;
        return (
          ta.style &&
            !(function (n) {
              return "ebkit" == n.substring(1, 6);
            })(n) &&
            ((t = n in ta.style),
            !t &&
              Bd &&
              (t =
                "Webkit" + n.charAt(0).toUpperCase() + n.substr(1) in
                ta.style)),
          t
        );
      }
      const dp = Ld,
        Ur = Fd,
        na = Qg;
      function zt(n) {
        const t = {};
        return (
          Object.keys(n).forEach((e) => {
            const i = e.replace(/([a-z])([A-Z])/g, "$1-$2");
            t[i] = n[e];
          }),
          t
        );
      }
      let io = (() => {
        class n {
          validateStyleProperty(e) {
            return ll(e);
          }
          matchesElement(e, i) {
            return dp(e, i);
          }
          containsElement(e, i) {
            return Ur(e, i);
          }
          query(e, i, a) {
            return na(e, i, a);
          }
          computeStyle(e, i, a) {
            return a || "";
          }
          animate(e, i, a, u, h, _ = [], b) {
            return new ps(a, u);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class ro {}
      ro.NOOP = new io();
      const xi = "ng-enter",
        so = "ng-leave",
        cl = "ng-trigger",
        ra = ".ng-trigger",
        fp = "ng-animating",
        xc = ".ng-animating";
      function _s(n) {
        if ("number" == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : Rc(parseFloat(t[1]), t[2]);
      }
      function Rc(n, t) {
        switch (t) {
          case "s":
            return 1e3 * n;
          default:
            return n;
        }
      }
      function Tn(n, t, e) {
        return n.hasOwnProperty("duration")
          ? n
          : (function (n, t, e) {
              let a,
                u = 0,
                h = "";
              if ("string" == typeof n) {
                const _ = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === _)
                  return (
                    t.push(`The provided timing value "${n}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                a = Rc(parseFloat(_[1]), _[2]);
                const b = _[3];
                null != b && (u = Rc(parseFloat(b), _[4]));
                const S = _[5];
                S && (h = S);
              } else a = n;
              if (!e) {
                let _ = !1,
                  b = t.length;
                a < 0 &&
                  (t.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (_ = !0)),
                  u < 0 &&
                    (t.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (_ = !0)),
                  _ &&
                    t.splice(
                      b,
                      0,
                      `The provided timing value "${n}" is invalid.`
                    );
              }
              return { duration: a, delay: u, easing: h };
            })(n, t, e);
      }
      function nr(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function ir(n, t, e = {}) {
        if (t) for (let i in n) e[i] = n[i];
        else nr(n, e);
        return e;
      }
      function kc(n, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function pp(n) {
        let t = "";
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += kc(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += kc(0, zd(e), n.style[e]));
        n.setAttribute("style", t);
      }
      function Gi(n, t, e) {
        n.style &&
          (Object.keys(t).forEach((i) => {
            const a = vs(i);
            e && !e.hasOwnProperty(i) && (e[i] = n.style[a]),
              (n.style[a] = t[i]);
          }),
          gs() && pp(n));
      }
      function ys(n, t) {
        n.style &&
          (Object.keys(t).forEach((e) => {
            const i = vs(e);
            n.style[i] = "";
          }),
          gs() && pp(n));
      }
      function ul(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : kd(n)) : n;
      }
      const oo = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function hl(n) {
        let t = [];
        if ("string" == typeof n) {
          let e;
          for (; (e = oo.exec(n)); ) t.push(e[1]);
          oo.lastIndex = 0;
        }
        return t;
      }
      function jd(n, t, e) {
        const i = n.toString(),
          a = i.replace(oo, (u, h) => {
            let _ = t[h];
            return (
              t.hasOwnProperty(h) ||
                (e.push(`Please provide a value for the animation param ${h}`),
                (_ = "")),
              _.toString()
            );
          });
        return a == i ? n : a;
      }
      function pr(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const Gd = /-+([a-z0-9])/g;
      function vs(n) {
        return n.replace(Gd, (...t) => t[1].toUpperCase());
      }
      function zd(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function mp(n, t) {
        return 0 === n || 0 === t;
      }
      function Oc(n, t, e) {
        const i = Object.keys(e);
        if (i.length && t.length) {
          let u = t[0],
            h = [];
          if (
            (i.forEach((_) => {
              u.hasOwnProperty(_) || h.push(_), (u[_] = e[_]);
            }),
            h.length)
          )
            for (var a = 1; a < t.length; a++) {
              let _ = t[a];
              h.forEach(function (b) {
                _[b] = Pc(n, b);
              });
            }
        }
        return t;
      }
      function In(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw new Error(
              `Unable to resolve animation metadata node #${t.type}`
            );
        }
      }
      function Pc(n, t) {
        return window.getComputedStyle(n)[t];
      }
      function lo(n, t) {
        const e = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function (n, t, e) {
                  if (":" == n[0]) {
                    const b = (function (n, t) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              `The transition alias value "${n}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(n, e);
                    if ("function" == typeof b) return void t.push(b);
                    n = b;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        `The provided transition expression "${n}" is not supported`
                      ),
                      t
                    );
                  const a = i[1],
                    u = i[2],
                    h = i[3];
                  t.push(_p(a, h));
                  "<" == u[0] && !("*" == a && "*" == h) && t.push(_p(h, a));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const qt = new Set(["true", "1"]),
        oa = new Set(["false", "0"]);
      function _p(n, t) {
        const e = qt.has(n) || oa.has(n),
          i = qt.has(t) || oa.has(t);
        return (a, u) => {
          let h = "*" == n || n == a,
            _ = "*" == t || t == u;
          return (
            !h && e && "boolean" == typeof a && (h = a ? qt.has(n) : oa.has(n)),
            !_ && i && "boolean" == typeof u && (_ = u ? qt.has(t) : oa.has(t)),
            h && _
          );
        };
      }
      const co = new RegExp("s*:selfs*,?", "g");
      function $d(n, t, e) {
        return new yp(n).build(t, e);
      }
      class yp {
        constructor(t) {
          this._driver = t;
        }
        build(t, e) {
          const i = new Gr(e);
          return this._resetContextStyleTimingState(i), In(this, ul(t), i);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = {}),
            (t.collectedStyles[""] = {}),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            a = (e.depCount = 0);
          const u = [],
            h = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            t.definitions.forEach((_) => {
              if ((this._resetContextStyleTimingState(e), 0 == _.type)) {
                const b = _,
                  S = b.name;
                S.toString()
                  .split(/\s*,\s*/)
                  .forEach((T) => {
                    (b.name = T), u.push(this.visitState(b, e));
                  }),
                  (b.name = S);
              } else if (1 == _.type) {
                const b = this.visitTransition(_, e);
                (i += b.queryCount), (a += b.depCount), h.push(b);
              } else
                e.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: t.name,
              states: u,
              transitions: h,
              queryCount: i,
              depCount: a,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            a = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const u = new Set(),
              h = a || {};
            if (
              (i.styles.forEach((_) => {
                if (rr(_)) {
                  const b = _;
                  Object.keys(b).forEach((S) => {
                    hl(b[S]).forEach((T) => {
                      h.hasOwnProperty(T) || u.add(T);
                    });
                  });
                }
              }),
              u.size)
            ) {
              const _ = pr(u.values());
              e.errors.push(
                `state("${
                  t.name
                }", ...) must define default values for all the following style substitutions: ${_.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: a ? { params: a } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = In(this, ul(t.animation), e);
          return {
            type: 1,
            matchers: lo(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: bs(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => In(this, i, e)),
            options: bs(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let a = 0;
          const u = t.steps.map((h) => {
            e.currentTime = i;
            const _ = In(this, h, e);
            return (a = Math.max(a, e.currentTime)), _;
          });
          return (
            (e.currentTime = a), { type: 3, steps: u, options: bs(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function (n, t) {
            let e = null;
            if (n.hasOwnProperty("duration")) e = n;
            else if ("number" == typeof n) return pl(Tn(n, t).duration, 0, "");
            const i = n;
            if (
              i
                .split(/\s+/)
                .some((u) => "{" == u.charAt(0) && "{" == u.charAt(1))
            ) {
              const u = pl(0, 0, "");
              return (u.dynamic = !0), (u.strValue = i), u;
            }
            return (e = e || Tn(i, t)), pl(e.duration, e.delay, e.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let a,
            u = t.styles ? t.styles : Lt({});
          if (5 == u.type) a = this.visitKeyframes(u, e);
          else {
            let h = t.styles,
              _ = !1;
            if (!h) {
              _ = !0;
              const S = {};
              i.easing && (S.easing = i.easing), (h = Lt(S));
            }
            e.currentTime += i.duration + i.delay;
            const b = this.visitStyle(h, e);
            (b.isEmptyStep = _), (a = b);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: a, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [];
          Array.isArray(t.styles)
            ? t.styles.forEach((h) => {
                "string" == typeof h
                  ? h == ji
                    ? i.push(h)
                    : e.errors.push(
                        `The provided style string value ${h} is not allowed.`
                      )
                  : i.push(h);
              })
            : i.push(t.styles);
          let a = !1,
            u = null;
          return (
            i.forEach((h) => {
              if (rr(h)) {
                const _ = h,
                  b = _.easing;
                if ((b && ((u = b), delete _.easing), !a))
                  for (let S in _)
                    if (_[S].toString().indexOf("{{") >= 0) {
                      a = !0;
                      break;
                    }
              }
            }),
            {
              type: 6,
              styles: i,
              easing: u,
              offset: t.offset,
              containsDynamicStyles: a,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let a = e.currentTime,
            u = e.currentTime;
          i && u > 0 && (u -= i.duration + i.delay),
            t.styles.forEach((h) => {
              "string" != typeof h &&
                Object.keys(h).forEach((_) => {
                  if (!this._driver.validateStyleProperty(_))
                    return void e.errors.push(
                      `The provided animation property "${_}" is not a supported CSS property for animations`
                    );
                  const b = e.collectedStyles[e.currentQuerySelector],
                    S = b[_];
                  let T = !0;
                  S &&
                    (u != a &&
                      u >= S.startTime &&
                      a <= S.endTime &&
                      (e.errors.push(
                        `The CSS property "${_}" that exists between the times of "${S.startTime}ms" and "${S.endTime}ms" is also being animated in a parallel animation between the times of "${u}ms" and "${a}ms"`
                      ),
                      (T = !1)),
                    (u = S.startTime)),
                    T && (b[_] = { startTime: u, endTime: a }),
                    e.options &&
                      (function (n, t, e) {
                        const i = t.params || {},
                          a = hl(n);
                        a.length &&
                          a.forEach((u) => {
                            i.hasOwnProperty(u) ||
                              e.push(
                                `Unable to resolve the local animation param ${u} in the given list of values`
                              );
                          });
                      })(h[_], e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              i
            );
          let u = 0;
          const h = [];
          let _ = !1,
            b = !1,
            S = 0;
          const T = t.steps.map((Ne) => {
            const qe = this._makeStyleAst(Ne, e);
            let Fe =
                null != qe.offset
                  ? qe.offset
                  : (function (n) {
                      if ("string" == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (rr(e) && e.hasOwnProperty("offset")) {
                            const i = e;
                            (t = parseFloat(i.offset)), delete i.offset;
                          }
                        });
                      else if (rr(n) && n.hasOwnProperty("offset")) {
                        const e = n;
                        (t = parseFloat(e.offset)), delete e.offset;
                      }
                      return t;
                    })(qe.styles),
              mt = 0;
            return (
              null != Fe && (u++, (mt = qe.offset = Fe)),
              (b = b || mt < 0 || mt > 1),
              (_ = _ || mt < S),
              (S = mt),
              h.push(mt),
              qe
            );
          });
          b &&
            e.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            _ &&
              e.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const A = t.steps.length;
          let B = 0;
          u > 0 && u < A
            ? e.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == u && (B = 1 / (A - 1));
          const j = A - 1,
            X = e.currentTime,
            ve = e.currentAnimateTimings,
            De = ve.duration;
          return (
            T.forEach((Ne, qe) => {
              const Fe = B > 0 ? (qe == j ? 1 : B * qe) : h[qe],
                mt = Fe * De;
              (e.currentTime = X + ve.delay + mt),
                (ve.duration = mt),
                this._validateStyleAst(Ne, e),
                (Ne.offset = Fe),
                i.styles.push(Ne);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: In(this, ul(t.animation), e),
            options: bs(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: bs(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: bs(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            a = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [u, h] = (function (n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (n = n.replace(co, "")),
              [
                (n = n
                  .replace(/@\*/g, ra)
                  .replace(/@\w+/g, (e) => ra + "-" + e.substr(1))
                  .replace(/:animating/g, xc)),
                t,
              ]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + " " + u : u),
            Ai(e.collectedStyles, e.currentQuerySelector, {});
          const _ = In(this, ul(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: u,
              limit: a.limit || 0,
              optional: !!a.optional,
              includeSelf: h,
              animation: _,
              originalSelector: t.selector,
              options: bs(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push("stagger() can only be used inside of query()");
          const i =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Tn(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: In(this, ul(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class Gr {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function rr(n) {
        return !Array.isArray(n) && "object" == typeof n;
      }
      function bs(n) {
        return (
          n
            ? (n = nr(n)).params &&
              (n.params = (function (n) {
                return n ? nr(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function pl(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function la(n, t, e, i, a, u, h = null, _ = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: a,
          delay: u,
          totalTime: a + u,
          easing: h,
          subTimeline: _,
        };
      }
      class ml {
        constructor() {
          this._map = new Map();
        }
        consume(t) {
          let e = this._map.get(t);
          return e ? this._map.delete(t) : (e = []), e;
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const ca = new RegExp(":enter", "g"),
        Yd = new RegExp(":leave", "g");
      function bp(n, t, e, i, a, u = {}, h = {}, _, b, S = []) {
        return new Cp().buildKeyframes(n, t, e, i, a, u, h, _, b, S);
      }
      class Cp {
        buildKeyframes(t, e, i, a, u, h, _, b, S, T = []) {
          S = S || new ml();
          const A = new Ep(t, e, S, a, u, T, []);
          (A.options = b),
            A.currentTimeline.setStyles([h], null, A.errors, b),
            In(this, i, A);
          const B = A.timelines.filter((j) => j.containsAnimation());
          if (B.length && Object.keys(_).length) {
            const j = B[B.length - 1];
            j.allowOnlyTimelineStyles() || j.setStyles([_], null, A.errors, b);
          }
          return B.length
            ? B.map((j) => j.buildKeyframes())
            : [la(e, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.consume(e.element);
          if (i) {
            const a = e.createSubContext(t.options),
              u = e.currentTimeline.currentTime,
              h = this._visitSubInstructions(i, a, a.options);
            u != h && e.transformIntoNewTimeline(h);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, i) {
          let u = e.currentTimeline.currentTime;
          const h = null != i.duration ? _s(i.duration) : null,
            _ = null != i.delay ? _s(i.delay) : null;
          return (
            0 !== h &&
              t.forEach((b) => {
                const S = e.appendInstructionToTimeline(b, h, _);
                u = Math.max(u, S.duration + S.delay);
              }),
            u
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            In(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let a = e;
          const u = t.options;
          if (
            u &&
            (u.params || u.delay) &&
            ((a = e.createSubContext(u)),
            a.transformIntoNewTimeline(),
            null != u.delay)
          ) {
            6 == a.previousNode.type &&
              (a.currentTimeline.snapshotCurrentStyles(),
              (a.previousNode = Fc));
            const h = _s(u.delay);
            a.delayNextStep(h);
          }
          t.steps.length &&
            (t.steps.forEach((h) => In(this, h, a)),
            a.currentTimeline.applyStylesToKeyframe(),
            a.subContextCount > i && a.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let a = e.currentTimeline.currentTime;
          const u = t.options && t.options.delay ? _s(t.options.delay) : 0;
          t.steps.forEach((h) => {
            const _ = e.createSubContext(t.options);
            u && _.delayNextStep(u),
              In(this, h, _),
              (a = Math.max(a, _.currentTimeline.currentTime)),
              i.push(_.currentTimeline);
          }),
            i.forEach((h) => e.currentTimeline.mergeTimelineCollectedStyles(h)),
            e.transformIntoNewTimeline(a),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return Tn(e.params ? jd(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            a = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), a.snapshotCurrentStyles());
          const u = t.style;
          5 == u.type
            ? this.visitKeyframes(u, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(u, e),
              a.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            a = e.currentAnimateTimings;
          !a && i.getCurrentStyleProperties().length && i.forwardFrame();
          const u = (a && a.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(u)
            : i.setStyles(t.styles, u, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            a = e.currentTimeline.duration,
            u = i.duration,
            _ = e.createSubContext().currentTimeline;
          (_.easing = i.easing),
            t.styles.forEach((b) => {
              _.forwardTime((b.offset || 0) * u),
                _.setStyles(b.styles, b.easing, e.errors, e.options),
                _.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(_),
            e.transformIntoNewTimeline(a + u),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            a = t.options || {},
            u = a.delay ? _s(a.delay) : 0;
          u &&
            (6 === e.previousNode.type ||
              (0 == i &&
                e.currentTimeline.getCurrentStyleProperties().length)) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Fc));
          let h = i;
          const _ = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!a.optional,
            e.errors
          );
          e.currentQueryTotal = _.length;
          let b = null;
          _.forEach((S, T) => {
            e.currentQueryIndex = T;
            const A = e.createSubContext(t.options, S);
            u && A.delayNextStep(u),
              S === e.element && (b = A.currentTimeline),
              In(this, t.animation, A),
              A.currentTimeline.applyStylesToKeyframe(),
              (h = Math.max(h, A.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(h),
            b &&
              (e.currentTimeline.mergeTimelineCollectedStyles(b),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            a = e.currentTimeline,
            u = t.timings,
            h = Math.abs(u.duration),
            _ = h * (e.currentQueryTotal - 1);
          let b = h * e.currentQueryIndex;
          switch (u.duration < 0 ? "reverse" : u.easing) {
            case "reverse":
              b = _ - b;
              break;
            case "full":
              b = i.currentStaggerTime;
          }
          const T = e.currentTimeline;
          b && T.delayNextStep(b);
          const A = T.currentTime;
          In(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              a.currentTime - A + (a.startTime - i.currentTimeline.startTime));
        }
      }
      const Fc = {};
      class Ep {
        constructor(t, e, i, a, u, h, _, b) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = a),
            (this._leaveClassName = u),
            (this.errors = h),
            (this.timelines = _),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Fc),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = b || new Lc(this._driver, e, 0)),
            _.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let a = this.options;
          null != i.duration && (a.duration = _s(i.duration)),
            null != i.delay && (a.delay = _s(i.delay));
          const u = i.params;
          if (u) {
            let h = a.params;
            h || (h = this.options.params = {}),
              Object.keys(u).forEach((_) => {
                (!e || !h.hasOwnProperty(_)) &&
                  (h[_] = jd(u[_], h, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((a) => {
                i[a] = e[a];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const a = e || this.element,
            u = new Ep(
              this._driver,
              a,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(a, i || 0)
            );
          return (
            (u.previousNode = this.previousNode),
            (u.currentAnimateTimings = this.currentAnimateTimings),
            (u.options = this._copyOptions()),
            u.updateOptions(t),
            (u.currentQueryIndex = this.currentQueryIndex),
            (u.currentQueryTotal = this.currentQueryTotal),
            (u.parentContext = this),
            this.subContextCount++,
            u
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = Fc),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const a = {
              duration: null != e ? e : t.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != i ? i : 0) +
                t.delay,
              easing: "",
            },
            u = new wp(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              a,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(u), a;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, a, u, h) {
          let _ = [];
          if ((a && _.push(this.element), t.length > 0)) {
            t = (t = t.replace(ca, "." + this._enterClassName)).replace(
              Yd,
              "." + this._leaveClassName
            );
            let S = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (S = i < 0 ? S.slice(S.length + i, S.length) : S.slice(0, i)),
              _.push(...S);
          }
          return (
            !u &&
              0 == _.length &&
              h.push(
                `\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`
              ),
            _
          );
        }
      }
      class Lc {
        constructor(t, e, i, a) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = a),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new Lc(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          (this._localTimelineStyles[t] = e),
            (this._globalTimelineStyles[t] = e),
            (this._styleSummary[t] = { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && (this._previousKeyframe.easing = t),
            Object.keys(this._globalTimelineStyles).forEach((e) => {
              (this._backFill[e] = this._globalTimelineStyles[e] || ji),
                (this._currentKeyframe[e] = ji);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(t, e, i, a) {
          e && (this._previousKeyframe.easing = e);
          const u = (a && a.params) || {},
            h = (function (n, t) {
              const e = {};
              let i;
              return (
                n.forEach((a) => {
                  "*" === a
                    ? ((i = i || Object.keys(t)),
                      i.forEach((u) => {
                        e[u] = ji;
                      }))
                    : ir(a, !1, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          Object.keys(h).forEach((_) => {
            const b = jd(h[_], u, i);
            (this._pendingStyles[_] = b),
              this._localTimelineStyles.hasOwnProperty(_) ||
                (this._backFill[_] = this._globalTimelineStyles.hasOwnProperty(
                  _
                )
                  ? this._globalTimelineStyles[_]
                  : ji),
              this._updateStyle(_, b);
          });
        }
        applyStylesToKeyframe() {
          const t = this._pendingStyles,
            e = Object.keys(t);
          0 != e.length &&
            ((this._pendingStyles = {}),
            e.forEach((i) => {
              this._currentKeyframe[i] = t[i];
            }),
            Object.keys(this._localTimelineStyles).forEach((i) => {
              this._currentKeyframe.hasOwnProperty(i) ||
                (this._currentKeyframe[i] = this._localTimelineStyles[i]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((t) => {
            const e = this._localTimelineStyles[t];
            (this._pendingStyles[t] = e), this._updateStyle(t, e);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          Object.keys(t._styleSummary).forEach((e) => {
            const i = this._styleSummary[e],
              a = t._styleSummary[e];
            (!i || a.time > i.time) && this._updateStyle(e, a.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let a = [];
          this._keyframes.forEach((_, b) => {
            const S = ir(_, !0);
            Object.keys(S).forEach((T) => {
              const A = S[T];
              "!" == A ? t.add(T) : A == ji && e.add(T);
            }),
              i || (S.offset = b / this.duration),
              a.push(S);
          });
          const u = t.size ? pr(t.values()) : [],
            h = e.size ? pr(e.values()) : [];
          if (i) {
            const _ = a[0],
              b = nr(_);
            (_.offset = 0), (b.offset = 1), (a = [_, b]);
          }
          return la(
            this.element,
            a,
            u,
            h,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class wp extends Lc {
        constructor(t, e, i, a, u, h, _ = !1) {
          super(t, e, h.delay),
            (this.keyframes = i),
            (this.preStyleProps = a),
            (this.postStyleProps = u),
            (this._stretchStartingKeyframe = _),
            (this.timings = {
              duration: h.duration,
              delay: h.delay,
              easing: h.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: a } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const u = [],
              h = i + e,
              _ = e / h,
              b = ir(t[0], !1);
            (b.offset = 0), u.push(b);
            const S = ir(t[0], !1);
            (S.offset = Sp(_)), u.push(S);
            const T = t.length - 1;
            for (let A = 1; A <= T; A++) {
              let B = ir(t[A], !1);
              (B.offset = Sp((e + B.offset * i) / h)), u.push(B);
            }
            (i = h), (e = 0), (a = ""), (t = u);
          }
          return la(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            a,
            !0
          );
        }
      }
      function Sp(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class Cs {}
      class n_ extends Cs {
        normalizePropertyName(t, e) {
          return vs(t);
        }
        normalizeStyleValue(t, e, i, a) {
          let u = "";
          const h = i.toString().trim();
          if (Bc[e] && 0 !== i && "0" !== i)
            if ("number" == typeof i) u = "px";
            else {
              const _ = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              _ &&
                0 == _[1].length &&
                a.push(`Please provide a CSS unit value for ${t}:${i}`);
            }
          return h + u;
        }
      }
      const Bc = (() =>
        (function (n) {
          const t = {};
          return n.forEach((e) => (t[e] = !0)), t;
        })(
          "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
            ","
          )
        ))();
      function Zd(n, t, e, i, a, u, h, _, b, S, T, A, B) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: a,
          fromState: e,
          fromStyles: u,
          toState: i,
          toStyles: h,
          timelines: _,
          queriedElements: b,
          preStyleProps: S,
          postStyleProps: T,
          totalTime: A,
          errors: B,
        };
      }
      const ua = {};
      class qd {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, a) {
          return (function (n, t, e, i, a) {
            return n.some((u) => u(t, e, i, a));
          })(this.ast.matchers, t, e, i, a);
        }
        buildStyles(t, e, i) {
          const a = this._stateStyles["*"],
            u = this._stateStyles[t],
            h = a ? a.buildStyles(e, i) : {};
          return u ? u.buildStyles(e, i) : h;
        }
        build(t, e, i, a, u, h, _, b, S, T) {
          const A = [],
            B = (this.ast.options && this.ast.options.params) || ua,
            X = this.buildStyles(i, (_ && _.params) || ua, A),
            ve = (b && b.params) || ua,
            De = this.buildStyles(a, ve, A),
            Ne = new Set(),
            qe = new Map(),
            Fe = new Map(),
            mt = "void" === a,
            Fi = { params: Object.assign(Object.assign({}, B), ve) },
            ja = T ? [] : bp(t, e, this.ast.animation, u, h, X, De, Fi, S, A);
          let dr = 0;
          if (
            (ja.forEach((oc) => {
              dr = Math.max(oc.duration + oc.delay, dr);
            }),
            A.length)
          )
            return Zd(
              e,
              this._triggerName,
              i,
              a,
              mt,
              X,
              De,
              [],
              [],
              qe,
              Fe,
              dr,
              A
            );
          ja.forEach((oc) => {
            const ac = oc.element,
              WF = Ai(qe, ac, {});
            oc.preStyleProps.forEach((Nf) => (WF[Nf] = !0));
            const cC = Ai(Fe, ac, {});
            oc.postStyleProps.forEach((Nf) => (cC[Nf] = !0)),
              ac !== e && Ne.add(ac);
          });
          const sc = pr(Ne.values());
          return Zd(e, this._triggerName, i, a, mt, X, De, ja, sc, qe, Fe, dr);
        }
      }
      class r_ {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = {},
            a = nr(this.defaultParams);
          return (
            Object.keys(t).forEach((u) => {
              const h = t[u];
              null != h && (a[u] = h);
            }),
            this.styles.styles.forEach((u) => {
              if ("string" != typeof u) {
                const h = u;
                Object.keys(h).forEach((_) => {
                  let b = h[_];
                  b.length > 1 && (b = jd(b, a, e));
                  const S = this.normalizer.normalizePropertyName(_, e);
                  (b = this.normalizer.normalizeStyleValue(_, S, b, e)),
                    (i[S] = b);
                });
              }
            }),
            i
          );
        }
      }
      class o_ {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = {}),
            e.states.forEach((a) => {
              this.states[a.name] = new r_(
                a.style,
                (a.options && a.options.params) || {},
                i
              );
            }),
            l_(this.states, "true", "1"),
            l_(this.states, "false", "0"),
            e.transitions.forEach((a) => {
              this.transitionFactories.push(new qd(t, a, this.states));
            }),
            (this.fallbackTransition = (function (n, t, e) {
              return new qd(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(h, _) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, a) {
          return (
            this.transitionFactories.find((h) => h.match(t, e, i, a)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function l_(n, t, e) {
        n.hasOwnProperty(t)
          ? n.hasOwnProperty(e) || (n[e] = n[t])
          : n.hasOwnProperty(e) && (n[t] = n[e]);
      }
      const ti = new ml();
      class da {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            a = $d(this._driver, e, i);
          if (i.length)
            throw new Error(
              `Unable to build the animation due to the following errors: ${i.join(
                "\n"
              )}`
            );
          this._animations[t] = a;
        }
        _buildPlayer(t, e, i) {
          const a = t.element,
            u = Ac(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            a,
            u,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const a = [],
            u = this._animations[t];
          let h;
          const _ = new Map();
          if (
            (u
              ? ((h = bp(this._driver, e, u, xi, so, {}, {}, i, ti, a)),
                h.forEach((T) => {
                  const A = Ai(_, T.element, {});
                  T.postStyleProps.forEach((B) => (A[B] = null));
                }))
              : (a.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (h = [])),
            a.length)
          )
            throw new Error(
              `Unable to create the animation due to the following errors: ${a.join(
                "\n"
              )}`
            );
          _.forEach((T, A) => {
            Object.keys(T).forEach((B) => {
              T[B] = this._driver.computeStyle(A, B, ji);
            });
          });
          const S = di(
            h.map((T) => {
              const A = _.get(T.element);
              return this._buildPlayer(T, {}, A);
            })
          );
          return (
            (this._playersById[t] = S),
            S.onDestroy(() => this.destroy(t)),
            this.players.push(S),
            S
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), delete this._playersById[t];
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById[t];
          if (!e)
            throw new Error(
              `Unable to find the timeline player referenced by ${t}`
            );
          return e;
        }
        listen(t, e, i, a) {
          const u = ap(e, "", "", "");
          return Br(this._getPlayer(t), i, u, a), () => {};
        }
        command(t, e, i, a) {
          if ("register" == i) return void this.register(t, a[0]);
          if ("create" == i) return void this.create(t, e, a[0] || {});
          const u = this._getPlayer(t);
          switch (i) {
            case "play":
              u.play();
              break;
            case "pause":
              u.pause();
              break;
            case "reset":
              u.reset();
              break;
            case "restart":
              u.restart();
              break;
            case "finish":
              u.finish();
              break;
            case "init":
              u.init();
              break;
            case "setPosition":
              u.setPosition(parseFloat(a[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const Kd = "ng-animate-queued",
        Tp = "ng-animate-disabled",
        Hc = ".ng-animate-disabled",
        jc = [],
        Ip = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        d_ = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        fi = "__ng_removed";
      class Jd {
        constructor(t, e = "") {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty("value");
          if (((this.value = null != (n = i ? t.value : t) ? n : null), i)) {
            const u = nr(t);
            delete u.value, (this.options = u);
          } else this.options = {};
          var n;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((a) => {
              null == i[a] && (i[a] = e[a]);
            });
          }
        }
      }
      const Gc = "void",
        Xd = new Jd(Gc);
      class _l {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            pi(e, this._hostClassName);
        }
        listen(t, e, i, a) {
          if (!this._triggers.hasOwnProperty(e))
            throw new Error(
              `Unable to listen on the animation trigger event "${i}" because the animation trigger "${e}" doesn't exist!`
            );
          if (null == i || 0 == i.length)
            throw new Error(
              `Unable to listen on the animation trigger "${e}" because the provided event is undefined!`
            );
          if ("start" != (n = i) && "done" != n)
            throw new Error(
              `The provided animation trigger event "${i}" for the animation trigger "${e}" is not supported!`
            );
          var n;
          const u = Ai(this._elementListeners, t, []),
            h = { name: e, phase: i, callback: a };
          u.push(h);
          const _ = Ai(this._engine.statesByElement, t, {});
          return (
            _.hasOwnProperty(e) ||
              (pi(t, cl), pi(t, cl + "-" + e), (_[e] = Xd)),
            () => {
              this._engine.afterFlush(() => {
                const b = u.indexOf(h);
                b >= 0 && u.splice(b, 1), this._triggers[e] || delete _[e];
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers[t] && ((this._triggers[t] = e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers[t];
          if (!e)
            throw new Error(
              `The provided animation trigger "${t}" has not been registered!`
            );
          return e;
        }
        trigger(t, e, i, a = !0) {
          const u = this._getTrigger(e),
            h = new Ri(this.id, e, t);
          let _ = this._engine.statesByElement.get(t);
          _ ||
            (pi(t, cl),
            pi(t, cl + "-" + e),
            this._engine.statesByElement.set(t, (_ = {})));
          let b = _[e];
          const S = new Jd(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              b &&
              S.absorbOptions(b.options),
            (_[e] = S),
            b || (b = Xd),
            S.value !== Gc && b.value === S.value)
          ) {
            if (
              !(function (n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let a = 0; a < e.length; a++) {
                  const u = e[a];
                  if (!t.hasOwnProperty(u) || n[u] !== t[u]) return !1;
                }
                return !0;
              })(b.params, S.params)
            ) {
              const ve = [],
                De = u.matchStyles(b.value, b.params, ve),
                Ne = u.matchStyles(S.value, S.params, ve);
              ve.length
                ? this._engine.reportError(ve)
                : this._engine.afterFlush(() => {
                    ys(t, De), Gi(t, Ne);
                  });
            }
            return;
          }
          const B = Ai(this._engine.playersByElement, t, []);
          B.forEach((ve) => {
            ve.namespaceId == this.id &&
              ve.triggerName == e &&
              ve.queued &&
              ve.destroy();
          });
          let j = u.matchTransition(b.value, S.value, t, S.params),
            X = !1;
          if (!j) {
            if (!a) return;
            (j = u.fallbackTransition), (X = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: j,
              fromState: b,
              toState: S,
              player: h,
              isFallbackTransition: X,
            }),
            X ||
              (pi(t, Kd),
              h.onStart(() => {
                vl(t, Kd);
              })),
            h.onDone(() => {
              let ve = this.players.indexOf(h);
              ve >= 0 && this.players.splice(ve, 1);
              const De = this._engine.playersByElement.get(t);
              if (De) {
                let Ne = De.indexOf(h);
                Ne >= 0 && De.splice(Ne, 1);
              }
            }),
            this.players.push(h),
            B.push(h),
            h
          );
        }
        deregister(t) {
          delete this._triggers[t],
            this._engine.statesByElement.forEach((e, i) => {
              delete e[t];
            }),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((a) => a.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, ra, !0);
          i.forEach((a) => {
            if (a[fi]) return;
            const u = this._engine.fetchNamespacesByElement(a);
            u.size
              ? u.forEach((h) => h.triggerLeaveAnimation(a, e, !1, !0))
              : this.clearElementCache(a);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((a) => this.clearElementCache(a))
            );
        }
        triggerLeaveAnimation(t, e, i, a) {
          const u = this._engine.statesByElement.get(t);
          if (u) {
            const h = [];
            if (
              (Object.keys(u).forEach((_) => {
                if (this._triggers[_]) {
                  const b = this.trigger(t, _, Gc, a);
                  b && h.push(b);
                }
              }),
              h.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e),
                i && di(h).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const a = new Set();
            e.forEach((u) => {
              const h = u.name;
              if (a.has(h)) return;
              a.add(h);
              const b = this._triggers[h].fallbackTransition,
                S = i[h] || Xd,
                T = new Jd(Gc),
                A = new Ri(this.id, h, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: h,
                  transition: b,
                  fromState: S,
                  toState: T,
                  player: A,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let a = !1;
          if (i.totalAnimations) {
            const u = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (u && u.length) a = !0;
            else {
              let h = t;
              for (; (h = h.parentNode); )
                if (i.statesByElement.get(h)) {
                  a = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), a))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const u = t[fi];
            (!u || u === Ip) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          pi(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const a = i.player;
              if (a.destroyed) return;
              const u = i.element,
                h = this._elementListeners.get(u);
              h &&
                h.forEach((_) => {
                  if (_.name == i.triggerName) {
                    const b = ap(
                      u,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (b._data = t), Br(i.player, _.phase, b, _.callback);
                  }
                }),
                a.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      a.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, a) => {
              const u = i.transition.ast.depCount,
                h = a.transition.ast.depCount;
              return 0 == u || 0 == h
                ? u - h
                : this._engine.driver.containsElement(i.element, a.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class Ap {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (a, u) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new _l(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList.length - 1;
          if (i >= 0) {
            let a = !1;
            for (let u = i; u >= 0; u--)
              if (
                this.driver.containsElement(
                  this._namespaceList[u].hostElement,
                  e
                )
              ) {
                this._namespaceList.splice(u + 1, 0, t), (a = !0);
                break;
              }
            a || this._namespaceList.splice(0, 0, t);
          } else this._namespaceList.push(t);
          return this.namespacesByHostElement.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let a = this._namespaceLookup[t];
          a && a.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const a = this._namespaceList.indexOf(i);
            a >= 0 && this._namespaceList.splice(a, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i) {
            const a = Object.keys(i);
            for (let u = 0; u < a.length; u++) {
              const h = i[a[u]].namespaceId;
              if (h) {
                const _ = this._fetchNamespace(h);
                _ && e.add(_);
              }
            }
          }
          return e;
        }
        trigger(t, e, i, a) {
          if (yl(e)) {
            const u = this._fetchNamespace(t);
            if (u) return u.trigger(e, i, a), !0;
          }
          return !1;
        }
        insertNode(t, e, i, a) {
          if (!yl(e)) return;
          const u = e[fi];
          if (u && u.setForRemoval) {
            (u.setForRemoval = !1), (u.setForMove = !0);
            const h = this.collectedLeaveElements.indexOf(e);
            h >= 0 && this.collectedLeaveElements.splice(h, 1);
          }
          if (t) {
            const h = this._fetchNamespace(t);
            h && h.insertNode(e, i);
          }
          a && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), pi(t, Tp))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), vl(t, Tp));
        }
        removeNode(t, e, i, a) {
          if (yl(e)) {
            const u = t ? this._fetchNamespace(t) : null;
            if (
              (u ? u.removeNode(e, a) : this.markElementAsRemoved(t, e, !1, a),
              i)
            ) {
              const h = this.namespacesByHostElement.get(e);
              h && h.id !== t && h.removeNode(e, a);
            }
          } else this._onRemovalComplete(e, a);
        }
        markElementAsRemoved(t, e, i, a) {
          this.collectedLeaveElements.push(e),
            (e[fi] = {
              namespaceId: t,
              setForRemoval: a,
              hasAnimation: i,
              removedBeforeQueried: !1,
            });
        }
        listen(t, e, i, a, u) {
          return yl(e) ? this._fetchNamespace(t).listen(e, i, a, u) : () => {};
        }
        _buildInstruction(t, e, i, a, u) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            a,
            t.fromState.options,
            t.toState.options,
            e,
            u
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, ra, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, xc, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return di(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[fi];
          if (e && e.setForRemoval) {
            if (((t[fi] = Ip), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          this.driver.matchesElement(t, Hc) &&
            this.markElementAsDisabled(t, !1),
            this.driver.query(t, Hc, !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, a) =>
                this._balanceNamespaceList(i, a)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              pi(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let a = 0; a < i.length; a++) i[a]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? di(e).onDone(() => {
                    i.forEach((a) => a());
                  })
                : i.forEach((a) => a());
          }
        }
        reportError(t) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${t.join(
              "\n"
            )}`
          );
        }
        _flushAnimations(t, e) {
          const i = new ml(),
            a = [],
            u = new Map(),
            h = [],
            _ = new Map(),
            b = new Map(),
            S = new Map(),
            T = new Set();
          this.disabledNodes.forEach((Le) => {
            T.add(Le);
            const Xe = this.driver.query(Le, ".ng-animate-queued", !0);
            for (let ht = 0; ht < Xe.length; ht++) T.add(Xe[ht]);
          });
          const A = this.bodyNode,
            B = Array.from(this.statesByElement.keys()),
            j = f_(B, this.collectedEnterElements),
            X = new Map();
          let ve = 0;
          j.forEach((Le, Xe) => {
            const ht = xi + ve++;
            X.set(Xe, ht), Le.forEach((Vt) => pi(Vt, ht));
          });
          const De = [],
            Ne = new Set(),
            qe = new Set();
          for (let Le = 0; Le < this.collectedLeaveElements.length; Le++) {
            const Xe = this.collectedLeaveElements[Le],
              ht = Xe[fi];
            ht &&
              ht.setForRemoval &&
              (De.push(Xe),
              Ne.add(Xe),
              ht.hasAnimation
                ? this.driver
                    .query(Xe, ".ng-star-inserted", !0)
                    .forEach((Vt) => Ne.add(Vt))
                : qe.add(Xe));
          }
          const Fe = new Map(),
            mt = f_(B, Array.from(Ne));
          mt.forEach((Le, Xe) => {
            const ht = so + ve++;
            Fe.set(Xe, ht), Le.forEach((Vt) => pi(Vt, ht));
          }),
            t.push(() => {
              j.forEach((Le, Xe) => {
                const ht = X.get(Xe);
                Le.forEach((Vt) => vl(Vt, ht));
              }),
                mt.forEach((Le, Xe) => {
                  const ht = Fe.get(Xe);
                  Le.forEach((Vt) => vl(Vt, ht));
                }),
                De.forEach((Le) => {
                  this.processLeaveNode(Le);
                });
            });
          const Fi = [],
            ja = [];
          for (let Le = this._namespaceList.length - 1; Le >= 0; Le--)
            this._namespaceList[Le].drainQueuedTransitions(e).forEach((ht) => {
              const Vt = ht.player,
                Ei = ht.element;
              if ((Fi.push(Vt), this.collectedEnterElements.length)) {
                const za = Ei[fi];
                if (za && za.setForMove) return void Vt.destroy();
              }
              const Ga = !A || !this.driver.containsElement(A, Ei),
                ss = Fe.get(Ei),
                id = X.get(Ei),
                Rn = this._buildInstruction(ht, i, id, ss, Ga);
              if (Rn.errors && Rn.errors.length) ja.push(Rn);
              else {
                if (Ga)
                  return (
                    Vt.onStart(() => ys(Ei, Rn.fromStyles)),
                    Vt.onDestroy(() => Gi(Ei, Rn.toStyles)),
                    void a.push(Vt)
                  );
                if (ht.isFallbackTransition)
                  return (
                    Vt.onStart(() => ys(Ei, Rn.fromStyles)),
                    Vt.onDestroy(() => Gi(Ei, Rn.toStyles)),
                    void a.push(Vt)
                  );
                Rn.timelines.forEach((za) => (za.stretchStartingKeyframe = !0)),
                  i.append(Ei, Rn.timelines),
                  h.push({ instruction: Rn, player: Vt, element: Ei }),
                  Rn.queriedElements.forEach((za) => Ai(_, za, []).push(Vt)),
                  Rn.preStyleProps.forEach((za, uC) => {
                    const RD = Object.keys(za);
                    if (RD.length) {
                      let Ff = b.get(uC);
                      Ff || b.set(uC, (Ff = new Set())),
                        RD.forEach((rk) => Ff.add(rk));
                    }
                  }),
                  Rn.postStyleProps.forEach((za, uC) => {
                    const RD = Object.keys(za);
                    let Ff = S.get(uC);
                    Ff || S.set(uC, (Ff = new Set())),
                      RD.forEach((rk) => Ff.add(rk));
                  });
              }
            });
          if (ja.length) {
            const Le = [];
            ja.forEach((Xe) => {
              Le.push(`@${Xe.triggerName} has failed due to:\n`),
                Xe.errors.forEach((ht) => Le.push(`- ${ht}\n`));
            }),
              Fi.forEach((Xe) => Xe.destroy()),
              this.reportError(Le);
          }
          const dr = new Map(),
            sc = new Map();
          h.forEach((Le) => {
            const Xe = Le.element;
            i.has(Xe) &&
              (sc.set(Xe, Xe),
              this._beforeAnimationBuild(
                Le.player.namespaceId,
                Le.instruction,
                dr
              ));
          }),
            a.forEach((Le) => {
              const Xe = Le.element;
              this._getPreviousPlayers(
                Xe,
                !1,
                Le.namespaceId,
                Le.triggerName,
                null
              ).forEach((Vt) => {
                Ai(dr, Xe, []).push(Vt), Vt.destroy();
              });
            });
          const oc = De.filter((Le) => Pp(Le, b, S)),
            ac = new Map();
          h_(ac, this.driver, qe, S, ji).forEach((Le) => {
            Pp(Le, b, S) && oc.push(Le);
          });
          const cC = new Map();
          j.forEach((Le, Xe) => {
            h_(cC, this.driver, new Set(Le), b, "!");
          }),
            oc.forEach((Le) => {
              const Xe = ac.get(Le),
                ht = cC.get(Le);
              ac.set(Le, Object.assign(Object.assign({}, Xe), ht));
            });
          const Nf = [],
            YF = [],
            ZF = {};
          h.forEach((Le) => {
            const { element: Xe, player: ht, instruction: Vt } = Le;
            if (i.has(Xe)) {
              if (T.has(Xe))
                return (
                  ht.onDestroy(() => Gi(Xe, Vt.toStyles)),
                  (ht.disabled = !0),
                  ht.overrideTotalTime(Vt.totalTime),
                  void a.push(ht)
                );
              let Ei = ZF;
              if (sc.size > 1) {
                let ss = Xe;
                const id = [];
                for (; (ss = ss.parentNode); ) {
                  const Rn = sc.get(ss);
                  if (Rn) {
                    Ei = Rn;
                    break;
                  }
                  id.push(ss);
                }
                id.forEach((Rn) => sc.set(Rn, Ei));
              }
              const Ga = this._buildAnimation(
                ht.namespaceId,
                Vt,
                dr,
                u,
                cC,
                ac
              );
              if ((ht.setRealPlayer(Ga), Ei === ZF)) Nf.push(ht);
              else {
                const ss = this.playersByElement.get(Ei);
                ss && ss.length && (ht.parentPlayer = di(ss)), a.push(ht);
              }
            } else
              ys(Xe, Vt.fromStyles),
                ht.onDestroy(() => Gi(Xe, Vt.toStyles)),
                YF.push(ht),
                T.has(Xe) && a.push(ht);
          }),
            YF.forEach((Le) => {
              const Xe = u.get(Le.element);
              if (Xe && Xe.length) {
                const ht = di(Xe);
                Le.setRealPlayer(ht);
              }
            }),
            a.forEach((Le) => {
              Le.parentPlayer
                ? Le.syncPlayerEvents(Le.parentPlayer)
                : Le.destroy();
            });
          for (let Le = 0; Le < De.length; Le++) {
            const Xe = De[Le],
              ht = Xe[fi];
            if ((vl(Xe, so), ht && ht.hasAnimation)) continue;
            let Vt = [];
            if (_.size) {
              let Ga = _.get(Xe);
              Ga && Ga.length && Vt.push(...Ga);
              let ss = this.driver.query(Xe, xc, !0);
              for (let id = 0; id < ss.length; id++) {
                let Rn = _.get(ss[id]);
                Rn && Rn.length && Vt.push(...Rn);
              }
            }
            const Ei = Vt.filter((Ga) => !Ga.destroyed);
            Ei.length ? p_(this, Xe, Ei) : this.processLeaveNode(Xe);
          }
          return (
            (De.length = 0),
            Nf.forEach((Le) => {
              this.players.push(Le),
                Le.onDone(() => {
                  Le.destroy();
                  const Xe = this.players.indexOf(Le);
                  this.players.splice(Xe, 1);
                }),
                Le.play();
            }),
            Nf
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const a = e[fi];
          return (
            a && a.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, a, u) {
          let h = [];
          if (e) {
            const _ = this.playersByQueriedElement.get(t);
            _ && (h = _);
          } else {
            const _ = this.playersByElement.get(t);
            if (_) {
              const b = !u || u == Gc;
              _.forEach((S) => {
                S.queued || (!b && S.triggerName != a) || h.push(S);
              });
            }
          }
          return (
            (i || a) &&
              (h = h.filter(
                (_) => !((i && i != _.namespaceId) || (a && a != _.triggerName))
              )),
            h
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const u = e.element,
            h = e.isRemovalTransition ? void 0 : t,
            _ = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const b of e.timelines) {
            const S = b.element,
              T = S !== u,
              A = Ai(i, S, []);
            this._getPreviousPlayers(S, T, h, _, e.toState).forEach((j) => {
              const X = j.getRealPlayer();
              X.beforeDestroy && X.beforeDestroy(), j.destroy(), A.push(j);
            });
          }
          ys(u, e.fromStyles);
        }
        _buildAnimation(t, e, i, a, u, h) {
          const _ = e.triggerName,
            b = e.element,
            S = [],
            T = new Set(),
            A = new Set(),
            B = e.timelines.map((X) => {
              const ve = X.element;
              T.add(ve);
              const De = ve[fi];
              if (De && De.removedBeforeQueried)
                return new ps(X.duration, X.delay);
              const Ne = ve !== b,
                qe = (function (n) {
                  const t = [];
                  return Op(n, t), t;
                })((i.get(ve) || jc).map((dr) => dr.getRealPlayer())).filter(
                  (dr) => !!dr.element && dr.element === ve
                ),
                Fe = u.get(ve),
                mt = h.get(ve),
                Fi = Ac(0, this._normalizer, 0, X.keyframes, Fe, mt),
                ja = this._buildPlayer(X, Fi, qe);
              if ((X.subTimeline && a && A.add(ve), Ne)) {
                const dr = new Ri(t, _, ve);
                dr.setRealPlayer(ja), S.push(dr);
              }
              return ja;
            });
          S.forEach((X) => {
            Ai(this.playersByQueriedElement, X.element, []).push(X),
              X.onDone(() =>
                (function (n, t, e) {
                  let i;
                  if (n instanceof Map) {
                    if (((i = n.get(t)), i)) {
                      if (i.length) {
                        const a = i.indexOf(e);
                        i.splice(a, 1);
                      }
                      0 == i.length && n.delete(t);
                    }
                  } else if (((i = n[t]), i)) {
                    if (i.length) {
                      const a = i.indexOf(e);
                      i.splice(a, 1);
                    }
                    0 == i.length && delete n[t];
                  }
                  return i;
                })(this.playersByQueriedElement, X.element, X)
              );
          }),
            T.forEach((X) => pi(X, fp));
          const j = di(B);
          return (
            j.onDestroy(() => {
              T.forEach((X) => vl(X, fp)), Gi(b, e.toStyles);
            }),
            A.forEach((X) => {
              Ai(a, X, []).push(j);
            }),
            j
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new ps(t.duration, t.delay);
        }
      }
      class Ri {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new ps()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            Object.keys(this._queuedCallbacks).forEach((e) => {
              this._queuedCallbacks[e].forEach((i) => Br(t, e, void 0, i));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          Ai(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function yl(n) {
        return n && 1 === n.nodeType;
      }
      function eh(n, t) {
        const e = n.style.display;
        return (n.style.display = null != t ? t : "none"), e;
      }
      function h_(n, t, e, i, a) {
        const u = [];
        e.forEach((b) => u.push(eh(b)));
        const h = [];
        i.forEach((b, S) => {
          const T = {};
          b.forEach((A) => {
            const B = (T[A] = t.computeStyle(S, A, a));
            (!B || 0 == B.length) && ((S[fi] = d_), h.push(S));
          }),
            n.set(S, T);
        });
        let _ = 0;
        return e.forEach((b) => eh(b, u[_++])), h;
      }
      function f_(n, t) {
        const e = new Map();
        if ((n.forEach((_) => e.set(_, [])), 0 == t.length)) return e;
        const a = new Set(t),
          u = new Map();
        function h(_) {
          if (!_) return 1;
          let b = u.get(_);
          if (b) return b;
          const S = _.parentNode;
          return (b = e.has(S) ? S : a.has(S) ? 1 : h(S)), u.set(_, b), b;
        }
        return (
          t.forEach((_) => {
            const b = h(_);
            1 !== b && e.get(b).push(_);
          }),
          e
        );
      }
      const zr = "$$classes";
      function pi(n, t) {
        if (n.classList) n.classList.add(t);
        else {
          let e = n[zr];
          e || (e = n[zr] = {}), (e[t] = !0);
        }
      }
      function vl(n, t) {
        if (n.classList) n.classList.remove(t);
        else {
          let e = n[zr];
          e && delete e[t];
        }
      }
      function p_(n, t, e) {
        di(e).onDone(() => n.processLeaveNode(t));
      }
      function Op(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof to ? Op(i.players, t) : t.push(i);
        }
      }
      function Pp(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let a = t.get(n);
        return a ? i.forEach((u) => a.add(u)) : t.set(n, i), e.delete(n), !0;
      }
      class fo {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (a, u) => {}),
            (this._transitionEngine = new Ap(t, e, i)),
            (this._timelineEngine = new da(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (a, u) =>
              this.onRemovalComplete(a, u));
        }
        registerTrigger(t, e, i, a, u) {
          const h = t + "-" + a;
          let _ = this._triggerCache[h];
          if (!_) {
            const b = [],
              S = $d(this._driver, u, b);
            if (b.length)
              throw new Error(
                `The animation trigger "${a}" has failed to build due to the following errors:\n - ${b.join(
                  "\n - "
                )}`
              );
            (_ = (function (n, t, e) {
              return new o_(n, t, e);
            })(a, S, this._normalizer)),
              (this._triggerCache[h] = _);
          }
          this._transitionEngine.registerTrigger(e, a, _);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, a) {
          this._transitionEngine.insertNode(t, e, i, a);
        }
        onRemove(t, e, i, a) {
          this._transitionEngine.removeNode(t, e, a || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, a) {
          if ("@" == i.charAt(0)) {
            const [u, h] = lp(i);
            this._timelineEngine.command(u, e, h, a);
          } else this._transitionEngine.trigger(t, e, i, a);
        }
        listen(t, e, i, a, u) {
          if ("@" == i.charAt(0)) {
            const [h, _] = lp(i);
            return this._timelineEngine.listen(h, e, _, u);
          }
          return this._transitionEngine.listen(t, e, i, a, u);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function th(n, t) {
        let e = null,
          i = null;
        return (
          Array.isArray(t) && t.length
            ? ((e = $c(t[0])), t.length > 1 && (i = $c(t[t.length - 1])))
            : t && (e = $c(t)),
          e || i ? new mr(n, e, i) : null
        );
      }
      class mr {
        constructor(t, e, i) {
          (this._element = t),
            (this._startStyles = e),
            (this._endStyles = i),
            (this._state = 0);
          let a = mr.initialStylesByElement.get(t);
          a || mr.initialStylesByElement.set(t, (a = {})),
            (this._initialStyles = a);
        }
        start() {
          this._state < 1 &&
            (this._startStyles &&
              Gi(this._element, this._startStyles, this._initialStyles),
            (this._state = 1));
        }
        finish() {
          this.start(),
            this._state < 2 &&
              (Gi(this._element, this._initialStyles),
              this._endStyles &&
                (Gi(this._element, this._endStyles), (this._endStyles = null)),
              (this._state = 1));
        }
        destroy() {
          this.finish(),
            this._state < 3 &&
              (mr.initialStylesByElement.delete(this._element),
              this._startStyles &&
                (ys(this._element, this._startStyles),
                (this._endStyles = null)),
              this._endStyles &&
                (ys(this._element, this._endStyles), (this._endStyles = null)),
              Gi(this._element, this._initialStyles),
              (this._state = 3));
        }
      }
      function $c(n) {
        let t = null;
        const e = Object.keys(n);
        for (let i = 0; i < e.length; i++) {
          const a = e[i];
          nh(a) && ((t = t || {}), (t[a] = n[a]));
        }
        return t;
      }
      function nh(n) {
        return "display" === n || "position" === n;
      }
      mr.initialStylesByElement = new WeakMap();
      const en = "animation",
        ih = "animationend";
      class bl {
        constructor(t, e, i, a, u, h, _) {
          (this._element = t),
            (this._name = e),
            (this._duration = i),
            (this._delay = a),
            (this._easing = u),
            (this._fillMode = h),
            (this._onDoneFn = _),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (b) => this._handleCallback(b));
        }
        apply() {
          (function (n, t) {
            const e = Yc(n, "").trim();
            let i = 0;
            e.length &&
              ((function (n, t) {
                let e = 0;
                for (let i = 0; i < n.length; i++) "," === n.charAt(i) && e++;
                return e;
              })(e) + 1,
              (t = `${e}, ${t}`)),
              ah(n, "", t);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            oh(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          Wc(this._element, this._name, "paused");
        }
        resume() {
          Wc(this._element, this._name, "running");
        }
        setPosition(t) {
          const e = mi(this._element, this._name);
          (this._position = t * this._duration),
            ah(this._element, "Delay", `-${this._position}ms`, e);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(t) {
          const e = t._ngTestManualTimestamp || Date.now(),
            i = 1e3 * parseFloat(t.elapsedTime.toFixed(3));
          t.animationName == this._name &&
            Math.max(e - this._startTime, 0) >= this._delay &&
            i >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            oh(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (n, t) {
              const i = Yc(n, "").split(","),
                a = po(i, t);
              a >= 0 && (i.splice(a, 1), ah(n, "", i.join(",")));
            })(this._element, this._name));
        }
      }
      function Wc(n, t, e) {
        ah(n, "PlayState", e, mi(n, t));
      }
      function mi(n, t) {
        const e = Yc(n, "");
        return e.indexOf(",") > 0 ? po(e.split(","), t) : po([e], t);
      }
      function po(n, t) {
        for (let e = 0; e < n.length; e++) if (n[e].indexOf(t) >= 0) return e;
        return -1;
      }
      function oh(n, t, e) {
        e ? n.removeEventListener(ih, t) : n.addEventListener(ih, t);
      }
      function ah(n, t, e, i) {
        const a = en + t;
        if (null != i) {
          const u = n.style[a];
          if (u.length) {
            const h = u.split(",");
            (h[i] = e), (e = h.join(","));
          }
        }
        n.style[a] = e;
      }
      function Yc(n, t) {
        return n.style[en + t] || "";
      }
      class lh {
        constructor(t, e, i, a, u, h, _, b) {
          (this.element = t),
            (this.keyframes = e),
            (this.animationName = i),
            (this._duration = a),
            (this._delay = u),
            (this._finalStyles = _),
            (this._specialStyles = b),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = h || "linear"),
            (this.totalTime = a + u),
            this._buildStyler();
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        destroy() {
          this.init(),
            !(this._state >= 4) &&
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((t) => t()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            !(this._state >= 3) &&
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(t) {
          this._styler.setPosition(t);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 ||
            ((this._state = 1),
            this._styler.apply(),
            this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          (this._state = 0),
            this._styler.destroy(),
            this._buildStyler(),
            this._styler.apply();
        }
        _buildStyler() {
          this._styler = new bl(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
        beforeDestroy() {
          this.init();
          const t = {};
          if (this.hasStarted()) {
            const e = this._state >= 3;
            Object.keys(this._finalStyles).forEach((i) => {
              "offset" != i &&
                (t[i] = e ? this._finalStyles[i] : Pc(this.element, i));
            });
          }
          this.currentSnapshot = t;
        }
      }
      class $r extends ps {
        constructor(t, e) {
          super(),
            (this.element = t),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = zt(e));
        }
        init() {
          this.__initialized ||
            !this._startingStyles ||
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((t) => {
              this._startingStyles[t] = this.element.style[t];
            }),
            super.init());
        }
        play() {
          !this._startingStyles ||
            (this.init(),
            Object.keys(this._styles).forEach((t) =>
              this.element.style.setProperty(t, this._styles[t])
            ),
            super.play());
        }
        destroy() {
          !this._startingStyles ||
            (Object.keys(this._startingStyles).forEach((t) => {
              const e = this._startingStyles[t];
              e
                ? this.element.style.setProperty(t, e)
                : this.element.style.removeProperty(t);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class qc {
        constructor() {
          this._count = 0;
        }
        validateStyleProperty(t) {
          return ll(t);
        }
        matchesElement(t, e) {
          return dp(t, e);
        }
        containsElement(t, e) {
          return Ur(t, e);
        }
        query(t, e, i) {
          return na(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        buildKeyframeElement(t, e, i) {
          i = i.map((_) => zt(_));
          let a = `@keyframes ${e} {\n`,
            u = "";
          i.forEach((_) => {
            u = " ";
            const b = parseFloat(_.offset);
            (a += `${u}${100 * b}% {\n`),
              (u += " "),
              Object.keys(_).forEach((S) => {
                const T = _[S];
                switch (S) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      T && (a += `${u}animation-timing-function: ${T};\n`)
                    );
                  default:
                    return void (a += `${u}${S}: ${T};\n`);
                }
              }),
              (a += `${u}}\n`);
          }),
            (a += "}\n");
          const h = document.createElement("style");
          return (h.textContent = a), h;
        }
        animate(t, e, i, a, u, h = [], _) {
          const b = h.filter((De) => De instanceof lh),
            S = {};
          mp(i, a) &&
            b.forEach((De) => {
              let Ne = De.currentSnapshot;
              Object.keys(Ne).forEach((qe) => (S[qe] = Ne[qe]));
            });
          const T = (function (n) {
            let t = {};
            return (
              n &&
                (Array.isArray(n) ? n : [n]).forEach((i) => {
                  Object.keys(i).forEach((a) => {
                    "offset" == a || "easing" == a || (t[a] = i[a]);
                  });
                }),
              t
            );
          })((e = Oc(t, e, S)));
          if (0 == i) return new $r(t, T);
          const A = "gen_css_kf_" + this._count++,
            B = this.buildKeyframeElement(t, A, e);
          (function (n) {
            var t;
            const e =
              null === (t = n.getRootNode) || void 0 === t ? void 0 : t.call(n);
            return "undefined" != typeof ShadowRoot && e instanceof ShadowRoot
              ? e
              : document.head;
          })(t).appendChild(B);
          const X = th(t, e),
            ve = new lh(t, e, A, i, a, u, T, X);
          return (
            ve.onDestroy(() => {
              var n;
              (n = B).parentNode.removeChild(n);
            }),
            ve
          );
        }
      }
      class Qc {
        constructor(t, e, i, a) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(e, i);
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((e) => {
              "offset" != e &&
                (t[e] = this._finished
                  ? this._finalKeyframe[e]
                  : Pc(this.element, e));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class Fp {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            fa().toString()
          )),
            (this._cssKeyframesDriver = new qc());
        }
        validateStyleProperty(t) {
          return ll(t);
        }
        matchesElement(t, e) {
          return dp(t, e);
        }
        containsElement(t, e) {
          return Ur(t, e);
        }
        query(t, e, i) {
          return na(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        overrideWebAnimationsSupport(t) {
          this._isNativeImpl = t;
        }
        animate(t, e, i, a, u, h = [], _) {
          if (!_ && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(t, e, i, a, u, h);
          const T = {
            duration: i,
            delay: a,
            fill: 0 == a ? "both" : "forwards",
          };
          u && (T.easing = u);
          const A = {},
            B = h.filter((X) => X instanceof Qc);
          mp(i, a) &&
            B.forEach((X) => {
              let ve = X.currentSnapshot;
              Object.keys(ve).forEach((De) => (A[De] = ve[De]));
            });
          const j = th(t, (e = Oc(t, (e = e.map((X) => ir(X, !1))), A)));
          return new Qc(t, e, T, j);
        }
      }
      function fa() {
        return (no() && Element.prototype.animate) || {};
      }
      let Lp = (() => {
        class n extends al {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: o.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const a = Array.isArray(e) ? kd(e) : e;
            return (
              dh(this._renderer, null, i, "register", [a]),
              new uh(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(o.FYo), o.LFG(G));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class uh extends class {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new Cl(this._id, t, e || {}, this._renderer);
        }
      }
      class Cl {
        constructor(t, e, i, a) {
          (this.id = t),
            (this.element = e),
            (this._renderer = a),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return dh(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          var t, e;
          return null !==
            (e =
              null === (t = this._renderer.engine.players[+this.id]) ||
              void 0 === t
                ? void 0
                : t.getPosition()) && void 0 !== e
            ? e
            : 0;
        }
      }
      function dh(n, t, e, i, a) {
        return n.setProperty(t, `@@${e}:${i}`, a);
      }
      const v_ = "@.disabled";
      let Vp = (() => {
        class n {
          constructor(e, i, a) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = a),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (u, h) => {
                h && h.parentNode(u) && h.removeChild(u.parentNode, u);
              });
          }
          createRenderer(e, i) {
            const u = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let T = this._rendererCache.get(u);
              return (
                T ||
                  ((T = new v("", u, this.engine)),
                  this._rendererCache.set(u, T)),
                T
              );
            }
            const h = i.id,
              _ = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(_, e);
            const b = (T) => {
              Array.isArray(T)
                ? T.forEach(b)
                : this.engine.registerTrigger(h, _, e, T.name, T);
            };
            return i.data.animation.forEach(b), new p(this, _, u, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, a) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(a))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((u) => {
                        const [h, _] = u;
                        h(_);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, a]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(o.FYo), o.LFG(fo), o.LFG(o.R0b));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class v {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (a) => e.destroyNode(a)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, a = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, a);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, a) {
          this.delegate.setAttribute(t, e, i, a);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, a) {
          this.delegate.setStyle(t, e, i, a);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0) && e == v_
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class p extends v {
        constructor(t, e, i, a) {
          super(e, i, a), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == v_
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.substr(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ("@" == e.charAt(0)) {
            const a = (function (n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(t);
            let u = e.substr(1),
              h = "";
            return (
              "@" != u.charAt(0) &&
                ([u, h] = (function (n) {
                  const t = n.indexOf(".");
                  return [n.substring(0, t), n.substr(t + 1)];
                })(u)),
              this.engine.listen(this.namespaceId, a, u, h, (_) => {
                this.factory.scheduleListenerCallback(_._data || -1, i, _);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      let M = (() => {
        class n extends fo {
          constructor(e, i, a) {
            super(e.body, i, a);
          }
          ngOnDestroy() {
            this.flush();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(G), o.LFG(ro), o.LFG(Cs));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Se = new o.OlP("AnimationModuleType"),
        ke = [
          { provide: al, useClass: Lp },
          {
            provide: Cs,
            useFactory: function () {
              return new n_();
            },
          },
          { provide: fo, useClass: M },
          {
            provide: o.FYo,
            useFactory: function (n, t, e) {
              return new Vp(n, t, e);
            },
            deps: [Vr, fo, o.R0b],
          },
        ],
        He = [
          {
            provide: ro,
            useFactory: function () {
              return "function" == typeof fa() ? new Fp() : new qc();
            },
          },
          { provide: Se, useValue: "BrowserAnimations" },
          ...ke,
        ],
        $e = [
          { provide: ro, useClass: io },
          { provide: Se, useValue: "NoopAnimations" },
          ...ke,
        ];
      let Cn = (() => {
        class n {
          static withConfig(e) {
            return { ngModule: n, providers: e.disableAnimations ? $e : He };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({ providers: He, imports: [Ko] })),
          n
        );
      })();
      var xe = k(9765),
        Bn = k(5319),
        El = k(7971);
      class gi extends xe.xQ {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return e && !e.closed && t.next(this._value), e;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new El.N();
          return this._value;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      var Oe = k(5917);
      function _o(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      var sn = k(3342),
        $n = k(7393),
        fh = k(3637);
      function zp(n, t = fh.P) {
        return (e) => e.lift(new k_(n, t));
      }
      class k_ {
        constructor(t, e) {
          (this.dueTime = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new BC(t, this.dueTime, this.scheduler));
        }
      }
      class BC extends $n.L {
        constructor(t, e, i) {
          super(t),
            (this.dueTime = e),
            (this.scheduler = i),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(t) {
          this.clearDebounce(),
            (this.lastValue = t),
            (this.hasValue = !0),
            this.add(
              (this.debouncedSubscription = this.scheduler.schedule(
                O_,
                this.dueTime,
                this
              ))
            );
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: t } = this;
            (this.lastValue = null),
              (this.hasValue = !1),
              this.destination.next(t);
          }
        }
        clearDebounce() {
          const t = this.debouncedSubscription;
          null !== t &&
            (this.remove(t),
            t.unsubscribe(),
            (this.debouncedSubscription = null));
        }
      }
      function O_(n) {
        n.debouncedNext();
      }
      function En(n, t) {
        return function (i) {
          return i.lift(new ya(n, t));
        };
      }
      class ya {
        constructor(t, e) {
          (this.predicate = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new UC(t, this.predicate, this.thisArg));
        }
      }
      class UC extends $n.L {
        constructor(t, e, i) {
          super(t), (this.predicate = e), (this.thisArg = i), (this.count = 0);
        }
        _next(t) {
          let e;
          try {
            e = this.predicate.call(this.thisArg, t, this.count++);
          } catch (i) {
            return void this.destination.error(i);
          }
          e && this.destination.next(t);
        }
      }
      var et = k(8002);
      const $p = (() => {
        function n() {
          return (
            Error.call(this),
            (this.message = "argument out of range"),
            (this.name = "ArgumentOutOfRangeError"),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      var yo = k(9193);
      function An(n) {
        return (t) => (0 === n ? (0, yo.c)() : t.lift(new hM(n)));
      }
      class hM {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new $p();
        }
        call(t, e) {
          return e.subscribe(new fM(t, this.total));
        }
      }
      class fM extends $n.L {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          const e = this.total,
            i = ++this.count;
          i <= e &&
            (this.destination.next(t),
            i === e && (this.destination.complete(), this.unsubscribe()));
        }
      }
      function eu(n) {
        return (t) => t.lift(new tu(n));
      }
      class tu {
        constructor(t) {
          this.total = t;
        }
        call(t, e) {
          return e.subscribe(new P_(t, this.total));
        }
      }
      class P_ extends $n.L {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          ++this.count > this.total && this.destination.next(t);
        }
      }
      function Ss(n, t) {
        return (e) => e.lift(new ph(n, t));
      }
      class ph {
        constructor(t, e) {
          (this.compare = t), (this.keySelector = e);
        }
        call(t, e) {
          return e.subscribe(new nu(t, this.compare, this.keySelector));
        }
      }
      class nu extends $n.L {
        constructor(t, e, i) {
          super(t),
            (this.keySelector = i),
            (this.hasKey = !1),
            "function" == typeof e && (this.compare = e);
        }
        compare(t, e) {
          return t === e;
        }
        _next(t) {
          let e;
          try {
            const { keySelector: a } = this;
            e = a ? a(t) : t;
          } catch (a) {
            return this.destination.error(a);
          }
          let i = !1;
          if (this.hasKey)
            try {
              const { compare: a } = this;
              i = a(this.key, e);
            } catch (a) {
              return this.destination.error(a);
            }
          else this.hasKey = !0;
          i || ((this.key = e), this.destination.next(t));
        }
      }
      var yr = k(5345);
      function jt(n) {
        return (t) => t.lift(new HC(n));
      }
      class HC {
        constructor(t) {
          this.notifier = t;
        }
        call(t, e) {
          const i = new N_(t),
            a = (0, yr.ft)(this.notifier, new yr.IY(i));
          return a && !i.seenValue ? (i.add(a), e.subscribe(i)) : i;
        }
      }
      class N_ extends yr.Ds {
        constructor(t) {
          super(t), (this.seenValue = !1);
        }
        notifyNext() {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
      function it(n) {
        return null != n && "false" != `${n}`;
      }
      function Un(n, t = 0) {
        return (function (n) {
          return !isNaN(parseFloat(n)) && !isNaN(Number(n));
        })(n)
          ? Number(n)
          : t;
      }
      function Yp(n) {
        return Array.isArray(n) ? n : [n];
      }
      function wn(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function va(n) {
        return n instanceof o.SBq ? n.nativeElement : n;
      }
      let Zp;
      try {
        Zp = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (n) {
        Zp = !1;
      }
      let ru,
        Nt = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function (n) {
                      return "browser" === n;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !Zp) &&
                  "undefined" != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(o.Lbi));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(o.Lbi));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        iu = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({})),
            n
          );
        })();
      const jC = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function $i() {
        if (ru) return ru;
        if ("object" != typeof document || !document)
          return (ru = new Set(jC)), ru;
        let n = document.createElement("input");
        return (
          (ru = new Set(
            jC.filter((t) => (n.setAttribute("type", t), n.type === t))
          )),
          ru
        );
      }
      let mh, ba, _h;
      function qp(n) {
        return (function () {
          if (null == mh && "undefined" != typeof window)
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (mh = !0) })
              );
            } finally {
              mh = mh || !1;
            }
          return mh;
        })()
          ? n
          : !!n.capture;
      }
      function gM() {
        if (null == ba) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (ba = !1), ba;
          if ("scrollBehavior" in document.documentElement.style) ba = !0;
          else {
            const n = Element.prototype.scrollTo;
            ba = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return ba;
      }
      function zC(n) {
        if (
          (function () {
            if (null == _h) {
              const n = "undefined" != typeof document ? document.head : null;
              _h = !(!n || (!n.createShadowRoot && !n.attachShadow));
            }
            return _h;
          })()
        ) {
          const t = n.getRootNode ? n.getRootNode() : null;
          if (
            "undefined" != typeof ShadowRoot &&
            ShadowRoot &&
            t instanceof ShadowRoot
          )
            return t;
        }
        return null;
      }
      function yh() {
        let n =
          "undefined" != typeof document && document
            ? document.activeElement
            : null;
        for (; n && n.shadowRoot; ) {
          const t = n.shadowRoot.activeElement;
          if (t === n) break;
          n = t;
        }
        return n;
      }
      function su(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      var Sn = k(7574);
      let L_ = (() => {
          class n {
            create(e) {
              return "undefined" == typeof MutationObserver
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n();
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        V_ = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = va(e);
              return new Sn.y((a) => {
                const h = this._observeElement(i).subscribe(a);
                return () => {
                  h.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new xe.xQ(),
                  a = this._mutationObserverFactory.create((u) => i.next(u));
                a &&
                  a.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: a,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: a } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  a.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(L_));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(L_));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        _M = (() => {
          class n {
            constructor(e, i, a) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = a),
                (this.event = new o.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = it(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = Un(e)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(zp(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              var e;
              null === (e = this._currentSubscription) ||
                void 0 === e ||
                e.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(V_), o.Y36(o.SBq), o.Y36(o.R0b));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        $C = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ providers: [L_] })),
            n
          );
        })();
      class ZC {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new xe.xQ()),
            (this._typeaheadSubscription = Bn.w.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new xe.xQ()),
            (this.change = new xe.xQ()),
            t instanceof o.n_E &&
              t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const a = e.toArray().indexOf(this._activeItem);
                  a > -1 &&
                    a !== this._activeItemIndex &&
                    (this._activeItemIndex = a);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, sn.b)((e) => this._pressedLetters.push(e)),
                zp(t),
                En(() => this._pressedLetters.length > 0),
                (0, et.U)(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let a = 1; a < i.length + 1; a++) {
                  const u = (this._activeItemIndex + a) % i.length,
                    h = i[u];
                  if (
                    !this._skipPredicateFn(h) &&
                    0 === h.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(u);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            a = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (u) => !t[u] || this._allowedModifierKeys.indexOf(u) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && a) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && a) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && a) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && a) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && a) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && a) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (a || _o(t, "shiftKey")) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = "number" == typeof t ? t : e.indexOf(t),
            a = e[i];
          (this._activeItem = null == a ? null : a),
            (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const a = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[a])) return void this.setActiveItem(a);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof o.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class CM extends ZC {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class ou extends ZC {
        constructor() {
          super(...arguments), (this._origin = "program");
        }
        setFocusOrigin(t) {
          return (this._origin = t), this;
        }
        setActiveItem(t) {
          super.setActiveItem(t),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let KC = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function (n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ("function" == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function (n) {
              try {
                return n.frameElement;
              } catch (t) {
                return null;
              }
            })(
              (function (n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === G_(i) || !this.isVisible(i))) return !1;
            let a = e.nodeName.toLowerCase(),
              u = G_(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== u
              : !(
                  "iframe" === a ||
                  "object" === a ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function (n) {
                      let t = n.nodeName.toLowerCase(),
                        e = "input" === t && n.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === t ||
                        "textarea" === t
                      );
                    })(e))
                ) &&
                  ("audio" === a
                    ? !!e.hasAttribute("controls") && -1 !== u
                    : "video" === a
                    ? -1 !== u &&
                      (null !== u ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function (n) {
                return (
                  !(function (n) {
                    return (
                      (function (n) {
                        return "input" == n.nodeName.toLowerCase();
                      })(n) && "hidden" == n.type
                    );
                  })(n) &&
                  ((function (n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      "input" === t ||
                      "select" === t ||
                      "button" === t ||
                      "textarea" === t
                    );
                  })(n) ||
                    (function (n) {
                      return (
                        (function (n) {
                          return "a" == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute("href")
                      );
                    })(n) ||
                    n.hasAttribute("contenteditable") ||
                    JC(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              ((null == i ? void 0 : i.ignoreVisibility) || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(Nt));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Nt));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function JC(n) {
        if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute("tabindex");
        return "-32768" != t && !(!t || isNaN(parseInt(t, 10)));
      }
      function G_(n) {
        if (!JC(n)) return null;
        const t = parseInt(n.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      class nE {
        constructor(t, e, i, a, u = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = a),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            u || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener("focus", this.startAnchorListener),
            t.parentNode && t.parentNode.removeChild(t)),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.parentNode && e.parentNode.removeChild(e)),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          let e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          for (let i = 0; i < e.length; i++)
            e[i].hasAttribute(`cdk-focus-${t}`)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[i]
                )
              : e[i].hasAttribute(`cdk-focus-region-${t}`) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[i]
                );
          return "start" == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (
              (e.hasAttribute("cdk-focus-initial") &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  e
                ),
              !this._checker.isFocusable(e))
            ) {
              const i = this._getFirstTabbableElement(e);
              return null == i || i.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          let e = t.children || t.childNodes;
          for (let i = 0; i < e.length; i++) {
            let a =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (a) return a;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          let e = t.children || t.childNodes;
          for (let i = e.length - 1; i >= 0; i--) {
            let a =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (a) return a;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add("cdk-visually-hidden"),
            t.classList.add("cdk-focus-trap-anchor"),
            t.setAttribute("aria-hidden", "true"),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(An(1)).subscribe(t);
        }
      }
      let Ds = (() => {
        class n {
          constructor(e, i, a) {
            (this._checker = e), (this._ngZone = i), (this._document = a);
          }
          create(e, i = !1) {
            return new nE(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(KC), o.LFG(o.R0b), o.LFG(G));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(KC), o.LFG(o.R0b), o.LFG(G));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function Qp(n) {
        return 0 === n.offsetX && 0 === n.offsetY;
      }
      function $_(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      "undefined" != typeof Element && Element;
      const W_ = new o.OlP("cdk-input-modality-detector-options"),
        SM = { ignoreKeys: [18, 17, 224, 91, 16] },
        lu = qp({ passive: !0, capture: !0 });
      let sE = (() => {
        class n {
          constructor(e, i, a, u) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new gi(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (h) => {
                var _, b;
                (null ===
                  (b =
                    null === (_ = this._options) || void 0 === _
                      ? void 0
                      : _.ignoreKeys) || void 0 === b
                  ? void 0
                  : b.some((S) => S === h.keyCode)) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = su(h)));
              }),
              (this._onMousedown = (h) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(Qp(h) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = su(h)));
              }),
              (this._onTouchstart = (h) => {
                $_(h)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = su(h)));
              }),
              (this._options = Object.assign(Object.assign({}, SM), u)),
              (this.modalityDetected = this._modality.pipe(eu(1))),
              (this.modalityChanged = this.modalityDetected.pipe(Ss())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  a.addEventListener("keydown", this._onKeydown, lu),
                    a.addEventListener("mousedown", this._onMousedown, lu),
                    a.addEventListener("touchstart", this._onTouchstart, lu);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            !this._platform.isBrowser ||
              (document.removeEventListener("keydown", this._onKeydown, lu),
              document.removeEventListener("mousedown", this._onMousedown, lu),
              document.removeEventListener(
                "touchstart",
                this._onTouchstart,
                lu
              ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(Nt),
              o.LFG(o.R0b),
              o.LFG(G),
              o.LFG(W_, 8)
            );
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Nt), o.LFG(o.R0b), o.LFG(G), o.LFG(W_, 8));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const Y_ = new o.OlP("liveAnnouncerElement", {
          providedIn: "root",
          factory: function () {
            return null;
          },
        }),
        Z_ = new o.OlP("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let Xp = (() => {
        class n {
          constructor(e, i, a, u) {
            (this._ngZone = i),
              (this._defaultOptions = u),
              (this._document = a),
              (this._liveElement = e || this._createLiveElement());
          }
          announce(e, ...i) {
            const a = this._defaultOptions;
            let u, h;
            return (
              1 === i.length && "number" == typeof i[0]
                ? (h = i[0])
                : ([u, h] = i),
              this.clear(),
              clearTimeout(this._previousTimeout),
              u || (u = a && a.politeness ? a.politeness : "polite"),
              null == h && a && (h = a.duration),
              this._liveElement.setAttribute("aria-live", u),
              this._ngZone.runOutsideAngular(
                () =>
                  new Promise((_) => {
                    clearTimeout(this._previousTimeout),
                      (this._previousTimeout = setTimeout(() => {
                        (this._liveElement.textContent = e),
                          _(),
                          "number" == typeof h &&
                            (this._previousTimeout = setTimeout(
                              () => this.clear(),
                              h
                            ));
                      }, 100));
                  })
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement &&
                this._liveElement.parentNode &&
                (this._liveElement.parentNode.removeChild(this._liveElement),
                (this._liveElement = null));
          }
          _createLiveElement() {
            const e = "cdk-live-announcer-element",
              i = this._document.getElementsByClassName(e),
              a = this._document.createElement("div");
            for (let u = 0; u < i.length; u++)
              i[u].parentNode.removeChild(i[u]);
            return (
              a.classList.add(e),
              a.classList.add("cdk-visually-hidden"),
              a.setAttribute("aria-atomic", "true"),
              a.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(a),
              a
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(Y_, 8),
              o.LFG(o.R0b),
              o.LFG(G),
              o.LFG(Z_, 8)
            );
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Y_, 8), o.LFG(o.R0b), o.LFG(G), o.LFG(Z_, 8));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const Sl = new o.OlP("cdk-focus-monitor-default-options"),
        em = qp({ passive: !0, capture: !0 });
      let vo = (() => {
        class n {
          constructor(e, i, a, u, h) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = a),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new xe.xQ()),
              (this._rootNodeFocusAndBlurListener = (_) => {
                const b = su(_),
                  S = "focus" === _.type ? this._onFocus : this._onBlur;
                for (let T = b; T; T = T.parentElement) S.call(this, _, T);
              }),
              (this._document = u),
              (this._detectionMode =
                (null == h ? void 0 : h.detectionMode) || 0);
          }
          monitor(e, i = !1) {
            const a = va(e);
            if (!this._platform.isBrowser || 1 !== a.nodeType)
              return (0, Oe.of)(null);
            const u = zC(a) || this._getDocument(),
              h = this._elementInfo.get(a);
            if (h) return i && (h.checkChildren = !0), h.subject;
            const _ = { checkChildren: i, subject: new xe.xQ(), rootNode: u };
            return (
              this._elementInfo.set(a, _),
              this._registerGlobalListeners(_),
              _.subject
            );
          }
          stopMonitoring(e) {
            const i = va(e),
              a = this._elementInfo.get(i);
            a &&
              (a.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(a));
          }
          focusVia(e, i, a) {
            const u = va(e);
            u === this._getDocument().activeElement
              ? this._getClosestElementsInfo(u).forEach(([_, b]) =>
                  this._originChanged(_, i, b)
                )
              : (this._setOrigin(i),
                "function" == typeof u.focus && u.focus(a));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(e, i, a) {
            a ? e.classList.add(i) : e.classList.remove(i);
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!(null == e
                ? void 0
                : e.contains(this._inputModalityDetector._mostRecentTarget))
            );
          }
          _setClasses(e, i) {
            this._toggleClass(e, "cdk-focused", !!i),
              this._toggleClass(e, "cdk-touch-focused", "touch" === i),
              this._toggleClass(e, "cdk-keyboard-focused", "keyboard" === i),
              this._toggleClass(e, "cdk-mouse-focused", "mouse" === i),
              this._toggleClass(e, "cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const a = this._elementInfo.get(i),
              u = su(e);
            !a ||
              (!a.checkChildren && i !== u) ||
              this._originChanged(i, this._getFocusOrigin(u), a);
          }
          _onBlur(e, i) {
            const a = this._elementInfo.get(i);
            !a ||
              (a.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(a.subject, null));
          }
          _emitOrigin(e, i) {
            this._ngZone.run(() => e.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              a = this._rootNodeFocusListenerCount.get(i) || 0;
            a ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  em
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    em
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, a + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(jt(this._stopInputModalityDetector))
                  .subscribe((u) => {
                    this._setOrigin(u, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const a = this._rootNodeFocusListenerCount.get(i);
              a > 1
                ? this._rootNodeFocusListenerCount.set(i, a - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    em
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    em
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, a) {
            this._setClasses(e, i),
              this._emitOrigin(a.subject, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((a, u) => {
                (u === e || (a.checkChildren && u.contains(e))) &&
                  i.push([u, a]);
              }),
              i
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(o.R0b),
              o.LFG(Nt),
              o.LFG(sE),
              o.LFG(G, 8),
              o.LFG(Sl, 8)
            );
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(
                o.LFG(o.R0b),
                o.LFG(Nt),
                o.LFG(sE),
                o.LFG(G, 8),
                o.LFG(Sl, 8)
              );
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const oE = "cdk-high-contrast-black-on-white",
        DM = "cdk-high-contrast-white-on-black",
        q_ = "cdk-high-contrast-active";
      let K_ = (() => {
        class n {
          constructor(e, i) {
            (this._platform = e), (this._document = i);
          }
          getHighContrastMode() {
            if (!this._platform.isBrowser) return 0;
            const e = this._document.createElement("div");
            (e.style.backgroundColor = "rgb(1,2,3)"),
              (e.style.position = "absolute"),
              this._document.body.appendChild(e);
            const i = this._document.defaultView || window,
              a = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
              u = ((a && a.backgroundColor) || "").replace(/ /g, "");
            switch ((this._document.body.removeChild(e), u)) {
              case "rgb(0,0,0)":
                return 2;
              case "rgb(255,255,255)":
                return 1;
            }
            return 0;
          }
          _applyBodyHighContrastModeCssClasses() {
            if (
              !this._hasCheckedHighContrastMode &&
              this._platform.isBrowser &&
              this._document.body
            ) {
              const e = this._document.body.classList;
              e.remove(q_),
                e.remove(oE),
                e.remove(DM),
                (this._hasCheckedHighContrastMode = !0);
              const i = this.getHighContrastMode();
              1 === i
                ? (e.add(q_), e.add(oE))
                : 2 === i && (e.add(q_), e.add(DM));
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(Nt), o.LFG(G));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Nt), o.LFG(G));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const tm = new o.OlP("cdk-dir-doc", {
        providedIn: "root",
        factory: function () {
          return (0, o.f3M)(G);
        },
      });
      let _n = (() => {
          class n {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new o.vpe()), e)) {
                const a = e.documentElement ? e.documentElement.dir : null,
                  u = (e.body ? e.body.dir : null) || a;
                this.value = "ltr" === u || "rtl" === u ? u : "ltr";
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(tm, 8));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(tm, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Ca = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({})),
            n
          );
        })();
      const MM = new o.GfV("12.2.5");
      var nm = k(3282);
      function bh(...n) {
        return (0, nm.J)(1)((0, Oe.of)(...n));
      }
      var Ch = k(4869);
      function Hn(...n) {
        const t = n[n.length - 1];
        return (0, Ch.K)(t) ? (n.pop(), (e) => bh(n, e, t)) : (e) => bh(n, e);
      }
      function AM(n, t) {
        if ((1 & n && o._UZ(0, "mat-pseudo-checkbox", 4), 2 & n)) {
          const e = o.oxw();
          o.Q6J("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      function Eh(n, t) {
        if ((1 & n && (o.TgZ(0, "span", 5), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.hij("(", e.group.label, ")");
        }
      }
      const Q_ = ["*"],
        J_ = new o.GfV("12.2.5"),
        PM = new o.OlP("mat-sanity-checks", {
          providedIn: "root",
          factory: function () {
            return !0;
          },
        });
      let Ea,
        Et = (() => {
          class n {
            constructor(e, i, a) {
              (this._hasDoneGlobalChecks = !1),
                (this._document = a),
                e._applyBodyHighContrastModeCssClasses(),
                (this._sanityChecks = i),
                this._hasDoneGlobalChecks ||
                  (this._checkDoctypeIsDefined(),
                  this._checkThemeIsPresent(),
                  this._checkCdkVersionMatch(),
                  (this._hasDoneGlobalChecks = !0));
            }
            _getWindow() {
              const e = this._document.defaultView || window;
              return "object" == typeof e && e ? e : null;
            }
            _checkIsEnabled(e) {
              return (
                !(!(0, o.X6Q)() || this._isTestEnv()) &&
                ("boolean" == typeof this._sanityChecks
                  ? this._sanityChecks
                  : !!this._sanityChecks[e])
              );
            }
            _isTestEnv() {
              const e = this._getWindow();
              return e && (e.__karma__ || e.jasmine);
            }
            _checkDoctypeIsDefined() {
              this._checkIsEnabled("doctype") &&
                !this._document.doctype &&
                console.warn(
                  "Current document does not have a doctype. This may cause some Angular Material components not to behave as expected."
                );
            }
            _checkThemeIsPresent() {
              if (
                !this._checkIsEnabled("theme") ||
                !this._document.body ||
                "function" != typeof getComputedStyle
              )
                return;
              const e = this._document.createElement("div");
              e.classList.add("mat-theme-loaded-marker"),
                this._document.body.appendChild(e);
              const i = getComputedStyle(e);
              i &&
                "none" !== i.display &&
                console.warn(
                  "Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming"
                ),
                this._document.body.removeChild(e);
            }
            _checkCdkVersionMatch() {
              this._checkIsEnabled("version") &&
                J_.full !== MM.full &&
                console.warn(
                  "The Angular Material version (" +
                    J_.full +
                    ") does not match the Angular CDK version (" +
                    MM.full +
                    ").\nPlease ensure the versions of these two packages exactly match."
                );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(K_), o.LFG(PM, 8), o.LFG(G));
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Ca], Ca] })),
            n
          );
        })();
      function im(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = it(t);
          }
        };
      }
      function bo(n, t) {
        return class extends n {
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function rm(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = it(t);
          }
        };
      }
      function sm(n, t = 0) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? Un(e) : this.defaultTabIndex;
          }
        };
      }
      function X_(n) {
        return class extends n {
          constructor(...t) {
            super(...t),
              (this.stateChanges = new xe.xQ()),
              (this.errorState = !1);
          }
          updateErrorState() {
            const t = this.errorState,
              u = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            u !== t && ((this.errorState = u), this.stateChanges.next());
          }
        };
      }
      try {
        Ea = "undefined" != typeof Intl;
      } catch (n) {
        Ea = !1;
      }
      let Ms = (() => {
          class n {
            isErrorState(e, i) {
              return !!(e && e.invalid && (e.touched || (i && i.submitted)));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n();
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        fE = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et], Et] })),
            n
          );
        })();
      class BM {
        constructor(t, e, i) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const pE = { enterDuration: 225, exitDuration: 150 },
        ny = qp({ passive: !0 }),
        Sh = ["mousedown", "touchstart"],
        Dl = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class iy {
        constructor(t, e, i, a) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            a.isBrowser && (this._containerElement = va(i));
        }
        fadeInRipple(t, e, i = {}) {
          const a = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            u = Object.assign(Object.assign({}, pE), i.animation);
          i.centered &&
            ((t = a.left + a.width / 2), (e = a.top + a.height / 2));
          const h =
              i.radius ||
              (function (n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  a = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + a * a);
              })(t, e, a),
            _ = t - a.left,
            b = e - a.top,
            S = u.enterDuration,
            T = document.createElement("div");
          T.classList.add("mat-ripple-element"),
            (T.style.left = _ - h + "px"),
            (T.style.top = b - h + "px"),
            (T.style.height = 2 * h + "px"),
            (T.style.width = 2 * h + "px"),
            null != i.color && (T.style.backgroundColor = i.color),
            (T.style.transitionDuration = `${S}ms`),
            this._containerElement.appendChild(T),
            window.getComputedStyle(T).getPropertyValue("opacity"),
            (T.style.transform = "scale(1)");
          const A = new BM(this, T, i);
          return (
            (A.state = 0),
            this._activeRipples.add(A),
            i.persistent || (this._mostRecentTransientRipple = A),
            this._runTimeoutOutsideZone(() => {
              const B = A === this._mostRecentTransientRipple;
              (A.state = 1),
                !i.persistent && (!B || !this._isPointerDown) && A.fadeOut();
            }, S),
            A
          );
        }
        fadeOutRipple(t) {
          const e = this._activeRipples.delete(t);
          if (
            (t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !e)
          )
            return;
          const i = t.element,
            a = Object.assign(Object.assign({}, pE), t.config.animation);
          (i.style.transitionDuration = `${a.exitDuration}ms`),
            (i.style.opacity = "0"),
            (t.state = 2),
            this._runTimeoutOutsideZone(() => {
              (t.state = 3), i.parentNode.removeChild(i);
            }, a.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._activeRipples.forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = va(t);
          !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            this._registerEvents(Sh));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(Dl),
              (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(t) {
          const e = Qp(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !$_(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(t, e = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(t, e));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((e) => {
              this._triggerElement.addEventListener(e, this, ny);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (Sh.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, ny);
            }),
            this._pointerUpEventsRegistered &&
              Dl.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, ny);
              }));
        }
      }
      const mE = new o.OlP("mat-ripple-global-options");
      let wa = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this._elementRef = e),
                (this._animationMode = h),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = u || {}),
                (this._rippleRenderer = new iy(this, i, e, a));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    "NoopAnimations" === this._animationMode
                      ? { enterDuration: 0, exitDuration: 0 }
                      : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, a) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(
                    e,
                    i,
                    Object.assign(Object.assign({}, this.rippleConfig), a)
                  )
                : this._rippleRenderer.fadeInRipple(
                    0,
                    0,
                    Object.assign(Object.assign({}, this.rippleConfig), e)
                  );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(o.R0b),
                o.Y36(Nt),
                o.Y36(mE, 8),
                o.Y36(Se, 8)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && o.ekj("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                radius: ["matRippleRadius", "radius"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                animation: ["matRippleAnimation", "animation"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        Sa = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et, iu], Et] })),
            n
          );
        })(),
        Ts = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Se, 8));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Mh = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et]] })),
            n
          );
        })();
      const Wn = new o.OlP("MAT_OPTION_PARENT_COMPONENT"),
        Ml = im(class {});
      let am = 0,
        sr = (() => {
          class n extends Ml {
            constructor(e) {
              var i;
              super(),
                (this._labelId = "mat-optgroup-label-" + am++),
                (this._inert =
                  null !== (i = null == e ? void 0 : e.inertGroups) &&
                  void 0 !== i &&
                  i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Wn, 8));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              inputs: { label: "label" },
              features: [o.qOj],
            })),
            n
          );
        })();
      const Th = new o.OlP("MatOptgroup");
      let uu = 0;
      class du {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let hu = (() => {
          class n {
            constructor(e, i, a, u) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = a),
                (this.group = u),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + uu++),
                (this.onSelectionChange = new o.vpe()),
                (this._stateChanges = new xe.xQ());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = it(e);
            }
            get disableRipple() {
              return this._parent && this._parent.disableRipple;
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const a = this._getHostElement();
              "function" == typeof a.focus && a.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !_o(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  ((this._mostRecentViewValue = e), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new du(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(o.sBO),
                o.Y36(void 0),
                o.Y36(sr)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              inputs: { id: "id", disabled: "disabled", value: "value" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        Tl = (() => {
          class n extends hu {
            constructor(e, i, a, u) {
              super(e, i, a, u);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(o.sBO),
                o.Y36(Wn, 8),
                o.Y36(Th, 8)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-option",
                "mat-focus-indicator",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (u) {
                    return i._handleKeydown(u);
                  }),
                  2 & e &&
                    (o.Ikx("id", i.id),
                    o.uIk("tabindex", i._getTabIndex())(
                      "aria-selected",
                      i._getAriaSelected()
                    )("aria-disabled", i.disabled.toString()),
                    o.ekj("mat-selected", i.selected)(
                      "mat-option-multiple",
                      i.multiple
                    )("mat-active", i.active)(
                      "mat-option-disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [o.qOj],
              ngContentSelectors: Q_,
              decls: 5,
              vars: 4,
              consts: [
                [
                  "class",
                  "mat-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mat-option-text"],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-option-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                [1, "cdk-visually-hidden"],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.F$t(),
                  o.YNc(0, AM, 1, 2, "mat-pseudo-checkbox", 0),
                  o.TgZ(1, "span", 1),
                  o.Hsn(2),
                  o.qZA(),
                  o.YNc(3, Eh, 2, 1, "span", 2),
                  o._UZ(4, "div", 3)),
                  2 & e &&
                    (o.Q6J("ngIf", i.multiple),
                    o.xp6(3),
                    o.Q6J("ngIf", i.group && i.group._inert),
                    o.xp6(1),
                    o.Q6J("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              directives: [Bi, wa, Ts],
              styles: [
                ".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function Il(n, t, e) {
        if (e.length) {
          let i = t.toArray(),
            a = e.toArray(),
            u = 0;
          for (let h = 0; h < n + 1; h++)
            i[h].group && i[h].group === a[u] && u++;
          return u;
        }
        return 0;
      }
      let Al = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({ imports: [[Sa, Xi, Et, Mh]] })),
          n
        );
      })();
      const xl = ["mat-button", ""],
        ry = ["*"],
        _E = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ],
        yE = bo(
          im(
            rm(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let Co = (() => {
          class n extends yE {
            constructor(e, i, a) {
              super(e),
                (this._focusMonitor = i),
                (this._animationMode = a),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton =
                  this._hasHostAttributes("mat-icon-button"));
              for (const u of _E)
                this._hasHostAttributes(u) &&
                  this._getHostElement().classList.add(u);
              e.nativeElement.classList.add("mat-button-base"),
                this.isRoundButton && (this.color = "accent");
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e, i) {
              e
                ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
                : this._getHostElement().focus(i);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((i) => this._getHostElement().hasAttribute(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(vo), o.Y36(Se, 8));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(wa, 5), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i.ripple = a.first);
                }
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 5,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk("disabled", i.disabled || null),
                  o.ekj(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-button-disabled", i.disabled));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [o.qOj],
              attrs: xl,
              ngContentSelectors: ry,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.F$t(),
                  o.TgZ(0, "span", 0),
                  o.Hsn(1),
                  o.qZA(),
                  o._UZ(2, "span", 1),
                  o._UZ(3, "span", 2)),
                  2 & e &&
                    (o.xp6(2),
                    o.ekj(
                      "mat-button-ripple-round",
                      i.isRoundButton || i.isIconButton
                    ),
                    o.Q6J("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      i.isIconButton
                    )("matRippleTrigger", i._getHostElement()));
              },
              directives: [wa],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        lm = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Sa, Et], Et] })),
            n
          );
        })();
      var vE = k(205),
        cm = k(9796),
        bE = k(1555),
        Yn = k(4402);
      function oy(...n) {
        if (1 === n.length) {
          const t = n[0];
          if ((0, cm.k)(t)) return Ah(t, null);
          if ((0, bE.K)(t) && Object.getPrototypeOf(t) === Object.prototype) {
            const e = Object.keys(t);
            return Ah(
              e.map((i) => t[i]),
              e
            );
          }
        }
        if ("function" == typeof n[n.length - 1]) {
          const t = n.pop();
          return Ah(
            (n = 1 === n.length && (0, cm.k)(n[0]) ? n[0] : n),
            null
          ).pipe((0, et.U)((e) => t(...e)));
        }
        return Ah(n, null);
      }
      function Ah(n, t) {
        return new Sn.y((e) => {
          const i = n.length;
          if (0 === i) return void e.complete();
          const a = new Array(i);
          let u = 0,
            h = 0;
          for (let _ = 0; _ < i; _++) {
            const b = (0, Yn.D)(n[_]);
            let S = !1;
            e.add(
              b.subscribe({
                next: (T) => {
                  S || ((S = !0), h++), (a[_] = T);
                },
                error: (T) => e.error(T),
                complete: () => {
                  u++,
                    (u === i || !S) &&
                      (h === i &&
                        e.next(
                          t ? t.reduce((T, A, B) => ((T[A] = a[B]), T), {}) : a
                        ),
                      e.complete());
                },
              })
            );
          }
        });
      }
      function Da(n) {
        return function (e) {
          const i = new eO(n),
            a = e.lift(i);
          return (i.caught = a);
        };
      }
      class eO {
        constructor(t) {
          this.selector = t;
        }
        call(t, e) {
          return e.subscribe(new jM(t, this.selector, this.caught));
        }
      }
      class jM extends yr.Ds {
        constructor(t, e, i) {
          super(t), (this.selector = e), (this.caught = i);
        }
        error(t) {
          if (!this.isStopped) {
            let e;
            try {
              e = this.selector(t, this.caught);
            } catch (u) {
              return void super.error(u);
            }
            this._unsubscribeAndRecycle();
            const i = new yr.IY(this);
            this.add(i);
            const a = (0, yr.ft)(e, i);
            a !== i && this.add(a);
          }
        }
      }
      function ay(n) {
        return (t) => t.lift(new GM(n));
      }
      class GM {
        constructor(t) {
          this.callback = t;
        }
        call(t, e) {
          return e.subscribe(new CE(t, this.callback));
        }
      }
      class CE extends $n.L {
        constructor(t, e) {
          super(t), this.add(new Bn.w(e));
        }
      }
      var EE = k(8819),
        ki = k(9773);
      function xh(n, t) {
        return (0, ki.zg)(n, t, 1);
      }
      class wE {}
      class Ma {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  "string" == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split("\n").forEach((e) => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                              const a = e.slice(0, i),
                                u = a.toLowerCase(),
                                h = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(a, u),
                                this.headers.has(u)
                                  ? this.headers.get(u).push(h)
                                  : this.headers.set(u, [h]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let i = t[e];
                            const a = e.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(a, i),
                                this.maybeSetNormalizedName(e, a));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: "a" });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: "d" });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Ma
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new Ma();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof Ma
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case "a":
            case "s":
              let i = t.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const a = ("a" === t.op ? this.headers.get(e) : void 0) || [];
              a.push(...i), this.headers.set(e, a);
              break;
            case "d":
              const u = t.value;
              if (u) {
                let h = this.headers.get(e);
                if (!h) return;
                (h = h.filter((_) => -1 === u.indexOf(_))),
                  0 === h.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, h);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class tO {
        encodeKey(t) {
          return SE(t);
        }
        encodeValue(t) {
          return SE(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const zM = /%(\d[a-f0-9])/gi,
        iO = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "2B": "+",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function SE(n) {
        return encodeURIComponent(n).replace(zM, (t, e) => {
          var i;
          return null !== (i = iO[e]) && void 0 !== i ? i : t;
        });
      }
      function DE(n) {
        return `${n}`;
      }
      class Is {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new tO()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function (n, t) {
              const e = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((a) => {
                      const u = a.indexOf("="),
                        [h, _] =
                          -1 == u
                            ? [t.decodeKey(a), ""]
                            : [
                                t.decodeKey(a.slice(0, u)),
                                t.decodeValue(a.slice(u + 1)),
                              ],
                        b = e.get(h) || [];
                      b.push(_), e.set(h, b);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const i = t.fromObject[e];
                  this.map.set(e, Array.isArray(i) ? i : [i]);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: "a" });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((i) => {
              const a = t[i];
              Array.isArray(a)
                ? a.forEach((u) => {
                    e.push({ param: i, value: u, op: "a" });
                  })
                : e.push({ param: i, value: a, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((t) => "" !== t)
              .join("&")
          );
        }
        clone(t) {
          const e = new Is({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(DE(t.value)), this.map.set(t.param, e);
                    break;
                  case "d":
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let i = this.map.get(t.param) || [];
                      const a = i.indexOf(DE(t.value));
                      -1 !== a && i.splice(a, 1),
                        i.length > 0
                          ? this.map.set(t.param, i)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class $M {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        keys() {
          return this.map.keys();
        }
      }
      function WM(n) {
        return "undefined" != typeof ArrayBuffer && n instanceof ArrayBuffer;
      }
      function YM(n) {
        return "undefined" != typeof Blob && n instanceof Blob;
      }
      function TE(n) {
        return "undefined" != typeof FormData && n instanceof FormData;
      }
      class um {
        constructor(t, e, i, a) {
          let u;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = t.toUpperCase()),
            (function (n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || a
              ? ((this.body = void 0 !== i ? i : null), (u = a))
              : (u = i),
            u &&
              ((this.reportProgress = !!u.reportProgress),
              (this.withCredentials = !!u.withCredentials),
              u.responseType && (this.responseType = u.responseType),
              u.headers && (this.headers = u.headers),
              u.context && (this.context = u.context),
              u.params && (this.params = u.params)),
            this.headers || (this.headers = new Ma()),
            this.context || (this.context = new $M()),
            this.params)
          ) {
            const h = this.params.toString();
            if (0 === h.length) this.urlWithParams = e;
            else {
              const _ = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === _ ? "?" : _ < e.length - 1 ? "&" : "") + h;
            }
          } else (this.params = new Is()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : WM(this.body) ||
              YM(this.body) ||
              TE(this.body) ||
              ("undefined" != typeof URLSearchParams &&
                this.body instanceof URLSearchParams) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof Is
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || TE(this.body)
            ? null
            : YM(this.body)
            ? this.body.type || null
            : WM(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof Is
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(t = {}) {
          var e;
          const i = t.method || this.method,
            a = t.url || this.url,
            u = t.responseType || this.responseType,
            h = void 0 !== t.body ? t.body : this.body,
            _ =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            b =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let S = t.headers || this.headers,
            T = t.params || this.params;
          const A = null !== (e = t.context) && void 0 !== e ? e : this.context;
          return (
            void 0 !== t.setHeaders &&
              (S = Object.keys(t.setHeaders).reduce(
                (B, j) => B.set(j, t.setHeaders[j]),
                S
              )),
            t.setParams &&
              (T = Object.keys(t.setParams).reduce(
                (B, j) => B.set(j, t.setParams[j]),
                T
              )),
            new um(i, a, h, {
              params: T,
              headers: S,
              context: A,
              reportProgress: b,
              responseType: u,
              withCredentials: _,
            })
          );
        }
      }
      var xn = (() => (
        ((xn = xn || {})[(xn.Sent = 0)] = "Sent"),
        (xn[(xn.UploadProgress = 1)] = "UploadProgress"),
        (xn[(xn.ResponseHeader = 2)] = "ResponseHeader"),
        (xn[(xn.DownloadProgress = 3)] = "DownloadProgress"),
        (xn[(xn.Response = 4)] = "Response"),
        (xn[(xn.User = 5)] = "User"),
        xn
      ))();
      class Rh extends class {
        constructor(t, e = 200, i = "OK") {
          (this.headers = t.headers || new Ma()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || i),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      } {
        constructor(t = {}) {
          super(t),
            (this.type = xn.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Rh({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      function dm(n, t) {
        return {
          body: t,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let Rl = (() => {
        class n {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, a = {}) {
            let u;
            if (e instanceof um) u = e;
            else {
              let b, S;
              (b = a.headers instanceof Ma ? a.headers : new Ma(a.headers)),
                a.params &&
                  (S =
                    a.params instanceof Is
                      ? a.params
                      : new Is({ fromObject: a.params })),
                (u = new um(e, i, void 0 !== a.body ? a.body : null, {
                  headers: b,
                  context: a.context,
                  params: S,
                  reportProgress: a.reportProgress,
                  responseType: a.responseType || "json",
                  withCredentials: a.withCredentials,
                }));
            }
            const h = (0, Oe.of)(u).pipe(xh((b) => this.handler.handle(b)));
            if (e instanceof um || "events" === a.observe) return h;
            const _ = h.pipe(En((b) => b instanceof Rh));
            switch (a.observe || "body") {
              case "body":
                switch (u.responseType) {
                  case "arraybuffer":
                    return _.pipe(
                      (0, et.U)((b) => {
                        if (null !== b.body && !(b.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return b.body;
                      })
                    );
                  case "blob":
                    return _.pipe(
                      (0, et.U)((b) => {
                        if (null !== b.body && !(b.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return b.body;
                      })
                    );
                  case "text":
                    return _.pipe(
                      (0, et.U)((b) => {
                        if (null !== b.body && "string" != typeof b.body)
                          throw new Error("Response is not a string.");
                        return b.body;
                      })
                    );
                  case "json":
                  default:
                    return _.pipe((0, et.U)((b) => b.body));
                }
              case "response":
                return _;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${a.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new Is().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, a = {}) {
            return this.request("PATCH", e, dm(a, i));
          }
          post(e, i, a = {}) {
            return this.request("POST", e, dm(a, i));
          }
          put(e, i, a = {}) {
            return this.request("PUT", e, dm(a, i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(wE));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const eT = ["*"];
      function hm(n) {
        return Error(`Unable to find icon with the name "${n}"`);
      }
      function _y(n) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${n}".`
        );
      }
      function yy(n) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${n}".`
        );
      }
      class Eo {
        constructor(t, e, i) {
          (this.url = t), (this.svgText = e), (this.options = i);
        }
      }
      let Ph = (() => {
        class n {
          constructor(e, i, a, u) {
            (this._httpClient = e),
              (this._sanitizer = i),
              (this._errorHandler = u),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = "material-icons"),
              (this._document = a);
          }
          addSvgIcon(e, i, a) {
            return this.addSvgIconInNamespace("", e, i, a);
          }
          addSvgIconLiteral(e, i, a) {
            return this.addSvgIconLiteralInNamespace("", e, i, a);
          }
          addSvgIconInNamespace(e, i, a, u) {
            return this._addSvgIconConfig(e, i, new Eo(a, null, u));
          }
          addSvgIconResolver(e) {
            return this._resolvers.push(e), this;
          }
          addSvgIconLiteralInNamespace(e, i, a, u) {
            const h = this._sanitizer.sanitize(o.q3G.HTML, a);
            if (!h) throw yy(a);
            return this._addSvgIconConfig(e, i, new Eo("", h, u));
          }
          addSvgIconSet(e, i) {
            return this.addSvgIconSetInNamespace("", e, i);
          }
          addSvgIconSetLiteral(e, i) {
            return this.addSvgIconSetLiteralInNamespace("", e, i);
          }
          addSvgIconSetInNamespace(e, i, a) {
            return this._addSvgIconSetConfig(e, new Eo(i, null, a));
          }
          addSvgIconSetLiteralInNamespace(e, i, a) {
            const u = this._sanitizer.sanitize(o.q3G.HTML, i);
            if (!u) throw yy(i);
            return this._addSvgIconSetConfig(e, new Eo("", u, a));
          }
          registerFontClassAlias(e, i = e) {
            return this._fontCssClassesByAlias.set(e, i), this;
          }
          classNameForFontAlias(e) {
            return this._fontCssClassesByAlias.get(e) || e;
          }
          setDefaultFontSetClass(e) {
            return (this._defaultFontSetClass = e), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(e) {
            const i = this._sanitizer.sanitize(o.q3G.RESOURCE_URL, e);
            if (!i) throw _y(e);
            const a = this._cachedIconsByUrl.get(i);
            return a
              ? (0, Oe.of)(pu(a))
              : this._loadSvgIconFromConfig(new Eo(e, null)).pipe(
                  (0, sn.b)((u) => this._cachedIconsByUrl.set(i, u)),
                  (0, et.U)((u) => pu(u))
                );
          }
          getNamedSvgIcon(e, i = "") {
            const a = NE(i, e);
            let u = this._svgIconConfigs.get(a);
            if (u) return this._getSvgFromConfig(u);
            if (((u = this._getIconConfigFromResolvers(i, e)), u))
              return this._svgIconConfigs.set(a, u), this._getSvgFromConfig(u);
            const h = this._iconSetConfigs.get(i);
            return h ? this._getSvgFromIconSetConfigs(e, h) : (0, vE._)(hm(a));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(e) {
            return e.svgText
              ? (0, Oe.of)(pu(this._svgElementFromConfig(e)))
              : this._loadSvgIconFromConfig(e).pipe((0, et.U)((i) => pu(i)));
          }
          _getSvgFromIconSetConfigs(e, i) {
            const a = this._extractIconWithNameFromAnySet(e, i);
            return a
              ? (0, Oe.of)(a)
              : oy(
                  i
                    .filter((h) => !h.svgText)
                    .map((h) =>
                      this._loadSvgIconSetFromConfig(h).pipe(
                        Da((_) => {
                          const S = `Loading icon set URL: ${this._sanitizer.sanitize(
                            o.q3G.RESOURCE_URL,
                            h.url
                          )} failed: ${_.message}`;
                          return (
                            this._errorHandler.handleError(new Error(S)),
                            (0, Oe.of)(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  (0, et.U)(() => {
                    const h = this._extractIconWithNameFromAnySet(e, i);
                    if (!h) throw hm(e);
                    return h;
                  })
                );
          }
          _extractIconWithNameFromAnySet(e, i) {
            for (let a = i.length - 1; a >= 0; a--) {
              const u = i[a];
              if (u.svgText && u.svgText.indexOf(e) > -1) {
                const h = this._svgElementFromConfig(u),
                  _ = this._extractSvgIconFromSet(h, e, u.options);
                if (_) return _;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(e) {
            return this._fetchIcon(e).pipe(
              (0, sn.b)((i) => (e.svgText = i)),
              (0, et.U)(() => this._svgElementFromConfig(e))
            );
          }
          _loadSvgIconSetFromConfig(e) {
            return e.svgText
              ? (0, Oe.of)(null)
              : this._fetchIcon(e).pipe((0, sn.b)((i) => (e.svgText = i)));
          }
          _extractSvgIconFromSet(e, i, a) {
            const u = e.querySelector(`[id="${i}"]`);
            if (!u) return null;
            const h = u.cloneNode(!0);
            if ((h.removeAttribute("id"), "svg" === h.nodeName.toLowerCase()))
              return this._setSvgAttributes(h, a);
            if ("symbol" === h.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(h), a);
            const _ = this._svgElementFromString("<svg></svg>");
            return _.appendChild(h), this._setSvgAttributes(_, a);
          }
          _svgElementFromString(e) {
            const i = this._document.createElement("DIV");
            i.innerHTML = e;
            const a = i.querySelector("svg");
            if (!a) throw Error("<svg> tag not found");
            return a;
          }
          _toSvgElement(e) {
            const i = this._svgElementFromString("<svg></svg>"),
              a = e.attributes;
            for (let u = 0; u < a.length; u++) {
              const { name: h, value: _ } = a[u];
              "id" !== h && i.setAttribute(h, _);
            }
            for (let u = 0; u < e.childNodes.length; u++)
              e.childNodes[u].nodeType === this._document.ELEMENT_NODE &&
                i.appendChild(e.childNodes[u].cloneNode(!0));
            return i;
          }
          _setSvgAttributes(e, i) {
            return (
              e.setAttribute("fit", ""),
              e.setAttribute("height", "100%"),
              e.setAttribute("width", "100%"),
              e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
              e.setAttribute("focusable", "false"),
              i && i.viewBox && e.setAttribute("viewBox", i.viewBox),
              e
            );
          }
          _fetchIcon(e) {
            var i;
            const { url: a, options: u } = e,
              h =
                null !== (i = null == u ? void 0 : u.withCredentials) &&
                void 0 !== i &&
                i;
            if (!this._httpClient)
              throw Error(
                "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports."
              );
            if (null == a) throw Error(`Cannot fetch icon from URL "${a}".`);
            const _ = this._sanitizer.sanitize(o.q3G.RESOURCE_URL, a);
            if (!_) throw _y(a);
            const b = this._inProgressUrlFetches.get(_);
            if (b) return b;
            const S = this._httpClient
              .get(_, { responseType: "text", withCredentials: h })
              .pipe(
                ay(() => this._inProgressUrlFetches.delete(_)),
                (0, EE.B)()
              );
            return this._inProgressUrlFetches.set(_, S), S;
          }
          _addSvgIconConfig(e, i, a) {
            return this._svgIconConfigs.set(NE(e, i), a), this;
          }
          _addSvgIconSetConfig(e, i) {
            const a = this._iconSetConfigs.get(e);
            return a ? a.push(i) : this._iconSetConfigs.set(e, [i]), this;
          }
          _svgElementFromConfig(e) {
            if (!e.svgElement) {
              const i = this._svgElementFromString(e.svgText);
              this._setSvgAttributes(i, e.options), (e.svgElement = i);
            }
            return e.svgElement;
          }
          _getIconConfigFromResolvers(e, i) {
            for (let a = 0; a < this._resolvers.length; a++) {
              const u = this._resolvers[a](i, e);
              if (u)
                return FE(u) ? new Eo(u.url, null, u.options) : new Eo(u, null);
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(Rl, 8),
              o.LFG(Zo),
              o.LFG(G, 8),
              o.LFG(o.qLn)
            );
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Rl, 8), o.LFG(Zo), o.LFG(G, 8), o.LFG(o.qLn));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function pu(n) {
        return n.cloneNode(!0);
      }
      function NE(n, t) {
        return n + ":" + t;
      }
      function FE(n) {
        return !(!n.url || !n.options);
      }
      const LE = bo(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        ),
        by = new o.OlP("mat-icon-location", {
          providedIn: "root",
          factory: function () {
            const n = (0, o.f3M)(G),
              t = n ? n.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : "") };
          },
        }),
        BE = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        HE = BE.map((n) => `[${n}]`).join(", "),
        jE = /^url\(['"]?#(.*?)['"]?\)$/;
      let As = (() => {
          class n extends LE {
            constructor(e, i, a, u, h) {
              super(e),
                (this._iconRegistry = i),
                (this._location = u),
                (this._errorHandler = h),
                (this._inline = !1),
                (this._currentIconFetch = Bn.w.EMPTY),
                a || e.nativeElement.setAttribute("aria-hidden", "true");
            }
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = it(e);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(e) {
              e !== this._svgIcon &&
                (e
                  ? this._updateSvgIcon(e)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = e));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontSet &&
                ((this._fontSet = i), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontIcon &&
                ((this._fontIcon = i), this._updateFontIconClasses());
            }
            _splitIconName(e) {
              if (!e) return ["", ""];
              const i = e.split(":");
              switch (i.length) {
                case 1:
                  return ["", i[0]];
                case 2:
                  return i;
                default:
                  throw Error(`Invalid icon name: "${e}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const e = this._elementsWithExternalReferences;
              if (e && e.size) {
                const i = this._location.getPathname();
                i !== this._previousPath &&
                  ((this._previousPath = i), this._prependPathToReferences(i));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(e) {
              this._clearSvgElement();
              const i = e.querySelectorAll("style");
              for (let u = 0; u < i.length; u++) i[u].textContent += " ";
              const a = this._location.getPathname();
              (this._previousPath = a),
                this._cacheChildrenWithExternalReferences(e),
                this._prependPathToReferences(a),
                this._elementRef.nativeElement.appendChild(e);
            }
            _clearSvgElement() {
              const e = this._elementRef.nativeElement;
              let i = e.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                i--;

              ) {
                const a = e.childNodes[i];
                (1 !== a.nodeType || "svg" === a.nodeName.toLowerCase()) &&
                  e.removeChild(a);
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const e = this._elementRef.nativeElement,
                i = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              i != this._previousFontSetClass &&
                (this._previousFontSetClass &&
                  e.classList.remove(this._previousFontSetClass),
                i && e.classList.add(i),
                (this._previousFontSetClass = i)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass &&
                    e.classList.remove(this._previousFontIconClass),
                  this.fontIcon && e.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(e) {
              return "string" == typeof e ? e.trim().split(" ")[0] : e;
            }
            _prependPathToReferences(e) {
              const i = this._elementsWithExternalReferences;
              i &&
                i.forEach((a, u) => {
                  a.forEach((h) => {
                    u.setAttribute(h.name, `url('${e}#${h.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(e) {
              const i = e.querySelectorAll(HE),
                a = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let u = 0; u < i.length; u++)
                BE.forEach((h) => {
                  const _ = i[u],
                    b = _.getAttribute(h),
                    S = b ? b.match(jE) : null;
                  if (S) {
                    let T = a.get(_);
                    T || ((T = []), a.set(_, T)),
                      T.push({ name: h, value: S[1] });
                  }
                });
            }
            _updateSvgIcon(e) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                e)
              ) {
                const [i, a] = this._splitIconName(e);
                i && (this._svgNamespace = i),
                  a && (this._svgName = a),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(a, i)
                    .pipe(An(1))
                    .subscribe(
                      (u) => this._setSvgElement(u),
                      (u) => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${i}:${a}! ${u.message}`
                          )
                        );
                      }
                    ));
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(Ph),
                o.$8M("aria-hidden"),
                o.Y36(by),
                o.Y36(o.qLn)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-icon"]],
              hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk(
                    "data-mat-icon-type",
                    i._usingFontIcon() ? "font" : "svg"
                  )("data-mat-icon-name", i._svgName || i.fontIcon)(
                    "data-mat-icon-namespace",
                    i._svgNamespace || i.fontSet
                  ),
                  o.ekj("mat-icon-inline", i.inline)(
                    "mat-icon-no-color",
                    "primary" !== i.color &&
                      "accent" !== i.color &&
                      "warn" !== i.color
                  ));
              },
              inputs: {
                color: "color",
                inline: "inline",
                svgIcon: "svgIcon",
                fontSet: "fontSet",
                fontIcon: "fontIcon",
              },
              exportAs: ["matIcon"],
              features: [o.qOj],
              ngContentSelectors: eT,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (o.F$t(), o.Hsn(0));
              },
              styles: [
                ".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Cy = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et], Et] })),
            n
          );
        })(),
        Ey = (() => {
          class n {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (a) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty("disabled", e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.Qsj), o.Y36(o.SBq));
            }),
            (n.ɵdir = o.lG2({ type: n })),
            n
          );
        })(),
        Ia = (() => {
          class n extends Ey {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({ type: n, features: [o.qOj] })),
            n
          );
        })();
      const vr = new o.OlP("NgValueAccessor"),
        zE = { provide: vr, useExisting: (0, o.Gpc)(() => Nh), multi: !0 },
        dO = new o.OlP("CompositionEventMode");
      let Nh = (() => {
        class n extends Ey {
          constructor(e, i, a) {
            super(e, i),
              (this._compositionMode = a),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function () {
                  const n = L() ? L().getUserAgent() : "";
                  return /android (\d+)/.test(n.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty("value", null == e ? "" : e);
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(o.Qsj), o.Y36(o.SBq), o.Y36(dO, 8));
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                o.NdJ("input", function (u) {
                  return i._handleInput(u.target.value);
                })("blur", function () {
                  return i.onTouched();
                })("compositionstart", function () {
                  return i._compositionStart();
                })("compositionend", function (u) {
                  return i._compositionEnd(u.target.value);
                });
            },
            features: [o._Bn([zE]), o.qOj],
          })),
          n
        );
      })();
      function Aa(n) {
        return null == n || 0 === n.length;
      }
      function Sy(n) {
        return null != n && "number" == typeof n.length;
      }
      const _i = new o.OlP("NgValidators"),
        Jt = new o.OlP("NgAsyncValidators"),
        WE =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class Qr {
        static min(t) {
          return (
            (n = t),
            (t) => {
              if (Aa(t.value) || Aa(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e < n
                ? { min: { min: n, actual: t.value } }
                : null;
            }
          );
          var n;
        }
        static max(t) {
          return (
            (n = t),
            (t) => {
              if (Aa(t.value) || Aa(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e > n
                ? { max: { max: n, actual: t.value } }
                : null;
            }
          );
          var n;
        }
        static required(t) {
          return ZE(t);
        }
        static requiredTrue(t) {
          return !0 === t.value ? null : { required: !0 };
        }
        static email(t) {
          return Aa((n = t).value) || WE.test(n.value) ? null : { email: !0 };
          var n;
        }
        static minLength(t) {
          return (
            (n = t),
            (t) =>
              Aa(t.value) || !Sy(t.value)
                ? null
                : t.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null
          );
          var n;
        }
        static maxLength(t) {
          return (
            (n = t),
            (t) =>
              Sy(t.value) && t.value.length > n
                ? {
                    maxlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null
          );
          var n;
        }
        static pattern(t) {
          return (function (n) {
            if (!n) return wo;
            let t, e;
            return (
              "string" == typeof n
                ? ((e = ""),
                  "^" !== n.charAt(0) && (e += "^"),
                  (e += n),
                  "$" !== n.charAt(n.length - 1) && (e += "$"),
                  (t = new RegExp(e)))
                : ((e = n.toString()), (t = n)),
              (i) => {
                if (Aa(i.value)) return null;
                const a = i.value;
                return t.test(a)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: a } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return JE(t);
        }
        static composeAsync(t) {
          return Xr(t);
        }
      }
      function ZE(n) {
        return Aa(n.value) ? { required: !0 } : null;
      }
      function wo(n) {
        return null;
      }
      function QE(n) {
        return null != n;
      }
      function Iy(n) {
        const t = (0, o.QGY)(n) ? (0, Yn.D)(n) : n;
        return (0, o.CqO)(t), t;
      }
      function tT(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? Object.assign(Object.assign({}, t), e) : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function fm(n, t) {
        return t.map((e) => e(n));
      }
      function Jr(n) {
        return n.map((t) =>
          (function (n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function JE(n) {
        if (!n) return null;
        const t = n.filter(QE);
        return 0 == t.length
          ? null
          : function (e) {
              return tT(fm(e, t));
            };
      }
      function xy(n) {
        return null != n ? JE(Jr(n)) : null;
      }
      function Xr(n) {
        if (!n) return null;
        const t = n.filter(QE);
        return 0 == t.length
          ? null
          : function (e) {
              return oy(fm(e, t).map(Iy)).pipe((0, et.U)(tT));
            };
      }
      function or(n) {
        return null != n ? Xr(Jr(n)) : null;
      }
      function br(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function Ry(n) {
        return n._rawValidators;
      }
      function ky(n) {
        return n._rawAsyncValidators;
      }
      function Oy(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function pm(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function XE(n, t) {
        const e = Oy(t);
        return (
          Oy(n).forEach((a) => {
            pm(e, a) || e.push(a);
          }),
          e
        );
      }
      function ew(n, t) {
        return Oy(t).filter((e) => !pm(n, e));
      }
      let mm = (() => {
          class n {
            constructor() {
              (this._rawValidators = []),
                (this._rawAsyncValidators = []),
                (this._onDestroyCallbacks = []);
            }
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            _setValidators(e) {
              (this._rawValidators = e || []),
                (this._composedValidatorFn = xy(this._rawValidators));
            }
            _setAsyncValidators(e) {
              (this._rawAsyncValidators = e || []),
                (this._composedAsyncValidatorFn = or(this._rawAsyncValidators));
            }
            get validator() {
              return this._composedValidatorFn || null;
            }
            get asyncValidator() {
              return this._composedAsyncValidatorFn || null;
            }
            _registerOnDestroy(e) {
              this._onDestroyCallbacks.push(e);
            }
            _invokeOnDestroyCallbacks() {
              this._onDestroyCallbacks.forEach((e) => e()),
                (this._onDestroyCallbacks = []);
            }
            reset(e) {
              this.control && this.control.reset(e);
            }
            hasError(e, i) {
              return !!this.control && this.control.hasError(e, i);
            }
            getError(e, i) {
              return this.control ? this.control.getError(e, i) : null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({ type: n })),
            n
          );
        })(),
        jn = (() => {
          class n extends mm {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({ type: n, features: [o.qOj] })),
            n
          );
        })();
      class es extends mm {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class Py {
        constructor(t) {
          this._cd = t;
        }
        is(t) {
          var e, i, a;
          return "submitted" === t
            ? !!(null === (e = this._cd) || void 0 === e ? void 0 : e.submitted)
            : !!(null ===
                (a =
                  null === (i = this._cd) || void 0 === i
                    ? void 0
                    : i.control) || void 0 === a
                ? void 0
                : a[t]);
        }
      }
      let gm = (() => {
          class n extends Py {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(es, 2));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj("ng-untouched", i.is("untouched"))(
                    "ng-touched",
                    i.is("touched")
                  )("ng-pristine", i.is("pristine"))("ng-dirty", i.is("dirty"))(
                    "ng-valid",
                    i.is("valid")
                  )("ng-invalid", i.is("invalid"))(
                    "ng-pending",
                    i.is("pending")
                  );
              },
              features: [o.qOj],
            })),
            n
          );
        })(),
        mu = (() => {
          class n extends Py {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(jn, 10));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj("ng-untouched", i.is("untouched"))(
                    "ng-touched",
                    i.is("touched")
                  )("ng-pristine", i.is("pristine"))("ng-dirty", i.is("dirty"))(
                    "ng-valid",
                    i.is("valid")
                  )("ng-invalid", i.is("invalid"))(
                    "ng-pending",
                    i.is("pending")
                  )("ng-submitted", i.is("submitted"));
              },
              features: [o.qOj],
            })),
            n
          );
        })();
      function gu(n, t) {
        Fy(n, t),
          t.valueAccessor.writeValue(n.value),
          (function (n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && rw(n, t);
            });
          })(n, t),
          (function (n, t) {
            const e = (i, a) => {
              t.valueAccessor.writeValue(i), a && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function (n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && rw(n, t),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function (n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function ym(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          bm(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function vm(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function Fy(n, t) {
        const e = Ry(n);
        null !== t.validator
          ? n.setValidators(br(e, t.validator))
          : "function" == typeof e && n.setValidators([e]);
        const i = ky(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(br(i, t.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const a = () => n.updateValueAndValidity();
        vm(t._rawValidators, a), vm(t._rawAsyncValidators, a);
      }
      function bm(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const a = Ry(n);
            if (Array.isArray(a) && a.length > 0) {
              const u = a.filter((h) => h !== t.validator);
              u.length !== a.length && ((e = !0), n.setValidators(u));
            }
          }
          if (null !== t.asyncValidator) {
            const a = ky(n);
            if (Array.isArray(a) && a.length > 0) {
              const u = a.filter((h) => h !== t.asyncValidator);
              u.length !== a.length && ((e = !0), n.setAsyncValidators(u));
            }
          }
        }
        const i = () => {};
        return vm(t._rawValidators, i), vm(t._rawAsyncValidators, i), e;
      }
      function rw(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function ow(n, t) {
        Fy(n, t);
      }
      function aw(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      function Bh(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      const _u = "VALID",
        Uh = "INVALID",
        Ol = "PENDING",
        yu = "DISABLED";
      function Cm(n) {
        return (So(n) ? n.validators : n) || null;
      }
      function By(n) {
        return Array.isArray(n) ? xy(n) : n || null;
      }
      function Hh(n, t) {
        return (So(t) ? t.asyncValidators : n) || null;
      }
      function Em(n) {
        return Array.isArray(n) ? or(n) : n || null;
      }
      function So(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      class Uy {
        constructor(t, e) {
          (this._hasOwnPendingAsyncValidator = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = t),
            (this._rawAsyncValidators = e),
            (this._composedValidatorFn = By(this._rawValidators)),
            (this._composedAsyncValidatorFn = Em(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === _u;
        }
        get invalid() {
          return this.status === Uh;
        }
        get pending() {
          return this.status == Ol;
        }
        get disabled() {
          return this.status === yu;
        }
        get enabled() {
          return this.status !== yu;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(t) {
          (this._rawValidators = t), (this._composedValidatorFn = By(t));
        }
        setAsyncValidators(t) {
          (this._rawAsyncValidators = t),
            (this._composedAsyncValidatorFn = Em(t));
        }
        addValidators(t) {
          this.setValidators(XE(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(XE(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(ew(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(ew(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return pm(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return pm(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = Ol),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = yu),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, t), { skipPristineCheck: e })
            ),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = _u),
            this._forEachChild((i) => {
              i.enable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, t), { skipPristineCheck: e })
            ),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === _u || this.status === Ol) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? yu : _u;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = Ol), (this._hasOwnPendingAsyncValidator = !0);
            const e = Iy(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          return (function (n, t, e) {
            if (
              null == t ||
              (Array.isArray(t) || (t = t.split(".")),
              Array.isArray(t) && 0 === t.length)
            )
              return null;
            let i = n;
            return (
              t.forEach((a) => {
                i =
                  i instanceof xs
                    ? i.controls.hasOwnProperty(a)
                      ? i.controls[a]
                      : null
                    : (i instanceof cw && i.at(a)) || null;
              }),
              i
            );
          })(this, t);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new o.vpe()), (this.statusChanges = new o.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? yu
            : this.errors
            ? Uh
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Ol)
            ? Ol
            : this._anyControlsHaveStatus(Uh)
            ? Uh
            : _u;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _isBoxedValue(t) {
          return (
            "object" == typeof t &&
            null !== t &&
            2 === Object.keys(t).length &&
            "value" in t &&
            "disabled" in t
          );
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          So(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
      }
      class vu extends Uy {
        constructor(t = null, e, i) {
          super(Cm(e), Hh(i, e)),
            (this._onChange = []),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== e.emitViewToModelChange)
              ),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = null, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          Bh(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          Bh(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(t) {
          this._isBoxedValue(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      }
      class xs extends Uy {
        constructor(t, e, i) {
          super(Cm(e), Hh(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            Object.keys(t).forEach((i) => {
              this._throwIfControlMissing(i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              this.controls[i] &&
                this.controls[i].patchValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, a) => {
            i.reset(t[a], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => (
              (t[i] = e instanceof vu ? e.value : e.getRawValue()), t
            )
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[t])
            throw new Error(`Cannot find form control with name: ${t}.`);
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const e of Object.keys(this.controls)) {
            const i = this.controls[e];
            if (this.contains(e) && t(i)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((e.enabled || this.disabled) && (t[i] = e.value), t)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((a, u) => {
              i = e(i, a, u);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, i) => {
            if (void 0 === t[i])
              throw new Error(
                `Must supply a value for form control with name: '${i}'.`
              );
          });
        }
      }
      class cw extends Uy {
        constructor(t, e, i) {
          super(Cm(e), Hh(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(t) {
          return this.controls[t];
        }
        push(t, e = {}) {
          this.controls.push(t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        insert(t, e, i = {}) {
          this.controls.splice(t, 0, e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            this.updateValueAndValidity({ emitEvent: e.emitEvent });
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            e && (this.controls.splice(t, 0, e), this._registerControl(e)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            t.forEach((i, a) => {
              this._throwIfControlMissing(a),
                this.at(a).setValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (t.forEach((i, a) => {
              this.at(a) &&
                this.at(a).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = [], e = {}) {
          this._forEachChild((i, a) => {
            i.reset(t[a], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) =>
            t instanceof vu ? t.value : t.getRawValue()
          );
        }
        clear(t = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }));
        }
        _syncPendingControls() {
          let t = this.controls.reduce(
            (e, i) => !!i._syncPendingControls() || e,
            !1
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(t))
            throw new Error(`Cannot find form control at index ${t}`);
        }
        _forEachChild(t) {
          this.controls.forEach((e, i) => {
            t(e, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((t) => t.enabled || this.disabled)
            .map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, i) => {
            if (void 0 === t[i])
              throw new Error(
                `Must supply a value for form control at index: ${i}.`
              );
          });
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this),
            t._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const Hy = { provide: jn, useExisting: (0, o.Gpc)(() => Pl) },
        bu = (() => Promise.resolve(null))();
      let Pl = (() => {
          class n extends jn {
            constructor(e, i) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new o.vpe()),
                (this.form = new xs({}, xy(e), or(i)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(e) {
              bu.then(() => {
                const i = this._findContainer(e.path);
                (e.control = i.registerControl(e.name, e.control)),
                  gu(e.control, e),
                  e.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(e);
              });
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              bu.then(() => {
                const i = this._findContainer(e.path);
                i && i.removeControl(e.name), Bh(this._directives, e);
              });
            }
            addFormGroup(e) {
              bu.then(() => {
                const i = this._findContainer(e.path),
                  a = new xs({});
                ow(a, e),
                  i.registerControl(e.name, a),
                  a.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(e) {
              bu.then(() => {
                const i = this._findContainer(e.path);
                i && i.removeControl(e.name);
              });
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            updateModel(e, i) {
              bu.then(() => {
                this.form.get(e.path).setValue(i);
              });
            }
            setValue(e) {
              this.control.setValue(e);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                aw(this.form, this._directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(e) {
              return e.pop(), e.length ? this.form.get(e) : this.form;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(_i, 10), o.Y36(Jt, 10));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                ["ng-form"],
                ["", "ngForm", ""],
              ],
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("submit", function (u) {
                    return i.onSubmit(u);
                  })("reset", function () {
                    return i.onReset();
                  });
              },
              inputs: { options: ["ngFormOptions", "options"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [o._Bn([Hy]), o.qOj],
            })),
            n
          );
        })(),
        Dm = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            })),
            n
          );
        })(),
        zy = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({})),
            n
          );
        })();
      const Nl = new o.OlP("NgModelWithFormControlWarning"),
        bT = { provide: jn, useExisting: (0, o.Gpc)(() => ts) };
      let ts = (() => {
        class n extends jn {
          constructor(e, i) {
            super(),
              (this.validators = e),
              (this.asyncValidators = i),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new o.vpe()),
              this._setValidators(e),
              this._setAsyncValidators(i);
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (bm(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const i = this.form.get(e.path);
            return (
              gu(i, e),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              i
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            ym(e.control || null, e, !1), Bh(this.directives, e);
          }
          addFormGroup(e) {
            this._setUpFormContainer(e);
          }
          removeFormGroup(e) {
            this._cleanUpFormContainer(e);
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            this._setUpFormContainer(e);
          }
          removeFormArray(e) {
            this._cleanUpFormContainer(e);
          }
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            this.form.get(e.path).setValue(i);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              aw(this.form, this.directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const i = e.control,
                a = this.form.get(e.path);
              i !== a &&
                (ym(i || null, e),
                a instanceof vu && (gu(a, e), (e.control = a)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(e) {
            const i = this.form.get(e.path);
            ow(i, e), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(e) {
            if (this.form) {
              const i = this.form.get(e.path);
              i &&
                (function (n, t) {
                  return bm(n, t);
                })(i, e) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            Fy(this.form, this), this._oldForm && bm(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(_i, 10), o.Y36(Jt, 10));
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (e, i) {
              1 & e &&
                o.NdJ("submit", function (u) {
                  return i.onSubmit(u);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [o._Bn([bT]), o.qOj, o.TTD],
          })),
          n
        );
      })();
      const jh = { provide: es, useExisting: (0, o.Gpc)(() => Tm) };
      let Tm = (() => {
        class n extends es {
          constructor(e, i, a, u, h) {
            super(),
              (this._ngModelWarningConfig = h),
              (this._added = !1),
              (this.update = new o.vpe()),
              (this._ngModelWarningSent = !1),
              (this._parent = e),
              this._setValidators(i),
              this._setAsyncValidators(a),
              (this.valueAccessor = (function (n, t) {
                if (!t) return null;
                let e, i, a;
                return (
                  Array.isArray(t),
                  t.forEach((u) => {
                    u.constructor === Nh
                      ? (e = u)
                      : (function (n) {
                          return Object.getPrototypeOf(n.constructor) === Ia;
                        })(u)
                      ? (i = u)
                      : (a = u);
                  }),
                  a || i || e || null
                );
              })(0, u));
          }
          set isDisabled(e) {}
          ngOnChanges(e) {
            this._added || this._setUpControl(),
              (function (n, t) {
                if (!n.hasOwnProperty("model")) return !1;
                const e = n.model;
                return !!e.isFirstChange() || !Object.is(t, e.currentValue);
              })(e, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          get path() {
            return (function (n, t) {
              return [...t.path, n];
            })(
              null == this.name ? this.name : this.name.toString(),
              this._parent
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              this.control.disabled &&
                this.valueAccessor.setDisabledState &&
                this.valueAccessor.setDisabledState(!0),
              (this._added = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(jn, 13),
              o.Y36(_i, 10),
              o.Y36(Jt, 10),
              o.Y36(vr, 10),
              o.Y36(Nl, 8)
            );
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "formControlName", ""]],
            inputs: {
              isDisabled: ["disabled", "isDisabled"],
              name: ["formControlName", "name"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [o._Bn([jh]), o.qOj, o.TTD],
          })),
          (n._ngModelWarningSentOnce = !1),
          n
        );
      })();
      const Dw = { provide: _i, useExisting: (0, o.Gpc)(() => Am), multi: !0 };
      let Am = (() => {
          class n {
            constructor() {
              this._required = !1;
            }
            get required() {
              return this._required;
            }
            set required(e) {
              (this._required = null != e && !1 !== e && "false" != `${e}`),
                this._onChange && this._onChange();
            }
            validate(e) {
              return this.required ? ZE(e) : null;
            }
            registerOnValidatorChange(e) {
              this._onChange = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                [
                  "",
                  "required",
                  "",
                  "formControlName",
                  "",
                  3,
                  "type",
                  "checkbox",
                ],
                ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && o.uIk("required", i.required ? "" : null);
              },
              inputs: { required: "required" },
              features: [o._Bn([Dw])],
            })),
            n
          );
        })(),
        xw = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[zy]] })),
            n
          );
        })(),
        Rw = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [xw] })),
            n
          );
        })(),
        kw = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: Nl, useValue: e.warnOnNgModelWithFormControl },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [xw] })),
            n
          );
        })(),
        Ow = (() => {
          class n {
            group(e, i = null) {
              const a = this._reduceControls(e);
              let _,
                u = null,
                h = null;
              return (
                null != i &&
                  ((function (n) {
                    return (
                      void 0 !== n.asyncValidators ||
                      void 0 !== n.validators ||
                      void 0 !== n.updateOn
                    );
                  })(i)
                    ? ((u = null != i.validators ? i.validators : null),
                      (h =
                        null != i.asyncValidators ? i.asyncValidators : null),
                      (_ = null != i.updateOn ? i.updateOn : void 0))
                    : ((u = null != i.validator ? i.validator : null),
                      (h =
                        null != i.asyncValidator ? i.asyncValidator : null))),
                new xs(a, { asyncValidators: h, updateOn: _, validators: u })
              );
            }
            control(e, i, a) {
              return new vu(e, i, a);
            }
            array(e, i, a) {
              const u = e.map((h) => this._createControl(h));
              return new cw(u, i, a);
            }
            _reduceControls(e) {
              const i = {};
              return (
                Object.keys(e).forEach((a) => {
                  i[a] = this._createControl(e[a]);
                }),
                i
              );
            }
            _createControl(e) {
              return e instanceof vu || e instanceof xs || e instanceof cw
                ? e
                : Array.isArray(e)
                ? this.control(
                    e[0],
                    e.length > 1 ? e[1] : null,
                    e.length > 2 ? e[2] : null
                  )
                : this.control(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = (0, o.Yz7)({
              factory: function () {
                return new n();
              },
              token: n,
              providedIn: kw,
            })),
            n
          );
        })();
      class Ky {
        constructor(t = !1, e, i = !0) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new xe.xQ()),
            e &&
              e.length &&
              (t
                ? e.forEach((a) => this._markSelected(a))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((e) => this._markSelected(e)),
            this._emitChangeEvent();
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((e) => this._unmarkSelected(e)),
            this._emitChangeEvent();
        }
        toggle(t) {
          this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(t) {
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) &&
            (this._selection.delete(t),
            this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
      }
      let Uw = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({ imports: [[Sa, Et], Et] })),
          n
        );
      })();
      var tv = k(9105);
      function wu(n, t, e, i) {
        return (
          (0, tv.m)(e) && ((i = e), (e = void 0)),
          i
            ? wu(n, t, e).pipe(
                (0, et.U)((a) => ((0, cm.k)(a) ? i(...a) : i(a)))
              )
            : new Sn.y((a) => {
                xm(
                  n,
                  t,
                  function (h) {
                    a.next(
                      arguments.length > 1
                        ? Array.prototype.slice.call(arguments)
                        : h
                    );
                  },
                  a,
                  e
                );
              })
        );
      }
      function xm(n, t, e, i, a) {
        let u;
        if (
          (function (n) {
            return (
              n &&
              "function" == typeof n.addEventListener &&
              "function" == typeof n.removeEventListener
            );
          })(n)
        ) {
          const h = n;
          n.addEventListener(t, e, a),
            (u = () => h.removeEventListener(t, e, a));
        } else if (
          (function (n) {
            return n && "function" == typeof n.on && "function" == typeof n.off;
          })(n)
        ) {
          const h = n;
          n.on(t, e), (u = () => h.off(t, e));
        } else if (
          (function (n) {
            return (
              n &&
              "function" == typeof n.addListener &&
              "function" == typeof n.removeListener
            );
          })(n)
        ) {
          const h = n;
          n.addListener(t, e), (u = () => h.removeListener(t, e));
        } else {
          if (!n || !n.length) throw new TypeError("Invalid event target");
          for (let h = 0, _ = n.length; h < _; h++) xm(n[h], t, e, i, a);
        }
        i.add(u);
      }
      var jw = k(6465),
        zw = k(6102);
      new (class extends zw.v {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let i,
            a = -1,
            u = e.length;
          t = t || e.shift();
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while (++a < u && (t = e.shift()));
          if (((this.active = !1), i)) {
            for (; ++a < u && (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      })(
        class extends jw.o {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t.scheduled ||
                  (t.scheduled = requestAnimationFrame(() => t.flush(null))));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null !== i && i > 0) || (null === i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            0 === t.actions.length &&
              (cancelAnimationFrame(e), (t.scheduled = void 0));
          }
        }
      );
      var $w = k(4581);
      class Rm {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new ZT(t, this.durationSelector));
        }
      }
      class ZT extends yr.Ds {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1);
        }
        _next(t) {
          if (((this.value = t), (this.hasValue = !0), !this.throttled)) {
            let e;
            try {
              const { durationSelector: a } = this;
              e = a(t);
            } catch (a) {
              return this.destination.error(a);
            }
            const i = (0, yr.ft)(e, new yr.IY(this));
            !i || i.closed
              ? this.clearThrottle()
              : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: t, hasValue: e, throttled: i } = this;
          i && (this.remove(i), (this.throttled = void 0), i.unsubscribe()),
            e &&
              ((this.value = void 0),
              (this.hasValue = !1),
              this.destination.next(t));
        }
        notifyNext() {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      var Fl = k(6561);
      function wO(n) {
        const { index: t, period: e, subscriber: i } = n;
        if ((i.next(t), !i.closed)) {
          if (-1 === e) return i.complete();
          (n.index = t + 1), this.schedule(n, e);
        }
      }
      function km(n, t = fh.P) {
        return (function (n) {
          return function (e) {
            return e.lift(new Rm(n));
          };
        })(() =>
          (function (n = 0, t, e) {
            let i = -1;
            return (
              (0, Fl.k)(t)
                ? (i = Number(t) < 1 ? 1 : Number(t))
                : (0, Ch.K)(t) && (e = t),
              (0, Ch.K)(e) || (e = fh.P),
              new Sn.y((a) => {
                const u = (0, Fl.k)(n) ? n : +n - e.now();
                return e.schedule(wO, u, {
                  index: 0,
                  period: i,
                  subscriber: a,
                });
              })
            );
          })(n, t)
        );
      }
      function Xt(n, t) {
        return "function" == typeof t
          ? (e) =>
              e.pipe(
                Xt((i, a) =>
                  (0, Yn.D)(n(i, a)).pipe((0, et.U)((u, h) => t(i, u, a, h)))
                )
              )
          : (e) => e.lift(new KT(n));
      }
      class KT {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new QT(t, this.project));
        }
      }
      class QT extends yr.Ds {
        constructor(t, e) {
          super(t), (this.project = e), (this.index = 0);
        }
        _next(t) {
          let e;
          const i = this.index++;
          try {
            e = this.project(t, i);
          } catch (a) {
            return void this.destination.error(a);
          }
          this._innerSub(e);
        }
        _innerSub(t) {
          const e = this.innerSubscription;
          e && e.unsubscribe();
          const i = new yr.IY(this),
            a = this.destination;
          a.add(i),
            (this.innerSubscription = (0, yr.ft)(t, i)),
            this.innerSubscription !== i && a.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: t } = this;
          (!t || t.closed) && super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = void 0;
        }
        notifyComplete() {
          (this.innerSubscription = void 0),
            this.isStopped && super._complete();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
      }
      var DO = k(7771),
        $h = k(9746),
        JT = k(8858);
      class XT extends xe.xQ {
        constructor(
          t = Number.POSITIVE_INFINITY,
          e = Number.POSITIVE_INFINITY,
          i
        ) {
          super(),
            (this.scheduler = i),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = t < 1 ? 1 : t),
            (this._windowTime = e < 1 ? 1 : e),
            e === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0),
                (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(t) {
          if (!this.isStopped) {
            const e = this._events;
            e.push(t), e.length > this._bufferSize && e.shift();
          }
          super.next(t);
        }
        nextTimeWindow(t) {
          this.isStopped ||
            (this._events.push(new iv(this._getNow(), t)),
            this._trimBufferThenGetEvents()),
            super.next(t);
        }
        _subscribe(t) {
          const e = this._infiniteTimeWindow,
            i = e ? this._events : this._trimBufferThenGetEvents(),
            a = this.scheduler,
            u = i.length;
          let h;
          if (this.closed) throw new El.N();
          if (
            (this.isStopped || this.hasError
              ? (h = Bn.w.EMPTY)
              : (this.observers.push(t), (h = new JT.W(this, t))),
            a && t.add((t = new $h.ht(t, a))),
            e)
          )
            for (let _ = 0; _ < u && !t.closed; _++) t.next(i[_]);
          else for (let _ = 0; _ < u && !t.closed; _++) t.next(i[_].value);
          return (
            this.hasError
              ? t.error(this.thrownError)
              : this.isStopped && t.complete(),
            h
          );
        }
        _getNow() {
          return (this.scheduler || DO.c).now();
        }
        _trimBufferThenGetEvents() {
          const t = this._getNow(),
            e = this._bufferSize,
            i = this._windowTime,
            a = this._events,
            u = a.length;
          let h = 0;
          for (; h < u && !(t - a[h].time < i); ) h++;
          return u > e && (h = Math.max(h, u - e)), h > 0 && a.splice(0, h), a;
        }
      }
      class iv {
        constructor(t, e) {
          (this.time = t), (this.value = e);
        }
      }
      function Om(n, t, e) {
        let i;
        return (
          (i =
            n && "object" == typeof n
              ? n
              : { bufferSize: n, windowTime: t, refCount: !1, scheduler: e }),
          (a) =>
            a.lift(
              (function ({
                bufferSize: n = Number.POSITIVE_INFINITY,
                windowTime: t = Number.POSITIVE_INFINITY,
                refCount: e,
                scheduler: i,
              }) {
                let a,
                  h,
                  u = 0,
                  _ = !1,
                  b = !1;
                return function (T) {
                  let A;
                  u++,
                    !a || _
                      ? ((_ = !1),
                        (a = new XT(n, t, i)),
                        (A = a.subscribe(this)),
                        (h = T.subscribe({
                          next(B) {
                            a.next(B);
                          },
                          error(B) {
                            (_ = !0), a.error(B);
                          },
                          complete() {
                            (b = !0), (h = void 0), a.complete();
                          },
                        })),
                        b && (h = void 0))
                      : (A = a.subscribe(this)),
                    this.add(() => {
                      u--,
                        A.unsubscribe(),
                        (A = void 0),
                        h &&
                          !b &&
                          e &&
                          0 === u &&
                          (h.unsubscribe(), (h = void 0), (a = void 0));
                    });
                };
              })(i)
            )
        );
      }
      let Wh = (() => {
          class n {
            constructor(e, i, a) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new xe.xQ()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = a);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Sn.y((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const a =
                      e > 0
                        ? this._scrolled.pipe(km(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        a.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, Oe.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const a = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(En((u) => !u || a.indexOf(u) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((a, u) => {
                  this._scrollableContainsElement(u, e) && i.push(u);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let a = va(i),
                u = e.getElementRef().nativeElement;
              do {
                if (a == u) return !0;
              } while ((a = a.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                wu(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(o.R0b), o.LFG(Nt), o.LFG(G, 8));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(o.R0b), o.LFG(Nt), o.LFG(G, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Du = (() => {
          class n {
            constructor(e, i, a) {
              (this._platform = e),
                (this._change = new xe.xQ()),
                (this._changeListener = (u) => {
                  this._change.next(u);
                }),
                (this._document = a),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const u = this._getWindow();
                    u.addEventListener("resize", this._changeListener),
                      u.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: a } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + a,
                right: e.left + i,
                height: a,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                a = e.documentElement,
                u = a.getBoundingClientRect();
              return {
                top:
                  -u.top || e.body.scrollTop || i.scrollY || a.scrollTop || 0,
                left:
                  -u.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  a.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(km(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Nt), o.LFG(o.R0b), o.LFG(G, 8));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(Nt), o.LFG(o.R0b), o.LFG(G, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Ll = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({})),
            n
          );
        })(),
        Mu = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Ca, iu, Ll], Ca, Ll] })),
            n
          );
        })();
      class lv {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Yh extends lv {
        constructor(t, e, i, a) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = a);
        }
      }
      class xa extends lv {
        constructor(t, e, i) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class oI extends lv {
        constructor(t) {
          super(), (this.element = t instanceof o.SBq ? t.nativeElement : t);
        }
      }
      class Nm {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof Yh
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof xa
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof oI
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class aI extends Nm {
        constructor(t, e, i, a, u) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = a),
            (this.attachDomPortal = (h) => {
              const _ = h.element,
                b = this._document.createComment("dom-portal");
              _.parentNode.insertBefore(b, _),
                this.outletElement.appendChild(_),
                (this._attachedPortal = h),
                super.setDisposeFn(() => {
                  b.parentNode && b.parentNode.replaceChild(_, b);
                });
            }),
            (this._document = u);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let a;
          return (
            t.viewContainerRef
              ? ((a = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => a.destroy()))
              : ((a = i.create(t.injector || this._defaultInjector)),
                this._appRef.attachView(a.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(a.hostView), a.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(a)),
            (this._attachedPortal = t),
            a
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context);
          return (
            i.rootNodes.forEach((a) => this.outletElement.appendChild(a)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let a = e.indexOf(i);
              -1 !== a && e.remove(a);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode &&
              this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let Vl = (() => {
          class n extends Nm {
            constructor(e, i, a) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new o.vpe()),
                (this.attachDomPortal = (u) => {
                  const h = u.element,
                    _ = this._document.createComment("dom-portal");
                  u.setAttachedHost(this),
                    h.parentNode.insertBefore(_, h),
                    this._getRootNode().appendChild(h),
                    (this._attachedPortal = u),
                    super.setDisposeFn(() => {
                      _.parentNode && _.parentNode.replaceChild(h, _);
                    });
                }),
                (this._document = a);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedPortal = null),
                (this._attachedRef = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                u = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                h = i.createComponent(u, i.length, e.injector || i.injector);
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(h.hostView.rootNodes[0]),
                super.setDisposeFn(() => h.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = h),
                this.attached.emit(h),
                h
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o._Vd), o.Y36(o.s_b), o.Y36(G));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [o.qOj],
            })),
            n
          );
        })(),
        Bl = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({})),
            n
          );
        })();
      var yi = k(6682);
      class FO {
        constructor(t, e) {
          (this.predicate = t), (this.inclusive = e);
        }
        call(t, e) {
          return e.subscribe(new cI(t, this.predicate, this.inclusive));
        }
      }
      class cI extends $n.L {
        constructor(t, e, i) {
          super(t),
            (this.predicate = e),
            (this.inclusive = i),
            (this.index = 0);
        }
        _next(t) {
          const e = this.destination;
          let i;
          try {
            i = this.predicate(t, this.index++);
          } catch (a) {
            return void e.error(a);
          }
          this.nextOrComplete(t, i);
        }
        nextOrComplete(t, e) {
          const i = this.destination;
          Boolean(e) ? i.next(t) : (this.inclusive && i.next(t), i.complete());
        }
      }
      const Zh = gM();
      class uI {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = wn(-this._previousScrollPosition.left)),
              (t.style.top = wn(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              a = this._document.body.style,
              u = i.scrollBehavior || "",
              h = a.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              Zh && (i.scrollBehavior = a.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              Zh && ((i.scrollBehavior = u), (a.scrollBehavior = h));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class Kw {
        constructor(t, e, i, a) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = a),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class cv {
        enable() {}
        disable() {}
        attach() {}
      }
      function qh(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function uv(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class Qw {
        constructor(t, e, i, a) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = a),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: a } =
                      this._viewportRuler.getViewportSize();
                  qh(e, [
                    {
                      width: i,
                      height: a,
                      bottom: a,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let dI = (() => {
        class n {
          constructor(e, i, a, u) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = a),
              (this.noop = () => new cv()),
              (this.close = (h) =>
                new Kw(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  h
                )),
              (this.block = () => new uI(this._viewportRuler, this._document)),
              (this.reposition = (h) =>
                new Qw(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  h
                )),
              (this._document = u);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(Wh), o.LFG(Du), o.LFG(o.R0b), o.LFG(G));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(Wh), o.LFG(Du), o.LFG(o.R0b), o.LFG(G));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      class Kh {
        constructor(t) {
          if (
            ((this.scrollStrategy = new cv()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class Jw {
        constructor(t, e, i, a, u) {
          (this.offsetX = i),
            (this.offsetY = a),
            (this.panelClass = u),
            (this.originX = t.originX),
            (this.originY = t.originY),
            (this.overlayX = e.overlayX),
            (this.overlayY = e.overlayY);
        }
      }
      class Xw {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let hI = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(G));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Qh = (() => {
          class n extends hI {
            constructor(e) {
              super(e),
                (this._keydownListener = (i) => {
                  const a = this._attachedOverlays;
                  for (let u = a.length - 1; u > -1; u--)
                    if (a[u]._keydownEvents.observers.length > 0) {
                      a[u]._keydownEvents.next(i);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(G));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Bt = (() => {
          class n extends hI {
            constructor(e, i) {
              super(e),
                (this._platform = i),
                (this._cursorStyleIsSet = !1),
                (this._clickListener = (a) => {
                  const u = su(a),
                    h = this._attachedOverlays.slice();
                  for (let _ = h.length - 1; _ > -1; _--) {
                    const b = h[_];
                    if (
                      !(b._outsidePointerEvents.observers.length < 1) &&
                      b.hasAttached()
                    ) {
                      if (b.overlayElement.contains(u)) break;
                      b._outsidePointerEvents.next(a);
                    }
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                i.addEventListener("click", this._clickListener, !0),
                  i.addEventListener("auxclick", this._clickListener, !0),
                  i.addEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(G), o.LFG(Nt));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(G), o.LFG(Nt));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      const Oi = "undefined" != typeof window ? window : {},
        Ul =
          (void 0 !== Oi.__karma__ && !!Oi.__karma__) ||
          (void 0 !== Oi.jasmine && !!Oi.jasmine) ||
          (void 0 !== Oi.jest && !!Oi.jest) ||
          (void 0 !== Oi.Mocha && !!Oi.Mocha);
      let Do = (() => {
        class n {
          constructor(e, i) {
            (this._platform = i), (this._document = e);
          }
          ngOnDestroy() {
            const e = this._containerElement;
            e && e.parentNode && e.parentNode.removeChild(e);
          }
          getContainerElement() {
            return (
              this._containerElement || this._createContainer(),
              this._containerElement
            );
          }
          _createContainer() {
            const e = "cdk-overlay-container";
            if (this._platform.isBrowser || Ul) {
              const a = this._document.querySelectorAll(
                `.${e}[platform="server"], .${e}[platform="test"]`
              );
              for (let u = 0; u < a.length; u++)
                a[u].parentNode.removeChild(a[u]);
            }
            const i = this._document.createElement("div");
            i.classList.add(e),
              Ul
                ? i.setAttribute("platform", "test")
                : this._platform.isBrowser ||
                  i.setAttribute("platform", "server"),
              this._document.body.appendChild(i),
              (this._containerElement = i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(G), o.LFG(Nt));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(G), o.LFG(Nt));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      class BO {
        constructor(t, e, i, a, u, h, _, b, S) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = a),
            (this._ngZone = u),
            (this._keyboardDispatcher = h),
            (this._document = _),
            (this._location = b),
            (this._outsideClickDispatcher = S),
            (this._backdropElement = null),
            (this._backdropClick = new xe.xQ()),
            (this._attachments = new xe.xQ()),
            (this._detachments = new xe.xQ()),
            (this._locationChanges = Bn.w.EMPTY),
            (this._backdropClickHandler = (T) => this._backdropClick.next(T)),
            (this._keydownEvents = new xe.xQ()),
            (this._outsidePointerEvents = new xe.xQ()),
            a.scrollStrategy &&
              ((this._scrollStrategy = a.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = a.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          let e = this._portalOutlet.attach(t);
          return (
            !this._host.parentElement &&
              this._previousHostParent &&
              this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(An(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host &&
              this._host.parentNode &&
              (this._host.parentNode.removeChild(this._host),
              (this._host = null)),
            (this._previousHostParent = this._pane = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = Object.assign(Object.assign({}, this._config), t)),
            this._updateElementSize();
        }
        setDirection(t) {
          (this._config = Object.assign(Object.assign({}, this._config), {
            direction: t,
          })),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = wn(this._config.width)),
            (t.height = wn(this._config.height)),
            (t.minWidth = wn(this._config.minWidth)),
            (t.minHeight = wn(this._config.minHeight)),
            (t.maxWidth = wn(this._config.maxWidth)),
            (t.maxHeight = wn(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            "undefined" != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let t = this._backdropElement;
          if (!t) return;
          let e,
            i = () => {
              t &&
                (t.removeEventListener("click", this._backdropClickHandler),
                t.removeEventListener("transitionend", i),
                t.parentNode && t.parentNode.removeChild(t)),
                this._backdropElement == t && (this._backdropElement = null),
                this._config.backdropClass &&
                  this._toggleClasses(t, this._config.backdropClass, !1),
                clearTimeout(e);
            };
          t.classList.remove("cdk-overlay-backdrop-showing"),
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener("transitionend", i);
            }),
            (t.style.pointerEvents = "none"),
            (e = this._ngZone.runOutsideAngular(() => setTimeout(i, 500)));
        }
        _toggleClasses(t, e, i) {
          const a = t.classList;
          Yp(e).forEach((u) => {
            u && (i ? a.add(u) : a.remove(u));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(jt((0, yi.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
      }
      const at = "cdk-overlay-connected-position-bounding-box",
        Cr = /([A-Za-z%]+)$/;
      class Fm {
        constructor(t, e, i, a, u) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = a),
            (this._overlayContainer = u),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new xe.xQ()),
            (this._resizeSubscription = Bn.w.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(at),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            a = [];
          let u;
          for (let h of this._preferredPositions) {
            let _ = this._getOriginPoint(t, h),
              b = this._getOverlayPoint(_, e, h),
              S = this._getOverlayFit(b, e, i, h);
            if (S.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(h, _);
            this._canFitWithFlexibleDimensions(S, b, i)
              ? a.push({
                  position: h,
                  origin: _,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(_, h),
                })
              : (!u || u.overlayFit.visibleArea < S.visibleArea) &&
                (u = {
                  overlayFit: S,
                  overlayPoint: b,
                  originPoint: _,
                  position: h,
                  overlayRect: e,
                });
          }
          if (a.length) {
            let h = null,
              _ = -1;
            for (const b of a) {
              const S =
                b.boundingBoxRect.width *
                b.boundingBoxRect.height *
                (b.position.weight || 1);
              S > _ && ((_ = S), (h = b));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(h.position, h.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(u.position, u.originPoint)
            );
          this._applyPosition(u.position, u.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              ar(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(at),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (
            !this._isDisposed &&
            (!this._platform || this._platform.isBrowser)
          ) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const t = this._lastPosition || this._preferredPositions[0],
              e = this._getOriginPoint(this._originRect, t);
            this._applyPosition(t, e);
          }
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e) {
          let i, a;
          if ("center" == e.originX) i = t.left + t.width / 2;
          else {
            const u = this._isRtl() ? t.right : t.left,
              h = this._isRtl() ? t.left : t.right;
            i = "start" == e.originX ? u : h;
          }
          return (
            (a =
              "center" == e.originY
                ? t.top + t.height / 2
                : "top" == e.originY
                ? t.top
                : t.bottom),
            { x: i, y: a }
          );
        }
        _getOverlayPoint(t, e, i) {
          let a, u;
          return (
            (a =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (u =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + a, y: t.y + u }
          );
        }
        _getOverlayFit(t, e, i, a) {
          const u = fv(e);
          let { x: h, y: _ } = t,
            b = this._getOffset(a, "x"),
            S = this._getOffset(a, "y");
          b && (h += b), S && (_ += S);
          let B = 0 - _,
            j = _ + u.height - i.height,
            X = this._subtractOverflows(u.width, 0 - h, h + u.width - i.width),
            ve = this._subtractOverflows(u.height, B, j),
            De = X * ve;
          return {
            visibleArea: De,
            isCompletelyWithinViewport: u.width * u.height === De,
            fitsInViewportVertically: ve === u.height,
            fitsInViewportHorizontally: X == u.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const a = i.bottom - e.y,
              u = i.right - e.x,
              h = fI(this._overlayRef.getConfig().minHeight),
              _ = fI(this._overlayRef.getConfig().minWidth),
              S = t.fitsInViewportHorizontally || (null != _ && _ <= u);
            return (t.fitsInViewportVertically || (null != h && h <= a)) && S;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const a = fv(e),
            u = this._viewportRect,
            h = Math.max(t.x + a.width - u.width, 0),
            _ = Math.max(t.y + a.height - u.height, 0),
            b = Math.max(u.top - i.top - t.y, 0),
            S = Math.max(u.left - i.left - t.x, 0);
          let T = 0,
            A = 0;
          return (
            (T =
              a.width <= u.width
                ? S || -h
                : t.x < this._viewportMargin
                ? u.left - i.left - t.x
                : 0),
            (A =
              a.height <= u.height
                ? b || -_
                : t.y < this._viewportMargin
                ? u.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: T, y: A }),
            { x: t.x + T, y: t.y + A }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              a = new Xw(t, i);
            this._positionChanges.next(a);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            a = t.overlayY;
          i =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let u = 0; u < e.length; u++)
            e[u].style.transformOrigin = `${i} ${a}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            a = this._isRtl();
          let u, h, _, T, A, B;
          if ("top" === e.overlayY)
            (h = t.y), (u = i.height - h + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (_ = i.height - t.y + 2 * this._viewportMargin),
              (u = i.height - _ + this._viewportMargin);
          else {
            const j = Math.min(i.bottom - t.y + i.top, t.y),
              X = this._lastBoundingBoxSize.height;
            (u = 2 * j),
              (h = t.y - j),
              u > X &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (h = t.y - X / 2);
          }
          if (("end" === e.overlayX && !a) || ("start" === e.overlayX && a))
            (B = i.width - t.x + this._viewportMargin),
              (T = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !a) ||
            ("end" === e.overlayX && a)
          )
            (A = t.x), (T = i.right - t.x);
          else {
            const j = Math.min(i.right - t.x + i.left, t.x),
              X = this._lastBoundingBoxSize.width;
            (T = 2 * j),
              (A = t.x - j),
              T > X &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (A = t.x - X / 2);
          }
          return { top: h, left: A, bottom: _, right: B, width: T, height: u };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const a = {};
          if (this._hasExactPosition())
            (a.top = a.left = "0"),
              (a.bottom = a.right = a.maxHeight = a.maxWidth = ""),
              (a.width = a.height = "100%");
          else {
            const u = this._overlayRef.getConfig().maxHeight,
              h = this._overlayRef.getConfig().maxWidth;
            (a.height = wn(i.height)),
              (a.top = wn(i.top)),
              (a.bottom = wn(i.bottom)),
              (a.width = wn(i.width)),
              (a.left = wn(i.left)),
              (a.right = wn(i.right)),
              (a.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (a.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              u && (a.maxHeight = wn(u)),
              h && (a.maxWidth = wn(h));
          }
          (this._lastBoundingBoxSize = i), ar(this._boundingBox.style, a);
        }
        _resetBoundingBoxStyles() {
          ar(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          ar(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            a = this._hasExactPosition(),
            u = this._hasFlexibleDimensions,
            h = this._overlayRef.getConfig();
          if (a) {
            const T = this._viewportRuler.getViewportScrollPosition();
            ar(i, this._getExactOverlayY(e, t, T)),
              ar(i, this._getExactOverlayX(e, t, T));
          } else i.position = "static";
          let _ = "",
            b = this._getOffset(e, "x"),
            S = this._getOffset(e, "y");
          b && (_ += `translateX(${b}px) `),
            S && (_ += `translateY(${S}px)`),
            (i.transform = _.trim()),
            h.maxHeight &&
              (a ? (i.maxHeight = wn(h.maxHeight)) : u && (i.maxHeight = "")),
            h.maxWidth &&
              (a ? (i.maxWidth = wn(h.maxWidth)) : u && (i.maxWidth = "")),
            ar(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let a = { top: "", bottom: "" },
            u = this._getOverlayPoint(e, this._overlayRect, t);
          this._isPushed &&
            (u = this._pushOverlayOnScreen(u, this._overlayRect, i));
          let h = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect().top;
          return (
            (u.y -= h),
            "bottom" === t.overlayY
              ? (a.bottom =
                  this._document.documentElement.clientHeight -
                  (u.y + this._overlayRect.height) +
                  "px")
              : (a.top = wn(u.y)),
            a
          );
        }
        _getExactOverlayX(t, e, i) {
          let h,
            a = { left: "", right: "" },
            u = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (u = this._pushOverlayOnScreen(u, this._overlayRect, i)),
            (h = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === h
              ? (a.right =
                  this._document.documentElement.clientWidth -
                  (u.x + this._overlayRect.width) +
                  "px")
              : (a.left = wn(u.x)),
            a
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((a) =>
              a.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: uv(t, i),
            isOriginOutsideView: qh(t, i),
            isOverlayClipped: uv(e, i),
            isOverlayOutsideView: qh(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, a) => i - Math.max(a, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            Yp(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof o.SBq)
            return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function ar(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function fI(n) {
        if ("number" != typeof n && null != n) {
          const [t, e] = n.split(Cr);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function fv(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      class e0 {
        constructor(t, e, i, a, u, h, _) {
          (this._preferredPositions = []),
            (this._positionStrategy = new Fm(i, a, u, h, _)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(t, e),
            (this.onPositionChange = this._positionStrategy.positionChanges);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          (this._overlayRef = t),
            this._positionStrategy.attach(t),
            this._direction &&
              (t.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(t) {
          this._positionStrategy.withScrollableContainers(t);
        }
        withFallbackPosition(t, e, i, a) {
          const u = new Jw(t, e, i, a);
          return (
            this._preferredPositions.push(u),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        withDirection(t) {
          return (
            this._overlayRef
              ? this._overlayRef.setDirection(t)
              : (this._direction = t),
            this
          );
        }
        withOffsetX(t) {
          return this._positionStrategy.withDefaultOffsetX(t), this;
        }
        withOffsetY(t) {
          return this._positionStrategy.withDefaultOffsetY(t), this;
        }
        withLockedPosition(t) {
          return this._positionStrategy.withLockedPosition(t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t.slice()),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        setOrigin(t) {
          return this._positionStrategy.setOrigin(t), this;
        }
      }
      const pI = "cdk-global-overlay-wrapper";
      class mI {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._leftOffset = ""),
            (this._rightOffset = ""),
            (this._alignItems = ""),
            (this._justifyContent = ""),
            (this._width = ""),
            (this._height = "");
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(pI),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (
            (this._rightOffset = ""),
            (this._leftOffset = t),
            (this._justifyContent = "flex-start"),
            this
          );
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (
            (this._leftOffset = ""),
            (this._rightOffset = t),
            (this._justifyContent = "flex-end"),
            this
          );
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._justifyContent = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: a, height: u, maxWidth: h, maxHeight: _ } = i,
            b = !(
              ("100%" !== a && "100vw" !== a) ||
              (h && "100%" !== h && "100vw" !== h)
            ),
            S = !(
              ("100%" !== u && "100vh" !== u) ||
              (_ && "100%" !== _ && "100vh" !== _)
            );
          (t.position = this._cssPosition),
            (t.marginLeft = b ? "0" : this._leftOffset),
            (t.marginTop = S ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = this._rightOffset),
            b
              ? (e.justifyContent = "flex-start")
              : "center" === this._justifyContent
              ? (e.justifyContent = "center")
              : "rtl" === this._overlayRef.getConfig().direction
              ? "flex-start" === this._justifyContent
                ? (e.justifyContent = "flex-end")
                : "flex-end" === this._justifyContent &&
                  (e.justifyContent = "flex-start")
              : (e.justifyContent = this._justifyContent),
            (e.alignItems = S ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(pI),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let gI = (() => {
          class n {
            constructor(e, i, a, u) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = a),
                (this._overlayContainer = u);
            }
            global() {
              return new mI();
            }
            connectedTo(e, i, a) {
              return new e0(
                i,
                a,
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
            flexibleConnectedTo(e) {
              return new Fm(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Du), o.LFG(G), o.LFG(Nt), o.LFG(Do));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(Du), o.LFG(G), o.LFG(Nt), o.LFG(Do));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Er = 0,
        Ot = (() => {
          class n {
            constructor(e, i, a, u, h, _, b, S, T, A, B) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = a),
                (this._positionBuilder = u),
                (this._keyboardDispatcher = h),
                (this._injector = _),
                (this._ngZone = b),
                (this._document = S),
                (this._directionality = T),
                (this._location = A),
                (this._outsideClickDispatcher = B);
            }
            create(e) {
              const i = this._createHostElement(),
                a = this._createPaneElement(i),
                u = this._createPortalOutlet(a),
                h = new Kh(e);
              return (
                (h.direction = h.direction || this._directionality.value),
                new BO(
                  u,
                  i,
                  a,
                  h,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + Er++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(o.z2F)),
                new aI(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.LFG(dI),
                o.LFG(Do),
                o.LFG(o._Vd),
                o.LFG(gI),
                o.LFG(Qh),
                o.LFG(o.zs3),
                o.LFG(o.R0b),
                o.LFG(G),
                o.LFG(_n),
                o.LFG(Ye),
                o.LFG(Bt)
              );
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const ns = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        pv = new o.OlP("cdk-connected-overlay-scroll-strategy");
      let _I = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            n
          );
        })(),
        mv = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this._overlay = e),
                (this._dir = h),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Bn.w.EMPTY),
                (this._attachSubscription = Bn.w.EMPTY),
                (this._detachSubscription = Bn.w.EMPTY),
                (this._positionSubscription = Bn.w.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new o.vpe()),
                (this.positionChange = new o.vpe()),
                (this.attach = new o.vpe()),
                (this.detach = new o.vpe()),
                (this.overlayKeydown = new o.vpe()),
                (this.overlayOutsideClick = new o.vpe()),
                (this._templatePortal = new xa(i, a)),
                (this._scrollStrategyFactory = u),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = it(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = it(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = it(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = it(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = it(e);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = ns);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !_o(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new Kh({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((a) => ({
                originX: a.originX,
                originY: a.originY,
                overlayX: a.overlayX,
                overlayY: a.overlayY,
                offsetX: a.offsetX || this.offsetX,
                offsetY: a.offsetY || this.offsetY,
                panelClass: a.panelClass || void 0,
              }));
              return e
                .setOrigin(this.origin.elementRef)
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(this.origin.elementRef);
              return this._updatePositionStrategy(e), e;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function (n, t = !1) {
                        return (e) => e.lift(new FO(n, t));
                      })(() => this.positionChange.observers.length > 0)
                    )
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Ot),
                o.Y36(o.Rgc),
                o.Y36(o.s_b),
                o.Y36(pv),
                o.Y36(_n, 8)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [o.TTD],
            })),
            n
          );
        })();
      const Au = {
        provide: pv,
        deps: [Ot],
        useFactory: function (n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let Ra = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({
            providers: [Ot, Au],
            imports: [[Ca, Bl, Mu], Mu],
          })),
          n
        );
      })();
      const Hl = ["underline"],
        yI = ["connectionContainer"],
        t0 = ["inputContainer"],
        _v = ["label"];
      function Jh(n, t) {
        1 & n &&
          (o.ynx(0),
          o.TgZ(1, "div", 14),
          o._UZ(2, "div", 15),
          o._UZ(3, "div", 16),
          o._UZ(4, "div", 17),
          o.qZA(),
          o.TgZ(5, "div", 18),
          o._UZ(6, "div", 15),
          o._UZ(7, "div", 16),
          o._UZ(8, "div", 17),
          o.qZA(),
          o.BQk());
      }
      function yv(n, t) {
        1 & n && (o.TgZ(0, "div", 19), o.Hsn(1, 1), o.qZA());
      }
      function n0(n, t) {
        if (
          (1 & n &&
            (o.ynx(0),
            o.Hsn(1, 2),
            o.TgZ(2, "span"),
            o._uU(3),
            o.qZA(),
            o.BQk()),
          2 & n)
        ) {
          const e = o.oxw(2);
          o.xp6(3), o.Oqu(e._control.placeholder);
        }
      }
      function xu(n, t) {
        1 & n && o.Hsn(0, 3, ["*ngSwitchCase", "true"]);
      }
      function vI(n, t) {
        1 & n && (o.TgZ(0, "span", 23), o._uU(1, " *"), o.qZA());
      }
      function Lm(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "label", 20, 21),
            o.NdJ("cdkObserveContent", function () {
              return o.CHM(e), o.oxw().updateOutlineGap();
            }),
            o.YNc(2, n0, 4, 1, "ng-container", 12),
            o.YNc(3, xu, 1, 0, "ng-content", 12),
            o.YNc(4, vI, 2, 0, "span", 22),
            o.qZA();
        }
        if (2 & n) {
          const e = o.oxw();
          o.ekj("mat-empty", e._control.empty && !e._shouldAlwaysFloat())(
            "mat-form-field-empty",
            e._control.empty && !e._shouldAlwaysFloat()
          )("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color),
            o.Q6J("cdkObserveContentDisabled", "outline" != e.appearance)(
              "id",
              e._labelId
            )("ngSwitch", e._hasLabel()),
            o.uIk("for", e._control.id)("aria-owns", e._control.id),
            o.xp6(2),
            o.Q6J("ngSwitchCase", !1),
            o.xp6(1),
            o.Q6J("ngSwitchCase", !0),
            o.xp6(1),
            o.Q6J(
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function r0(n, t) {
        1 & n && (o.TgZ(0, "div", 24), o.Hsn(1, 4), o.qZA());
      }
      function s0(n, t) {
        if (
          (1 & n && (o.TgZ(0, "div", 25, 26), o._UZ(2, "span", 27), o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(2),
            o.ekj("mat-accent", "accent" == e.color)(
              "mat-warn",
              "warn" == e.color
            );
        }
      }
      function o0(n, t) {
        if ((1 & n && (o.TgZ(0, "div"), o.Hsn(1, 5), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.Q6J("@transitionMessages", e._subscriptAnimationState);
        }
      }
      function Vm(n, t) {
        if ((1 & n && (o.TgZ(0, "div", 31), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw(2);
          o.Q6J("id", e._hintLabelId), o.xp6(1), o.Oqu(e.hintLabel);
        }
      }
      function bI(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "div", 28),
            o.YNc(1, Vm, 2, 2, "div", 29),
            o.Hsn(2, 6),
            o._UZ(3, "div", 30),
            o.Hsn(4, 7),
            o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.Q6J("@transitionMessages", e._subscriptAnimationState),
            o.xp6(1),
            o.Q6J("ngIf", e.hintLabel);
        }
      }
      const vv = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        bv = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let HO = 0;
      const CI = new o.OlP("MatError");
      let rt = (() => {
        class n {
          constructor(e, i) {
            (this.id = "mat-error-" + HO++),
              e || i.nativeElement.setAttribute("aria-live", "polite");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.$8M("aria-live"), o.Y36(o.SBq));
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["mat-error"]],
            hostAttrs: ["aria-atomic", "true", 1, "mat-error"],
            hostVars: 1,
            hostBindings: function (e, i) {
              2 & e && o.uIk("id", i.id);
            },
            inputs: { id: "id" },
            features: [o._Bn([{ provide: CI, useExisting: n }])],
          })),
          n
        );
      })();
      const jO = {
        transitionMessages: Ii("transitionMessages", [
          dn("enter", Lt({ opacity: 1, transform: "translateY(0%)" })),
          bn("void => enter", [
            Lt({ opacity: 0, transform: "translateY(-5px)" }),
            Ln("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let Mo = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({ type: n })),
            n
          );
        })(),
        WO = 0;
      const EI = new o.OlP("MatHint");
      let wI = (() => {
          class n {
            constructor() {
              (this.align = "start"), (this.id = "mat-hint-" + WO++);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["mat-hint"]],
              hostAttrs: [1, "mat-hint"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk("id", i.id)("align", null),
                  o.ekj("mat-form-field-hint-end", "end" === i.align));
              },
              inputs: { align: "align", id: "id" },
              features: [o._Bn([{ provide: EI, useExisting: n }])],
            })),
            n
          );
        })(),
        Gn = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({ type: n, selectors: [["mat-label"]] })),
            n
          );
        })(),
        SI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({ type: n, selectors: [["mat-placeholder"]] })),
            n
          );
        })();
      const a0 = new o.OlP("MatPrefix");
      let Cv = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [["", "matPrefix", ""]],
            features: [o._Bn([{ provide: a0, useExisting: n }])],
          })),
          n
        );
      })();
      const l0 = new o.OlP("MatSuffix");
      let c0 = 0;
      const MI = bo(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        Ev = new o.OlP("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        wv = new o.OlP("MatFormField");
      let d0 = (() => {
          class n extends MI {
            constructor(e, i, a, u, h, _, b, S) {
              super(e),
                (this._changeDetectorRef = i),
                (this._dir = u),
                (this._defaults = h),
                (this._platform = _),
                (this._ngZone = b),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new xe.xQ()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + c0++),
                (this._labelId = "mat-form-field-label-" + c0++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== S),
                (this.appearance = h && h.appearance ? h.appearance : "legacy"),
                (this._hideRequiredMarker =
                  !(!h || null == h.hideRequiredMarker) &&
                  h.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance =
                e || (this._defaults && this._defaults.appearance) || "legacy"),
                "outline" === this._appearance &&
                  i !== e &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = it(e);
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-form-field-type-${e.controlType}`
                ),
                e.stateChanges.pipe(Hn(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(jt(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(jt(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                (0, yi.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(Hn(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(Hn(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(jt(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) ||
                  this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  wu(this._label.nativeElement, "transitionend")
                    .pipe(An(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || "auto";
            }
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((u) => "start" === u.align)
                      : null,
                    a = this._hintChildren
                      ? this._hintChildren.find((u) => "end" === u.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    a && e.push(a.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const e = this._label ? this._label.nativeElement : null;
              if (
                !(
                  "outline" === this.appearance &&
                  e &&
                  e.children.length &&
                  e.textContent.trim() &&
                  this._platform.isBrowser
                )
              )
                return;
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let i = 0,
                a = 0;
              const u = this._connectionContainerRef.nativeElement,
                h = u.querySelectorAll(".mat-form-field-outline-start"),
                _ = u.querySelectorAll(".mat-form-field-outline-gap");
              if (this._label && this._label.nativeElement.children.length) {
                const b = u.getBoundingClientRect();
                if (0 === b.width && 0 === b.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const S = this._getStartEnd(b),
                  T = e.children,
                  A = this._getStartEnd(T[0].getBoundingClientRect());
                let B = 0;
                for (let j = 0; j < T.length; j++) B += T[j].offsetWidth;
                (i = Math.abs(A - S) - 5), (a = B > 0 ? 0.75 * B + 10 : 0);
              }
              for (let b = 0; b < h.length; b++) h[b].style.width = `${i}px`;
              for (let b = 0; b < _.length; b++) _[b].style.width = `${a}px`;
              this._outlineGapCalculationNeededOnStable =
                this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(e) {
              return this._dir && "rtl" === this._dir.value ? e.right : e.left;
            }
            _isAttachedToDOM() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(o.sBO),
                o.Y36(o.SBq),
                o.Y36(_n, 8),
                o.Y36(Ev, 8),
                o.Y36(Nt),
                o.Y36(o.R0b),
                o.Y36(Se, 8)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, i, a) {
                if (
                  (1 & e &&
                    (o.Suo(a, Mo, 5),
                    o.Suo(a, Mo, 7),
                    o.Suo(a, Gn, 5),
                    o.Suo(a, Gn, 7),
                    o.Suo(a, SI, 5),
                    o.Suo(a, CI, 5),
                    o.Suo(a, EI, 5),
                    o.Suo(a, a0, 5),
                    o.Suo(a, l0, 5)),
                  2 & e)
                ) {
                  let u;
                  o.iGM((u = o.CRH())) && (i._controlNonStatic = u.first),
                    o.iGM((u = o.CRH())) && (i._controlStatic = u.first),
                    o.iGM((u = o.CRH())) && (i._labelChildNonStatic = u.first),
                    o.iGM((u = o.CRH())) && (i._labelChildStatic = u.first),
                    o.iGM((u = o.CRH())) && (i._placeholderChild = u.first),
                    o.iGM((u = o.CRH())) && (i._errorChildren = u),
                    o.iGM((u = o.CRH())) && (i._hintChildren = u),
                    o.iGM((u = o.CRH())) && (i._prefixChildren = u),
                    o.iGM((u = o.CRH())) && (i._suffixChildren = u);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e &&
                    (o.Gf(Hl, 5), o.Gf(yI, 7), o.Gf(t0, 5), o.Gf(_v, 5)),
                  2 & e)
                ) {
                  let a;
                  o.iGM((a = o.CRH())) && (i.underlineRef = a.first),
                    o.iGM((a = o.CRH())) &&
                      (i._connectionContainerRef = a.first),
                    o.iGM((a = o.CRH())) && (i._inputContainerRef = a.first),
                    o.iGM((a = o.CRH())) && (i._label = a.first);
                }
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 40,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj(
                    "mat-form-field-appearance-standard",
                    "standard" == i.appearance
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == i.appearance
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-can-float",
                    i._canLabelFloat()
                  )("mat-form-field-should-float", i._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    i._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hideControlPlaceholder()
                  )("mat-form-field-disabled", i._control.disabled)(
                    "mat-form-field-autofilled",
                    i._control.autofilled
                  )("mat-focused", i._control.focused)(
                    "ng-untouched",
                    i._shouldForward("untouched")
                  )("ng-touched", i._shouldForward("touched"))(
                    "ng-pristine",
                    i._shouldForward("pristine")
                  )("ng-dirty", i._shouldForward("dirty"))(
                    "ng-valid",
                    i._shouldForward("valid")
                  )("ng-invalid", i._shouldForward("invalid"))(
                    "ng-pending",
                    i._shouldForward("pending")
                  )("_mat-animation-noopable", !i._animationsEnabled);
              },
              inputs: {
                color: "color",
                floatLabel: "floatLabel",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
              },
              exportAs: ["matFormField"],
              features: [o._Bn([{ provide: wv, useExisting: n }]), o.qOj],
              ngContentSelectors: bv,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                ["class", "mat-form-field-prefix", 4, "ngIf"],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [1, "mat-form-field-prefix"],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                ["underline", ""],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.F$t(vv),
                  o.TgZ(0, "div", 0),
                  o.TgZ(1, "div", 1, 2),
                  o.NdJ("click", function (u) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(u)
                    );
                  }),
                  o.YNc(3, Jh, 9, 0, "ng-container", 3),
                  o.YNc(4, yv, 2, 0, "div", 4),
                  o.TgZ(5, "div", 5, 6),
                  o.Hsn(7),
                  o.TgZ(8, "span", 7),
                  o.YNc(9, Lm, 5, 16, "label", 8),
                  o.qZA(),
                  o.qZA(),
                  o.YNc(10, r0, 2, 0, "div", 9),
                  o.qZA(),
                  o.YNc(11, s0, 3, 4, "div", 10),
                  o.TgZ(12, "div", 11),
                  o.YNc(13, o0, 2, 1, "div", 12),
                  o.YNc(14, bI, 5, 2, "div", 13),
                  o.qZA(),
                  o.qZA()),
                  2 & e &&
                    (o.xp6(3),
                    o.Q6J("ngIf", "outline" == i.appearance),
                    o.xp6(1),
                    o.Q6J("ngIf", i._prefixChildren.length),
                    o.xp6(5),
                    o.Q6J("ngIf", i._hasFloatingLabel()),
                    o.xp6(1),
                    o.Q6J("ngIf", i._suffixChildren.length),
                    o.xp6(1),
                    o.Q6J("ngIf", "outline" != i.appearance),
                    o.xp6(1),
                    o.Q6J("ngSwitch", i._getDisplayedMessages()),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", "error"),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", "hint"));
              },
              directives: [Bi, Xn, Kt, _M],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n",
              ],
              encapsulation: 2,
              data: { animation: [jO.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Bm = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Xi, Et, $C], Et] })),
            n
          );
        })();
      function Ru(n) {
        return new Sn.y((t) => {
          let e;
          try {
            e = n();
          } catch (a) {
            return void t.error(a);
          }
          return (e ? (0, Yn.D)(e) : (0, yo.c)()).subscribe(t);
        });
      }
      const TI = ["trigger"],
        ZO = ["panel"];
      function II(n, t) {
        if ((1 & n && (o.TgZ(0, "span", 8), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.Oqu(e.placeholder);
        }
      }
      function AI(n, t) {
        if ((1 & n && (o.TgZ(0, "span", 12), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw(2);
          o.xp6(1), o.Oqu(e.triggerValue);
        }
      }
      function xI(n, t) {
        1 & n && o.Hsn(0, 0, ["*ngSwitchCase", "true"]);
      }
      function RI(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "span", 9),
            o.YNc(1, AI, 2, 1, "span", 10),
            o.YNc(2, xI, 1, 0, "ng-content", 11),
            o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.Q6J("ngSwitch", !!e.customTrigger),
            o.xp6(2),
            o.Q6J("ngSwitchCase", !0);
        }
      }
      function kI(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 13),
            o.TgZ(1, "div", 14, 15),
            o.NdJ("@transformPanel.done", function (a) {
              return (
                o.CHM(e), o.oxw()._panelDoneAnimatingStream.next(a.toState)
              );
            })("keydown", function (a) {
              return o.CHM(e), o.oxw()._handleKeydown(a);
            }),
            o.Hsn(3, 1),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = o.oxw();
          o.Q6J("@transformPanelWrap", void 0),
            o.xp6(1),
            o.Gre("mat-select-panel ", e._getPanelTheme(), ""),
            o.Udp("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            o.Q6J("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            o.uIk("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const OI = [[["mat-select-trigger"]], "*"],
        Xh = ["mat-select-trigger", "*"],
        h0 = {
          transformPanelWrap: Ii("transformPanelWrap", [
            bn("* => void", Pd("@transformPanel", [Od()], { optional: !0 })),
          ]),
          transformPanel: Ii("transformPanel", [
            dn(
              "void",
              Lt({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            dn(
              "showing",
              Lt({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            dn(
              "showing-multiple",
              Lt({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            bn("void => *", Ln("120ms cubic-bezier(0, 0, 0.2, 1)")),
            bn("* => void", Ln("100ms 25ms linear", Lt({ opacity: 0 }))),
          ]),
        };
      let NI = 0;
      const Sv = new o.OlP("mat-select-scroll-strategy"),
        BI = new o.OlP("MAT_SELECT_CONFIG"),
        KO = {
          provide: Sv,
          deps: [Ot],
          useFactory: function (n) {
            return () => n.scrollStrategies.reposition();
          },
        };
      class QO {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const JO = rm(
          sm(
            im(
              X_(
                class {
                  constructor(n, t, e, i, a) {
                    (this._elementRef = n),
                      (this._defaultErrorStateMatcher = t),
                      (this._parentForm = e),
                      (this._parentFormGroup = i),
                      (this.ngControl = a);
                  }
                }
              )
            )
          )
        ),
        jm = new o.OlP("MatSelectTrigger");
      let UI = (() => {
          class n extends JO {
            constructor(e, i, a, u, h, _, b, S, T, A, B, j, X, ve) {
              var De, Ne, qe;
              super(h, u, b, S, A),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = a),
                (this._dir = _),
                (this._parentFormField = T),
                (this._liveAnnouncer = X),
                (this._defaultOptions = ve),
                (this._panelOpen = !1),
                (this._compareWith = (Fe, mt) => Fe === mt),
                (this._uid = "mat-select-" + NI++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new xe.xQ()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + NI++),
                (this._panelDoneAnimatingStream = new xe.xQ()),
                (this._overlayPanelClass =
                  (null === (De = this._defaultOptions) || void 0 === De
                    ? void 0
                    : De.overlayPanelClass) || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._required = !1),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  null !==
                    (qe =
                      null === (Ne = this._defaultOptions) || void 0 === Ne
                        ? void 0
                        : Ne.disableOptionCentering) &&
                  void 0 !== qe &&
                  qe),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = Ru(() => {
                  const Fe = this.options;
                  return Fe
                    ? Fe.changes.pipe(
                        Hn(Fe),
                        Xt(() =>
                          (0, yi.T)(...Fe.map((mt) => mt.onSelectionChange))
                        )
                      )
                    : this._ngZone.onStable.pipe(
                        An(1),
                        Xt(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new o.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  En((Fe) => Fe),
                  (0, et.U)(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  En((Fe) => !Fe),
                  (0, et.U)(() => {})
                )),
                (this.selectionChange = new o.vpe()),
                (this.valueChange = new o.vpe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != (null == ve ? void 0 : ve.typeaheadDebounceInterval) &&
                  (this._typeaheadDebounceInterval =
                    ve.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = j),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(B) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return this._required;
            }
            set required(e) {
              (this._required = it(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = it(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = it(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              (e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e));
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = Un(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new Ky(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(Ss(), jt(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(jt(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(Hn(null), jt(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby();
              if (e !== this._triggerAriaLabelledBy) {
                const i = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? i.setAttribute("aria-labelledby", e)
                    : i.removeAttribute("aria-labelledby");
              }
              this.ngControl && this.updateErrorState();
            }
            ngOnChanges(e) {
              e.disabled && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this.value = e;
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel.selected
                : this._selectionModel.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                a = 40 === i || 38 === i || 37 === i || 39 === i,
                u = 13 === i || 32 === i,
                h = this._keyManager;
              if (
                (!h.isTyping() && u && !_o(e)) ||
                ((this.multiple || e.altKey) && a)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const _ = this.selected;
                h.onKeydown(e);
                const b = this.selected;
                b && _ !== b && this._liveAnnouncer.announce(b.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                a = e.keyCode,
                u = 40 === a || 38 === a,
                h = i.isTyping();
              if (u && e.altKey) e.preventDefault(), this.close();
              else if (h || (13 !== a && 32 !== a) || !i.activeItem || _o(e))
                if (!h && this._multiple && 65 === a && e.ctrlKey) {
                  e.preventDefault();
                  const _ = this.options.some(
                    (b) => !b.disabled && !b.selected
                  );
                  this.options.forEach((b) => {
                    b.disabled || (_ ? b.select() : b.deselect());
                  });
                } else {
                  const _ = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      u &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== _ &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(An(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this._setSelectionByValue(
                  this.ngControl ? this.ngControl.value : this._value
                ),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this._selectionModel.selected.forEach((i) =>
                  i.setInactiveStyles()
                ),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectValue(i)),
                  this._sortValues();
              else {
                const i = this._selectValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectValue(e) {
              const i = this.options.find((a) => {
                if (this._selectionModel.isSelected(a)) return !1;
                try {
                  return null != a.value && this._compareWith(a.value, e);
                } catch (u) {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _initKeyManager() {
              (this._keyManager = new CM(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe(jt(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe(jt(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollOptionIntoView(
                          this._keyManager.activeItemIndex || 0
                        )
                      : !this._panelOpen &&
                        !this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const e = (0, yi.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(jt(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                (0, yi.T)(...this.options.map((i) => i._stateChanges))
                  .pipe(jt(e))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const a = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (a !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                a !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, a) =>
                  this.sortComparator
                    ? this.sortComparator(i, a, e)
                    : e.indexOf(i) - e.indexOf(a)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((a) => a.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              var e;
              return (
                !this._panelOpen &&
                !this.disabled &&
                (null === (e = this.options) || void 0 === e
                  ? void 0
                  : e.length) > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              var e;
              if (this.ariaLabel) return null;
              const i =
                null === (e = this._parentFormField) || void 0 === e
                  ? void 0
                  : e.getLabelId();
              return this.ariaLabelledby
                ? (i ? i + " " : "") + this.ariaLabelledby
                : i;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              var e;
              if (this.ariaLabel) return null;
              const i =
                null === (e = this._parentFormField) || void 0 === e
                  ? void 0
                  : e.getLabelId();
              let a = (i ? i + " " : "") + this._valueId;
              return this.ariaLabelledby && (a += " " + this.ariaLabelledby), a;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              this._ariaDescribedby = e.join(" ");
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Du),
                o.Y36(o.sBO),
                o.Y36(o.R0b),
                o.Y36(Ms),
                o.Y36(o.SBq),
                o.Y36(_n, 8),
                o.Y36(Pl, 8),
                o.Y36(ts, 8),
                o.Y36(wv, 8),
                o.Y36(es, 10),
                o.$8M("tabindex"),
                o.Y36(Sv),
                o.Y36(Xp),
                o.Y36(BI, 8)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && (o.Gf(TI, 5), o.Gf(ZO, 5), o.Gf(mv, 5)), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i.trigger = a.first),
                    o.iGM((a = o.CRH())) && (i.panel = a.first),
                    o.iGM((a = o.CRH())) && (i._overlayDir = a.first);
                }
              },
              inputs: {
                ariaLabel: ["aria-label", "ariaLabel"],
                id: "id",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                panelClass: "panelClass",
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                sortComparator: "sortComparator",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [o.qOj, o.TTD],
            })),
            n
          );
        })(),
        HI = (() => {
          class n extends UI {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = "top"),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]);
            }
            _calculateOverlayScroll(e, i, a) {
              const u = this._getItemHeight();
              return Math.min(Math.max(0, u * e - i + u / 2), a);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(jt(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect =
                        this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect =
                  this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(An(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this._overlayDir.overlayRef &&
                    this._overlayDir.overlayRef.overlayElement &&
                    (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(e) {
              const i = Il(e, this.options, this.optionGroups),
                a = this._getItemHeight();
              this.panel.nativeElement.scrollTop =
                0 === e && 1 === i
                  ? 0
                  : (function (n, t, e, i) {
                      return n < e
                        ? n
                        : n + t > e + 256
                        ? Math.max(0, n - 256 + t)
                        : e;
                    })((e + i) * a, a, this.panel.nativeElement.scrollTop);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(),
                (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(e) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this._overlayDir.offsetX = 0),
                  this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(e);
            }
            _getChangeEvent(e) {
              return new QO(this, e);
            }
            _calculateOverlayOffsetX() {
              const e =
                  this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                i = this._viewportRuler.getViewportSize(),
                a = this._isRtl(),
                u = this.multiple ? 56 : 32;
              let h;
              if (this.multiple) h = 40;
              else if (this.disableOptionCentering) h = 16;
              else {
                let S = this._selectionModel.selected[0] || this.options.first;
                h = S && S.group ? 32 : 16;
              }
              a || (h *= -1);
              const _ = 0 - (e.left + h - (a ? u : 0)),
                b = e.right + h - i.width + (a ? 0 : u);
              _ > 0 ? (h += _ + 8) : b > 0 && (h -= b + 8),
                (this._overlayDir.offsetX = Math.round(h)),
                this._overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(e, i, a) {
              const u = this._getItemHeight(),
                h = (u - this._triggerRect.height) / 2,
                _ = Math.floor(256 / u);
              let b;
              return this.disableOptionCentering
                ? 0
                : ((b =
                    0 === this._scrollTop
                      ? e * u
                      : this._scrollTop === a
                      ? (e - (this._getItemCount() - _)) * u +
                        (u - ((this._getItemCount() * u - 256) % u))
                      : i - u / 2),
                  Math.round(-1 * b - h));
            }
            _checkOverlayWithinViewport(e) {
              const i = this._getItemHeight(),
                a = this._viewportRuler.getViewportSize(),
                u = this._triggerRect.top - 8,
                h = a.height - this._triggerRect.bottom - 8,
                _ = Math.abs(this._offsetY),
                S =
                  Math.min(this._getItemCount() * i, 256) -
                  _ -
                  this._triggerRect.height;
              S > h
                ? this._adjustPanelUp(S, h)
                : _ > u
                ? this._adjustPanelDown(_, u, e)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(e, i) {
              const a = Math.round(e - i);
              (this._scrollTop -= a),
                (this._offsetY -= a),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(e, i, a) {
              const u = Math.round(e - i);
              if (
                ((this._scrollTop += u),
                (this._offsetY += u),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= a)
              )
                return (
                  (this._scrollTop = a),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _calculateOverlayPosition() {
              const e = this._getItemHeight(),
                i = this._getItemCount(),
                a = Math.min(i * e, 256),
                h = i * e - a;
              let _;
              (_ = this.empty
                ? 0
                : Math.max(
                    this.options
                      .toArray()
                      .indexOf(this._selectionModel.selected[0]),
                    0
                  )),
                (_ += Il(_, this.options, this.optionGroups));
              const b = a / 2;
              (this._scrollTop = this._calculateOverlayScroll(_, b, h)),
                (this._offsetY = this._calculateOverlayOffsetY(_, b, h)),
                this._checkOverlayWithinViewport(h);
            }
            _getOriginBasedOnOption() {
              const e = this._getItemHeight(),
                i = (e - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - i + e / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (e, i, a) {
                if (
                  (1 & e && (o.Suo(a, jm, 5), o.Suo(a, Tl, 5), o.Suo(a, Th, 5)),
                  2 & e)
                ) {
                  let u;
                  o.iGM((u = o.CRH())) && (i.customTrigger = u.first),
                    o.iGM((u = o.CRH())) && (i.options = u),
                    o.iGM((u = o.CRH())) && (i.optionGroups = u);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "true",
                1,
                "mat-select",
              ],
              hostVars: 20,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("keydown", function (u) {
                    return i._handleKeydown(u);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (o.uIk("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-describedby",
                      i._ariaDescribedby || null
                    )("aria-activedescendant", i._getAriaActiveDescendant()),
                    o.ekj("mat-select-disabled", i.disabled)(
                      "mat-select-invalid",
                      i.errorState
                    )("mat-select-required", i.required)(
                      "mat-select-empty",
                      i.empty
                    )("mat-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
              },
              exportAs: ["matSelect"],
              features: [
                o._Bn([
                  { provide: Mo, useExisting: n },
                  { provide: Wn, useExisting: n },
                ]),
                o.qOj,
              ],
              ngContentSelectors: Xh,
              decls: 9,
              vars: 12,
              consts: [
                ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-select-placeholder mat-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder", "mat-select-min-line"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-min-line"],
                [1, "mat-select-panel-wrap"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (o.F$t(OI),
                    o.TgZ(0, "div", 0, 1),
                    o.NdJ("click", function () {
                      return i.toggle();
                    }),
                    o.TgZ(3, "div", 2),
                    o.YNc(4, II, 2, 1, "span", 3),
                    o.YNc(5, RI, 3, 2, "span", 4),
                    o.qZA(),
                    o.TgZ(6, "div", 5),
                    o._UZ(7, "div", 6),
                    o.qZA(),
                    o.qZA(),
                    o.YNc(8, kI, 4, 14, "ng-template", 7),
                    o.NdJ("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const a = o.MAs(1);
                  o.uIk("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    o.xp6(3),
                    o.Q6J("ngSwitch", i.empty),
                    o.uIk("id", i._valueId),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", !0),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", !1),
                    o.xp6(3),
                    o.Q6J(
                      "cdkConnectedOverlayPanelClass",
                      i._overlayPanelClass
                    )("cdkConnectedOverlayScrollStrategy", i._scrollStrategy)(
                      "cdkConnectedOverlayOrigin",
                      a
                    )("cdkConnectedOverlayOpen", i.panelOpen)(
                      "cdkConnectedOverlayPositions",
                      i._positions
                    )(
                      "cdkConnectedOverlayMinWidth",
                      null == i._triggerRect ? null : i._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", i._offsetY);
                }
              },
              directives: [_I, Xn, Kt, mv, ld, zs],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;opacity:0}\n',
              ],
              encapsulation: 2,
              data: { animation: [h0.transformPanelWrap, h0.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        jI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({
              providers: [KO],
              imports: [[Xi, Ra, Al, Et], Ll, Bm, Al, Et],
            })),
            n
          );
        })();
      const p0 = qp({ passive: !0 });
      let m0 = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return yo.E;
              const i = va(e),
                a = this._monitoredElements.get(i);
              if (a) return a.subject;
              const u = new xe.xQ(),
                h = "cdk-text-field-autofilled",
                _ = (b) => {
                  "cdk-text-field-autofill-start" !== b.animationName ||
                  i.classList.contains(h)
                    ? "cdk-text-field-autofill-end" === b.animationName &&
                      i.classList.contains(h) &&
                      (i.classList.remove(h),
                      this._ngZone.run(() =>
                        u.next({ target: b.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(h),
                      this._ngZone.run(() =>
                        u.next({ target: b.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener("animationstart", _, p0),
                    i.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(i, {
                  subject: u,
                  unlisten: () => {
                    i.removeEventListener("animationstart", _, p0);
                  },
                }),
                u
              );
            }
            stopMonitoring(e) {
              const i = va(e),
                a = this._monitoredElements.get(i);
              a &&
                (a.unlisten(),
                a.subject.complete(),
                i.classList.remove("cdk-text-field-autofill-monitored"),
                i.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Nt), o.LFG(o.R0b));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(Nt), o.LFG(o.R0b));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        g0 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[iu]] })),
            n
          );
        })();
      const _0 = new o.OlP("MAT_INPUT_VALUE_ACCESSOR"),
        is = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let Mv = 0;
      const zI = X_(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i);
          }
        }
      );
      let Tv = (() => {
          class n extends zI {
            constructor(e, i, a, u, h, _, b, S, T, A) {
              super(_, u, h, a),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = S),
                (this._formField = A),
                (this._uid = "mat-input-" + Mv++),
                (this.focused = !1),
                (this.stateChanges = new xe.xQ()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._required = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((X) => $i().has(X)));
              const B = this._elementRef.nativeElement,
                j = B.nodeName.toLowerCase();
              (this._inputValueAccessor = b || B),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  T.runOutsideAngular(() => {
                    e.nativeElement.addEventListener("keyup", (X) => {
                      const ve = X.target;
                      !ve.value &&
                        0 === ve.selectionStart &&
                        0 === ve.selectionEnd &&
                        (ve.setSelectionRange(1, 1),
                        ve.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === j),
                (this._isTextarea = "textarea" === j),
                (this._isInFormField = !!A),
                this._isNativeSelect &&
                  (this.controlType = B.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled
                ? this.ngControl.disabled
                : this._disabled;
            }
            set disabled(e) {
              (this._disabled = it(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return this._required;
            }
            set required(e) {
              this._required = it(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  $i().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = it(e);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  );
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              var e, i;
              const a = (
                null ===
                  (i =
                    null === (e = this._formField) || void 0 === e
                      ? void 0
                      : e._hideControlPlaceholder) || void 0 === i
                  ? void 0
                  : i.call(e)
              )
                ? null
                : this.placeholder;
              if (a !== this._previousPlaceholder) {
                const u = this._elementRef.nativeElement;
                (this._previousPlaceholder = a),
                  a
                    ? u.setAttribute("placeholder", a)
                    : u.removeAttribute("placeholder");
              }
            }
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _validateType() {
              is.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(Nt),
                o.Y36(es, 10),
                o.Y36(Pl, 8),
                o.Y36(ts, 8),
                o.Y36(Ms),
                o.Y36(_0, 10),
                o.Y36(m0),
                o.Y36(o.R0b),
                o.Y36(wv, 8)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [
                1,
                "mat-input-element",
                "mat-form-field-autofill-control",
              ],
              hostVars: 9,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("focus", function () {
                    return i._focusChanged(!0);
                  })("blur", function () {
                    return i._focusChanged(!1);
                  })("input", function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    (o.Ikx("disabled", i.disabled)("required", i.required),
                    o.uIk("id", i.id)("data-placeholder", i.placeholder)(
                      "readonly",
                      (i.readonly && !i._isNativeSelect) || null
                    )(
                      "aria-invalid",
                      i.empty && i.required ? null : i.errorState
                    )("aria-required", i.required),
                    o.ekj("mat-input-server", i._isServer));
              },
              inputs: {
                id: "id",
                disabled: "disabled",
                required: "required",
                type: "type",
                value: "value",
                readonly: "readonly",
                placeholder: "placeholder",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
              },
              exportAs: ["matInput"],
              features: [
                o._Bn([{ provide: Mo, useExisting: n }]),
                o.qOj,
                o.TTD,
              ],
            })),
            n
          );
        })(),
        y0 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({
              providers: [Ms],
              imports: [[g0, Bm, Et], g0, Bm],
            })),
            n
          );
        })();
      const v0 = ["*", [["mat-toolbar-row"]]],
        $I = ["*", "mat-toolbar-row"],
        WI = bo(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        );
      let b0 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["mat-toolbar-row"]],
              hostAttrs: [1, "mat-toolbar-row"],
              exportAs: ["matToolbarRow"],
            })),
            n
          );
        })(),
        Iv = (() => {
          class n extends WI {
            constructor(e, i, a) {
              super(e), (this._platform = i), (this._document = a);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() =>
                  this._checkToolbarMixedModes()
                ));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(Nt), o.Y36(G));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-toolbar"]],
              contentQueries: function (e, i, a) {
                if ((1 & e && o.Suo(a, b0, 5), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i._toolbarRows = u);
                }
              },
              hostAttrs: [1, "mat-toolbar"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj("mat-toolbar-multiple-rows", i._toolbarRows.length > 0)(
                    "mat-toolbar-single-row",
                    0 === i._toolbarRows.length
                  );
              },
              inputs: { color: "color" },
              exportAs: ["matToolbar"],
              features: [o.qOj],
              ngContentSelectors: $I,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (o.F$t(v0), o.Hsn(0), o.Hsn(1, 1));
              },
              styles: [
                ".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        tP = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et], Et] })),
            n
          );
        })();
      const YI = ["*", [["mat-card-footer"]]],
        ZI = ["*", "mat-card-footer"],
        Pu = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        nP = [
          "[mat-card-avatar], [matCardAvatar]",
          "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
          "*",
        ];
      let KI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["mat-card-content"],
                ["", "mat-card-content", ""],
                ["", "matCardContent", ""],
              ],
              hostAttrs: [1, "mat-card-content"],
            })),
            n
          );
        })(),
        tf = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["mat-card-title"],
                ["", "mat-card-title", ""],
                ["", "matCardTitle", ""],
              ],
              hostAttrs: [1, "mat-card-title"],
            })),
            n
          );
        })(),
        Gm = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["mat-card-subtitle"],
                ["", "mat-card-subtitle", ""],
                ["", "matCardSubtitle", ""],
              ],
              hostAttrs: [1, "mat-card-subtitle"],
            })),
            n
          );
        })(),
        zm = (() => {
          class n {
            constructor() {
              this.align = "start";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["mat-card-actions"]],
              hostAttrs: [1, "mat-card-actions"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && o.ekj("mat-card-actions-align-end", "end" === i.align);
              },
              inputs: { align: "align" },
              exportAs: ["matCardActions"],
            })),
            n
          );
        })(),
        eA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-card-avatar", ""],
                ["", "matCardAvatar", ""],
              ],
              hostAttrs: [1, "mat-card-avatar"],
            })),
            n
          );
        })(),
        $m = (() => {
          class n {
            constructor(e) {
              this._animationMode = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Se, 8));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-card", "mat-focus-indicator"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  o.ekj(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              exportAs: ["matCard"],
              ngContentSelectors: ZI,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (o.F$t(YI), o.Hsn(0), o.Hsn(1, 1));
              },
              styles: [
                ".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Av = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-card-header"]],
              hostAttrs: [1, "mat-card-header"],
              ngContentSelectors: nP,
              decls: 4,
              vars: 0,
              consts: [[1, "mat-card-header-text"]],
              template: function (e, i) {
                1 & e &&
                  (o.F$t(Pu),
                  o.Hsn(0),
                  o.TgZ(1, "div", 0),
                  o.Hsn(2, 1),
                  o.qZA(),
                  o.Hsn(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        nf = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et], Et] })),
            n
          );
        })();
      const xv = ["*"],
        Rv =
          ".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\n";
      class S0 {
        constructor() {
          (this.columnIndex = 0), (this.rowIndex = 0);
        }
        get rowCount() {
          return this.rowIndex + 1;
        }
        get rowspan() {
          const t = Math.max(...this.tracker);
          return t > 1 ? this.rowCount + t - 1 : this.rowCount;
        }
        update(t, e) {
          (this.columnIndex = 0),
            (this.rowIndex = 0),
            (this.tracker = new Array(t)),
            this.tracker.fill(0, 0, this.tracker.length),
            (this.positions = e.map((i) => this._trackTile(i)));
        }
        _trackTile(t) {
          const e = this._findMatchingGap(t.colspan);
          return (
            this._markTilePosition(e, t),
            (this.columnIndex = e + t.colspan),
            new D0(this.rowIndex, e)
          );
        }
        _findMatchingGap(t) {
          let e = -1,
            i = -1;
          do {
            this.columnIndex + t > this.tracker.length
              ? (this._nextRow(),
                (e = this.tracker.indexOf(0, this.columnIndex)),
                (i = this._findGapEndIndex(e)))
              : ((e = this.tracker.indexOf(0, this.columnIndex)),
                -1 != e
                  ? ((i = this._findGapEndIndex(e)), (this.columnIndex = e + 1))
                  : (this._nextRow(),
                    (e = this.tracker.indexOf(0, this.columnIndex)),
                    (i = this._findGapEndIndex(e))));
          } while (i - e < t || 0 == i);
          return Math.max(e, 0);
        }
        _nextRow() {
          (this.columnIndex = 0), this.rowIndex++;
          for (let t = 0; t < this.tracker.length; t++)
            this.tracker[t] = Math.max(0, this.tracker[t] - 1);
        }
        _findGapEndIndex(t) {
          for (let e = t + 1; e < this.tracker.length; e++)
            if (0 != this.tracker[e]) return e;
          return this.tracker.length;
        }
        _markTilePosition(t, e) {
          for (let i = 0; i < e.colspan; i++) this.tracker[t + i] = e.rowspan;
        }
      }
      class D0 {
        constructor(t, e) {
          (this.row = t), (this.col = e);
        }
      }
      const M0 = new o.OlP("MAT_GRID_LIST");
      let rf = (() => {
        class n {
          constructor(e, i) {
            (this._element = e),
              (this._gridList = i),
              (this._rowspan = 1),
              (this._colspan = 1);
          }
          get rowspan() {
            return this._rowspan;
          }
          set rowspan(e) {
            this._rowspan = Math.round(Un(e));
          }
          get colspan() {
            return this._colspan;
          }
          set colspan(e) {
            this._colspan = Math.round(Un(e));
          }
          _setStyle(e, i) {
            this._element.nativeElement.style[e] = i;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(o.SBq), o.Y36(M0, 8));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["mat-grid-tile"]],
            hostAttrs: [1, "mat-grid-tile"],
            hostVars: 2,
            hostBindings: function (e, i) {
              2 & e && o.uIk("rowspan", i.rowspan)("colspan", i.colspan);
            },
            inputs: { rowspan: "rowspan", colspan: "colspan" },
            exportAs: ["matGridTile"],
            ngContentSelectors: xv,
            decls: 2,
            vars: 0,
            consts: [[1, "mat-grid-tile-content"]],
            template: function (e, i) {
              1 & e && (o.F$t(), o.TgZ(0, "div", 0), o.Hsn(1), o.qZA());
            },
            styles: [Rv],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const sf = /^-?\d+((\.\d+)?[A-Za-z%$]?)+$/;
      class jl {
        constructor() {
          (this._rows = 0), (this._rowspan = 0);
        }
        init(t, e, i, a) {
          (this._gutterSize = Nu(t)),
            (this._rows = e.rowCount),
            (this._rowspan = e.rowspan),
            (this._cols = i),
            (this._direction = a);
        }
        getBaseTileSize(t, e) {
          return `(${t}% - (${this._gutterSize} * ${e}))`;
        }
        getTilePosition(t, e) {
          return 0 === e ? "0" : Gl(`(${t} + ${this._gutterSize}) * ${e}`);
        }
        getTileSize(t, e) {
          return `(${t} * ${e}) + (${e - 1} * ${this._gutterSize})`;
        }
        setStyle(t, e, i) {
          let a = 100 / this._cols,
            u = (this._cols - 1) / this._cols;
          this.setColStyles(t, i, a, u), this.setRowStyles(t, e, a, u);
        }
        setColStyles(t, e, i, a) {
          let u = this.getBaseTileSize(i, a);
          t._setStyle(
            "rtl" === this._direction ? "right" : "left",
            this.getTilePosition(u, e)
          ),
            t._setStyle("width", Gl(this.getTileSize(u, t.colspan)));
        }
        getGutterSpan() {
          return `${this._gutterSize} * (${this._rowspan} - 1)`;
        }
        getTileSpan(t) {
          return `${this._rowspan} * ${this.getTileSize(t, 1)}`;
        }
        getComputedHeight() {
          return null;
        }
      }
      class tA extends jl {
        constructor(t) {
          super(), (this.fixedRowHeight = t);
        }
        init(t, e, i, a) {
          super.init(t, e, i, a),
            (this.fixedRowHeight = Nu(this.fixedRowHeight)),
            sf.test(this.fixedRowHeight);
        }
        setRowStyles(t, e) {
          t._setStyle("top", this.getTilePosition(this.fixedRowHeight, e)),
            t._setStyle(
              "height",
              Gl(this.getTileSize(this.fixedRowHeight, t.rowspan))
            );
        }
        getComputedHeight() {
          return [
            "height",
            Gl(
              `${this.getTileSpan(
                this.fixedRowHeight
              )} + ${this.getGutterSpan()}`
            ),
          ];
        }
        reset(t) {
          t._setListStyle(["height", null]),
            t._tiles &&
              t._tiles.forEach((e) => {
                e._setStyle("top", null), e._setStyle("height", null);
              });
        }
      }
      class kv extends jl {
        constructor(t) {
          super(), this._parseRatio(t);
        }
        setRowStyles(t, e, i, a) {
          (this.baseTileHeight = this.getBaseTileSize(
            i / this.rowHeightRatio,
            a
          )),
            t._setStyle(
              "marginTop",
              this.getTilePosition(this.baseTileHeight, e)
            ),
            t._setStyle(
              "paddingTop",
              Gl(this.getTileSize(this.baseTileHeight, t.rowspan))
            );
        }
        getComputedHeight() {
          return [
            "paddingBottom",
            Gl(
              `${this.getTileSpan(
                this.baseTileHeight
              )} + ${this.getGutterSpan()}`
            ),
          ];
        }
        reset(t) {
          t._setListStyle(["paddingBottom", null]),
            t._tiles.forEach((e) => {
              e._setStyle("marginTop", null), e._setStyle("paddingTop", null);
            });
        }
        _parseRatio(t) {
          const e = t.split(":");
          this.rowHeightRatio = parseFloat(e[0]) / parseFloat(e[1]);
        }
      }
      class ks extends jl {
        setRowStyles(t, e) {
          let u = this.getBaseTileSize(
            100 / this._rowspan,
            (this._rows - 1) / this._rows
          );
          t._setStyle("top", this.getTilePosition(u, e)),
            t._setStyle("height", Gl(this.getTileSize(u, t.rowspan)));
        }
        reset(t) {
          t._tiles &&
            t._tiles.forEach((e) => {
              e._setStyle("top", null), e._setStyle("height", null);
            });
        }
      }
      function Gl(n) {
        return `calc(${n})`;
      }
      function Nu(n) {
        return n.match(/([A-Za-z%]+)$/) ? n : `${n}px`;
      }
      let Ov = (() => {
          class n {
            constructor(e, i) {
              (this._element = e), (this._dir = i), (this._gutter = "1px");
            }
            get cols() {
              return this._cols;
            }
            set cols(e) {
              this._cols = Math.max(1, Math.round(Un(e)));
            }
            get gutterSize() {
              return this._gutter;
            }
            set gutterSize(e) {
              this._gutter = `${null == e ? "" : e}`;
            }
            get rowHeight() {
              return this._rowHeight;
            }
            set rowHeight(e) {
              const i = `${null == e ? "" : e}`;
              i !== this._rowHeight &&
                ((this._rowHeight = i), this._setTileStyler(this._rowHeight));
            }
            ngOnInit() {
              this._checkCols(), this._checkRowHeight();
            }
            ngAfterContentChecked() {
              this._layoutTiles();
            }
            _checkCols() {}
            _checkRowHeight() {
              this._rowHeight || this._setTileStyler("1:1");
            }
            _setTileStyler(e) {
              this._tileStyler && this._tileStyler.reset(this),
                (this._tileStyler =
                  "fit" === e
                    ? new ks()
                    : e && e.indexOf(":") > -1
                    ? new kv(e)
                    : new tA(e));
            }
            _layoutTiles() {
              this._tileCoordinator || (this._tileCoordinator = new S0());
              const e = this._tileCoordinator,
                i = this._tiles.filter(
                  (u) => !u._gridList || u._gridList === this
                ),
                a = this._dir ? this._dir.value : "ltr";
              this._tileCoordinator.update(this.cols, i),
                this._tileStyler.init(this.gutterSize, e, this.cols, a),
                i.forEach((u, h) => {
                  const _ = e.positions[h];
                  this._tileStyler.setStyle(u, _.row, _.col);
                }),
                this._setListStyle(this._tileStyler.getComputedHeight());
            }
            _setListStyle(e) {
              e && (this._element.nativeElement.style[e[0]] = e[1]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(_n, 8));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-grid-list"]],
              contentQueries: function (e, i, a) {
                if ((1 & e && o.Suo(a, rf, 5), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i._tiles = u);
                }
              },
              hostAttrs: [1, "mat-grid-list"],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && o.uIk("cols", i.cols);
              },
              inputs: {
                cols: "cols",
                gutterSize: "gutterSize",
                rowHeight: "rowHeight",
              },
              exportAs: ["matGridList"],
              features: [o._Bn([{ provide: M0, useExisting: n }])],
              ngContentSelectors: xv,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (o.F$t(), o.TgZ(0, "div"), o.Hsn(1), o.qZA());
              },
              styles: [Rv],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        dP = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[fE, Et], fE, Et] })),
            n
          );
        })();
      const Pv = ["primaryValueBar"],
        I0 = bo(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        Nv = new o.OlP("mat-progress-bar-location", {
          providedIn: "root",
          factory: function () {
            const n = (0, o.f3M)(G),
              t = n ? n.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : "") };
          },
        });
      let iA = 0,
        rA = (() => {
          class n extends I0 {
            constructor(e, i, a, u) {
              super(e),
                (this._ngZone = i),
                (this._animationMode = a),
                (this._isNoopAnimation = !1),
                (this._value = 0),
                (this._bufferValue = 0),
                (this.animationEnd = new o.vpe()),
                (this._animationEndSubscription = Bn.w.EMPTY),
                (this.mode = "determinate"),
                (this.progressbarId = "mat-progress-bar-" + iA++);
              const h = u ? u.getPathname().split("#")[0] : "";
              (this._rectangleFillValue = `url('${h}#${this.progressbarId}')`),
                (this._isNoopAnimation = "NoopAnimations" === a);
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._value = A0(Un(e) || 0);
            }
            get bufferValue() {
              return this._bufferValue;
            }
            set bufferValue(e) {
              this._bufferValue = A0(e || 0);
            }
            _primaryTransform() {
              return { transform: `scale3d(${this.value / 100}, 1, 1)` };
            }
            _bufferTransform() {
              return "buffer" === this.mode
                ? { transform: `scale3d(${this.bufferValue / 100}, 1, 1)` }
                : null;
            }
            ngAfterViewInit() {
              this._ngZone.runOutsideAngular(() => {
                const e = this._primaryValueBar.nativeElement;
                this._animationEndSubscription = wu(e, "transitionend")
                  .pipe(En((i) => i.target === e))
                  .subscribe(() => {
                    ("determinate" === this.mode || "buffer" === this.mode) &&
                      this._ngZone.run(() =>
                        this.animationEnd.next({ value: this.value })
                      );
                  });
              });
            }
            ngOnDestroy() {
              this._animationEndSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(o.R0b),
                o.Y36(Se, 8),
                o.Y36(Nv, 8)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-progress-bar"]],
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(Pv, 5), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i._primaryValueBar = a.first);
                }
              },
              hostAttrs: [
                "role",
                "progressbar",
                "aria-valuemin",
                "0",
                "aria-valuemax",
                "100",
                "tabindex",
                "-1",
                1,
                "mat-progress-bar",
              ],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk(
                    "aria-valuenow",
                    "indeterminate" === i.mode || "query" === i.mode
                      ? null
                      : i.value
                  )("mode", i.mode),
                  o.ekj("_mat-animation-noopable", i._isNoopAnimation));
              },
              inputs: {
                color: "color",
                mode: "mode",
                value: "value",
                bufferValue: "bufferValue",
              },
              outputs: { animationEnd: "animationEnd" },
              exportAs: ["matProgressBar"],
              features: [o.qOj],
              decls: 10,
              vars: 4,
              consts: [
                ["aria-hidden", "true"],
                [
                  "width",
                  "100%",
                  "height",
                  "4",
                  "focusable",
                  "false",
                  1,
                  "mat-progress-bar-background",
                  "mat-progress-bar-element",
                ],
                [
                  "x",
                  "4",
                  "y",
                  "0",
                  "width",
                  "8",
                  "height",
                  "4",
                  "patternUnits",
                  "userSpaceOnUse",
                  3,
                  "id",
                ],
                ["cx", "2", "cy", "2", "r", "2"],
                ["width", "100%", "height", "100%"],
                [
                  1,
                  "mat-progress-bar-buffer",
                  "mat-progress-bar-element",
                  3,
                  "ngStyle",
                ],
                [
                  1,
                  "mat-progress-bar-primary",
                  "mat-progress-bar-fill",
                  "mat-progress-bar-element",
                  3,
                  "ngStyle",
                ],
                ["primaryValueBar", ""],
                [
                  1,
                  "mat-progress-bar-secondary",
                  "mat-progress-bar-fill",
                  "mat-progress-bar-element",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.TgZ(0, "div", 0),
                  o.O4$(),
                  o.TgZ(1, "svg", 1),
                  o.TgZ(2, "defs"),
                  o.TgZ(3, "pattern", 2),
                  o._UZ(4, "circle", 3),
                  o.qZA(),
                  o.qZA(),
                  o._UZ(5, "rect", 4),
                  o.qZA(),
                  o.kcU(),
                  o._UZ(6, "div", 5),
                  o._UZ(7, "div", 6, 7),
                  o._UZ(9, "div", 8),
                  o.qZA()),
                  2 & e &&
                    (o.xp6(3),
                    o.Q6J("id", i.progressbarId),
                    o.xp6(2),
                    o.uIk("fill", i._rectangleFillValue),
                    o.xp6(1),
                    o.Q6J("ngStyle", i._bufferTransform()),
                    o.xp6(1),
                    o.Q6J("ngStyle", i._primaryTransform()));
              },
              directives: [Fr],
              styles: [
                '.mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:"";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function A0(n, t = 0, e = 100) {
        return Math.max(t, Math.min(e, n));
      }
      let sA = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({ imports: [[Xi, Et], Et] })),
          n
        );
      })();
      var Wm = k(3098);
      function Lv(n, t = fh.P) {
        const i = (function (n) {
          return n instanceof Date && !isNaN(+n);
        })(n)
          ? +n - t.now()
          : Math.abs(n);
        return (a) => a.lift(new R0(i, t));
      }
      class R0 {
        constructor(t, e) {
          (this.delay = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new Ym(t, this.delay, this.scheduler));
        }
      }
      class Ym extends $n.L {
        constructor(t, e, i) {
          super(t),
            (this.delay = e),
            (this.scheduler = i),
            (this.queue = []),
            (this.active = !1),
            (this.errored = !1);
        }
        static dispatch(t) {
          const e = t.source,
            i = e.queue,
            a = t.scheduler,
            u = t.destination;
          for (; i.length > 0 && i[0].time - a.now() <= 0; )
            i.shift().notification.observe(u);
          if (i.length > 0) {
            const h = Math.max(0, i[0].time - a.now());
            this.schedule(t, h);
          } else this.unsubscribe(), (e.active = !1);
        }
        _schedule(t) {
          (this.active = !0),
            this.destination.add(
              t.schedule(Ym.dispatch, this.delay, {
                source: this,
                destination: this.destination,
                scheduler: t,
              })
            );
        }
        scheduleNotification(t) {
          if (!0 === this.errored) return;
          const e = this.scheduler,
            i = new k0(e.now() + this.delay, t);
          this.queue.push(i), !1 === this.active && this._schedule(e);
        }
        _next(t) {
          this.scheduleNotification(Wm.P.createNext(t));
        }
        _error(t) {
          (this.errored = !0),
            (this.queue = []),
            this.destination.error(t),
            this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(Wm.P.createComplete()), this.unsubscribe();
        }
      }
      class k0 {
        constructor(t, e) {
          (this.time = t), (this.notification = e);
        }
      }
      const oA = ["mat-menu-item", ""];
      function O0(n, t) {
        1 & n && (o.O4$(), o.TgZ(0, "svg", 2), o._UZ(1, "polygon", 3), o.qZA());
      }
      const Vv = ["*"];
      function aA(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 0),
            o.NdJ("keydown", function (a) {
              return o.CHM(e), o.oxw()._handleKeydown(a);
            })("click", function () {
              return o.CHM(e), o.oxw().closed.emit("click");
            })("@transformMenu.start", function (a) {
              return o.CHM(e), o.oxw()._onAnimationStart(a);
            })("@transformMenu.done", function (a) {
              return o.CHM(e), o.oxw()._onAnimationDone(a);
            }),
            o.TgZ(1, "div", 1),
            o.Hsn(2),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = o.oxw();
          o.Q6J("id", e.panelId)("ngClass", e._classList)(
            "@transformMenu",
            e._panelAnimationState
          ),
            o.uIk("aria-label", e.ariaLabel || null)(
              "aria-labelledby",
              e.ariaLabelledby || null
            )("aria-describedby", e.ariaDescribedby || null);
        }
      }
      const of = {
          transformMenu: Ii("transformMenu", [
            dn("void", Lt({ opacity: 0, transform: "scale(0.8)" })),
            bn(
              "void => enter",
              Ln(
                "120ms cubic-bezier(0, 0, 0.2, 1)",
                Lt({ opacity: 1, transform: "scale(1)" })
              )
            ),
            bn("* => void", Ln("100ms 25ms linear", Lt({ opacity: 0 }))),
          ]),
          fadeInItems: Ii("fadeInItems", [
            dn("showing", Lt({ opacity: 1 })),
            bn("void => *", [
              Lt({ opacity: 0 }),
              Ln("400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
            ]),
          ]),
        },
        vi = new o.OlP("MatMenuContent"),
        Bv = new o.OlP("MAT_MENU_PANEL"),
        Uv = rm(im(class {}));
      let Hv = (() => {
        class n extends Uv {
          constructor(e, i, a, u, h) {
            super(),
              (this._elementRef = e),
              (this._focusMonitor = a),
              (this._parentMenu = u),
              (this._changeDetectorRef = h),
              (this.role = "menuitem"),
              (this._hovered = new xe.xQ()),
              (this._focused = new xe.xQ()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              u && u.addItem && u.addItem(this);
          }
          focus(e, i) {
            this._focusMonitor && e
              ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
              : this._getHostElement().focus(i),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? "-1" : "0";
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(e) {
            this.disabled && (e.preventDefault(), e.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            var e, i;
            const a = this._elementRef.nativeElement.cloneNode(!0),
              u = a.querySelectorAll("mat-icon, .material-icons");
            for (let h = 0; h < u.length; h++) {
              const _ = u[h];
              null === (e = _.parentNode) || void 0 === e || e.removeChild(_);
            }
            return (
              (null === (i = a.textContent) || void 0 === i
                ? void 0
                : i.trim()) || ""
            );
          }
          _setHighlighted(e) {
            var i;
            (this._highlighted = e),
              null === (i = this._changeDetectorRef) ||
                void 0 === i ||
                i.markForCheck();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(o.SBq),
              o.Y36(G),
              o.Y36(vo),
              o.Y36(Bv, 8),
              o.Y36(o.sBO)
            );
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["", "mat-menu-item", ""]],
            hostAttrs: [1, "mat-focus-indicator"],
            hostVars: 10,
            hostBindings: function (e, i) {
              1 & e &&
                o.NdJ("click", function (u) {
                  return i._checkDisabled(u);
                })("mouseenter", function () {
                  return i._handleMouseEnter();
                }),
                2 & e &&
                  (o.uIk("role", i.role)("tabindex", i._getTabIndex())(
                    "aria-disabled",
                    i.disabled.toString()
                  )("disabled", i.disabled || null),
                  o.ekj("mat-menu-item", !0)(
                    "mat-menu-item-highlighted",
                    i._highlighted
                  )("mat-menu-item-submenu-trigger", i._triggersSubmenu));
            },
            inputs: {
              disabled: "disabled",
              disableRipple: "disableRipple",
              role: "role",
            },
            exportAs: ["matMenuItem"],
            features: [o.qOj],
            attrs: oA,
            ngContentSelectors: Vv,
            decls: 3,
            vars: 3,
            consts: [
              [
                "matRipple",
                "",
                1,
                "mat-menu-ripple",
                3,
                "matRippleDisabled",
                "matRippleTrigger",
              ],
              [
                "class",
                "mat-menu-submenu-icon",
                "viewBox",
                "0 0 5 10",
                "focusable",
                "false",
                4,
                "ngIf",
              ],
              [
                "viewBox",
                "0 0 5 10",
                "focusable",
                "false",
                1,
                "mat-menu-submenu-icon",
              ],
              ["points", "0,0 5,5 0,10"],
            ],
            template: function (e, i) {
              1 & e &&
                (o.F$t(),
                o.Hsn(0),
                o._UZ(1, "div", 0),
                o.YNc(2, O0, 2, 0, "svg", 1)),
                2 & e &&
                  (o.xp6(1),
                  o.Q6J("matRippleDisabled", i.disableRipple || i.disabled)(
                    "matRippleTrigger",
                    i._getHostElement()
                  ),
                  o.xp6(1),
                  o.Q6J("ngIf", i._triggersSubmenu));
            },
            directives: [wa, Bi],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const jv = new o.OlP("mat-menu-default-options", {
        providedIn: "root",
        factory: function () {
          return {
            overlapTrigger: !1,
            xPosition: "after",
            yPosition: "below",
            backdropClass: "cdk-overlay-transparent-backdrop",
          };
        },
      });
      let uA = 0,
        zl = (() => {
          class n {
            constructor(e, i, a) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this._defaultOptions = a),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new o.n_E()),
                (this._tabSubscription = Bn.w.EMPTY),
                (this._classList = {}),
                (this._panelAnimationState = "void"),
                (this._animationDone = new xe.xQ()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ""),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new o.vpe()),
                (this.close = this.closed),
                (this.panelId = "mat-menu-panel-" + uA++);
            }
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(e) {
              (this._xPosition = e), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(e) {
              (this._yPosition = e), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(e) {
              this._overlapTrigger = it(e);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = it(e);
            }
            set panelClass(e) {
              const i = this._previousPanelClass;
              i &&
                i.length &&
                i.split(" ").forEach((a) => {
                  this._classList[a] = !1;
                }),
                (this._previousPanelClass = e),
                e &&
                  e.length &&
                  (e.split(" ").forEach((a) => {
                    this._classList[a] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ""));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(e) {
              this.panelClass = e;
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new ou(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                (this._tabSubscription = this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit("tab")
                )),
                this._directDescendantItems.changes
                  .pipe(
                    Hn(this._directDescendantItems),
                    Xt((e) => (0, yi.T)(...e.map((i) => i._focused)))
                  )
                  .subscribe((e) => this._keyManager.updateActiveItem(e));
            }
            ngOnDestroy() {
              this._directDescendantItems.destroy(),
                this._tabSubscription.unsubscribe(),
                this.closed.complete();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                Hn(this._directDescendantItems),
                Xt((i) => (0, yi.T)(...i.map((a) => a._hovered)))
              );
            }
            addItem(e) {}
            removeItem(e) {}
            _handleKeydown(e) {
              const i = e.keyCode,
                a = this._keyManager;
              switch (i) {
                case 27:
                  _o(e) || (e.preventDefault(), this.closed.emit("keydown"));
                  break;
                case 37:
                  this.parentMenu &&
                    "ltr" === this.direction &&
                    this.closed.emit("keydown");
                  break;
                case 39:
                  this.parentMenu &&
                    "rtl" === this.direction &&
                    this.closed.emit("keydown");
                  break;
                default:
                  (38 === i || 40 === i) && a.setFocusOrigin("keyboard"),
                    a.onKeydown(e);
              }
            }
            focusFirstItem(e = "program") {
              this.lazyContent
                ? this._ngZone.onStable
                    .pipe(An(1))
                    .subscribe(() => this._focusFirstItem(e))
                : this._focusFirstItem(e);
            }
            _focusFirstItem(e) {
              const i = this._keyManager;
              if (
                (i.setFocusOrigin(e).setFirstItemActive(),
                !i.activeItem && this._directDescendantItems.length)
              ) {
                let a =
                  this._directDescendantItems.first._getHostElement()
                    .parentElement;
                for (; a; ) {
                  if ("menu" === a.getAttribute("role")) {
                    a.focus();
                    break;
                  }
                  a = a.parentElement;
                }
              }
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(e) {
              const i = Math.min(this._baseElevation + e, 24),
                a = `${this._elevationPrefix}${i}`,
                u = Object.keys(this._classList).find((h) =>
                  h.startsWith(this._elevationPrefix)
                );
              (!u || u === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[a] = !0),
                (this._previousElevation = a));
            }
            setPositionClasses(e = this.xPosition, i = this.yPosition) {
              const a = this._classList;
              (a["mat-menu-before"] = "before" === e),
                (a["mat-menu-after"] = "after" === e),
                (a["mat-menu-above"] = "above" === i),
                (a["mat-menu-below"] = "below" === i);
            }
            _startAnimation() {
              this._panelAnimationState = "enter";
            }
            _resetAnimation() {
              this._panelAnimationState = "void";
            }
            _onAnimationDone(e) {
              this._animationDone.next(e), (this._isAnimating = !1);
            }
            _onAnimationStart(e) {
              (this._isAnimating = !0),
                "enter" === e.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (e.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe(Hn(this._allItems)).subscribe((e) => {
                this._directDescendantItems.reset(
                  e.filter((i) => i._parentMenu === this)
                ),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(o.R0b), o.Y36(jv));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              contentQueries: function (e, i, a) {
                if (
                  (1 & e && (o.Suo(a, vi, 5), o.Suo(a, Hv, 5), o.Suo(a, Hv, 4)),
                  2 & e)
                ) {
                  let u;
                  o.iGM((u = o.CRH())) && (i.lazyContent = u.first),
                    o.iGM((u = o.CRH())) && (i._allItems = u),
                    o.iGM((u = o.CRH())) && (i.items = u);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(o.Rgc, 5), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i.templateRef = a.first);
                }
              },
              inputs: {
                backdropClass: "backdropClass",
                xPosition: "xPosition",
                yPosition: "yPosition",
                overlapTrigger: "overlapTrigger",
                hasBackdrop: "hasBackdrop",
                panelClass: ["class", "panelClass"],
                classList: "classList",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
              },
              outputs: { closed: "closed", close: "close" },
            })),
            n
          );
        })(),
        P0 = (() => {
          class n extends zl {
            constructor(e, i, a) {
              super(e, i, a),
                (this._elevationPrefix = "mat-elevation-z"),
                (this._baseElevation = 4);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq), o.Y36(o.R0b), o.Y36(jv));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-menu"]],
              hostVars: 3,
              hostBindings: function (e, i) {
                2 & e &&
                  o.uIk("aria-label", null)("aria-labelledby", null)(
                    "aria-describedby",
                    null
                  );
              },
              exportAs: ["matMenu"],
              features: [o._Bn([{ provide: Bv, useExisting: n }]), o.qOj],
              ngContentSelectors: Vv,
              decls: 1,
              vars: 0,
              consts: [
                [
                  "tabindex",
                  "-1",
                  "role",
                  "menu",
                  1,
                  "mat-menu-panel",
                  3,
                  "id",
                  "ngClass",
                  "keydown",
                  "click",
                ],
                [1, "mat-menu-content"],
              ],
              template: function (e, i) {
                1 & e && (o.F$t(), o.YNc(0, aA, 3, 6, "ng-template"));
              },
              directives: [zs],
              styles: [
                "mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n",
              ],
              encapsulation: 2,
              data: { animation: [of.transformMenu, of.fadeInItems] },
              changeDetection: 0,
            })),
            n
          );
        })();
      const Gv = new o.OlP("mat-menu-scroll-strategy"),
        Km = {
          provide: Gv,
          deps: [Ot],
          useFactory: function (n) {
            return () => n.scrollStrategies.reposition();
          },
        },
        zv = qp({ passive: !0 });
      let hA = (() => {
          class n {
            constructor(e, i, a, u, h, _, b, S) {
              (this._overlay = e),
                (this._element = i),
                (this._viewContainerRef = a),
                (this._menuItemInstance = _),
                (this._dir = b),
                (this._focusMonitor = S),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Bn.w.EMPTY),
                (this._hoverSubscription = Bn.w.EMPTY),
                (this._menuCloseSubscription = Bn.w.EMPTY),
                (this._handleTouchStart = (T) => {
                  $_(T) || (this._openedBy = "touch");
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new o.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new o.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = u),
                (this._parentMaterialMenu = h instanceof zl ? h : void 0),
                i.nativeElement.addEventListener(
                  "touchstart",
                  this._handleTouchStart,
                  zv
                ),
                _ && (_._triggersSubmenu = this.triggersSubmenu());
            }
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(e) {
              this.menu = e;
            }
            get menu() {
              return this._menu;
            }
            set menu(e) {
              e !== this._menu &&
                ((this._menu = e),
                this._menuCloseSubscription.unsubscribe(),
                e &&
                  (this._menuCloseSubscription = e.close.subscribe((i) => {
                    this._destroyMenu(i),
                      ("click" === i || "tab" === i) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(i);
                  })));
            }
            ngAfterContentInit() {
              this._checkMenu(), this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  "touchstart",
                  this._handleTouchStart,
                  zv
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr";
            }
            triggersSubmenu() {
              return !(!this._menuItemInstance || !this._parentMaterialMenu);
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              if (this._menuOpen) return;
              this._checkMenu();
              const e = this._createOverlay(),
                i = e.getConfig();
              this._setPosition(i.positionStrategy),
                (i.hasBackdrop =
                  null == this.menu.hasBackdrop
                    ? !this.triggersSubmenu()
                    : this.menu.hasBackdrop),
                e.attach(this._getPortal()),
                this.menu.lazyContent &&
                  this.menu.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(),
                this.menu instanceof zl && this.menu._startAnimation();
            }
            closeMenu() {
              this.menu.close.emit();
            }
            focus(e, i) {
              this._focusMonitor && e
                ? this._focusMonitor.focusVia(this._element, e, i)
                : this._element.nativeElement.focus(i);
            }
            updatePosition() {
              var e;
              null === (e = this._overlayRef) ||
                void 0 === e ||
                e.updatePosition();
            }
            _destroyMenu(e) {
              if (!this._overlayRef || !this.menuOpen) return;
              const i = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ("keydown" === e ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                i instanceof zl
                  ? (i._resetAnimation(),
                    i.lazyContent
                      ? i._animationDone
                          .pipe(
                            En((a) => "void" === a.toState),
                            An(1),
                            jt(i.lazyContent._attached)
                          )
                          .subscribe({
                            next: () => i.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1),
                    i.lazyContent && i.lazyContent.detach());
            }
            _initMenu() {
              (this.menu.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (this.menu.direction = this.dir),
                this._setMenuElevation(),
                this.menu.focusFirstItem(this._openedBy || "program"),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation() {
              if (this.menu.setElevation) {
                let e = 0,
                  i = this.menu.parentMenu;
                for (; i; ) e++, (i = i.parentMenu);
                this.menu.setElevation(e);
              }
            }
            _setIsMenuOpen(e) {
              (this._menuOpen = e),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(e);
            }
            _checkMenu() {}
            _createOverlay() {
              if (!this._overlayRef) {
                const e = this._getOverlayConfig();
                this._subscribeToPositions(e.positionStrategy),
                  (this._overlayRef = this._overlay.create(e)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig() {
              return new Kh({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    ".mat-menu-panel, .mat-mdc-menu-panel"
                  ),
                backdropClass:
                  this.menu.backdropClass || "cdk-overlay-transparent-backdrop",
                panelClass: this.menu.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(e) {
              this.menu.setPositionClasses &&
                e.positionChanges.subscribe((i) => {
                  this.menu.setPositionClasses(
                    "start" === i.connectionPair.overlayX ? "after" : "before",
                    "top" === i.connectionPair.overlayY ? "below" : "above"
                  );
                });
            }
            _setPosition(e) {
              let [i, a] =
                  "before" === this.menu.xPosition
                    ? ["end", "start"]
                    : ["start", "end"],
                [u, h] =
                  "above" === this.menu.yPosition
                    ? ["bottom", "top"]
                    : ["top", "bottom"],
                [_, b] = [u, h],
                [S, T] = [i, a],
                A = 0;
              this.triggersSubmenu()
                ? ((T = i = "before" === this.menu.xPosition ? "start" : "end"),
                  (a = S = "end" === i ? "start" : "end"),
                  (A = "bottom" === u ? 8 : -8))
                : this.menu.overlapTrigger ||
                  ((_ = "top" === u ? "bottom" : "top"),
                  (b = "top" === h ? "bottom" : "top")),
                e.withPositions([
                  {
                    originX: i,
                    originY: _,
                    overlayX: S,
                    overlayY: u,
                    offsetY: A,
                  },
                  {
                    originX: a,
                    originY: _,
                    overlayX: T,
                    overlayY: u,
                    offsetY: A,
                  },
                  {
                    originX: i,
                    originY: b,
                    overlayX: S,
                    overlayY: h,
                    offsetY: -A,
                  },
                  {
                    originX: a,
                    originY: b,
                    overlayX: T,
                    overlayY: h,
                    offsetY: -A,
                  },
                ]);
            }
            _menuClosingActions() {
              const e = this._overlayRef.backdropClick(),
                i = this._overlayRef.detachments(),
                a = this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : (0, Oe.of)(),
                u = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      En((h) => h !== this._menuItemInstance),
                      En(() => this._menuOpen)
                    )
                  : (0, Oe.of)();
              return (0, yi.T)(e, a, u, i);
            }
            _handleMousedown(e) {
              Qp(e) ||
                ((this._openedBy = 0 === e.button ? "mouse" : void 0),
                this.triggersSubmenu() && e.preventDefault());
            }
            _handleKeydown(e) {
              const i = e.keyCode;
              (13 === i || 32 === i) && (this._openedBy = "keyboard"),
                this.triggersSubmenu() &&
                  ((39 === i && "ltr" === this.dir) ||
                    (37 === i && "rtl" === this.dir)) &&
                  ((this._openedBy = "keyboard"), this.openMenu());
            }
            _handleClick(e) {
              this.triggersSubmenu()
                ? (e.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    En((e) => e === this._menuItemInstance && !e.disabled),
                    Lv(0, $w.E)
                  )
                  .subscribe(() => {
                    (this._openedBy = "mouse"),
                      this.menu instanceof zl && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              An(1),
                              Lv(0, $w.E),
                              jt(this._parentMaterialMenu._hovered())
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal() {
              return (
                (!this._portal ||
                  this._portal.templateRef !== this.menu.templateRef) &&
                  (this._portal = new xa(
                    this.menu.templateRef,
                    this._viewContainerRef
                  )),
                this._portal
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Ot),
                o.Y36(o.SBq),
                o.Y36(o.s_b),
                o.Y36(Gv),
                o.Y36(Bv, 8),
                o.Y36(Hv, 10),
                o.Y36(_n, 8),
                o.Y36(vo)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-menu-trigger-for", ""],
                ["", "matMenuTriggerFor", ""],
              ],
              hostAttrs: ["aria-haspopup", "true", 1, "mat-menu-trigger"],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("mousedown", function (u) {
                    return i._handleMousedown(u);
                  })("keydown", function (u) {
                    return i._handleKeydown(u);
                  })("click", function (u) {
                    return i._handleClick(u);
                  }),
                  2 & e &&
                    o.uIk("aria-expanded", i.menuOpen || null)(
                      "aria-controls",
                      i.menuOpen ? i.menu.panelId : null
                    );
              },
              inputs: {
                restoreFocus: ["matMenuTriggerRestoreFocus", "restoreFocus"],
                _deprecatedMatMenuTriggerFor: [
                  "mat-menu-trigger-for",
                  "_deprecatedMatMenuTriggerFor",
                ],
                menu: ["matMenuTriggerFor", "menu"],
                menuData: ["matMenuTriggerData", "menuData"],
              },
              outputs: {
                menuOpened: "menuOpened",
                onMenuOpen: "onMenuOpen",
                menuClosed: "menuClosed",
                onMenuClose: "onMenuClose",
              },
              exportAs: ["matMenuTrigger"],
            })),
            n
          );
        })(),
        $v = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ providers: [Km], imports: [Et] })),
            n
          );
        })(),
        Qm = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({
              providers: [Km],
              imports: [[Xi, Et, Sa, Ra, $v], Ll, Et, $v],
            })),
            n
          );
        })();
      class Wv extends $n.L {
        notifyNext(t, e, i, a, u) {
          this.destination.next(e);
        }
        notifyError(t, e) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.complete();
        }
      }
      class fA extends $n.L {
        constructor(t, e, i) {
          super(),
            (this.parent = t),
            (this.outerValue = e),
            (this.outerIndex = i),
            (this.index = 0);
        }
        _next(t) {
          this.parent.notifyNext(
            this.outerValue,
            t,
            this.outerIndex,
            this.index++,
            this
          );
        }
        _error(t) {
          this.parent.notifyError(t, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
      var Yv = k(7444);
      function Jm(n, t, e, i, a = new fA(n, e, i)) {
        if (!a.closed)
          return t instanceof Sn.y ? t.subscribe(a) : (0, Yv.s)(t)(a);
      }
      var pA = k(6693);
      const N0 = {};
      function Zv(...n) {
        let t, e;
        return (
          (0, Ch.K)(n[n.length - 1]) && (e = n.pop()),
          "function" == typeof n[n.length - 1] && (t = n.pop()),
          1 === n.length && (0, cm.k)(n[0]) && (n = n[0]),
          (0, pA.n)(n, e).lift(new F0(t))
        );
      }
      class F0 {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new L0(t, this.resultSelector));
        }
      }
      class L0 extends Wv {
        constructor(t, e) {
          super(t),
            (this.resultSelector = e),
            (this.active = 0),
            (this.values = []),
            (this.observables = []);
        }
        _next(t) {
          this.values.push(N0), this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            (this.active = e), (this.toRespond = e);
            for (let i = 0; i < e; i++) this.add(Jm(this, t[i], void 0, i));
          }
        }
        notifyComplete(t) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(t, e, i) {
          const a = this.values,
            h = this.toRespond
              ? a[i] === N0
                ? --this.toRespond
                : this.toRespond
              : 0;
          (a[i] = e),
            0 === h &&
              (this.resultSelector
                ? this._tryResultSelector(a)
                : this.destination.next(a.slice()));
        }
        _tryResultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      const qv = new Set();
      let $l,
        V0 = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : B0);
            }
            matchMedia(e) {
              return (
                this._platform.WEBKIT &&
                  (function (n) {
                    if (!qv.has(n))
                      try {
                        $l ||
                          (($l = document.createElement("style")),
                          $l.setAttribute("type", "text/css"),
                          document.head.appendChild($l)),
                          $l.sheet &&
                            ($l.sheet.insertRule(
                              `@media ${n} {.fx-query-test{ }}`,
                              0
                            ),
                            qv.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Nt));
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n(o.LFG(Nt));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      function B0(n) {
        return {
          matches: "all" === n || "" === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let U0 = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new xe.xQ());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return Kv(Yp(e)).some((a) => this._registerQuery(a).mql.matches);
          }
          observe(e) {
            let u = Zv(Kv(Yp(e)).map((h) => this._registerQuery(h).observable));
            return (
              (u = bh(u.pipe(An(1)), u.pipe(eu(1), zp(0)))),
              u.pipe(
                (0, et.U)((h) => {
                  const _ = { matches: !1, breakpoints: {} };
                  return (
                    h.forEach(({ matches: b, query: S }) => {
                      (_.matches = _.matches || b), (_.breakpoints[S] = b);
                    }),
                    _
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              u = {
                observable: new Sn.y((h) => {
                  const _ = (b) => this._zone.run(() => h.next(b));
                  return (
                    i.addListener(_),
                    () => {
                      i.removeListener(_);
                    }
                  );
                }).pipe(
                  Hn(i),
                  (0, et.U)(({ matches: h }) => ({ query: e, matches: h })),
                  jt(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, u), u;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(V0), o.LFG(o.R0b));
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(o.LFG(V0), o.LFG(o.R0b));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function Kv(n) {
        return n
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function j0(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 1),
            o.TgZ(1, "button", 2),
            o.NdJ("click", function () {
              return o.CHM(e), o.oxw().action();
            }),
            o._uU(2),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = o.oxw();
          o.xp6(2), o.Oqu(e.data.action);
        }
      }
      function G0(n, t) {}
      const z0 = new o.OlP("MatSnackBarData");
      class Xm {
        constructor() {
          (this.politeness = "assertive"),
            (this.announcementMessage = ""),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
      }
      const gA = Math.pow(2, 31) - 1;
      class eg {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new xe.xQ()),
            (this._afterOpened = new xe.xQ()),
            (this._onAction = new xe.xQ()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            this.onAction().subscribe(() => this.dismiss()),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, gA)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      let mP = (() => {
        class n {
          constructor(e, i) {
            (this.snackBarRef = e), (this.data = i);
          }
          action() {
            this.snackBarRef.dismissWithAction();
          }
          get hasAction() {
            return !!this.data.action;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(eg), o.Y36(z0));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["simple-snack-bar"]],
            hostAttrs: [1, "mat-simple-snackbar"],
            decls: 3,
            vars: 2,
            consts: [
              ["class", "mat-simple-snackbar-action", 4, "ngIf"],
              [1, "mat-simple-snackbar-action"],
              ["mat-button", "", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (o.TgZ(0, "span"),
                o._uU(1),
                o.qZA(),
                o.YNc(2, j0, 3, 1, "div", 0)),
                2 & e &&
                  (o.xp6(1),
                  o.Oqu(i.data.message),
                  o.xp6(1),
                  o.Q6J("ngIf", i.hasAction));
            },
            directives: [Bi, Co],
            styles: [
              ".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\n",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const gP = {
        snackBarState: Ii("state", [
          dn("void, hidden", Lt({ transform: "scale(0.8)", opacity: 0 })),
          dn("visible", Lt({ transform: "scale(1)", opacity: 1 })),
          bn("* => visible", Ln("150ms cubic-bezier(0, 0, 0.2, 1)")),
          bn(
            "* => void, * => hidden",
            Ln("75ms cubic-bezier(0.4, 0.0, 1, 1)", Lt({ opacity: 0 }))
          ),
        ]),
      };
      let _P = (() => {
          class n extends Nm {
            constructor(e, i, a, u, h) {
              super(),
                (this._ngZone = e),
                (this._elementRef = i),
                (this._changeDetectorRef = a),
                (this._platform = u),
                (this.snackBarConfig = h),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new xe.xQ()),
                (this._onExit = new xe.xQ()),
                (this._onEnter = new xe.xQ()),
                (this._animationState = "void"),
                (this.attachDomPortal = (_) => (
                  this._assertNotAttached(),
                  this._applySnackBarClasses(),
                  this._portalOutlet.attachDomPortal(_)
                )),
                (this._live =
                  "assertive" !== h.politeness || h.announcementMessage
                    ? "off" === h.politeness
                      ? "off"
                      : "polite"
                    : "assertive"),
                this._platform.FIREFOX &&
                  ("polite" === this._live && (this._role = "status"),
                  "assertive" === this._live && (this._role = "alert"));
            }
            attachComponentPortal(e) {
              return (
                this._assertNotAttached(),
                this._applySnackBarClasses(),
                this._portalOutlet.attachComponentPortal(e)
              );
            }
            attachTemplatePortal(e) {
              return (
                this._assertNotAttached(),
                this._applySnackBarClasses(),
                this._portalOutlet.attachTemplatePortal(e)
              );
            }
            onAnimationEnd(e) {
              const { fromState: i, toState: a } = e;
              if (
                ((("void" === a && "void" !== i) || "hidden" === a) &&
                  this._completeExit(),
                "visible" === a)
              ) {
                const u = this._onEnter;
                this._ngZone.run(() => {
                  u.next(), u.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = "visible"),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                (this._animationState = "hidden"),
                this._elementRef.nativeElement.setAttribute("mat-exit", ""),
                clearTimeout(this._announceTimeoutId),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(An(1)).subscribe(() => {
                this._onExit.next(), this._onExit.complete();
              });
            }
            _applySnackBarClasses() {
              const e = this._elementRef.nativeElement,
                i = this.snackBarConfig.panelClass;
              i &&
                (Array.isArray(i)
                  ? i.forEach((a) => e.classList.add(a))
                  : e.classList.add(i)),
                "center" === this.snackBarConfig.horizontalPosition &&
                  e.classList.add("mat-snack-bar-center"),
                "top" === this.snackBarConfig.verticalPosition &&
                  e.classList.add("mat-snack-bar-top");
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-hidden]"
                        ),
                      i =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-live]"
                        );
                    if (e && i) {
                      let a = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (a = document.activeElement),
                        e.removeAttribute("aria-hidden"),
                        i.appendChild(e),
                        null == a || a.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.R0b),
                o.Y36(o.SBq),
                o.Y36(o.sBO),
                o.Y36(Nt),
                o.Y36(Xm)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["snack-bar-container"]],
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(Vl, 7), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i._portalOutlet = a.first);
                }
              },
              hostAttrs: [1, "mat-snack-bar-container"],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  o.WFA("@state.done", function (u) {
                    return i.onAnimationEnd(u);
                  }),
                  2 & e && o.d8E("@state", i._animationState);
              },
              features: [o.qOj],
              decls: 3,
              vars: 2,
              consts: [
                ["aria-hidden", "true"],
                ["cdkPortalOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.TgZ(0, "div", 0),
                  o.YNc(1, G0, 0, 0, "ng-template", 1),
                  o.qZA(),
                  o._UZ(2, "div")),
                  2 & e &&
                    (o.xp6(2), o.uIk("aria-live", i._live)("role", i._role));
              },
              directives: [Vl],
              styles: [
                ".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\n",
              ],
              encapsulation: 2,
              data: { animation: [gP.snackBarState] },
            })),
            n
          );
        })(),
        _A = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Ra, Bl, Xi, lm, Et], Et] })),
            n
          );
        })();
      const yA = new o.OlP("mat-snack-bar-default-options", {
        providedIn: "root",
        factory: function () {
          return new Xm();
        },
      });
      let vP = (() => {
        class n {
          constructor(e, i, a, u, h, _) {
            (this._overlay = e),
              (this._live = i),
              (this._injector = a),
              (this._breakpointObserver = u),
              (this._parentSnackBar = h),
              (this._defaultConfig = _),
              (this._snackBarRefAtThisLevel = null),
              (this.simpleSnackBarComponent = mP),
              (this.snackBarContainerComponent = _P),
              (this.handsetCssClass = "mat-snack-bar-handset");
          }
          get _openedSnackBarRef() {
            const e = this._parentSnackBar;
            return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
          }
          set _openedSnackBarRef(e) {
            this._parentSnackBar
              ? (this._parentSnackBar._openedSnackBarRef = e)
              : (this._snackBarRefAtThisLevel = e);
          }
          openFromComponent(e, i) {
            return this._attach(e, i);
          }
          openFromTemplate(e, i) {
            return this._attach(e, i);
          }
          open(e, i = "", a) {
            const u = Object.assign(Object.assign({}, this._defaultConfig), a);
            return (
              (u.data = { message: e, action: i }),
              u.announcementMessage === e && (u.announcementMessage = void 0),
              this.openFromComponent(this.simpleSnackBarComponent, u)
            );
          }
          dismiss() {
            this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
          }
          ngOnDestroy() {
            this._snackBarRefAtThisLevel &&
              this._snackBarRefAtThisLevel.dismiss();
          }
          _attachSnackBarContainer(e, i) {
            const u = o.zs3.create({
                parent:
                  (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                  this._injector,
                providers: [{ provide: Xm, useValue: i }],
              }),
              h = new Yh(
                this.snackBarContainerComponent,
                i.viewContainerRef,
                u
              ),
              _ = e.attach(h);
            return (_.instance.snackBarConfig = i), _.instance;
          }
          _attach(e, i) {
            const a = Object.assign(
                Object.assign(Object.assign({}, new Xm()), this._defaultConfig),
                i
              ),
              u = this._createOverlay(a),
              h = this._attachSnackBarContainer(u, a),
              _ = new eg(h, u);
            if (e instanceof o.Rgc) {
              const b = new xa(e, null, { $implicit: a.data, snackBarRef: _ });
              _.instance = h.attachTemplatePortal(b);
            } else {
              const b = this._createInjector(a, _),
                S = new Yh(e, void 0, b),
                T = h.attachComponentPortal(S);
              _.instance = T.instance;
            }
            return (
              this._breakpointObserver
                .observe("(max-width: 599.98px) and (orientation: portrait)")
                .pipe(jt(u.detachments()))
                .subscribe((b) => {
                  const S = u.overlayElement.classList;
                  b.matches
                    ? S.add(this.handsetCssClass)
                    : S.remove(this.handsetCssClass);
                }),
              a.announcementMessage &&
                h._onAnnounce.subscribe(() => {
                  this._live.announce(a.announcementMessage, a.politeness);
                }),
              this._animateSnackBar(_, a),
              (this._openedSnackBarRef = _),
              this._openedSnackBarRef
            );
          }
          _animateSnackBar(e, i) {
            e.afterDismissed().subscribe(() => {
              this._openedSnackBarRef == e && (this._openedSnackBarRef = null),
                i.announcementMessage && this._live.clear();
            }),
              this._openedSnackBarRef
                ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                    e.containerInstance.enter();
                  }),
                  this._openedSnackBarRef.dismiss())
                : e.containerInstance.enter(),
              i.duration &&
                i.duration > 0 &&
                e.afterOpened().subscribe(() => e._dismissAfter(i.duration));
          }
          _createOverlay(e) {
            const i = new Kh();
            i.direction = e.direction;
            let a = this._overlay.position().global();
            const u = "rtl" === e.direction,
              h =
                "left" === e.horizontalPosition ||
                ("start" === e.horizontalPosition && !u) ||
                ("end" === e.horizontalPosition && u),
              _ = !h && "center" !== e.horizontalPosition;
            return (
              h ? a.left("0") : _ ? a.right("0") : a.centerHorizontally(),
              "top" === e.verticalPosition ? a.top("0") : a.bottom("0"),
              (i.positionStrategy = a),
              this._overlay.create(i)
            );
          }
          _createInjector(e, i) {
            return o.zs3.create({
              parent:
                (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                this._injector,
              providers: [
                { provide: eg, useValue: i },
                { provide: z0, useValue: e.data },
              ],
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(Ot),
              o.LFG(Xp),
              o.LFG(o.zs3),
              o.LFG(U0),
              o.LFG(n, 12),
              o.LFG(yA)
            );
          }),
          (n.ɵprov = o.Yz7({
            factory: function () {
              return new n(
                o.LFG(Ot),
                o.LFG(Xp),
                o.LFG(o.gxx),
                o.LFG(U0),
                o.LFG(n, 12),
                o.LFG(yA)
              );
            },
            token: n,
            providedIn: _A,
          })),
          n
        );
      })();
      var ka = k(8939);
      let $0 = (() => {
          class n {
            constructor() {}
            get onInCurrentGridwith3() {
              return window.innerWidth <= 514 ? 1 : 3;
            }
            get onInCurrentGridwith5() {
              return window.innerWidth <= 514 ? 1 : 5;
            }
            get onInCurrentGridwith2() {
              return window.innerWidth <= 600 ? 1 : 2;
            }
            getonResizeCurrentGridwith3(e) {
              return e.target.innerWidth <= 514 ? 1 : 3;
            }
            getonResizeCurrentGridwith2(e) {
              return e.target.innerWidth <= 600 ? 1 : 2;
            }
            getonResizeCurrentGridwith5(e) {
              return e.target.innerWidth <= 600 ? 1 : 5;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })(),
        W0 = (() => {
          class n {
            constructor() {
              this.select_these_ones = [];
            }
            delete(e) {
              let i = this.select_these_ones.indexOf(e);
              this.select_these_ones.splice(i);
            }
            add(e) {
              this.select_these_ones.push(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })();
      function bP(n, t) {
        1 & n && o.Hsn(0);
      }
      const CP = ["*"];
      let vA = (() => {
          class n {
            constructor(e) {
              this._elementRef = e;
            }
            focus() {
              this._elementRef.nativeElement.focus();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.SBq));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "cdkStepHeader", ""]],
              hostAttrs: ["role", "tab"],
            })),
            n
          );
        })(),
        bA = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.Rgc));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "cdkStepLabel", ""]],
            })),
            n
          );
        })(),
        EP = 0;
      const Y0 = new o.OlP("STEPPER_GLOBAL_OPTIONS");
      let Qv = (() => {
          class n {
            constructor(e, i) {
              (this._stepper = e),
                (this.interacted = !1),
                (this.interactedStream = new o.vpe()),
                (this._editable = !0),
                (this._optional = !1),
                (this._completedOverride = null),
                (this._customError = null),
                (this._stepperOptions = i || {}),
                (this._displayDefaultIndicatorType =
                  !1 !== this._stepperOptions.displayDefaultIndicatorType);
            }
            get editable() {
              return this._editable;
            }
            set editable(e) {
              this._editable = it(e);
            }
            get optional() {
              return this._optional;
            }
            set optional(e) {
              this._optional = it(e);
            }
            get completed() {
              return null == this._completedOverride
                ? this._getDefaultCompleted()
                : this._completedOverride;
            }
            set completed(e) {
              this._completedOverride = it(e);
            }
            _getDefaultCompleted() {
              return this.stepControl
                ? this.stepControl.valid && this.interacted
                : this.interacted;
            }
            get hasError() {
              return null == this._customError
                ? this._getDefaultError()
                : this._customError;
            }
            set hasError(e) {
              this._customError = it(e);
            }
            _getDefaultError() {
              return (
                this.stepControl && this.stepControl.invalid && this.interacted
              );
            }
            select() {
              this._stepper.selected = this;
            }
            reset() {
              (this.interacted = !1),
                null != this._completedOverride &&
                  (this._completedOverride = !1),
                null != this._customError && (this._customError = !1),
                this.stepControl && this.stepControl.reset();
            }
            ngOnChanges() {
              this._stepper._stateChanged();
            }
            _markAsInteracted() {
              this.interacted ||
                ((this.interacted = !0), this.interactedStream.emit(this));
            }
            _showError() {
              var e;
              return null !== (e = this._stepperOptions.showError) &&
                void 0 !== e
                ? e
                : null != this._customError;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36((0, o.Gpc)(() => Fu)), o.Y36(Y0, 8));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["cdk-step"]],
              contentQueries: function (e, i, a) {
                if ((1 & e && o.Suo(a, bA, 5), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i.stepLabel = u.first);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(o.Rgc, 7), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i.content = a.first);
                }
              },
              inputs: {
                editable: "editable",
                optional: "optional",
                completed: "completed",
                hasError: "hasError",
                stepControl: "stepControl",
                label: "label",
                errorMessage: "errorMessage",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                state: "state",
              },
              outputs: { interactedStream: "interacted" },
              exportAs: ["cdkStep"],
              features: [o.TTD],
              ngContentSelectors: CP,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (o.F$t(), o.YNc(0, bP, 1, 0, "ng-template"));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Fu = (() => {
          class n {
            constructor(e, i, a, u) {
              (this._dir = e),
                (this._changeDetectorRef = i),
                (this._elementRef = a),
                (this._destroyed = new xe.xQ()),
                (this.steps = new o.n_E()),
                (this._linear = !1),
                (this._selectedIndex = 0),
                (this.selectionChange = new o.vpe()),
                (this._orientation = "horizontal"),
                (this._groupId = EP++);
            }
            get linear() {
              return this._linear;
            }
            set linear(e) {
              this._linear = it(e);
            }
            get selectedIndex() {
              return this._selectedIndex;
            }
            set selectedIndex(e) {
              var i;
              const a = Un(e);
              this.steps && this._steps
                ? (this._isValidIndex(e),
                  null === (i = this.selected) ||
                    void 0 === i ||
                    i._markAsInteracted(),
                  this._selectedIndex !== a &&
                    !this._anyControlsInvalidOrPending(a) &&
                    (a >= this._selectedIndex ||
                      this.steps.toArray()[a].editable) &&
                    this._updateSelectedItemIndex(e))
                : (this._selectedIndex = a);
            }
            get selected() {
              return this.steps
                ? this.steps.toArray()[this.selectedIndex]
                : void 0;
            }
            set selected(e) {
              this.selectedIndex =
                e && this.steps ? this.steps.toArray().indexOf(e) : -1;
            }
            get orientation() {
              return this._orientation;
            }
            set orientation(e) {
              (this._orientation = e),
                this._keyManager &&
                  this._keyManager.withVerticalOrientation("vertical" === e);
            }
            ngAfterContentInit() {
              this._steps.changes
                .pipe(Hn(this._steps), jt(this._destroyed))
                .subscribe((e) => {
                  this.steps.reset(e.filter((i) => i._stepper === this)),
                    this.steps.notifyOnChanges();
                });
            }
            ngAfterViewInit() {
              (this._keyManager = new ou(this._stepHeader)
                .withWrap()
                .withHomeAndEnd()
                .withVerticalOrientation("vertical" === this._orientation)),
                (this._dir ? this._dir.change : (0, Oe.of)())
                  .pipe(Hn(this._layoutDirection()), jt(this._destroyed))
                  .subscribe((e) =>
                    this._keyManager.withHorizontalOrientation(e)
                  ),
                this._keyManager.updateActiveItem(this._selectedIndex),
                this.steps.changes.subscribe(() => {
                  this.selected ||
                    (this._selectedIndex = Math.max(
                      this._selectedIndex - 1,
                      0
                    ));
                }),
                this._isValidIndex(this._selectedIndex) ||
                  (this._selectedIndex = 0);
            }
            ngOnDestroy() {
              this.steps.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            next() {
              this.selectedIndex = Math.min(
                this._selectedIndex + 1,
                this.steps.length - 1
              );
            }
            previous() {
              this.selectedIndex = Math.max(this._selectedIndex - 1, 0);
            }
            reset() {
              this._updateSelectedItemIndex(0),
                this.steps.forEach((e) => e.reset()),
                this._stateChanged();
            }
            _getStepLabelId(e) {
              return `cdk-step-label-${this._groupId}-${e}`;
            }
            _getStepContentId(e) {
              return `cdk-step-content-${this._groupId}-${e}`;
            }
            _stateChanged() {
              this._changeDetectorRef.markForCheck();
            }
            _getAnimationDirection(e) {
              const i = e - this._selectedIndex;
              return i < 0
                ? "rtl" === this._layoutDirection()
                  ? "next"
                  : "previous"
                : i > 0
                ? "rtl" === this._layoutDirection()
                  ? "previous"
                  : "next"
                : "current";
            }
            _getIndicatorType(e, i = "number") {
              const a = this.steps.toArray()[e],
                u = this._isCurrentStep(e);
              return a._displayDefaultIndicatorType
                ? this._getDefaultIndicatorLogic(a, u)
                : this._getGuidelineLogic(a, u, i);
            }
            _getDefaultIndicatorLogic(e, i) {
              return e._showError() && e.hasError && !i
                ? "error"
                : !e.completed || i
                ? "number"
                : e.editable
                ? "edit"
                : "done";
            }
            _getGuidelineLogic(e, i, a = "number") {
              return e._showError() && e.hasError && !i
                ? "error"
                : e.completed && !i
                ? "done"
                : e.completed && i
                ? a
                : e.editable && i
                ? "edit"
                : a;
            }
            _isCurrentStep(e) {
              return this._selectedIndex === e;
            }
            _getFocusIndex() {
              return this._keyManager
                ? this._keyManager.activeItemIndex
                : this._selectedIndex;
            }
            _updateSelectedItemIndex(e) {
              const i = this.steps.toArray();
              this.selectionChange.emit({
                selectedIndex: e,
                previouslySelectedIndex: this._selectedIndex,
                selectedStep: i[e],
                previouslySelectedStep: i[this._selectedIndex],
              }),
                this._containsFocus()
                  ? this._keyManager.setActiveItem(e)
                  : this._keyManager.updateActiveItem(e),
                (this._selectedIndex = e),
                this._stateChanged();
            }
            _onKeydown(e) {
              const i = _o(e),
                a = e.keyCode,
                u = this._keyManager;
              null == u.activeItemIndex || i || (32 !== a && 13 !== a)
                ? u.onKeydown(e)
                : ((this.selectedIndex = u.activeItemIndex),
                  e.preventDefault());
            }
            _anyControlsInvalidOrPending(e) {
              return (
                !!(this._linear && e >= 0) &&
                this.steps
                  .toArray()
                  .slice(0, e)
                  .some((i) => {
                    const a = i.stepControl;
                    return (
                      (a
                        ? a.invalid || a.pending || !i.interacted
                        : !i.completed) &&
                      !i.optional &&
                      !i._completedOverride
                    );
                  })
              );
            }
            _layoutDirection() {
              return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr";
            }
            _containsFocus() {
              const e = this._elementRef.nativeElement,
                i = yh();
              return e === i || e.contains(i);
            }
            _isValidIndex(e) {
              return e > -1 && (!this.steps || e < this.steps.length);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(_n, 8),
                o.Y36(o.sBO),
                o.Y36(o.SBq),
                o.Y36(G)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "cdkStepper", ""]],
              contentQueries: function (e, i, a) {
                if ((1 & e && (o.Suo(a, Qv, 5), o.Suo(a, vA, 5)), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i._steps = u),
                    o.iGM((u = o.CRH())) && (i._stepHeader = u);
                }
              },
              inputs: {
                linear: "linear",
                selectedIndex: "selectedIndex",
                selected: "selected",
                orientation: "orientation",
              },
              outputs: { selectionChange: "selectionChange" },
              exportAs: ["cdkStepper"],
            })),
            n
          );
        })(),
        wP = (() => {
          class n {
            constructor(e) {
              (this._stepper = e), (this.type = "submit");
            }
            _handleClick() {
              this._stepper.next();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Fu));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["button", "cdkStepperNext", ""]],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function () {
                    return i._handleClick();
                  }),
                  2 & e && o.Ikx("type", i.type);
              },
              inputs: { type: "type" },
            })),
            n
          );
        })(),
        SP = (() => {
          class n {
            constructor(e) {
              (this._stepper = e), (this.type = "button");
            }
            _handleClick() {
              this._stepper.previous();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Fu));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["button", "cdkStepperPrevious", ""]],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function () {
                    return i._handleClick();
                  }),
                  2 & e && o.Ikx("type", i.type);
              },
              inputs: { type: "type" },
            })),
            n
          );
        })(),
        DP = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Ca]] })),
            n
          );
        })();
      function CA(n, t) {
        if ((1 & n && o.GkF(0, 8), 2 & n)) {
          const e = o.oxw();
          o.Q6J("ngTemplateOutlet", e.iconOverrides[e.state])(
            "ngTemplateOutletContext",
            e._getIconContext()
          );
        }
      }
      function EA(n, t) {
        if ((1 & n && (o.TgZ(0, "span"), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw(2);
          o.xp6(1), o.Oqu(e._getDefaultTextForState(e.state));
        }
      }
      function wA(n, t) {
        if ((1 & n && (o.TgZ(0, "mat-icon"), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw(2);
          o.xp6(1), o.Oqu(e._getDefaultTextForState(e.state));
        }
      }
      function MP(n, t) {
        if (
          (1 & n &&
            (o.ynx(0, 9),
            o.YNc(1, EA, 2, 1, "span", 10),
            o.YNc(2, wA, 2, 1, "mat-icon", 11),
            o.BQk()),
          2 & n)
        ) {
          const e = o.oxw();
          o.Q6J("ngSwitch", e.state), o.xp6(1), o.Q6J("ngSwitchCase", "number");
        }
      }
      function TP(n, t) {
        if ((1 & n && (o.TgZ(0, "div", 12), o.GkF(1, 13), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.Q6J("ngTemplateOutlet", e._templateLabel().template);
        }
      }
      function IP(n, t) {
        if ((1 & n && (o.TgZ(0, "div", 12), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.Oqu(e.label);
        }
      }
      function AP(n, t) {
        if ((1 & n && (o.TgZ(0, "div", 14), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.Oqu(e._intl.optionalLabel);
        }
      }
      function SA(n, t) {
        if ((1 & n && (o.TgZ(0, "div", 15), o._uU(1), o.qZA()), 2 & n)) {
          const e = o.oxw();
          o.xp6(1), o.Oqu(e.errorMessage);
        }
      }
      function xP(n, t) {}
      function DA(n, t) {
        if (
          (1 & n && (o.Hsn(0), o.YNc(1, xP, 0, 0, "ng-template", 0)), 2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1), o.Q6J("cdkPortalOutlet", e._portal);
        }
      }
      const Jv = ["*"];
      function Lu(n, t) {
        1 & n && o._UZ(0, "div", 9);
      }
      const Xv = function (n, t) {
        return { step: n, i: t };
      };
      function MA(n, t) {
        if (
          (1 & n &&
            (o.ynx(0), o.GkF(1, 7), o.YNc(2, Lu, 1, 0, "div", 8), o.BQk()),
          2 & n)
        ) {
          const e = t.$implicit,
            i = t.index,
            a = t.last;
          o.oxw(2);
          const u = o.MAs(4);
          o.xp6(1),
            o.Q6J("ngTemplateOutlet", u)(
              "ngTemplateOutletContext",
              o.WLB(3, Xv, e, i)
            ),
            o.xp6(1),
            o.Q6J("ngIf", !a);
        }
      }
      function TA(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 10),
            o.NdJ("@horizontalStepTransition.done", function (a) {
              return o.CHM(e), o.oxw(2)._animationDone.next(a);
            }),
            o.GkF(1, 11),
            o.qZA();
        }
        if (2 & n) {
          const e = t.$implicit,
            i = t.index,
            a = o.oxw(2);
          o.Q6J("@horizontalStepTransition", a._getAnimationDirection(i))(
            "id",
            a._getStepContentId(i)
          ),
            o.uIk("aria-labelledby", a._getStepLabelId(i))(
              "aria-expanded",
              a.selectedIndex === i
            ),
            o.xp6(1),
            o.Q6J("ngTemplateOutlet", e.content);
        }
      }
      function eb(n, t) {
        if (
          (1 & n &&
            (o.ynx(0),
            o.TgZ(1, "div", 3),
            o.YNc(2, MA, 3, 6, "ng-container", 4),
            o.qZA(),
            o.TgZ(3, "div", 5),
            o.YNc(4, TA, 2, 5, "div", 6),
            o.qZA(),
            o.BQk()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(2),
            o.Q6J("ngForOf", e.steps),
            o.xp6(2),
            o.Q6J("ngForOf", e.steps);
        }
      }
      function Z0(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 13),
            o.GkF(1, 7),
            o.TgZ(2, "div", 14),
            o.TgZ(3, "div", 15),
            o.NdJ("@verticalStepTransition.done", function (a) {
              return o.CHM(e), o.oxw(2)._animationDone.next(a);
            }),
            o.TgZ(4, "div", 16),
            o.GkF(5, 11),
            o.qZA(),
            o.qZA(),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = t.$implicit,
            i = t.index,
            a = t.last,
            u = o.oxw(2),
            h = o.MAs(4);
          o.xp6(1),
            o.Q6J("ngTemplateOutlet", h)(
              "ngTemplateOutletContext",
              o.WLB(9, Xv, e, i)
            ),
            o.xp6(1),
            o.ekj("mat-stepper-vertical-line", !a),
            o.xp6(1),
            o.Q6J("@verticalStepTransition", u._getAnimationDirection(i))(
              "id",
              u._getStepContentId(i)
            ),
            o.uIk("aria-labelledby", u._getStepLabelId(i))(
              "aria-expanded",
              u.selectedIndex === i
            ),
            o.xp6(2),
            o.Q6J("ngTemplateOutlet", e.content);
        }
      }
      function q0(n, t) {
        if (
          (1 & n && (o.ynx(0), o.YNc(1, Z0, 6, 12, "div", 12), o.BQk()), 2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1), o.Q6J("ngForOf", e.steps);
        }
      }
      function K0(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "mat-step-header", 17),
            o.NdJ("click", function () {
              return o.CHM(e).step.select();
            })("keydown", function (a) {
              return o.CHM(e), o.oxw()._onKeydown(a);
            }),
            o.qZA();
        }
        if (2 & n) {
          const e = t.step,
            i = t.i,
            a = o.oxw();
          o.ekj(
            "mat-horizontal-stepper-header",
            "horizontal" === a.orientation
          )("mat-vertical-stepper-header", "vertical" === a.orientation),
            o.Q6J("tabIndex", a._getFocusIndex() === i ? 0 : -1)(
              "id",
              a._getStepLabelId(i)
            )("index", i)("state", a._getIndicatorType(i, e.state))(
              "label",
              e.stepLabel || e.label
            )("selected", a.selectedIndex === i)(
              "active",
              a._stepIsNavigable(i, e)
            )("optional", e.optional)("errorMessage", e.errorMessage)(
              "iconOverrides",
              a._iconOverrides
            )("disableRipple", a.disableRipple || !a._stepIsNavigable(i, e))(
              "color",
              e.color || a.color
            ),
            o.uIk("aria-posinset", i + 1)("aria-setsize", a.steps.length)(
              "aria-controls",
              a._getStepContentId(i)
            )("aria-selected", a.selectedIndex == i)(
              "aria-label",
              e.ariaLabel || null
            )(
              "aria-labelledby",
              !e.ariaLabel && e.ariaLabelledby ? e.ariaLabelledby : null
            )("aria-disabled", !a._stepIsNavigable(i, e) || null);
        }
      }
      let tb = (() => {
          class n extends bA {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "matStepLabel", ""]],
              features: [o.qOj],
            })),
            n
          );
        })(),
        lf = (() => {
          class n {
            constructor() {
              (this.changes = new xe.xQ()), (this.optionalLabel = "Optional");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              factory: function () {
                return new n();
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      const Q0 = {
          provide: lf,
          deps: [[new o.FiY(), new o.tp0(), lf]],
          useFactory: function (n) {
            return n || new lf();
          },
        },
        RP = bo(
          class extends vA {
            constructor(t) {
              super(t);
            }
          },
          "primary"
        );
      let IA = (() => {
        class n extends RP {
          constructor(e, i, a, u) {
            super(a),
              (this._intl = e),
              (this._focusMonitor = i),
              (this._intlSubscription = e.changes.subscribe(() =>
                u.markForCheck()
              ));
          }
          ngAfterViewInit() {
            this._focusMonitor.monitor(this._elementRef, !0);
          }
          ngOnDestroy() {
            this._intlSubscription.unsubscribe(),
              this._focusMonitor.stopMonitoring(this._elementRef);
          }
          focus(e, i) {
            e
              ? this._focusMonitor.focusVia(this._elementRef, e, i)
              : this._elementRef.nativeElement.focus(i);
          }
          _stringLabel() {
            return this.label instanceof tb ? null : this.label;
          }
          _templateLabel() {
            return this.label instanceof tb ? this.label : null;
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _getIconContext() {
            return {
              index: this.index,
              active: this.active,
              optional: this.optional,
            };
          }
          _getDefaultTextForState(e) {
            return "number" == e
              ? `${this.index + 1}`
              : "edit" == e
              ? "create"
              : "error" == e
              ? "warning"
              : e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(lf),
              o.Y36(vo),
              o.Y36(o.SBq),
              o.Y36(o.sBO)
            );
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["mat-step-header"]],
            hostAttrs: ["role", "tab", 1, "mat-step-header"],
            inputs: {
              color: "color",
              state: "state",
              label: "label",
              errorMessage: "errorMessage",
              iconOverrides: "iconOverrides",
              index: "index",
              selected: "selected",
              active: "active",
              optional: "optional",
              disableRipple: "disableRipple",
            },
            features: [o.qOj],
            decls: 10,
            vars: 19,
            consts: [
              [
                "matRipple",
                "",
                1,
                "mat-step-header-ripple",
                "mat-focus-indicator",
                3,
                "matRippleTrigger",
                "matRippleDisabled",
              ],
              [1, "mat-step-icon-content", 3, "ngSwitch"],
              [
                3,
                "ngTemplateOutlet",
                "ngTemplateOutletContext",
                4,
                "ngSwitchCase",
              ],
              [3, "ngSwitch", 4, "ngSwitchDefault"],
              [1, "mat-step-label"],
              ["class", "mat-step-text-label", 4, "ngIf"],
              ["class", "mat-step-optional", 4, "ngIf"],
              ["class", "mat-step-sub-label-error", 4, "ngIf"],
              [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
              [3, "ngSwitch"],
              [4, "ngSwitchCase"],
              [4, "ngSwitchDefault"],
              [1, "mat-step-text-label"],
              [3, "ngTemplateOutlet"],
              [1, "mat-step-optional"],
              [1, "mat-step-sub-label-error"],
            ],
            template: function (e, i) {
              1 & e &&
                (o._UZ(0, "div", 0),
                o.TgZ(1, "div"),
                o.TgZ(2, "div", 1),
                o.YNc(3, CA, 1, 2, "ng-container", 2),
                o.YNc(4, MP, 3, 2, "ng-container", 3),
                o.qZA(),
                o.qZA(),
                o.TgZ(5, "div", 4),
                o.YNc(6, TP, 2, 1, "div", 5),
                o.YNc(7, IP, 2, 1, "div", 5),
                o.YNc(8, AP, 2, 1, "div", 6),
                o.YNc(9, SA, 2, 1, "div", 7),
                o.qZA()),
                2 & e &&
                  (o.Q6J("matRippleTrigger", i._getHostElement())(
                    "matRippleDisabled",
                    i.disableRipple
                  ),
                  o.xp6(1),
                  o.Gre("mat-step-icon-state-", i.state, " mat-step-icon"),
                  o.ekj("mat-step-icon-selected", i.selected),
                  o.xp6(1),
                  o.Q6J(
                    "ngSwitch",
                    !(!i.iconOverrides || !i.iconOverrides[i.state])
                  ),
                  o.xp6(1),
                  o.Q6J("ngSwitchCase", !0),
                  o.xp6(2),
                  o.ekj("mat-step-label-active", i.active)(
                    "mat-step-label-selected",
                    i.selected
                  )("mat-step-label-error", "error" == i.state),
                  o.xp6(1),
                  o.Q6J("ngIf", i._templateLabel()),
                  o.xp6(1),
                  o.Q6J("ngIf", i._stringLabel()),
                  o.xp6(1),
                  o.Q6J("ngIf", i.optional && "error" != i.state),
                  o.xp6(1),
                  o.Q6J("ngIf", "error" == i.state));
            },
            directives: [wa, Xn, Kt, ld, Bi, li, As],
            styles: [
              ".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const AA = {
        horizontalStepTransition: Ii("horizontalStepTransition", [
          dn(
            "previous",
            Lt({ transform: "translate3d(-100%, 0, 0)", visibility: "hidden" })
          ),
          dn("current", Lt({ transform: "none", visibility: "inherit" })),
          dn(
            "next",
            Lt({ transform: "translate3d(100%, 0, 0)", visibility: "hidden" })
          ),
          bn("* => *", Ln("500ms cubic-bezier(0.35, 0, 0.25, 1)")),
        ]),
        verticalStepTransition: Ii("verticalStepTransition", [
          dn("previous", Lt({ height: "0px", visibility: "hidden" })),
          dn("next", Lt({ height: "0px", visibility: "hidden" })),
          dn("current", Lt({ height: "*", visibility: "inherit" })),
          bn("* <=> current", Ln("225ms cubic-bezier(0.4, 0.0, 0.2, 1)")),
        ]),
      };
      let xA = (() => {
          class n {
            constructor(e) {
              this.templateRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.Rgc));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["ng-template", "matStepperIcon", ""]],
              inputs: { name: ["matStepperIcon", "name"] },
            })),
            n
          );
        })(),
        kP = (() => {
          class n {
            constructor(e) {
              this._template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(o.Rgc));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["ng-template", "matStepContent", ""]],
            })),
            n
          );
        })(),
        cf = (() => {
          class n extends Qv {
            constructor(e, i, a, u) {
              super(e, u),
                (this._errorStateMatcher = i),
                (this._viewContainerRef = a),
                (this._isSelected = Bn.w.EMPTY);
            }
            ngAfterContentInit() {
              this._isSelected = this._stepper.steps.changes
                .pipe(
                  Xt(() =>
                    this._stepper.selectionChange.pipe(
                      (0, et.U)((e) => e.selectedStep === this),
                      Hn(this._stepper.selected === this)
                    )
                  )
                )
                .subscribe((e) => {
                  e &&
                    this._lazyContent &&
                    !this._portal &&
                    (this._portal = new xa(
                      this._lazyContent._template,
                      this._viewContainerRef
                    ));
                });
            }
            ngOnDestroy() {
              this._isSelected.unsubscribe();
            }
            isErrorState(e, i) {
              return (
                this._errorStateMatcher.isErrorState(e, i) ||
                !!(e && e.invalid && this.interacted)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36((0, o.Gpc)(() => ng)),
                o.Y36(Ms, 4),
                o.Y36(o.s_b),
                o.Y36(Y0, 8)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-step"]],
              contentQueries: function (e, i, a) {
                if ((1 & e && (o.Suo(a, tb, 5), o.Suo(a, kP, 5)), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i.stepLabel = u.first),
                    o.iGM((u = o.CRH())) && (i._lazyContent = u.first);
                }
              },
              inputs: { color: "color" },
              exportAs: ["matStep"],
              features: [
                o._Bn([
                  { provide: Ms, useExisting: n },
                  { provide: Qv, useExisting: n },
                ]),
                o.qOj,
              ],
              ngContentSelectors: Jv,
              decls: 1,
              vars: 0,
              consts: [[3, "cdkPortalOutlet"]],
              template: function (e, i) {
                1 & e && (o.F$t(), o.YNc(0, DA, 2, 1, "ng-template"));
              },
              directives: [Vl],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        J0 = (() => {
          class n extends Fu {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({ type: n, features: [o.qOj] })),
            n
          );
        })(),
        OP = (() => {
          class n extends J0 {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["mat-horizontal-stepper"]],
              features: [o.qOj],
            })),
            n
          );
        })(),
        PP = (() => {
          class n extends J0 {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["mat-vertical-stepper"]],
              features: [o.qOj],
            })),
            n
          );
        })(),
        ng = (() => {
          class n extends Fu {
            constructor(e, i, a, u) {
              super(e, i, a, u),
                (this.steps = new o.n_E()),
                (this.animationDone = new o.vpe()),
                (this.labelPosition = "end"),
                (this._iconOverrides = {}),
                (this._animationDone = new xe.xQ());
              const h = a.nativeElement.nodeName.toLowerCase();
              this.orientation =
                "mat-vertical-stepper" === h ? "vertical" : "horizontal";
            }
            ngAfterContentInit() {
              super.ngAfterContentInit(),
                this._icons.forEach(
                  ({ name: e, templateRef: i }) => (this._iconOverrides[e] = i)
                ),
                this.steps.changes.pipe(jt(this._destroyed)).subscribe(() => {
                  this._stateChanged();
                }),
                this._animationDone
                  .pipe(
                    Ss(
                      (e, i) =>
                        e.fromState === i.fromState && e.toState === i.toState
                    ),
                    jt(this._destroyed)
                  )
                  .subscribe((e) => {
                    "current" === e.toState && this.animationDone.emit();
                  });
            }
            _stepIsNavigable(e, i) {
              return i.completed || this.selectedIndex === e || !this.linear;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(_n, 8),
                o.Y36(o.sBO),
                o.Y36(o.SBq),
                o.Y36(G)
              );
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [
                ["mat-stepper"],
                ["mat-vertical-stepper"],
                ["mat-horizontal-stepper"],
                ["", "matStepper", ""],
              ],
              contentQueries: function (e, i, a) {
                if ((1 & e && (o.Suo(a, cf, 5), o.Suo(a, xA, 5)), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i._steps = u),
                    o.iGM((u = o.CRH())) && (i._icons = u);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(IA, 5), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i._stepHeader = a);
                }
              },
              hostAttrs: ["role", "tablist"],
              hostVars: 9,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk("aria-orientation", i.orientation),
                  o.ekj(
                    "mat-stepper-horizontal",
                    "horizontal" === i.orientation
                  )("mat-stepper-vertical", "vertical" === i.orientation)(
                    "mat-stepper-label-position-end",
                    "horizontal" === i.orientation && "end" == i.labelPosition
                  )(
                    "mat-stepper-label-position-bottom",
                    "horizontal" === i.orientation &&
                      "bottom" == i.labelPosition
                  ));
              },
              inputs: {
                selectedIndex: "selectedIndex",
                labelPosition: "labelPosition",
                disableRipple: "disableRipple",
                color: "color",
              },
              outputs: { animationDone: "animationDone" },
              exportAs: [
                "matStepper",
                "matVerticalStepper",
                "matHorizontalStepper",
              ],
              features: [
                o._Bn([
                  { provide: Fu, useExisting: n },
                  { provide: OP, useExisting: n },
                  { provide: PP, useExisting: n },
                ]),
                o.qOj,
              ],
              decls: 5,
              vars: 3,
              consts: [
                [3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["stepTemplate", ""],
                [1, "mat-horizontal-stepper-header-container"],
                [4, "ngFor", "ngForOf"],
                [1, "mat-horizontal-content-container"],
                [
                  "class",
                  "mat-horizontal-stepper-content",
                  "role",
                  "tabpanel",
                  3,
                  "id",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["class", "mat-stepper-horizontal-line", 4, "ngIf"],
                [1, "mat-stepper-horizontal-line"],
                [
                  "role",
                  "tabpanel",
                  1,
                  "mat-horizontal-stepper-content",
                  3,
                  "id",
                ],
                [3, "ngTemplateOutlet"],
                ["class", "mat-step", 4, "ngFor", "ngForOf"],
                [1, "mat-step"],
                [1, "mat-vertical-content-container"],
                [
                  "role",
                  "tabpanel",
                  1,
                  "mat-vertical-stepper-content",
                  3,
                  "id",
                ],
                [1, "mat-vertical-content"],
                [
                  3,
                  "tabIndex",
                  "id",
                  "index",
                  "state",
                  "label",
                  "selected",
                  "active",
                  "optional",
                  "errorMessage",
                  "iconOverrides",
                  "disableRipple",
                  "color",
                  "click",
                  "keydown",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.ynx(0, 0),
                  o.YNc(1, eb, 5, 2, "ng-container", 1),
                  o.YNc(2, q0, 2, 1, "ng-container", 1),
                  o.BQk(),
                  o.YNc(3, K0, 1, 23, "ng-template", null, 2, o.W1O)),
                  2 & e &&
                    (o.Q6J("ngSwitch", i.orientation),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", "horizontal"),
                    o.xp6(1),
                    o.Q6J("ngSwitchCase", "vertical"));
              },
              directives: [Xn, Kt, kt, li, Bi, IA],
              styles: [
                '.mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:"";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:"";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\n',
              ],
              encapsulation: 2,
              data: {
                animation: [
                  AA.horizontalStepTransition,
                  AA.verticalStepTransition,
                ],
              },
              changeDetection: 0,
            })),
            n
          );
        })(),
        RA = (() => {
          class n extends wP {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["button", "matStepperNext", ""]],
              hostAttrs: [1, "mat-stepper-next"],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && o.Ikx("type", i.type);
              },
              inputs: { type: "type" },
              features: [o.qOj],
            })),
            n
          );
        })(),
        NP = (() => {
          class n extends SP {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["button", "matStepperPrevious", ""]],
              hostAttrs: [1, "mat-stepper-previous"],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && o.Ikx("type", i.type);
              },
              inputs: { type: "type" },
              features: [o.qOj],
            })),
            n
          );
        })(),
        FP = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({
              providers: [Q0, Ms],
              imports: [[Et, Xi, Bl, lm, DP, Cy, Sa], Et],
            })),
            n
          );
        })();
      function kA(n, t) {}
      class X0 {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const eS = {
        dialogContainer: Ii("dialogContainer", [
          dn("void, exit", Lt({ opacity: 0, transform: "scale(0.7)" })),
          dn("enter", Lt({ transform: "none" })),
          bn(
            "* => enter",
            Ln(
              "150ms cubic-bezier(0, 0, 0.2, 1)",
              Lt({ transform: "none", opacity: 1 })
            )
          ),
          bn(
            "* => void, * => exit",
            Ln("75ms cubic-bezier(0.4, 0.0, 0.2, 1)", Lt({ opacity: 0 }))
          ),
        ]),
      };
      let VP = (() => {
          class n extends Nm {
            constructor(e, i, a, u, h, _) {
              super(),
                (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._changeDetectorRef = a),
                (this._config = h),
                (this._focusMonitor = _),
                (this._animationStateChanged = new o.vpe()),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._closeInteractionType = null),
                (this.attachDomPortal = (b) => (
                  this._portalOutlet.hasAttached(),
                  this._portalOutlet.attachDomPortal(b)
                )),
                (this._ariaLabelledBy = h.ariaLabelledBy || null),
                (this._document = u);
            }
            _initializeWithAttachedContent() {
              this._setupFocusTrap(),
                this._capturePreviouslyFocusedElement(),
                this._focusDialogContainer();
            }
            attachComponentPortal(e) {
              return (
                this._portalOutlet.hasAttached(),
                this._portalOutlet.attachComponentPortal(e)
              );
            }
            attachTemplatePortal(e) {
              return (
                this._portalOutlet.hasAttached(),
                this._portalOutlet.attachTemplatePortal(e)
              );
            }
            _recaptureFocus() {
              this._containsFocus() ||
                ((!this._config.autoFocus ||
                  !this._focusTrap.focusInitialElement()) &&
                  this._elementRef.nativeElement.focus());
            }
            _trapFocus() {
              this._config.autoFocus
                ? this._focusTrap.focusInitialElementWhenReady()
                : this._containsFocus() ||
                  this._elementRef.nativeElement.focus();
            }
            _restoreFocus() {
              const e = this._elementFocusedBeforeDialogWasOpened;
              if (
                this._config.restoreFocus &&
                e &&
                "function" == typeof e.focus
              ) {
                const i = yh(),
                  a = this._elementRef.nativeElement;
                (!i || i === this._document.body || i === a || a.contains(i)) &&
                  (this._focusMonitor
                    ? (this._focusMonitor.focusVia(
                        e,
                        this._closeInteractionType
                      ),
                      (this._closeInteractionType = null))
                    : e.focus());
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap = this._focusTrapFactory.create(
                this._elementRef.nativeElement
              );
            }
            _capturePreviouslyFocusedElement() {
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = yh());
            }
            _focusDialogContainer() {
              this._elementRef.nativeElement.focus &&
                this._elementRef.nativeElement.focus();
            }
            _containsFocus() {
              const e = this._elementRef.nativeElement,
                i = yh();
              return e === i || e.contains(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(o.SBq),
                o.Y36(Ds),
                o.Y36(o.sBO),
                o.Y36(G, 8),
                o.Y36(X0),
                o.Y36(vo)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && o.Gf(Vl, 7), 2 & e)) {
                  let a;
                  o.iGM((a = o.CRH())) && (i._portalOutlet = a.first);
                }
              },
              features: [o.qOj],
            })),
            n
          );
        })(),
        BP = (() => {
          class n extends VP {
            constructor() {
              super(...arguments), (this._state = "enter");
            }
            _onAnimationDone({ toState: e, totalTime: i }) {
              "enter" === e
                ? (this._trapFocus(),
                  this._animationStateChanged.next({
                    state: "opened",
                    totalTime: i,
                  }))
                : "exit" === e &&
                  (this._restoreFocus(),
                  this._animationStateChanged.next({
                    state: "closed",
                    totalTime: i,
                  }));
            }
            _onAnimationStart({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._animationStateChanged.next({
                    state: "opening",
                    totalTime: i,
                  })
                : ("exit" === e || "void" === e) &&
                  this._animationStateChanged.next({
                    state: "closing",
                    totalTime: i,
                  });
            }
            _startExitAnimation() {
              (this._state = "exit"), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = o.n5z(n)))(i || n);
              };
            })()),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-dialog-container"]],
              hostAttrs: [
                "tabindex",
                "-1",
                "aria-modal",
                "true",
                1,
                "mat-dialog-container",
              ],
              hostVars: 6,
              hostBindings: function (e, i) {
                1 & e &&
                  o.WFA("@dialogContainer.start", function (u) {
                    return i._onAnimationStart(u);
                  })("@dialogContainer.done", function (u) {
                    return i._onAnimationDone(u);
                  }),
                  2 & e &&
                    (o.Ikx("id", i._id),
                    o.uIk("role", i._config.role)(
                      "aria-labelledby",
                      i._config.ariaLabel ? null : i._ariaLabelledBy
                    )("aria-label", i._config.ariaLabel)(
                      "aria-describedby",
                      i._config.ariaDescribedBy || null
                    ),
                    o.d8E("@dialogContainer", i._state));
              },
              features: [o.qOj],
              decls: 1,
              vars: 0,
              consts: [["cdkPortalOutlet", ""]],
              template: function (e, i) {
                1 & e && o.YNc(0, kA, 0, 0, "ng-template", 0);
              },
              directives: [Vl],
              styles: [
                ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n",
              ],
              encapsulation: 2,
              data: { animation: [eS.dialogContainer] },
            })),
            n
          );
        })(),
        OA = 0;
      class Wl {
        constructor(t, e, i = "mat-dialog-" + OA++) {
          (this._overlayRef = t),
            (this._containerInstance = e),
            (this.id = i),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new xe.xQ()),
            (this._afterClosed = new xe.xQ()),
            (this._beforeClosed = new xe.xQ()),
            (this._state = 0),
            (e._id = i),
            e._animationStateChanged
              .pipe(
                En((a) => "opened" === a.state),
                An(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            e._animationStateChanged
              .pipe(
                En((a) => "closed" === a.state),
                An(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            t.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            t
              .keydownEvents()
              .pipe(En((a) => 27 === a.keyCode && !this.disableClose && !_o(a)))
              .subscribe((a) => {
                a.preventDefault(), nb(this, "keyboard");
              }),
            t.backdropClick().subscribe(() => {
              this.disableClose
                ? this._containerInstance._recaptureFocus()
                : nb(this, "mouse");
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                En((e) => "closing" === e.state),
                An(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._afterClosed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(t) {
          let e = this._getPositionStrategy();
          return (
            t && (t.left || t.right)
              ? t.left
                ? e.left(t.left)
                : e.right(t.right)
              : e.centerHorizontally(),
            t && (t.top || t.bottom)
              ? t.top
                ? e.top(t.top)
                : e.bottom(t.bottom)
              : e.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(t = "", e = "") {
          return (
            this._overlayRef.updateSize({ width: t, height: e }),
            this._overlayRef.updatePosition(),
            this
          );
        }
        addPanelClass(t) {
          return this._overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._overlayRef.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      function nb(n, t, e) {
        return (
          void 0 !== n._containerInstance &&
            (n._containerInstance._closeInteractionType = t),
          n.close(e)
        );
      }
      const tS = new o.OlP("MatDialogData"),
        PA = new o.OlP("mat-dialog-default-options"),
        ig = new o.OlP("mat-dialog-scroll-strategy"),
        NA = {
          provide: ig,
          deps: [Ot],
          useFactory: function (n) {
            return () => n.scrollStrategies.block();
          },
        };
      let ib = (() => {
          class n {
            constructor(e, i, a, u, h, _, b, S, T) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = a),
                (this._parentDialog = u),
                (this._overlayContainer = h),
                (this._dialogRefConstructor = b),
                (this._dialogContainerType = S),
                (this._dialogDataToken = T),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new xe.xQ()),
                (this._afterOpenedAtThisLevel = new xe.xQ()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = Ru(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(Hn(void 0))
                )),
                (this._scrollStrategy = _);
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            open(e, i) {
              (i = (function (n, t) {
                return Object.assign(Object.assign({}, t), n);
              })(i, this._defaultOptions || new X0())).id &&
                this.getDialogById(i.id);
              const a = this._createOverlay(i),
                u = this._attachDialogContainer(a, i),
                h = this._attachDialogContent(e, u, a, i);
              return (
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(h),
                h.afterClosed().subscribe(() => this._removeOpenDialog(h)),
                this.afterOpened.next(h),
                u._initializeWithAttachedContent(),
                h
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _createOverlay(e) {
              const i = this._getOverlayConfig(e);
              return this._overlay.create(i);
            }
            _getOverlayConfig(e) {
              const i = new Kh({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachDialogContainer(e, i) {
              const u = o.zs3.create({
                  parent:
                    (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: X0, useValue: i }],
                }),
                h = new Yh(
                  this._dialogContainerType,
                  i.viewContainerRef,
                  u,
                  i.componentFactoryResolver
                );
              return e.attach(h).instance;
            }
            _attachDialogContent(e, i, a, u) {
              const h = new this._dialogRefConstructor(a, i, u.id);
              if (e instanceof o.Rgc)
                i.attachTemplatePortal(
                  new xa(e, null, { $implicit: u.data, dialogRef: h })
                );
              else {
                const _ = this._createInjector(u, h, i),
                  b = i.attachComponentPortal(new Yh(e, u.viewContainerRef, _));
                h.componentInstance = b.instance;
              }
              return (
                h.updateSize(u.width, u.height).updatePosition(u.position), h
              );
            }
            _createInjector(e, i, a) {
              const u = e && e.viewContainerRef && e.viewContainerRef.injector,
                h = [
                  { provide: this._dialogContainerType, useValue: a },
                  { provide: this._dialogDataToken, useValue: e.data },
                  { provide: this._dialogRefConstructor, useValue: i },
                ];
              return (
                e.direction &&
                  (!u || !u.get(_n, null, o.XFs.Optional)) &&
                  h.push({
                    provide: _n,
                    useValue: { value: e.direction, change: (0, Oe.of)() },
                  }),
                o.zs3.create({ parent: u || this._injector, providers: h })
              );
            }
            _removeOpenDialog(e) {
              const i = this.openDialogs.indexOf(e);
              i > -1 &&
                (this.openDialogs.splice(i, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((a, u) => {
                    a
                      ? u.setAttribute("aria-hidden", a)
                      : u.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let a = i.length - 1; a > -1; a--) {
                  let u = i[a];
                  u !== e &&
                    "SCRIPT" !== u.nodeName &&
                    "STYLE" !== u.nodeName &&
                    !u.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      u,
                      u.getAttribute("aria-hidden")
                    ),
                    u.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Ot),
                o.Y36(o.zs3),
                o.Y36(void 0),
                o.Y36(void 0),
                o.Y36(Do),
                o.Y36(void 0),
                o.Y36(o.DyG),
                o.Y36(o.DyG),
                o.Y36(o.OlP)
              );
            }),
            (n.ɵdir = o.lG2({ type: n })),
            n
          );
        })(),
        rg = (() => {
          class n extends ib {
            constructor(e, i, a, u, h, _, b) {
              super(e, i, u, _, b, h, Wl, BP, tS);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.LFG(Ot),
                o.LFG(o.zs3),
                o.LFG(Ye, 8),
                o.LFG(PA, 8),
                o.LFG(ig),
                o.LFG(n, 12),
                o.LFG(Do)
              );
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        nS = (() => {
          class n {
            constructor(e, i, a) {
              (this.dialogRef = e),
                (this._elementRef = i),
                (this._dialog = a),
                (this.type = "button");
            }
            ngOnInit() {
              this.dialogRef ||
                (this.dialogRef = (function (n, t) {
                  let e = n.nativeElement.parentElement;
                  for (; e && !e.classList.contains("mat-dialog-container"); )
                    e = e.parentElement;
                  return e ? t.find((i) => i.id === e.id) : null;
                })(this._elementRef, this._dialog.openDialogs));
            }
            ngOnChanges(e) {
              const i = e._matDialogClose || e._matDialogCloseResult;
              i && (this.dialogResult = i.currentValue);
            }
            _onButtonClick(e) {
              nb(
                this.dialogRef,
                0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse",
                this.dialogResult
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Wl, 8), o.Y36(o.SBq), o.Y36(rg));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-dialog-close", ""],
                ["", "matDialogClose", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function (u) {
                    return i._onButtonClick(u);
                  }),
                  2 & e &&
                    o.uIk("aria-label", i.ariaLabel || null)("type", i.type);
              },
              inputs: {
                type: "type",
                dialogResult: ["mat-dialog-close", "dialogResult"],
                ariaLabel: ["aria-label", "ariaLabel"],
                _matDialogClose: ["matDialogClose", "_matDialogClose"],
              },
              exportAs: ["matDialogClose"],
              features: [o.TTD],
            })),
            n
          );
        })(),
        VA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-dialog-content", ""],
                ["mat-dialog-content"],
                ["", "matDialogContent", ""],
              ],
              hostAttrs: [1, "mat-dialog-content"],
            })),
            n
          );
        })(),
        iS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["", "mat-dialog-actions", ""],
                ["mat-dialog-actions"],
                ["", "matDialogActions", ""],
              ],
              hostAttrs: [1, "mat-dialog-actions"],
            })),
            n
          );
        })();
      let BA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({
              providers: [rg, NA],
              imports: [[Ra, Bl, Et], Et],
            })),
            n
          );
        })(),
        rS = (() => {
          class n {
            constructor() {
              this.course = [
                {
                  title: "DS100 Website Development",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Fdollow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follodw the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: ["HTML", "CSS", "Javascript", "PHP", "SQL"],
                },
                {
                  title: "DS101 Vue Framework",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS102 Laravel Framework (Backend)",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS103 Angular Framework (Frontend)",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS104 Firebase",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS105 Wordpress",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS106 Cpanel",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS107 Hosting Websites",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS108 Hosting websites for free",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "DS109 GitHub and Git",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
                {
                  title: "how to teach marathon",
                  topic: "greatest teachers in the world",
                  price: "Hourly: $10.00-$30",
                  time: "Est.Time Less than a month, Less than 30hrs/week",
                  discover: [
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                    "Follow the design process: empathize with users,define pain points, ideate solutions, create wireframes and prototypes, test and iterate on designs",
                  ],
                  courses_content: [
                    "Lecture 1. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 2. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                    "Lecture 3. Apply your skills with hands-on projects and build a portfolio that showcases your job readiness to potential employers. You'll need to successfully finish the project(s) to earn your Certificate.",
                  ],
                  instructor: ["Danver Kanyemba"],
                  instructor_image: [
                    "https://material.angular.io/assets/img/examples/shiba1.jpg",
                  ],
                  skill: [
                    "apple",
                    "banana",
                    "strawberry",
                    "orange",
                    "kiwi",
                    "cherry",
                  ],
                },
              ];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })(),
        ob = (() => {
          class n {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(e) {
              this._vertical = it(e);
            }
            get inset() {
              return this._inset;
            }
            set inset(e) {
              this._inset = it(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["mat-divider"]],
              hostAttrs: ["role", "separator", 1, "mat-divider"],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (o.uIk(
                    "aria-orientation",
                    i.vertical ? "vertical" : "horizontal"
                  ),
                  o.ekj("mat-divider-vertical", i.vertical)(
                    "mat-divider-horizontal",
                    !i.vertical
                  )("mat-divider-inset", i.inset));
              },
              inputs: { vertical: "vertical", inset: "inset" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                ".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        sS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et], Et] })),
            n
          );
        })();
      const oS = ["*"],
        lS = new o.OlP("MatChipRemove"),
        wr = new o.OlP("MatChipAvatar"),
        cS = new o.OlP("MatChipTrailingIcon");
      class HP {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const UA = sm(bo(rm(HP), "primary"), -1);
      let Vu = (() => {
        class n extends UA {
          constructor(e, i, a, u, h, _, b, S) {
            super(e),
              (this._ngZone = i),
              (this._changeDetectorRef = h),
              (this._hasFocus = !1),
              (this.chipListSelectable = !0),
              (this._chipListMultiple = !1),
              (this._chipListDisabled = !1),
              (this._selected = !1),
              (this._selectable = !0),
              (this._disabled = !1),
              (this._removable = !0),
              (this._onFocus = new xe.xQ()),
              (this._onBlur = new xe.xQ()),
              (this.selectionChange = new o.vpe()),
              (this.destroyed = new o.vpe()),
              (this.removed = new o.vpe()),
              this._addHostClassName(),
              (this._chipRippleTarget = _.createElement("div")),
              this._chipRippleTarget.classList.add("mat-chip-ripple"),
              this._elementRef.nativeElement.appendChild(
                this._chipRippleTarget
              ),
              (this._chipRipple = new iy(this, i, this._chipRippleTarget, a)),
              this._chipRipple.setupTriggerEvents(e),
              (this.rippleConfig = u || {}),
              (this._animationsDisabled = "NoopAnimations" === b),
              (this.tabIndex = (null != S && parseInt(S)) || -1);
          }
          get rippleDisabled() {
            return (
              this.disabled ||
              this.disableRipple ||
              this._animationsDisabled ||
              !!this.rippleConfig.disabled
            );
          }
          get selected() {
            return this._selected;
          }
          set selected(e) {
            const i = it(e);
            i !== this._selected &&
              ((this._selected = i), this._dispatchSelectionChange());
          }
          get value() {
            return void 0 !== this._value
              ? this._value
              : this._elementRef.nativeElement.textContent;
          }
          set value(e) {
            this._value = e;
          }
          get selectable() {
            return this._selectable && this.chipListSelectable;
          }
          set selectable(e) {
            this._selectable = it(e);
          }
          get disabled() {
            return this._chipListDisabled || this._disabled;
          }
          set disabled(e) {
            this._disabled = it(e);
          }
          get removable() {
            return this._removable;
          }
          set removable(e) {
            this._removable = it(e);
          }
          get ariaSelected() {
            return this.selectable && (this._chipListMultiple || this.selected)
              ? this.selected.toString()
              : null;
          }
          _addHostClassName() {
            const e = "mat-basic-chip",
              i = this._elementRef.nativeElement;
            i.hasAttribute(e) || i.tagName.toLowerCase() === e
              ? i.classList.add(e)
              : i.classList.add("mat-standard-chip");
          }
          ngOnDestroy() {
            this.destroyed.emit({ chip: this }),
              this._chipRipple._removeTriggerEvents();
          }
          select() {
            this._selected ||
              ((this._selected = !0),
              this._dispatchSelectionChange(),
              this._changeDetectorRef.markForCheck());
          }
          deselect() {
            this._selected &&
              ((this._selected = !1),
              this._dispatchSelectionChange(),
              this._changeDetectorRef.markForCheck());
          }
          selectViaInteraction() {
            this._selected ||
              ((this._selected = !0),
              this._dispatchSelectionChange(!0),
              this._changeDetectorRef.markForCheck());
          }
          toggleSelected(e = !1) {
            return (
              (this._selected = !this.selected),
              this._dispatchSelectionChange(e),
              this._changeDetectorRef.markForCheck(),
              this.selected
            );
          }
          focus() {
            this._hasFocus ||
              (this._elementRef.nativeElement.focus(),
              this._onFocus.next({ chip: this })),
              (this._hasFocus = !0);
          }
          remove() {
            this.removable && this.removed.emit({ chip: this });
          }
          _handleClick(e) {
            this.disabled ? e.preventDefault() : e.stopPropagation();
          }
          _handleKeydown(e) {
            if (!this.disabled)
              switch (e.keyCode) {
                case 46:
                case 8:
                  this.remove(), e.preventDefault();
                  break;
                case 32:
                  this.selectable && this.toggleSelected(!0),
                    e.preventDefault();
              }
          }
          _blur() {
            this._ngZone.onStable.pipe(An(1)).subscribe(() => {
              this._ngZone.run(() => {
                (this._hasFocus = !1), this._onBlur.next({ chip: this });
              });
            });
          }
          _dispatchSelectionChange(e = !1) {
            this.selectionChange.emit({
              source: this,
              isUserInput: e,
              selected: this._selected,
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(o.SBq),
              o.Y36(o.R0b),
              o.Y36(Nt),
              o.Y36(mE, 8),
              o.Y36(o.sBO),
              o.Y36(G),
              o.Y36(Se, 8),
              o.$8M("tabindex")
            );
          }),
          (n.ɵdir = o.lG2({
            type: n,
            selectors: [
              ["mat-basic-chip"],
              ["", "mat-basic-chip", ""],
              ["mat-chip"],
              ["", "mat-chip", ""],
            ],
            contentQueries: function (e, i, a) {
              if (
                (1 & e && (o.Suo(a, wr, 5), o.Suo(a, cS, 5), o.Suo(a, lS, 5)),
                2 & e)
              ) {
                let u;
                o.iGM((u = o.CRH())) && (i.avatar = u.first),
                  o.iGM((u = o.CRH())) && (i.trailingIcon = u.first),
                  o.iGM((u = o.CRH())) && (i.removeIcon = u.first);
              }
            },
            hostAttrs: ["role", "option", 1, "mat-chip", "mat-focus-indicator"],
            hostVars: 14,
            hostBindings: function (e, i) {
              1 & e &&
                o.NdJ("click", function (u) {
                  return i._handleClick(u);
                })("keydown", function (u) {
                  return i._handleKeydown(u);
                })("focus", function () {
                  return i.focus();
                })("blur", function () {
                  return i._blur();
                }),
                2 & e &&
                  (o.uIk("tabindex", i.disabled ? null : i.tabIndex)(
                    "disabled",
                    i.disabled || null
                  )("aria-disabled", i.disabled.toString())(
                    "aria-selected",
                    i.ariaSelected
                  ),
                  o.ekj("mat-chip-selected", i.selected)(
                    "mat-chip-with-avatar",
                    i.avatar
                  )(
                    "mat-chip-with-trailing-icon",
                    i.trailingIcon || i.removeIcon
                  )("mat-chip-disabled", i.disabled)(
                    "_mat-animation-noopable",
                    i._animationsDisabled
                  ));
            },
            inputs: {
              color: "color",
              disableRipple: "disableRipple",
              tabIndex: "tabIndex",
              selected: "selected",
              value: "value",
              selectable: "selectable",
              disabled: "disabled",
              removable: "removable",
            },
            outputs: {
              selectionChange: "selectionChange",
              destroyed: "destroyed",
              removed: "removed",
            },
            exportAs: ["matChip"],
            features: [o.qOj],
          })),
          n
        );
      })();
      const GA = new o.OlP("mat-chips-default-options"),
        zA = X_(
          class {
            constructor(n, t, e, i) {
              (this._defaultErrorStateMatcher = n),
                (this._parentForm = t),
                (this._parentFormGroup = e),
                (this.ngControl = i);
            }
          }
        );
      let uS = 0;
      class $A {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      let sg = (() => {
        class n extends zA {
          constructor(e, i, a, u, h, _, b) {
            super(_, u, h, b),
              (this._elementRef = e),
              (this._changeDetectorRef = i),
              (this._dir = a),
              (this.controlType = "mat-chip-list"),
              (this._lastDestroyedChipIndex = null),
              (this._destroyed = new xe.xQ()),
              (this._uid = "mat-chip-list-" + uS++),
              (this._tabIndex = 0),
              (this._userTabIndex = null),
              (this._onTouched = () => {}),
              (this._onChange = () => {}),
              (this._multiple = !1),
              (this._compareWith = (S, T) => S === T),
              (this._required = !1),
              (this._disabled = !1),
              (this.ariaOrientation = "horizontal"),
              (this._selectable = !0),
              (this.change = new o.vpe()),
              (this.valueChange = new o.vpe()),
              this.ngControl && (this.ngControl.valueAccessor = this);
          }
          get selected() {
            var e, i;
            return this.multiple
              ? (null === (e = this._selectionModel) || void 0 === e
                  ? void 0
                  : e.selected) || []
              : null === (i = this._selectionModel) || void 0 === i
              ? void 0
              : i.selected[0];
          }
          get role() {
            return this.empty ? null : "listbox";
          }
          get multiple() {
            return this._multiple;
          }
          set multiple(e) {
            (this._multiple = it(e)), this._syncChipsState();
          }
          get compareWith() {
            return this._compareWith;
          }
          set compareWith(e) {
            (this._compareWith = e),
              this._selectionModel && this._initializeSelection();
          }
          get value() {
            return this._value;
          }
          set value(e) {
            this.writeValue(e), (this._value = e);
          }
          get id() {
            return this._chipInput ? this._chipInput.id : this._uid;
          }
          get required() {
            return this._required;
          }
          set required(e) {
            (this._required = it(e)), this.stateChanges.next();
          }
          get placeholder() {
            return this._chipInput
              ? this._chipInput.placeholder
              : this._placeholder;
          }
          set placeholder(e) {
            (this._placeholder = e), this.stateChanges.next();
          }
          get focused() {
            return (
              (this._chipInput && this._chipInput.focused) ||
              this._hasFocusedChip()
            );
          }
          get empty() {
            return (
              (!this._chipInput || this._chipInput.empty) &&
              (!this.chips || 0 === this.chips.length)
            );
          }
          get shouldLabelFloat() {
            return !this.empty || this.focused;
          }
          get disabled() {
            return this.ngControl ? !!this.ngControl.disabled : this._disabled;
          }
          set disabled(e) {
            (this._disabled = it(e)), this._syncChipsState();
          }
          get selectable() {
            return this._selectable;
          }
          set selectable(e) {
            (this._selectable = it(e)),
              this.chips &&
                this.chips.forEach(
                  (i) => (i.chipListSelectable = this._selectable)
                );
          }
          set tabIndex(e) {
            (this._userTabIndex = e), (this._tabIndex = e);
          }
          get chipSelectionChanges() {
            return (0, yi.T)(...this.chips.map((e) => e.selectionChange));
          }
          get chipFocusChanges() {
            return (0, yi.T)(...this.chips.map((e) => e._onFocus));
          }
          get chipBlurChanges() {
            return (0, yi.T)(...this.chips.map((e) => e._onBlur));
          }
          get chipRemoveChanges() {
            return (0, yi.T)(...this.chips.map((e) => e.destroyed));
          }
          ngAfterContentInit() {
            (this._keyManager = new ou(this.chips)
              .withWrap()
              .withVerticalOrientation()
              .withHomeAndEnd()
              .withHorizontalOrientation(this._dir ? this._dir.value : "ltr")),
              this._dir &&
                this._dir.change
                  .pipe(jt(this._destroyed))
                  .subscribe((e) =>
                    this._keyManager.withHorizontalOrientation(e)
                  ),
              this._keyManager.tabOut
                .pipe(jt(this._destroyed))
                .subscribe(() => {
                  this._allowFocusEscape();
                }),
              this.chips.changes
                .pipe(Hn(null), jt(this._destroyed))
                .subscribe(() => {
                  this.disabled &&
                    Promise.resolve().then(() => {
                      this._syncChipsState();
                    }),
                    this._resetChips(),
                    this._initializeSelection(),
                    this._updateTabIndex(),
                    this._updateFocusForDestroyedChips(),
                    this.stateChanges.next();
                });
          }
          ngOnInit() {
            (this._selectionModel = new Ky(this.multiple, void 0, !1)),
              this.stateChanges.next();
          }
          ngDoCheck() {
            this.ngControl &&
              (this.updateErrorState(),
              this.ngControl.disabled !== this._disabled &&
                (this.disabled = !!this.ngControl.disabled));
          }
          ngOnDestroy() {
            this._destroyed.next(),
              this._destroyed.complete(),
              this.stateChanges.complete(),
              this._dropSubscriptions();
          }
          registerInput(e) {
            (this._chipInput = e),
              this._elementRef.nativeElement.setAttribute(
                "data-mat-chip-input",
                e.id
              );
          }
          setDescribedByIds(e) {
            this._ariaDescribedby = e.join(" ");
          }
          writeValue(e) {
            this.chips && this._setSelectionByValue(e, !1);
          }
          registerOnChange(e) {
            this._onChange = e;
          }
          registerOnTouched(e) {
            this._onTouched = e;
          }
          setDisabledState(e) {
            (this.disabled = e), this.stateChanges.next();
          }
          onContainerClick(e) {
            this._originatesFromChip(e) || this.focus();
          }
          focus(e) {
            this.disabled ||
              (this._chipInput && this._chipInput.focused) ||
              (this.chips.length > 0
                ? (this._keyManager.setFirstItemActive(),
                  this.stateChanges.next())
                : (this._focusInput(e), this.stateChanges.next()));
          }
          _focusInput(e) {
            this._chipInput && this._chipInput.focus(e);
          }
          _keydown(e) {
            const i = e.target;
            i &&
              i.classList.contains("mat-chip") &&
              (this._keyManager.onKeydown(e), this.stateChanges.next());
          }
          _updateTabIndex() {
            this._tabIndex =
              this._userTabIndex || (0 === this.chips.length ? -1 : 0);
          }
          _updateFocusForDestroyedChips() {
            if (null != this._lastDestroyedChipIndex)
              if (this.chips.length) {
                const e = Math.min(
                  this._lastDestroyedChipIndex,
                  this.chips.length - 1
                );
                this._keyManager.setActiveItem(e);
              } else this.focus();
            this._lastDestroyedChipIndex = null;
          }
          _isValidIndex(e) {
            return e >= 0 && e < this.chips.length;
          }
          _setSelectionByValue(e, i = !0) {
            if (
              (this._clearSelection(),
              this.chips.forEach((a) => a.deselect()),
              Array.isArray(e))
            )
              e.forEach((a) => this._selectValue(a, i)), this._sortValues();
            else {
              const a = this._selectValue(e, i);
              a && i && this._keyManager.setActiveItem(a);
            }
          }
          _selectValue(e, i = !0) {
            const a = this.chips.find(
              (u) => null != u.value && this._compareWith(u.value, e)
            );
            return (
              a &&
                (i ? a.selectViaInteraction() : a.select(),
                this._selectionModel.select(a)),
              a
            );
          }
          _initializeSelection() {
            Promise.resolve().then(() => {
              (this.ngControl || this._value) &&
                (this._setSelectionByValue(
                  this.ngControl ? this.ngControl.value : this._value,
                  !1
                ),
                this.stateChanges.next());
            });
          }
          _clearSelection(e) {
            this._selectionModel.clear(),
              this.chips.forEach((i) => {
                i !== e && i.deselect();
              }),
              this.stateChanges.next();
          }
          _sortValues() {
            this._multiple &&
              (this._selectionModel.clear(),
              this.chips.forEach((e) => {
                e.selected && this._selectionModel.select(e);
              }),
              this.stateChanges.next());
          }
          _propagateChanges(e) {
            let i = null;
            (i = Array.isArray(this.selected)
              ? this.selected.map((a) => a.value)
              : this.selected
              ? this.selected.value
              : e),
              (this._value = i),
              this.change.emit(new $A(this, i)),
              this.valueChange.emit(i),
              this._onChange(i),
              this._changeDetectorRef.markForCheck();
          }
          _blur() {
            this._hasFocusedChip() || this._keyManager.setActiveItem(-1),
              this.disabled ||
                (this._chipInput
                  ? setTimeout(() => {
                      this.focused || this._markAsTouched();
                    })
                  : this._markAsTouched());
          }
          _markAsTouched() {
            this._onTouched(),
              this._changeDetectorRef.markForCheck(),
              this.stateChanges.next();
          }
          _allowFocusEscape() {
            -1 !== this._tabIndex &&
              ((this._tabIndex = -1),
              setTimeout(() => {
                (this._tabIndex = this._userTabIndex || 0),
                  this._changeDetectorRef.markForCheck();
              }));
          }
          _resetChips() {
            this._dropSubscriptions(),
              this._listenToChipsFocus(),
              this._listenToChipsSelection(),
              this._listenToChipsRemoved();
          }
          _dropSubscriptions() {
            this._chipFocusSubscription &&
              (this._chipFocusSubscription.unsubscribe(),
              (this._chipFocusSubscription = null)),
              this._chipBlurSubscription &&
                (this._chipBlurSubscription.unsubscribe(),
                (this._chipBlurSubscription = null)),
              this._chipSelectionSubscription &&
                (this._chipSelectionSubscription.unsubscribe(),
                (this._chipSelectionSubscription = null)),
              this._chipRemoveSubscription &&
                (this._chipRemoveSubscription.unsubscribe(),
                (this._chipRemoveSubscription = null));
          }
          _listenToChipsSelection() {
            this._chipSelectionSubscription =
              this.chipSelectionChanges.subscribe((e) => {
                e.source.selected
                  ? this._selectionModel.select(e.source)
                  : this._selectionModel.deselect(e.source),
                  this.multiple ||
                    this.chips.forEach((i) => {
                      !this._selectionModel.isSelected(i) &&
                        i.selected &&
                        i.deselect();
                    }),
                  e.isUserInput && this._propagateChanges();
              });
          }
          _listenToChipsFocus() {
            (this._chipFocusSubscription = this.chipFocusChanges.subscribe(
              (e) => {
                let i = this.chips.toArray().indexOf(e.chip);
                this._isValidIndex(i) && this._keyManager.updateActiveItem(i),
                  this.stateChanges.next();
              }
            )),
              (this._chipBlurSubscription = this.chipBlurChanges.subscribe(
                () => {
                  this._blur(), this.stateChanges.next();
                }
              ));
          }
          _listenToChipsRemoved() {
            this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(
              (e) => {
                const i = e.chip,
                  a = this.chips.toArray().indexOf(e.chip);
                this._isValidIndex(a) &&
                  i._hasFocus &&
                  (this._lastDestroyedChipIndex = a);
              }
            );
          }
          _originatesFromChip(e) {
            let i = e.target;
            for (; i && i !== this._elementRef.nativeElement; ) {
              if (i.classList.contains("mat-chip")) return !0;
              i = i.parentElement;
            }
            return !1;
          }
          _hasFocusedChip() {
            return this.chips && this.chips.some((e) => e._hasFocus);
          }
          _syncChipsState() {
            this.chips &&
              this.chips.forEach((e) => {
                (e._chipListDisabled = this._disabled),
                  (e._chipListMultiple = this.multiple);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.Y36(o.SBq),
              o.Y36(o.sBO),
              o.Y36(_n, 8),
              o.Y36(Pl, 8),
              o.Y36(ts, 8),
              o.Y36(Ms),
              o.Y36(es, 10)
            );
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["mat-chip-list"]],
            contentQueries: function (e, i, a) {
              if ((1 & e && o.Suo(a, Vu, 5), 2 & e)) {
                let u;
                o.iGM((u = o.CRH())) && (i.chips = u);
              }
            },
            hostAttrs: [1, "mat-chip-list"],
            hostVars: 15,
            hostBindings: function (e, i) {
              1 & e &&
                o.NdJ("focus", function () {
                  return i.focus();
                })("blur", function () {
                  return i._blur();
                })("keydown", function (u) {
                  return i._keydown(u);
                }),
                2 & e &&
                  (o.Ikx("id", i._uid),
                  o.uIk("tabindex", i.disabled ? null : i._tabIndex)(
                    "aria-describedby",
                    i._ariaDescribedby || null
                  )("aria-required", i.role ? i.required : null)(
                    "aria-disabled",
                    i.disabled.toString()
                  )("aria-invalid", i.errorState)(
                    "aria-multiselectable",
                    i.multiple
                  )("role", i.role)("aria-orientation", i.ariaOrientation),
                  o.ekj("mat-chip-list-disabled", i.disabled)(
                    "mat-chip-list-invalid",
                    i.errorState
                  )("mat-chip-list-required", i.required));
            },
            inputs: {
              ariaOrientation: ["aria-orientation", "ariaOrientation"],
              multiple: "multiple",
              compareWith: "compareWith",
              value: "value",
              required: "required",
              placeholder: "placeholder",
              disabled: "disabled",
              selectable: "selectable",
              tabIndex: "tabIndex",
              errorStateMatcher: "errorStateMatcher",
            },
            outputs: { change: "change", valueChange: "valueChange" },
            exportAs: ["matChipList"],
            features: [o._Bn([{ provide: Mo, useExisting: n }]), o.qOj],
            ngContentSelectors: oS,
            decls: 2,
            vars: 0,
            consts: [[1, "mat-chip-list-wrapper"]],
            template: function (e, i) {
              1 & e && (o.F$t(), o.TgZ(0, "div", 0), o.Hsn(1), o.qZA());
            },
            styles: [
              '.mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:"";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const hS = { separatorKeyCodes: [13] };
      let fS = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({
            providers: [Ms, { provide: GA, useValue: hS }],
            imports: [[Et]],
          })),
          n
        );
      })();
      function YA(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "span", 10),
            o.TgZ(1, "p"),
            o.TgZ(2, "mat-icon", 11),
            o._uU(3, "psychology_sharp"),
            o.qZA(),
            o._uU(4),
            o.qZA(),
            o.qZA()),
          2 & n)
        ) {
          const e = t.$implicit;
          o.xp6(4), o.hij(" ", e, " ");
        }
      }
      function ZA(n, t) {
        if ((1 & n && (o.TgZ(0, "mat-chip", 12), o._uU(1), o.qZA()), 2 & n)) {
          const e = t.$implicit;
          o.xp6(1), o.hij(" ", e, " ");
        }
      }
      function pS(n, t) {
        if ((1 & n && (o.TgZ(0, "p"), o._uU(1), o.qZA()), 2 & n)) {
          const e = t.$implicit;
          o.xp6(1), o.hij(" ", e, " ");
        }
      }
      let uf = (() => {
        class n {
          constructor(e, i, a, u) {
            (this.courseService = e),
              (this.select_CS_Service = i),
              (this._snackBar = a),
              (this.data = u),
              (this.courses_list = []),
              (this.index_num = -1);
          }
          ngOnInit() {
            (this.courses_list = this.courseService.course),
              (this.index_num = this.data.current_index);
          }
          addCourse(e) {
            console.log(e),
              this.select_CS_Service.add(e.innerText),
              this._snackBar.open(e.innerText + "  added successfully", "Ok", {
                duration: 3e3,
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(rS), o.Y36(W0), o.Y36(vP), o.Y36(tS));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["app-dialog-courses"]],
            decls: 32,
            vars: 9,
            consts: [
              [2, "font-size", "30px", "color", "rgb(31, 31, 31)"],
              ["courseTitle", ""],
              [2, "border", "2px solid indigo", "padding", "10px"],
              ["style", "font-size: medium;", 4, "ngFor", "ngForOf"],
              [
                "cdkDropList",
                "",
                "cdkDropListOrientation",
                "horizontal",
                1,
                "example-chip",
              ],
              ["class", "example-box", "cdkDrag", "", 4, "ngFor", "ngForOf"],
              [4, "ngFor", "ngForOf"],
              ["mat-card-avatar", ""],
              [
                "mat-raised-button",
                "",
                "color",
                "accent",
                2,
                "height",
                "50px",
                3,
                "click",
              ],
              ["mat-button", "", "mat-dialog-close", "", 2, "height", "50px"],
              [2, "font-size", "medium"],
              [2, "color", "indigo"],
              ["cdkDrag", "", 1, "example-box"],
            ],
            template: function (e, i) {
              if (1 & e) {
                const a = o.EpF();
                o.TgZ(0, "h1", 0, 1),
                  o.TgZ(2, "b"),
                  o._uU(3),
                  o.qZA(),
                  o.qZA(),
                  o._UZ(4, "mat-divider"),
                  o.TgZ(5, "mat-dialog-content"),
                  o.TgZ(6, "div", 2),
                  o.TgZ(7, "h2"),
                  o._uU(8, " Discover "),
                  o.qZA(),
                  o.YNc(9, YA, 5, 1, "span", 3),
                  o.TgZ(10, "h1"),
                  o._uU(11, "Skills Set"),
                  o.qZA(),
                  o.TgZ(12, "mat-chip-list", 4),
                  o.YNc(13, ZA, 2, 1, "mat-chip", 5),
                  o._UZ(14, "br"),
                  o.qZA(),
                  o.TgZ(15, "h1"),
                  o.TgZ(16, "b"),
                  o._uU(17, " This courses content "),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(18, "h2"),
                  o._uU(19, " Hands-On Projects "),
                  o.qZA(),
                  o.YNc(20, pS, 2, 1, "p", 6),
                  o.TgZ(21, "h2"),
                  o._uU(22, " Instructor "),
                  o.qZA(),
                  o._UZ(23, "div", 7),
                  o.TgZ(24, "p"),
                  o._uU(25),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o._UZ(26, "br"),
                  o.TgZ(27, "mat-dialog-actions"),
                  o.TgZ(28, "button", 8),
                  o.NdJ("click", function () {
                    o.CHM(a);
                    const h = o.MAs(1);
                    return i.addCourse(h);
                  }),
                  o._uU(29),
                  o.qZA(),
                  o.TgZ(30, "button", 9),
                  o._uU(31, "Cancel"),
                  o.qZA(),
                  o.qZA();
              }
              2 & e &&
                (o.xp6(3),
                o.hij(" ", i.courses_list[i.index_num].title, " "),
                o.xp6(6),
                o.Q6J("ngForOf", i.courses_list[i.index_num].discover),
                o.xp6(4),
                o.Q6J("ngForOf", i.courses_list[i.index_num].skill),
                o.xp6(7),
                o.Q6J("ngForOf", i.courses_list[i.index_num].courses_content),
                o.xp6(3),
                o.Jzz(
                  "background-image: url(",
                  i.courses_list[i.index_num].instructor_image,
                  "); background-size: cover;"
                ),
                o.xp6(2),
                o.Oqu(i.courses_list[i.index_num].instructor),
                o.xp6(4),
                o.hij(" Enroll for ", i.courses_list[i.index_num].price, "\n"));
            },
            directives: [ob, VA, kt, sg, eA, iS, Co, nS, As, Vu],
            styles: [""],
          })),
          n
        );
      })();
      function ab(n, t) {
        if ((1 & n && (o.TgZ(0, "mat-chip", 7), o._uU(1), o.qZA()), 2 & n)) {
          const e = t.$implicit;
          o.xp6(1), o.hij(" ", e, " ");
        }
      }
      function mS(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "div", 1),
            o.TgZ(1, "mat-card", 2),
            o.NdJ("click", function () {
              const u = o.CHM(e).index;
              return o.oxw().openDialog(u);
            }),
            o.TgZ(2, "div"),
            o.TgZ(3, "mat-card-header"),
            o.TgZ(4, "mat-card-title", 3),
            o._uU(5),
            o.qZA(),
            o._UZ(6, "br"),
            o.TgZ(7, "mat-card-subtitle"),
            o.TgZ(8, "p"),
            o._uU(9),
            o.qZA(),
            o.TgZ(10, "p", 4),
            o._uU(11),
            o.qZA(),
            o._UZ(12, "br"),
            o.qZA(),
            o.qZA(),
            o.TgZ(13, "mat-card-content"),
            o.TgZ(14, "mat-chip-list", 5),
            o.YNc(15, ab, 2, 1, "mat-chip", 6),
            o._UZ(16, "br"),
            o._UZ(17, "br"),
            o.qZA(),
            o.TgZ(18, "mat-card-subtitle"),
            o.TgZ(19, "mat-icon"),
            o._uU(20, "location_on"),
            o.qZA(),
            o._uU(
              21,
              " Worldwide. Connect with Zoom, Google meet, Whatsapp and TeamViewer.\nWhatsapp is for messages only\n"
            ),
            o.qZA(),
            o.qZA(),
            o.qZA(),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = t.$implicit;
          o.xp6(5),
            o.hij(" ", e.title, " "),
            o.xp6(4),
            o.AsE(" ", e.price, " ", e.time, " "),
            o.xp6(2),
            o.hij(" ", e.topic, " "),
            o.xp6(4),
            o.Q6J("ngForOf", e.skill);
        }
      }
      let qA = (() => {
        class n {
          constructor(e, i, a) {
            (this.coursesfordanver = e),
              (this.breakpointService = i),
              (this.dialog = a),
              (this.course_list_from_db = []),
              (this.breakpoint = this.breakpointService.onInCurrentGridwith2);
          }
          ngOnInit() {
            this.course_list_from_db = this.coursesfordanver.course;
          }
          onResize(e) {
            this.breakpoint =
              this.breakpointService.getonResizeCurrentGridwith2(e);
          }
          openDialog(e) {
            this.dialog
              .open(uf, {
                height: "100%",
                width: "100%",
                data: { current_index: e },
              })
              .afterClosed()
              .subscribe((a) => {
                console.log(`Dialog result: ${a}`);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(rS), o.Y36($0), o.Y36(rg));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["app-home"]],
            decls: 2,
            vars: 1,
            consts: [
              ["style", "margin: 0px; padding: 0px;", 4, "ngFor", "ngForOf"],
              [2, "margin", "0px", "padding", "0px"],
              [
                "matRipple",
                "",
                1,
                "matcardstyle",
                2,
                "max-width",
                "700px",
                "width",
                "100%",
                3,
                "click",
              ],
              [2, "color", "indigo"],
              [
                2,
                "color",
                "rgb(32, 32, 32)",
                "height",
                "48px",
                "max-height",
                "48px",
              ],
              [
                "cdkDropList",
                "",
                "cdkDropListOrientation",
                "horizontal",
                1,
                "example-chip",
              ],
              [
                "color",
                "primary",
                "class",
                "example-box",
                "cdkDrag",
                "",
                4,
                "ngFor",
                "ngForOf",
              ],
              ["color", "primary", "cdkDrag", "", 1, "example-box"],
            ],
            template: function (e, i) {
              1 & e &&
                (o.YNc(0, mS, 22, 5, "div", 0),
                o._uU(1, " TODO: Link blog to firebase\n")),
                2 & e && o.Q6J("ngForOf", i.course_list_from_db);
            },
            directives: [kt, $m, wa, Av, tf, Gm, KI, sg, As, Vu],
            styles: [
              ".card[_ngcontent-%COMP%]{padding:50px 25% 210px 5%;background-image:url(/../assets/studiohome.jpg);background-position:center;background-repeat:no-repeat;background-size:cover;border-radius:0%}.card2[_ngcontent-%COMP%]{padding:25% 25% 210px 5%;background-image:url(/../assets/flstudiologofree.jpg);background-position:center;background-repeat:no-repeat;background-size:cover;border-radius:0%}.card3[_ngcontent-%COMP%]{padding:5% 0 210px 5%;background-image:url(/../assets/flspeakerinfo.jpg);background-position:cover;background-repeat:no-repeat;background-size:cover;border-radius:0%;height:auto}.card4[_ngcontent-%COMP%]{padding:5% 25% 210px 5%;background-color:#f5f5f5;border-radius:0%}.cardbottom[_ngcontent-%COMP%]{width:100%;height:100%}.mat-title[_ngcontent-%COMP%]{color:#fff;font-size:48px;line-height:54px;font-weight:bold}.mat-h2[_ngcontent-%COMP%]{color:#ff0;font-size:medium;padding-top:20px}.mat-raised-button[_ngcontent-%COMP%]{background-color:accent;color:#000}.mat-action[_ngcontent-%COMP%]{padding-left:2%}.mat-card-without-border[_ngcontent-%COMP%]{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}",
            ],
          })),
          n
        );
      })();
      function KA(n, t) {
        1 & n && o._uU(0, "First Step");
      }
      function GP(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "mat-chip", 12, 13),
            o._uU(2),
            o.TgZ(3, "button", 14),
            o.NdJ("click", function () {
              o.CHM(e);
              const a = o.MAs(1);
              return o.oxw().remove_from_list(a);
            }),
            o.TgZ(4, "mat-icon"),
            o._uU(5, "close"),
            o.qZA(),
            o.qZA(),
            o.qZA();
        }
        if (2 & n) {
          const e = t.$implicit;
          o.xp6(2), o.hij(" ", e, " ");
        }
      }
      function zP(n, t) {
        1 & n && o._uU(0, "Fill out your details");
      }
      function $P(n, t) {
        1 & n && o._uU(0, "Done");
      }
      let gS = (() => {
        class n {
          constructor(e, i, a, u) {
            (this.breakpointService = e),
              (this._formBuilder = i),
              (this.selected_courses_service = a),
              (this.selct_cs_service = u),
              (this.isLinear = !1),
              (this.selected_courses = []),
              (this.breakpoint = this.breakpointService.onInCurrentGridwith2);
          }
          ngOnInit() {
            (this.selected_courses =
              this.selected_courses_service.select_these_ones),
              (this.firstFormGroup = this._formBuilder.group({
                selectedCourseFrm: [[this.selected_courses], Qr.required],
              })),
              (this.secondFormGroup = this._formBuilder.group({
                secondCtrl: ["", Qr.required],
              }));
          }
          remove_from_list(e) {
            this.selct_cs_service.delete(e);
          }
          onResize(e) {
            this.breakpoint =
              this.breakpointService.getonResizeCurrentGridwith2(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36($0), o.Y36(Ow), o.Y36(W0), o.Y36(W0));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["app-courseslist"]],
            decls: 41,
            vars: 5,
            consts: [
              ["orientation", "vertical", "linear", "true"],
              ["stepper", ""],
              [3, "stepControl"],
              [3, "formGroup"],
              ["matStepLabel", ""],
              ["appearance", "fill"],
              [
                "cdkDropList",
                "",
                "cdkDropListOrientation",
                "horizontal",
                1,
                "example-chip",
              ],
              [
                "formControlName",
                "selectedCourseFrm",
                "color",
                "primary",
                "class",
                "example-box",
                "cdkDrag",
                "",
                4,
                "ngFor",
                "ngForOf",
              ],
              ["mat-button", "", "matStepperNext", ""],
              ["matInput", "", "formControlName", "secondCtrl", "required", ""],
              ["mat-button", "", "matStepperPrevious", ""],
              ["mat-button", "", 3, "click"],
              [
                "formControlName",
                "selectedCourseFrm",
                "color",
                "primary",
                "cdkDrag",
                "",
                1,
                "example-box",
              ],
              ["coursenm", ""],
              ["mat-icon-button", "", 3, "click"],
            ],
            template: function (e, i) {
              if (1 & e) {
                const a = o.EpF();
                o.TgZ(0, "mat-stepper", 0, 1),
                  o.TgZ(2, "mat-step", 2),
                  o.TgZ(3, "form", 3),
                  o.YNc(4, KA, 1, 0, "ng-template", 4),
                  o.TgZ(5, "h1"),
                  o._uU(6, "Select courses to enroll in."),
                  o.qZA(),
                  o._UZ(7, "app-home"),
                  o.TgZ(8, "h1"),
                  o._uU(9, " This is the list of selected courses "),
                  o.qZA(),
                  o.TgZ(10, "mat-form-field", 5),
                  o.TgZ(11, "mat-chip-list", 6),
                  o.YNc(12, GP, 6, 1, "mat-chip", 7),
                  o.qZA(),
                  o.TgZ(13, "mat-error"),
                  o._uU(14, " Please select at least 1 course "),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(15, "div"),
                  o.TgZ(16, "p"),
                  o._uU(
                    17,
                    " When you have selected the courses you need click "
                  ),
                  o.qZA(),
                  o.TgZ(18, "button", 8),
                  o._uU(19, "Next"),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(20, "mat-step", 2),
                  o.TgZ(21, "form", 3),
                  o.YNc(22, zP, 1, 0, "ng-template", 4),
                  o.TgZ(23, "mat-form-field", 5),
                  o.TgZ(24, "mat-label"),
                  o._uU(25, "Full name"),
                  o.qZA(),
                  o._UZ(26, "input", 9),
                  o.qZA(),
                  o.TgZ(27, "div"),
                  o.TgZ(28, "button", 10),
                  o._uU(29, "Back"),
                  o.qZA(),
                  o.TgZ(30, "button", 8),
                  o._uU(31, "Next"),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(32, "mat-step"),
                  o.YNc(33, $P, 1, 0, "ng-template", 4),
                  o.TgZ(34, "p"),
                  o._uU(35, "You are now done."),
                  o.qZA(),
                  o.TgZ(36, "div"),
                  o.TgZ(37, "button", 10),
                  o._uU(38, "Back"),
                  o.qZA(),
                  o.TgZ(39, "button", 11),
                  o.NdJ("click", function () {
                    return o.CHM(a), o.MAs(1).reset();
                  }),
                  o._uU(40, "Reset"),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA();
              }
              2 & e &&
                (o.xp6(2),
                o.Q6J("stepControl", i.firstFormGroup),
                o.xp6(1),
                o.Q6J("formGroup", i.firstFormGroup),
                o.xp6(9),
                o.Q6J("ngForOf", i.selected_courses),
                o.xp6(8),
                o.Q6J("stepControl", i.secondFormGroup),
                o.xp6(1),
                o.Q6J("formGroup", i.secondFormGroup));
            },
            directives: [
              ng,
              cf,
              Dm,
              mu,
              ts,
              tb,
              qA,
              d0,
              sg,
              kt,
              rt,
              Co,
              RA,
              Gn,
              Tv,
              Nh,
              gm,
              Tm,
              Am,
              NP,
              Vu,
              As,
            ],
            styles: [""],
          })),
          n
        );
      })();
      const og = (() => {
        function n() {
          return (
            Error.call(this),
            (this.message = "no elements in sequence"),
            (this.name = "EmptyError"),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      var JA = k(2441);
      function ag(n, t) {
        let e = !1;
        return (
          arguments.length >= 2 && (e = !0),
          function (a) {
            return a.lift(new XA(n, t, e));
          }
        );
      }
      class XA {
        constructor(t, e, i = !1) {
          (this.accumulator = t), (this.seed = e), (this.hasSeed = i);
        }
        call(t, e) {
          return e.subscribe(
            new _S(t, this.accumulator, this.seed, this.hasSeed)
          );
        }
      }
      class _S extends $n.L {
        constructor(t, e, i, a) {
          super(t),
            (this.accumulator = e),
            (this._seed = i),
            (this.hasSeed = a),
            (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(t) {
          (this.hasSeed = !0), (this._seed = t);
        }
        _next(t) {
          if (this.hasSeed) return this._tryNext(t);
          (this.seed = t), this.destination.next(t);
        }
        _tryNext(t) {
          const e = this.index++;
          let i;
          try {
            i = this.accumulator(this.seed, t, e);
          } catch (a) {
            this.destination.error(a);
          }
          (this.seed = i), this.destination.next(i);
        }
      }
      function yS(n) {
        return function (e) {
          return 0 === n ? (0, yo.c)() : e.lift(new WP(n));
        };
      }
      class WP {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new $p();
        }
        call(t, e) {
          return e.subscribe(new ex(t, this.total));
        }
      }
      class ex extends $n.L {
        constructor(t, e) {
          super(t),
            (this.total = e),
            (this.ring = new Array()),
            (this.count = 0);
        }
        _next(t) {
          const e = this.ring,
            i = this.total,
            a = this.count++;
          e.length < i ? e.push(t) : (e[a % i] = t);
        }
        _complete() {
          const t = this.destination;
          let e = this.count;
          if (e > 0) {
            const i = this.count >= this.total ? this.total : this.count,
              a = this.ring;
            for (let u = 0; u < i; u++) {
              const h = e++ % i;
              t.next(a[h]);
            }
          }
          t.complete();
        }
      }
      function lg(n = vS) {
        return (t) => t.lift(new Zn(n));
      }
      class Zn {
        constructor(t) {
          this.errorFactory = t;
        }
        call(t, e) {
          return e.subscribe(new YP(t, this.errorFactory));
        }
      }
      class YP extends $n.L {
        constructor(t, e) {
          super(t), (this.errorFactory = e), (this.hasValue = !1);
        }
        _next(t) {
          (this.hasValue = !0), this.destination.next(t);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let t;
            try {
              t = this.errorFactory();
            } catch (e) {
              t = e;
            }
            this.destination.error(t);
          }
        }
      }
      function vS() {
        return new og();
      }
      function lb(n = null) {
        return (t) => t.lift(new tx(n));
      }
      class tx {
        constructor(t) {
          this.defaultValue = t;
        }
        call(t, e) {
          return e.subscribe(new cg(t, this.defaultValue));
        }
      }
      class cg extends $n.L {
        constructor(t, e) {
          super(t), (this.defaultValue = e), (this.isEmpty = !0);
        }
        _next(t) {
          (this.isEmpty = !1), this.destination.next(t);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue),
            this.destination.complete();
        }
      }
      var bS = k(4487);
      function Pa(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? En((a, u) => n(a, u, i)) : bS.y,
            An(1),
            e ? lb(t) : lg(() => new og())
          );
      }
      var Yl = k(1307);
      class Os {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class Bu extends Os {
        constructor(t, e, i = "imperative", a = null) {
          super(t, e), (this.navigationTrigger = i), (this.restoredState = a);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Na extends Os {
        constructor(t, e, i) {
          super(t, e), (this.urlAfterRedirects = i);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class CS extends Os {
        constructor(t, e, i) {
          super(t, e), (this.reason = i);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class df extends Os {
        constructor(t, e, i) {
          super(t, e), (this.error = i);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class ix extends Os {
        constructor(t, e, i, a) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = a);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class cb extends Os {
        constructor(t, e, i, a) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = a);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ES extends Os {
        constructor(t, e, i, a, u) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = a),
            (this.shouldActivate = u);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class qn extends Os {
        constructor(t, e, i, a) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = a);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ZP extends Os {
        constructor(t, e, i, a) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = a);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class wS {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class SS {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class qP {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class ug {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class rx {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class KP {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class sx {
        constructor(t, e, i) {
          (this.routerEvent = t), (this.position = e), (this.anchor = i);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      const Dt = "primary";
      class ox {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Uu(n) {
        return new ox(n);
      }
      const DS = "ngNavigationCancelingError";
      function ub(n) {
        const t = Error("NavigationCancelingError: " + n);
        return (t[DS] = !0), t;
      }
      function QP(n, t, e) {
        const i = e.path.split("/");
        if (
          i.length > n.length ||
          ("full" === e.pathMatch && (t.hasChildren() || i.length < n.length))
        )
          return null;
        const a = {};
        for (let u = 0; u < i.length; u++) {
          const h = i[u],
            _ = n[u];
          if (h.startsWith(":")) a[h.substring(1)] = _;
          else if (h !== _.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: a };
      }
      function Ps(n, t) {
        const e = n ? Object.keys(n) : void 0,
          i = t ? Object.keys(t) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let a;
        for (let u = 0; u < e.length; u++)
          if (((a = e[u]), !MS(n[a], t[a]))) return !1;
        return !0;
      }
      function MS(n, t) {
        if (Array.isArray(n) && Array.isArray(t)) {
          if (n.length !== t.length) return !1;
          const e = [...n].sort(),
            i = [...t].sort();
          return e.every((a, u) => i[u] === a);
        }
        return n === t;
      }
      function cx(n) {
        return Array.prototype.concat.apply([], n);
      }
      function ux(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function ri(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(n[e], e);
      }
      function Ns(n) {
        return (0, o.CqO)(n)
          ? n
          : (0, o.QGY)(n)
          ? (0, Yn.D)(Promise.resolve(n))
          : (0, Oe.of)(n);
      }
      const hx = {
          exact: function IS(n, t, e) {
            if (
              !ql(n.segments, t.segments) ||
              !dg(n.segments, t.segments, e) ||
              n.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const i in t.children)
              if (!n.children[i] || !IS(n.children[i], t.children[i], e))
                return !1;
            return !0;
          },
          subset: mx,
        },
        Sr = {
          exact: function (n, t) {
            return Ps(n, t);
          },
          subset: function (n, t) {
            return (
              Object.keys(t).length <= Object.keys(n).length &&
              Object.keys(t).every((e) => MS(n[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function TS(n, t, e) {
        return (
          hx[e.paths](n.root, t.root, e.matrixParams) &&
          Sr[e.queryParams](n.queryParams, t.queryParams) &&
          !("exact" === e.fragment && n.fragment !== t.fragment)
        );
      }
      function mx(n, t, e) {
        return AS(n, t, t.segments, e);
      }
      function AS(n, t, e, i) {
        if (n.segments.length > e.length) {
          const a = n.segments.slice(0, e.length);
          return !(!ql(a, e) || t.hasChildren() || !dg(a, e, i));
        }
        if (n.segments.length === e.length) {
          if (!ql(n.segments, e) || !dg(n.segments, e, i)) return !1;
          for (const a in t.children)
            if (!n.children[a] || !mx(n.children[a], t.children[a], i))
              return !1;
          return !0;
        }
        {
          const a = e.slice(0, n.segments.length),
            u = e.slice(n.segments.length);
          return (
            !!(ql(n.segments, a) && dg(n.segments, a, i) && n.children[Dt]) &&
            AS(n.children[Dt], t, u, i)
          );
        }
      }
      function dg(n, t, e) {
        return t.every((i, a) => Sr[e](n[a].parameters, i.parameters));
      }
      class Zl {
        constructor(t, e, i) {
          (this.root = t), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Uu(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return db.serialize(this);
        }
      }
      class vt {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            ri(e, (i, a) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return hg(this);
        }
      }
      class Hu {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = Uu(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return yx(this);
        }
      }
      function ql(n, t) {
        return n.length === t.length && n.every((e, i) => e.path === t[i].path);
      }
      class xS {}
      class gx {
        parse(t) {
          const e = new pg(t);
          return new Zl(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          var n;
          return `${`/${hf(t.root, !0)}`}${(function (n) {
            const t = Object.keys(n)
              .map((e) => {
                const i = n[e];
                return Array.isArray(i)
                  ? i.map((a) => `${hb(e)}=${hb(a)}`).join("&")
                  : `${hb(e)}=${hb(i)}`;
              })
              .filter((e) => !!e);
            return t.length ? `?${t.join("&")}` : "";
          })(t.queryParams)}${
            "string" == typeof t.fragment
              ? `#${((n = t.fragment), encodeURI(n))}`
              : ""
          }`;
        }
      }
      const db = new gx();
      function hg(n) {
        return n.segments.map((t) => yx(t)).join("/");
      }
      function hf(n, t) {
        if (!n.hasChildren()) return hg(n);
        if (t) {
          const e = n.children[Dt] ? hf(n.children[Dt], !1) : "",
            i = [];
          return (
            ri(n.children, (a, u) => {
              u !== Dt && i.push(`${u}:${hf(a, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function (n, t) {
            let e = [];
            return (
              ri(n.children, (i, a) => {
                a === Dt && (e = e.concat(t(i, a)));
              }),
              ri(n.children, (i, a) => {
                a !== Dt && (e = e.concat(t(i, a)));
              }),
              e
            );
          })(n, (i, a) =>
            a === Dt ? [hf(n.children[Dt], !1)] : [`${a}:${hf(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[Dt]
            ? `${hg(n)}/${e[0]}`
            : `${hg(n)}/(${e.join("//")})`;
        }
      }
      function RS(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function hb(n) {
        return RS(n).replace(/%3B/gi, ";");
      }
      function fb(n) {
        return RS(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function fg(n) {
        return decodeURIComponent(n);
      }
      function Dr(n) {
        return fg(n.replace(/\+/g, "%20"));
      }
      function yx(n) {
        return `${fb(n.path)}${(function (n) {
          return Object.keys(n)
            .map((t) => `;${fb(t)}=${fb(n[t])}`)
            .join("");
        })(n.parameters)}`;
      }
      const OS = /^[^\/()?;=#]+/;
      function ff(n) {
        const t = n.match(OS);
        return t ? t[0] : "";
      }
      const PS = /^[^=?&#]+/,
        mb = /^[^?&#]+/;
      class pg {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new vt([], {})
              : new vt([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional("&"));
          return t;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const t = [];
          for (
            this.peekStartsWith("(") || t.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (i[Dt] = new vt(t, e)),
            i
          );
        }
        parseSegment() {
          const t = ff(this.remaining);
          if ("" === t && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(t), new Hu(fg(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(";"); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = ff(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const a = ff(this.remaining);
            a && ((i = a), this.capture(i));
          }
          t[fg(e)] = fg(i);
        }
        parseQueryParam(t) {
          const e = (function (n) {
            const t = n.match(PS);
            return t ? t[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const h = (function (n) {
              const t = n.match(mb);
              return t ? t[0] : "";
            })(this.remaining);
            h && ((i = h), this.capture(i));
          }
          const a = Dr(e),
            u = Dr(i);
          if (t.hasOwnProperty(a)) {
            let h = t[a];
            Array.isArray(h) || ((h = [h]), (t[a] = h)), h.push(u);
          } else t[a] = u;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = ff(this.remaining),
              a = this.remaining[i.length];
            if ("/" !== a && ")" !== a && ";" !== a)
              throw new Error(`Cannot parse url '${this.url}'`);
            let u;
            i.indexOf(":") > -1
              ? ((u = i.substr(0, i.indexOf(":"))),
                this.capture(u),
                this.capture(":"))
              : t && (u = Dt);
            const h = this.parseChildren();
            (e[u] = 1 === Object.keys(h).length ? h[Dt] : new vt([], h)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new Error(`Expected "${t}".`);
        }
      }
      class pf {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = mg(t, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(t) {
          const e = mg(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = gg(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((a) => a.value)
                .filter((a) => a !== t);
        }
        pathFromRoot(t) {
          return gg(t, this._root).map((e) => e.value);
        }
      }
      function mg(n, t) {
        if (n === t.value) return t;
        for (const e of t.children) {
          const i = mg(n, e);
          if (i) return i;
        }
        return null;
      }
      function gg(n, t) {
        if (n === t.value) return [t];
        for (const e of t.children) {
          const i = gg(n, e);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class To {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function mf(n) {
        const t = {};
        return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class _b extends pf {
        constructor(t, e) {
          super(t), (this.snapshot = e), zu(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function NS(n, t) {
        const e = (function (n, t) {
            const h = new Kn([], {}, {}, "", {}, Dt, t, null, n.root, -1, {});
            return new Gu("", new To(h, []));
          })(n, t),
          i = new gi([new Hu("", {})]),
          a = new gi({}),
          u = new gi({}),
          h = new gi({}),
          _ = new gi(""),
          b = new ju(i, a, h, _, u, Dt, t, e.root);
        return (b.snapshot = e.root), new _b(new To(b, []), e);
      }
      class ju {
        constructor(t, e, i, a, u, h, _, b) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = a),
            (this.data = u),
            (this.outlet = h),
            (this.component = _),
            (this._futureSnapshot = b);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, et.U)((t) => Uu(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, et.U)((t) => Uu(t))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function _g(n, t = "emptyOnly") {
        const e = n.pathFromRoot;
        let i = 0;
        if ("always" !== t)
          for (i = e.length - 1; i >= 1; ) {
            const a = e[i],
              u = e[i - 1];
            if (a.routeConfig && "" === a.routeConfig.path) i--;
            else {
              if (u.component) break;
              i--;
            }
          }
        return (function (n) {
          return n.reduce(
            (t, e) => ({
              params: Object.assign(Object.assign({}, t.params), e.params),
              data: Object.assign(Object.assign({}, t.data), e.data),
              resolve: Object.assign(
                Object.assign({}, t.resolve),
                e._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class Kn {
        constructor(t, e, i, a, u, h, _, b, S, T, A) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = a),
            (this.data = u),
            (this.outlet = h),
            (this.component = _),
            (this.routeConfig = b),
            (this._urlSegment = S),
            (this._lastPathIndex = T),
            (this._resolve = A);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = Uu(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Uu(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class Gu extends pf {
        constructor(t, e) {
          super(e), (this.url = t), zu(this, e);
        }
        toString() {
          return yb(this._root);
        }
      }
      function zu(n, t) {
        (t.value._routerState = n), t.children.forEach((e) => zu(n, e));
      }
      function yb(n) {
        const t =
          n.children.length > 0 ? ` { ${n.children.map(yb).join(", ")} } ` : "";
        return `${n.value}${t}`;
      }
      function $u(n) {
        if (n.snapshot) {
          const t = n.snapshot,
            e = n._futureSnapshot;
          (n.snapshot = e),
            Ps(t.queryParams, e.queryParams) ||
              n.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && n.fragment.next(e.fragment),
            Ps(t.params, e.params) || n.params.next(e.params),
            (function (n, t) {
              if (n.length !== t.length) return !1;
              for (let e = 0; e < n.length; ++e) if (!Ps(n[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || n.url.next(e.url),
            Ps(t.data, e.data) || n.data.next(e.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function gf(n, t) {
        return (
          Ps(n.params, t.params) &&
          (function (n, t) {
            return (
              ql(n, t) && n.every((e, i) => Ps(e.parameters, t[i].parameters))
            );
          })(n.url, t.url) &&
          !(!n.parent != !t.parent) &&
          (!n.parent || gf(n.parent, t.parent))
        );
      }
      function Kl(n, t, e) {
        if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = t.value;
          const a = (function (n, t, e) {
            return t.children.map((i) => {
              for (const a of e.children)
                if (n.shouldReuseRoute(i.value, a.value.snapshot))
                  return Kl(n, i, a);
              return Kl(n, i);
            });
          })(n, t, e);
          return new To(i, a);
        }
        {
          if (n.shouldAttach(t.value)) {
            const u = n.retrieve(t.value);
            if (null !== u) {
              const h = u.route;
              return LS(t, h), h;
            }
          }
          const i = (function (n) {
              return new ju(
                new gi(n.url),
                new gi(n.params),
                new gi(n.queryParams),
                new gi(n.fragment),
                new gi(n.data),
                n.outlet,
                n.component,
                n
              );
            })(t.value),
            a = t.children.map((u) => Kl(n, u));
          return new To(i, a);
        }
      }
      function LS(n, t) {
        if (n.value.routeConfig !== t.value.routeConfig)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot created from a different route"
          );
        if (n.children.length !== t.children.length)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot with a different number of children"
          );
        t.value._futureSnapshot = n.value;
        for (let e = 0; e < n.children.length; ++e)
          LS(n.children[e], t.children[e]);
      }
      function _f(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function yf(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function vb(n, t, e, i, a) {
        let u = {};
        return (
          i &&
            ri(i, (h, _) => {
              u[_] = Array.isArray(h) ? h.map((b) => `${b}`) : `${h}`;
            }),
          new Zl(e.root === n ? t : VS(e.root, n, t), u, a)
        );
      }
      function VS(n, t, e) {
        const i = {};
        return (
          ri(n.children, (a, u) => {
            i[u] = a === t ? e : VS(a, t, e);
          }),
          new vt(n.segments, i)
        );
      }
      class Io {
        constructor(t, e, i) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            t && i.length > 0 && _f(i[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const a = i.find(yf);
          if (a && a !== ux(i))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class bf {
        constructor(t, e, i) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
        }
      }
      function yg(n, t, e) {
        if (
          (n || (n = new vt([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return vg(n, t, e);
        const i = (function (n, t, e) {
            let i = 0,
              a = t;
            const u = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; a < n.segments.length; ) {
              if (i >= e.length) return u;
              const h = n.segments[a],
                _ = e[i];
              if (yf(_)) break;
              const b = `${_}`,
                S = i < e.length - 1 ? e[i + 1] : null;
              if (a > 0 && void 0 === b) break;
              if (b && S && "object" == typeof S && void 0 === S.outlets) {
                if (!HS(b, S, h)) return u;
                i += 2;
              } else {
                if (!HS(b, {}, h)) return u;
                i++;
              }
              a++;
            }
            return { match: !0, pathIndex: a, commandIndex: i };
          })(n, t, e),
          a = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const u = new vt(n.segments.slice(0, i.pathIndex), {});
          return (
            (u.children[Dt] = new vt(
              n.segments.slice(i.pathIndex),
              n.children
            )),
            vg(u, 0, a)
          );
        }
        return i.match && 0 === a.length
          ? new vt(n.segments, {})
          : i.match && !n.hasChildren()
          ? bg(n, t, e)
          : i.match
          ? vg(n, 0, a)
          : bg(n, t, e);
      }
      function vg(n, t, e) {
        if (0 === e.length) return new vt(n.segments, {});
        {
          const i = (function (n) {
              return yf(n[0]) ? n[0].outlets : { [Dt]: n };
            })(e),
            a = {};
          return (
            ri(i, (u, h) => {
              "string" == typeof u && (u = [u]),
                null !== u && (a[h] = yg(n.children[h], t, u));
            }),
            ri(n.children, (u, h) => {
              void 0 === i[h] && (a[h] = u);
            }),
            new vt(n.segments, a)
          );
        }
      }
      function bg(n, t, e) {
        const i = n.segments.slice(0, t);
        let a = 0;
        for (; a < e.length; ) {
          const u = e[a];
          if (yf(u)) {
            const b = Ix(u.outlets);
            return new vt(i, b);
          }
          if (0 === a && _f(e[0])) {
            i.push(new Hu(n.segments[t].path, US(e[0]))), a++;
            continue;
          }
          const h = yf(u) ? u.outlets[Dt] : `${u}`,
            _ = a < e.length - 1 ? e[a + 1] : null;
          h && _ && _f(_)
            ? (i.push(new Hu(h, US(_))), (a += 2))
            : (i.push(new Hu(h, {})), a++);
        }
        return new vt(i, {});
      }
      function Ix(n) {
        const t = {};
        return (
          ri(n, (e, i) => {
            "string" == typeof e && (e = [e]),
              null !== e && (t[i] = bg(new vt([], {}), 0, e));
          }),
          t
        );
      }
      function US(n) {
        const t = {};
        return ri(n, (e, i) => (t[i] = `${e}`)), t;
      }
      function HS(n, t, e) {
        return n == e.path && Ps(t, e.parameters);
      }
      class Cf {
        constructor(t, e, i, a) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = a);
        }
        activate(t) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, t),
            $u(this.futureState.root),
            this.activateChildRoutes(e, i, t);
        }
        deactivateChildRoutes(t, e, i) {
          const a = mf(e);
          t.children.forEach((u) => {
            const h = u.value.outlet;
            this.deactivateRoutes(u, a[h], i), delete a[h];
          }),
            ri(a, (u, h) => {
              this.deactivateRouteAndItsChildren(u, i);
            });
        }
        deactivateRoutes(t, e, i) {
          const a = t.value,
            u = e ? e.value : null;
          if (a === u)
            if (a.component) {
              const h = i.getContext(a.outlet);
              h && this.deactivateChildRoutes(t, e, h.children);
            } else this.deactivateChildRoutes(t, e, i);
          else u && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(t, e) {
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const i = e.getContext(t.value.outlet);
          if (i && i.outlet) {
            const a = i.outlet.detach(),
              u = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: a,
              route: t,
              contexts: u,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const i = e.getContext(t.value.outlet),
            a = i && t.value.component ? i.children : e,
            u = mf(t);
          for (const h of Object.keys(u))
            this.deactivateRouteAndItsChildren(u[h], a);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(t, e, i) {
          const a = mf(e);
          t.children.forEach((u) => {
            this.activateRoutes(u, a[u.value.outlet], i),
              this.forwardEvent(new KP(u.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new ug(t.value.snapshot));
        }
        activateRoutes(t, e, i) {
          const a = t.value,
            u = e ? e.value : null;
          if (($u(a), a === u))
            if (a.component) {
              const h = i.getOrCreateContext(a.outlet);
              this.activateChildRoutes(t, e, h.children);
            } else this.activateChildRoutes(t, e, i);
          else if (a.component) {
            const h = i.getOrCreateContext(a.outlet);
            if (this.routeReuseStrategy.shouldAttach(a.snapshot)) {
              const _ = this.routeReuseStrategy.retrieve(a.snapshot);
              this.routeReuseStrategy.store(a.snapshot, null),
                h.children.onOutletReAttached(_.contexts),
                (h.attachRef = _.componentRef),
                (h.route = _.route.value),
                h.outlet && h.outlet.attach(_.componentRef, _.route.value),
                Ql(_.route);
            } else {
              const _ = (function (n) {
                  for (let t = n.parent; t; t = t.parent) {
                    const e = t.routeConfig;
                    if (e && e._loadedConfig) return e._loadedConfig;
                    if (e && e.component) return null;
                  }
                  return null;
                })(a.snapshot),
                b = _ ? _.module.componentFactoryResolver : null;
              (h.attachRef = null),
                (h.route = a),
                (h.resolver = b),
                h.outlet && h.outlet.activateWith(a, b),
                this.activateChildRoutes(t, null, h.children);
            }
          } else this.activateChildRoutes(t, null, i);
        }
      }
      function Ql(n) {
        $u(n.value), n.children.forEach(Ql);
      }
      class Fa {
        constructor(t, e) {
          (this.routes = t), (this.module = e);
        }
      }
      function La(n) {
        return "function" == typeof n;
      }
      function Jl(n) {
        return n instanceof Zl;
      }
      const Xl = Symbol("INITIAL_VALUE");
      function Ef() {
        return Xt((n) =>
          Zv(n.map((t) => t.pipe(An(1), Hn(Xl)))).pipe(
            ag((t, e) => {
              let i = !1;
              return e.reduce(
                (a, u, h) =>
                  a !== Xl
                    ? a
                    : (u === Xl && (i = !0),
                      i || (!1 !== u && h !== e.length - 1 && !Jl(u)) ? a : u),
                t
              );
            }, Xl),
            En((t) => t !== Xl),
            (0, et.U)((t) => (Jl(t) ? t : !0 === t)),
            An(1)
          )
        );
      }
      let WS = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && o._UZ(0, "router-outlet");
            },
            directives: function () {
              return [Ux];
            },
            encapsulation: 2,
          })),
          n
        );
      })();
      function bb(n, t = "") {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          ec(i, Cb(t, i));
        }
      }
      function ec(n, t) {
        n.children && bb(n.children, t);
      }
      function Cb(n, t) {
        return t
          ? n || t.path
            ? n && !t.path
              ? `${n}/`
              : !n && t.path
              ? t.path
              : `${n}/${t.path}`
            : ""
          : n;
      }
      function Eb(n) {
        const t = n.children && n.children.map(Eb),
          e = t
            ? Object.assign(Object.assign({}, n), { children: t })
            : Object.assign({}, n);
        return (
          !e.component &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== Dt &&
            (e.component = WS),
          e
        );
      }
      function Mr(n) {
        return n.outlet || Dt;
      }
      function xx(n, t) {
        const e = n.filter((i) => Mr(i) === t);
        return e.push(...n.filter((i) => Mr(i) !== t)), e;
      }
      const Rx = {
        matched: !1,
        consumedSegments: [],
        lastChild: 0,
        parameters: {},
        positionalParamSegments: {},
      };
      function wb(n, t, e) {
        var i;
        if ("" === t.path)
          return "full" === t.pathMatch && (n.hasChildren() || e.length > 0)
            ? Object.assign({}, Rx)
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
              };
        const u = (t.matcher || QP)(e, n, t);
        if (!u) return Object.assign({}, Rx);
        const h = {};
        ri(u.posParams, (b, S) => {
          h[S] = b.path;
        });
        const _ =
          u.consumed.length > 0
            ? Object.assign(
                Object.assign({}, h),
                u.consumed[u.consumed.length - 1].parameters
              )
            : h;
        return {
          matched: !0,
          consumedSegments: u.consumed,
          lastChild: u.consumed.length,
          parameters: _,
          positionalParamSegments:
            null !== (i = u.posParams) && void 0 !== i ? i : {},
        };
      }
      function Sb(n, t, e, i, a = "corrected") {
        if (
          e.length > 0 &&
          (function (n, t, e) {
            return e.some((i) => Db(n, t, i) && Mr(i) !== Dt);
          })(n, e, i)
        ) {
          const h = new vt(
            t,
            (function (n, t, e, i) {
              const a = {};
              (a[Dt] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = t.length);
              for (const u of e)
                if ("" === u.path && Mr(u) !== Dt) {
                  const h = new vt([], {});
                  (h._sourceSegment = n),
                    (h._segmentIndexShift = t.length),
                    (a[Mr(u)] = h);
                }
              return a;
            })(n, t, i, new vt(e, n.children))
          );
          return (
            (h._sourceSegment = n),
            (h._segmentIndexShift = t.length),
            { segmentGroup: h, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function (n, t, e) {
            return e.some((i) => Db(n, t, i));
          })(n, e, i)
        ) {
          const h = new vt(
            n.segments,
            (function (n, t, e, i, a, u) {
              const h = {};
              for (const _ of i)
                if (Db(n, e, _) && !a[Mr(_)]) {
                  const b = new vt([], {});
                  (b._sourceSegment = n),
                    (b._segmentIndexShift =
                      "legacy" === u ? n.segments.length : t.length),
                    (h[Mr(_)] = b);
                }
              return Object.assign(Object.assign({}, a), h);
            })(n, t, e, i, n.children, a)
          );
          return (
            (h._sourceSegment = n),
            (h._segmentIndexShift = t.length),
            { segmentGroup: h, slicedSegments: e }
          );
        }
        const u = new vt(n.segments, n.children);
        return (
          (u._sourceSegment = n),
          (u._segmentIndexShift = t.length),
          { segmentGroup: u, slicedSegments: e }
        );
      }
      function Db(n, t, e) {
        return (
          (!(n.hasChildren() || t.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function Px(n, t, e, i) {
        return (
          !!(Mr(n) === i || (i !== Dt && Db(t, e, n))) &&
          ("**" === n.path || wb(t, n, e).matched)
        );
      }
      function YS(n, t, e) {
        return 0 === t.length && !n.children[e];
      }
      class Eg {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class Nx {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function Mb(n) {
        return new Sn.y((t) => t.error(new Eg(n)));
      }
      function Fx(n) {
        return new Sn.y((t) => t.error(new Nx(n)));
      }
      function r(n) {
        return new Sn.y((t) =>
          t.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${n}'`
            )
          )
        );
      }
      class c {
        constructor(t, e, i, a, u) {
          (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = a),
            (this.config = u),
            (this.allowRedirects = !0),
            (this.ngModule = t.get(o.h0i));
        }
        apply() {
          const t = Sb(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new vt(t.segments, t.children);
          return this.expandSegmentGroup(this.ngModule, this.config, e, Dt)
            .pipe(
              (0, et.U)((u) =>
                this.createUrlTree(
                  f(u),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Da((u) => {
                if (u instanceof Nx)
                  return (this.allowRedirects = !1), this.match(u.urlTree);
                throw u instanceof Eg ? this.noMatchError(u) : u;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.ngModule, this.config, t.root, Dt)
            .pipe(
              (0, et.U)((a) =>
                this.createUrlTree(f(a), t.queryParams, t.fragment)
              )
            )
            .pipe(
              Da((a) => {
                throw a instanceof Eg ? this.noMatchError(a) : a;
              })
            );
        }
        noMatchError(t) {
          return new Error(
            `Cannot match any routes. URL Segment: '${t.segmentGroup}'`
          );
        }
        createUrlTree(t, e, i) {
          const a = t.segments.length > 0 ? new vt([], { [Dt]: t }) : t;
          return new Zl(a, e, i);
        }
        expandSegmentGroup(t, e, i, a) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(t, e, i).pipe((0, et.U)((u) => new vt([], u)))
            : this.expandSegment(t, i, e, i.segments, a, !0);
        }
        expandChildren(t, e, i) {
          const a = [];
          for (const u of Object.keys(i.children))
            "primary" === u ? a.unshift(u) : a.push(u);
          return (0, Yn.D)(a).pipe(
            xh((u) => {
              const h = i.children[u],
                _ = xx(e, u);
              return this.expandSegmentGroup(t, _, h, u).pipe(
                (0, et.U)((b) => ({ segment: b, outlet: u }))
              );
            }),
            ag((u, h) => ((u[h.outlet] = h.segment), u), {}),
            (function (n, t) {
              const e = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  n ? En((a, u) => n(a, u, i)) : bS.y,
                  yS(1),
                  e ? lb(t) : lg(() => new og())
                );
            })()
          );
        }
        expandSegment(t, e, i, a, u, h) {
          return (0, Yn.D)(i).pipe(
            xh((_) =>
              this.expandSegmentAgainstRoute(t, e, i, _, a, u, h).pipe(
                Da((S) => {
                  if (S instanceof Eg) return (0, Oe.of)(null);
                  throw S;
                })
              )
            ),
            Pa((_) => !!_),
            Da((_, b) => {
              if (_ instanceof og || "EmptyError" === _.name) {
                if (YS(e, a, u)) return (0, Oe.of)(new vt([], {}));
                throw new Eg(e);
              }
              throw _;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, i, a, u, h, _) {
          return Px(a, e, u, h)
            ? void 0 === a.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, a, u, h)
              : _ && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, a, u, h)
              : Mb(e)
            : Mb(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, i, a, u, h) {
          return "**" === a.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, a, h)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                i,
                a,
                u,
                h
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, a) {
          const u = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? Fx(u)
            : this.lineralizeSegments(i, u).pipe(
                (0, ki.zg)((h) => {
                  const _ = new vt(h, {});
                  return this.expandSegment(t, _, e, h, a, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, a, u, h) {
          const {
            matched: _,
            consumedSegments: b,
            lastChild: S,
            positionalParamSegments: T,
          } = wb(e, a, u);
          if (!_) return Mb(e);
          const A = this.applyRedirectCommands(b, a.redirectTo, T);
          return a.redirectTo.startsWith("/")
            ? Fx(A)
            : this.lineralizeSegments(a, A).pipe(
                (0, ki.zg)((B) =>
                  this.expandSegment(t, e, i, B.concat(u.slice(S)), h, !1)
                )
              );
        }
        matchSegmentAgainstRoute(t, e, i, a, u) {
          if ("**" === i.path)
            return i.loadChildren
              ? (i._loadedConfig
                  ? (0, Oe.of)(i._loadedConfig)
                  : this.configLoader.load(t.injector, i)
                ).pipe((0, et.U)((B) => ((i._loadedConfig = B), new vt(a, {}))))
              : (0, Oe.of)(new vt(a, {}));
          const { matched: h, consumedSegments: _, lastChild: b } = wb(e, i, a);
          if (!h) return Mb(e);
          const S = a.slice(b);
          return this.getChildConfig(t, i, a).pipe(
            (0, ki.zg)((A) => {
              const B = A.module,
                j = A.routes,
                { segmentGroup: X, slicedSegments: ve } = Sb(e, _, S, j),
                De = new vt(X.segments, X.children);
              if (0 === ve.length && De.hasChildren())
                return this.expandChildren(B, j, De).pipe(
                  (0, et.U)((mt) => new vt(_, mt))
                );
              if (0 === j.length && 0 === ve.length)
                return (0, Oe.of)(new vt(_, {}));
              const Ne = Mr(i) === u;
              return this.expandSegment(B, De, j, ve, Ne ? Dt : u, !0).pipe(
                (0, et.U)((Fe) => new vt(_.concat(Fe.segments), Fe.children))
              );
            })
          );
        }
        getChildConfig(t, e, i) {
          return e.children
            ? (0, Oe.of)(new Fa(e.children, t))
            : e.loadChildren
            ? void 0 !== e._loadedConfig
              ? (0, Oe.of)(e._loadedConfig)
              : this.runCanLoadGuards(t.injector, e, i).pipe(
                  (0, ki.zg)((a) => {
                    return a
                      ? this.configLoader
                          .load(t.injector, e)
                          .pipe((0, et.U)((u) => ((e._loadedConfig = u), u)))
                      : ((n = e),
                        new Sn.y((t) =>
                          t.error(
                            ub(
                              `Cannot load children because the guard of the route "path: '${n.path}'" returned false`
                            )
                          )
                        ));
                    var n;
                  })
                )
            : (0, Oe.of)(new Fa([], t));
        }
        runCanLoadGuards(t, e, i) {
          const a = e.canLoad;
          if (!a || 0 === a.length) return (0, Oe.of)(!0);
          const u = a.map((h) => {
            const _ = t.get(h);
            let b;
            if ((n = _) && La(n.canLoad)) b = _.canLoad(e, i);
            else {
              if (!La(_)) throw new Error("Invalid CanLoad guard");
              b = _(e, i);
            }
            var n;
            return Ns(b);
          });
          return (0, Oe.of)(u).pipe(
            Ef(),
            (0, sn.b)((h) => {
              if (!Jl(h)) return;
              const _ = ub(
                `Redirecting to "${this.urlSerializer.serialize(h)}"`
              );
              throw ((_.url = h), _);
            }),
            (0, et.U)((h) => !0 === h)
          );
        }
        lineralizeSegments(t, e) {
          let i = [],
            a = e.root;
          for (;;) {
            if (((i = i.concat(a.segments)), 0 === a.numberOfChildren))
              return (0, Oe.of)(i);
            if (a.numberOfChildren > 1 || !a.children[Dt])
              return r(t.redirectTo);
            a = a.children[Dt];
          }
        }
        applyRedirectCommands(t, e, i) {
          return this.applyRedirectCreatreUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            i
          );
        }
        applyRedirectCreatreUrlTree(t, e, i, a) {
          const u = this.createSegmentGroup(t, e.root, i, a);
          return new Zl(
            u,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const i = {};
          return (
            ri(t, (a, u) => {
              if ("string" == typeof a && a.startsWith(":")) {
                const _ = a.substring(1);
                i[u] = e[_];
              } else i[u] = a;
            }),
            i
          );
        }
        createSegmentGroup(t, e, i, a) {
          const u = this.createSegments(t, e.segments, i, a);
          let h = {};
          return (
            ri(e.children, (_, b) => {
              h[b] = this.createSegmentGroup(t, _, i, a);
            }),
            new vt(u, h)
          );
        }
        createSegments(t, e, i, a) {
          return e.map((u) =>
            u.path.startsWith(":")
              ? this.findPosParam(t, u, a)
              : this.findOrReturn(u, i)
          );
        }
        findPosParam(t, e, i) {
          const a = i[e.path.substring(1)];
          if (!a)
            throw new Error(
              `Cannot redirect to '${t}'. Cannot find '${e.path}'.`
            );
          return a;
        }
        findOrReturn(t, e) {
          let i = 0;
          for (const a of e) {
            if (a.path === t.path) return e.splice(i), a;
            i++;
          }
          return t;
        }
      }
      function f(n) {
        const t = {};
        for (const i of Object.keys(n.children)) {
          const u = f(n.children[i]);
          (u.segments.length > 0 || u.hasChildren()) && (t[i] = u);
        }
        return (function (n) {
          if (1 === n.numberOfChildren && n.children[Dt]) {
            const t = n.children[Dt];
            return new vt(n.segments.concat(t.segments), t.children);
          }
          return n;
        })(new vt(n.segments, t));
      }
      class y {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class E {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function w(n, t, e) {
        const i = n._root;
        return F(i, t ? t._root : null, e, [i.value]);
      }
      function I(n, t, e) {
        const i = (function (n) {
          if (!n) return null;
          for (let t = n.parent; t; t = t.parent) {
            const e = t.routeConfig;
            if (e && e._loadedConfig) return e._loadedConfig;
          }
          return null;
        })(t);
        return (i ? i.module.injector : e).get(n);
      }
      function F(
        n,
        t,
        e,
        i,
        a = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const u = mf(t);
        return (
          n.children.forEach((h) => {
            (function (
              n,
              t,
              e,
              i,
              a = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const u = n.value,
                h = t ? t.value : null,
                _ = e ? e.getContext(n.value.outlet) : null;
              if (h && u.routeConfig === h.routeConfig) {
                const b = (function (n, t, e) {
                  if ("function" == typeof e) return e(n, t);
                  switch (e) {
                    case "pathParamsChange":
                      return !ql(n.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !ql(n.url, t.url) || !Ps(n.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !gf(n, t) || !Ps(n.queryParams, t.queryParams);
                    case "paramsChange":
                    default:
                      return !gf(n, t);
                  }
                })(h, u, u.routeConfig.runGuardsAndResolvers);
                b
                  ? a.canActivateChecks.push(new y(i))
                  : ((u.data = h.data), (u._resolvedData = h._resolvedData)),
                  F(n, t, u.component ? (_ ? _.children : null) : e, i, a),
                  b &&
                    _ &&
                    _.outlet &&
                    _.outlet.isActivated &&
                    a.canDeactivateChecks.push(new E(_.outlet.component, h));
              } else
                h && Q(t, _, a),
                  a.canActivateChecks.push(new y(i)),
                  F(n, null, u.component ? (_ ? _.children : null) : e, i, a);
            })(h, u[h.value.outlet], e, i.concat([h.value]), a),
              delete u[h.value.outlet];
          }),
          ri(u, (h, _) => Q(h, e.getContext(_), a)),
          a
        );
      }
      function Q(n, t, e) {
        const i = mf(n),
          a = n.value;
        ri(i, (u, h) => {
          Q(u, a.component ? (t ? t.children.getContext(h) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new E(
              a.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              a
            )
          );
      }
      class Wu {}
      function tc(n) {
        return new Sn.y((t) => t.error(n));
      }
      class Tb {
        constructor(t, e, i, a, u, h) {
          (this.rootComponentType = t),
            (this.config = e),
            (this.urlTree = i),
            (this.url = a),
            (this.paramsInheritanceStrategy = u),
            (this.relativeLinkResolution = h);
        }
        recognize() {
          const t = Sb(
              this.urlTree.root,
              [],
              [],
              this.config.filter((h) => void 0 === h.redirectTo),
              this.relativeLinkResolution
            ).segmentGroup,
            e = this.processSegmentGroup(this.config, t, Dt);
          if (null === e) return null;
          const i = new Kn(
              [],
              Object.freeze({}),
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              {},
              Dt,
              this.rootComponentType,
              null,
              this.urlTree.root,
              -1,
              {}
            ),
            a = new To(i, e),
            u = new Gu(this.url, a);
          return this.inheritParamsAndData(u._root), u;
        }
        inheritParamsAndData(t) {
          const e = t.value,
            i = _g(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            t.children.forEach((a) => this.inheritParamsAndData(a));
        }
        processSegmentGroup(t, e, i) {
          return 0 === e.segments.length && e.hasChildren()
            ? this.processChildren(t, e)
            : this.processSegment(t, e, e.segments, i);
        }
        processChildren(t, e) {
          const i = [];
          for (const u of Object.keys(e.children)) {
            const h = e.children[u],
              _ = xx(t, u),
              b = this.processSegmentGroup(_, h, u);
            if (null === b) return null;
            i.push(...b);
          }
          const a = wg(i);
          return (
            a.sort((t, e) =>
              t.value.outlet === Dt
                ? -1
                : e.value.outlet === Dt
                ? 1
                : t.value.outlet.localeCompare(e.value.outlet)
            ),
            a
          );
        }
        processSegment(t, e, i, a) {
          for (const u of t) {
            const h = this.processSegmentAgainstRoute(u, e, i, a);
            if (null !== h) return h;
          }
          return YS(e, i, a) ? [] : null;
        }
        processSegmentAgainstRoute(t, e, i, a) {
          if (t.redirectTo || !Px(t, e, i, a)) return null;
          let u,
            h = [],
            _ = [];
          if ("**" === t.path) {
            const j = i.length > 0 ? ux(i).parameters : {};
            u = new Kn(
              i,
              j,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              sN(t),
              Mr(t),
              t.component,
              t,
              iN(e),
              rN(e) + i.length,
              oN(t)
            );
          } else {
            const j = wb(e, t, i);
            if (!j.matched) return null;
            (h = j.consumedSegments),
              (_ = i.slice(j.lastChild)),
              (u = new Kn(
                h,
                j.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                sN(t),
                Mr(t),
                t.component,
                t,
                iN(e),
                rN(e) + h.length,
                oN(t)
              ));
          }
          const b = (n = t).children
              ? n.children
              : n.loadChildren
              ? n._loadedConfig.routes
              : [],
            { segmentGroup: S, slicedSegments: T } = Sb(
              e,
              h,
              _,
              b.filter((j) => void 0 === j.redirectTo),
              this.relativeLinkResolution
            );
          var n;
          if (0 === T.length && S.hasChildren()) {
            const j = this.processChildren(b, S);
            return null === j ? null : [new To(u, j)];
          }
          if (0 === b.length && 0 === T.length) return [new To(u, [])];
          const A = Mr(t) === a,
            B = this.processSegment(b, S, T, A ? Dt : a);
          return null === B ? null : [new To(u, B)];
        }
      }
      function xb(n) {
        const t = n.value.routeConfig;
        return t && "" === t.path && void 0 === t.redirectTo;
      }
      function wg(n) {
        const t = [],
          e = new Set();
        for (const i of n) {
          if (!xb(i)) {
            t.push(i);
            continue;
          }
          const a = t.find((u) => i.value.routeConfig === u.value.routeConfig);
          void 0 !== a ? (a.children.push(...i.children), e.add(a)) : t.push(i);
        }
        for (const i of e) {
          const a = wg(i.children);
          t.push(new To(i.value, a));
        }
        return t.filter((i) => !e.has(i));
      }
      function iN(n) {
        let t = n;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function rN(n) {
        let t = n,
          e = t._segmentIndexShift ? t._segmentIndexShift : 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment),
            (e += t._segmentIndexShift ? t._segmentIndexShift : 0);
        return e - 1;
      }
      function sN(n) {
        return n.data || {};
      }
      function oN(n) {
        return n.resolve || {};
      }
      function Lx(n) {
        return Xt((t) => {
          const e = n(t);
          return e ? (0, Yn.D)(e).pipe((0, et.U)(() => t)) : (0, Oe.of)(t);
        });
      }
      class ML extends class {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      } {}
      const Vx = new o.OlP("ROUTES");
      class aN {
        constructor(t, e, i, a) {
          (this.loader = t),
            (this.compiler = e),
            (this.onLoadStartListener = i),
            (this.onLoadEndListener = a);
        }
        load(t, e) {
          if (e._loader$) return e._loader$;
          this.onLoadStartListener && this.onLoadStartListener(e);
          const a = this.loadModuleFactory(e.loadChildren).pipe(
            (0, et.U)((u) => {
              this.onLoadEndListener && this.onLoadEndListener(e);
              const h = u.create(t);
              return new Fa(
                cx(h.injector.get(Vx, void 0, o.XFs.Self | o.XFs.Optional)).map(
                  Eb
                ),
                h
              );
            }),
            Da((u) => {
              throw ((e._loader$ = void 0), u);
            })
          );
          return (
            (e._loader$ = new JA.c(a, () => new xe.xQ()).pipe((0, Yl.x)())),
            e._loader$
          );
        }
        loadModuleFactory(t) {
          return "string" == typeof t
            ? (0, Yn.D)(this.loader.load(t))
            : Ns(t()).pipe(
                (0, ki.zg)((e) =>
                  e instanceof o.YKP
                    ? (0, Oe.of)(e)
                    : (0, Yn.D)(this.compiler.compileModuleAsync(e))
                )
              );
        }
      }
      class TL {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new Sg()),
            (this.attachRef = null);
        }
      }
      class Sg {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const i = this.getOrCreateContext(t);
          (i.outlet = e), this.contexts.set(t, i);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && (e.outlet = null);
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new TL()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      class AL {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function xL(n) {
        throw n;
      }
      function RL(n, t, e) {
        return t.parse("/");
      }
      function lN(n, t) {
        return (0, Oe.of)(null);
      }
      const kL = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        OL = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Wi = (() => {
        class n {
          constructor(e, i, a, u, h, _, b, S) {
            (this.rootComponentType = e),
              (this.urlSerializer = i),
              (this.rootContexts = a),
              (this.location = u),
              (this.config = S),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.lastLocationChangeInfo = null),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new xe.xQ()),
              (this.errorHandler = xL),
              (this.malformedUriErrorHandler = RL),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.hooks = {
                beforePreactivation: lN,
                afterPreactivation: lN,
              }),
              (this.urlHandlingStrategy = new AL()),
              (this.routeReuseStrategy = new ML()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.ngModule = h.get(o.h0i)),
              (this.console = h.get(o.c2e));
            const B = h.get(o.R0b);
            (this.isNgZoneEnabled =
              B instanceof o.R0b && o.R0b.isInAngularZone()),
              this.resetConfig(S),
              (this.currentUrlTree = new Zl(new vt([], {}), {}, null)),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.configLoader = new aN(
                _,
                b,
                (j) => this.triggerEvent(new wS(j)),
                (j) => this.triggerEvent(new SS(j))
              )),
              (this.routerState = NS(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new gi({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            var e;
            return null === (e = this.location.getState()) || void 0 === e
              ? void 0
              : e.ɵrouterPageId;
          }
          setupNavigations(e) {
            const i = this.events;
            return e.pipe(
              En((a) => 0 !== a.id),
              (0, et.U)((a) =>
                Object.assign(Object.assign({}, a), {
                  extractedUrl: this.urlHandlingStrategy.extract(a.rawUrl),
                })
              ),
              Xt((a) => {
                let u = !1,
                  h = !1;
                return (0, Oe.of)(a).pipe(
                  (0, sn.b)((_) => {
                    this.currentNavigation = {
                      id: _.id,
                      initialUrl: _.currentRawUrl,
                      extractedUrl: _.extractedUrl,
                      trigger: _.source,
                      extras: _.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Object.assign(
                            Object.assign({}, this.lastSuccessfulNavigation),
                            { previousNavigation: null }
                          )
                        : null,
                    };
                  }),
                  Xt((_) => {
                    const b =
                        !this.navigated ||
                        _.extractedUrl.toString() !==
                          this.browserUrlTree.toString(),
                      S =
                        ("reload" === this.onSameUrlNavigation || b) &&
                        this.urlHandlingStrategy.shouldProcessUrl(_.rawUrl);
                    if ((ZS(_.source) && (this.browserUrlTree = _.rawUrl), S))
                      return (0, Oe.of)(_).pipe(
                        Xt((T) => {
                          const A = this.transitions.getValue();
                          return (
                            i.next(
                              new Bu(
                                T.id,
                                this.serializeUrl(T.extractedUrl),
                                T.source,
                                T.restoredState
                              )
                            ),
                            A !== this.transitions.getValue()
                              ? yo.E
                              : Promise.resolve(T)
                          );
                        }),
                        (function (n, t, e, i) {
                          return Xt((a) =>
                            (function (n, t, e, i, a) {
                              return new c(n, t, e, i, a).apply();
                            })(n, t, e, a.extractedUrl, i).pipe(
                              (0, et.U)((u) =>
                                Object.assign(Object.assign({}, a), {
                                  urlAfterRedirects: u,
                                })
                              )
                            )
                          );
                        })(
                          this.ngModule.injector,
                          this.configLoader,
                          this.urlSerializer,
                          this.config
                        ),
                        (0, sn.b)((T) => {
                          this.currentNavigation = Object.assign(
                            Object.assign({}, this.currentNavigation),
                            { finalUrl: T.urlAfterRedirects }
                          );
                        }),
                        (function (n, t, e, i, a) {
                          return (0, ki.zg)((u) =>
                            (function (
                              n,
                              t,
                              e,
                              i,
                              a = "emptyOnly",
                              u = "legacy"
                            ) {
                              try {
                                const h = new Tb(n, t, e, i, a, u).recognize();
                                return null === h
                                  ? tc(new Wu())
                                  : (0, Oe.of)(h);
                              } catch (h) {
                                return tc(h);
                              }
                            })(
                              n,
                              t,
                              u.urlAfterRedirects,
                              e(u.urlAfterRedirects),
                              i,
                              a
                            ).pipe(
                              (0, et.U)((h) =>
                                Object.assign(Object.assign({}, u), {
                                  targetSnapshot: h,
                                })
                              )
                            )
                          );
                        })(
                          this.rootComponentType,
                          this.config,
                          (T) => this.serializeUrl(T),
                          this.paramsInheritanceStrategy,
                          this.relativeLinkResolution
                        ),
                        (0, sn.b)((T) => {
                          "eager" === this.urlUpdateStrategy &&
                            (T.extras.skipLocationChange ||
                              this.setBrowserUrl(T.urlAfterRedirects, T),
                            (this.browserUrlTree = T.urlAfterRedirects));
                          const A = new ix(
                            T.id,
                            this.serializeUrl(T.extractedUrl),
                            this.serializeUrl(T.urlAfterRedirects),
                            T.targetSnapshot
                          );
                          i.next(A);
                        })
                      );
                    if (
                      b &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: A,
                          extractedUrl: B,
                          source: j,
                          restoredState: X,
                          extras: ve,
                        } = _,
                        De = new Bu(A, this.serializeUrl(B), j, X);
                      i.next(De);
                      const Ne = NS(B, this.rootComponentType).snapshot;
                      return (0, Oe.of)(
                        Object.assign(Object.assign({}, _), {
                          targetSnapshot: Ne,
                          urlAfterRedirects: B,
                          extras: Object.assign(Object.assign({}, ve), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })
                      );
                    }
                    return (
                      (this.rawUrlTree = _.rawUrl),
                      (this.browserUrlTree = _.urlAfterRedirects),
                      _.resolve(null),
                      yo.E
                    );
                  }),
                  Lx((_) => {
                    const {
                      targetSnapshot: b,
                      id: S,
                      extractedUrl: T,
                      rawUrl: A,
                      extras: { skipLocationChange: B, replaceUrl: j },
                    } = _;
                    return this.hooks.beforePreactivation(b, {
                      navigationId: S,
                      appliedUrlTree: T,
                      rawUrlTree: A,
                      skipLocationChange: !!B,
                      replaceUrl: !!j,
                    });
                  }),
                  (0, sn.b)((_) => {
                    const b = new cb(
                      _.id,
                      this.serializeUrl(_.extractedUrl),
                      this.serializeUrl(_.urlAfterRedirects),
                      _.targetSnapshot
                    );
                    this.triggerEvent(b);
                  }),
                  (0, et.U)((_) =>
                    Object.assign(Object.assign({}, _), {
                      guards: w(
                        _.targetSnapshot,
                        _.currentSnapshot,
                        this.rootContexts
                      ),
                    })
                  ),
                  (function (n, t) {
                    return (0, ki.zg)((e) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: a,
                        guards: {
                          canActivateChecks: u,
                          canDeactivateChecks: h,
                        },
                      } = e;
                      return 0 === h.length && 0 === u.length
                        ? (0, Oe.of)(
                            Object.assign(Object.assign({}, e), {
                              guardsResult: !0,
                            })
                          )
                        : (function (n, t, e, i) {
                            return (0, Yn.D)(n).pipe(
                              (0, ki.zg)((a) =>
                                (function (n, t, e, i, a) {
                                  const u =
                                    t && t.routeConfig
                                      ? t.routeConfig.canDeactivate
                                      : null;
                                  if (!u || 0 === u.length)
                                    return (0, Oe.of)(!0);
                                  const h = u.map((_) => {
                                    const b = I(_, t, a);
                                    let S;
                                    if (
                                      (function (n) {
                                        return n && La(n.canDeactivate);
                                      })(b)
                                    )
                                      S = Ns(b.canDeactivate(n, t, e, i));
                                    else {
                                      if (!La(b))
                                        throw new Error(
                                          "Invalid CanDeactivate guard"
                                        );
                                      S = Ns(b(n, t, e, i));
                                    }
                                    return S.pipe(Pa());
                                  });
                                  return (0, Oe.of)(h).pipe(Ef());
                                })(a.component, a.route, e, t, i)
                              ),
                              Pa((a) => !0 !== a, !0)
                            );
                          })(h, i, a, n).pipe(
                            (0, ki.zg)((_) =>
                              _ &&
                              (function (n) {
                                return "boolean" == typeof n;
                              })(_)
                                ? (function (n, t, e, i) {
                                    return (0, Yn.D)(t).pipe(
                                      xh((a) =>
                                        bh(
                                          (function (n, t) {
                                            return (
                                              null !== n && t && t(new qP(n)),
                                              (0, Oe.of)(!0)
                                            );
                                          })(a.route.parent, i),
                                          (function (n, t) {
                                            return (
                                              null !== n && t && t(new rx(n)),
                                              (0, Oe.of)(!0)
                                            );
                                          })(a.route, i),
                                          (function (n, t, e) {
                                            const i = t[t.length - 1],
                                              u = t
                                                .slice(0, t.length - 1)
                                                .reverse()
                                                .map((h) =>
                                                  (function (n) {
                                                    const t = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return t && 0 !== t.length
                                                      ? { node: n, guards: t }
                                                      : null;
                                                  })(h)
                                                )
                                                .filter((h) => null !== h)
                                                .map((h) =>
                                                  Ru(() => {
                                                    const _ = h.guards.map(
                                                      (b) => {
                                                        const S = I(
                                                          b,
                                                          h.node,
                                                          e
                                                        );
                                                        let T;
                                                        if (
                                                          (function (n) {
                                                            return (
                                                              n &&
                                                              La(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(S)
                                                        )
                                                          T = Ns(
                                                            S.canActivateChild(
                                                              i,
                                                              n
                                                            )
                                                          );
                                                        else {
                                                          if (!La(S))
                                                            throw new Error(
                                                              "Invalid CanActivateChild guard"
                                                            );
                                                          T = Ns(S(i, n));
                                                        }
                                                        return T.pipe(Pa());
                                                      }
                                                    );
                                                    return (0, Oe.of)(_).pipe(
                                                      Ef()
                                                    );
                                                  })
                                                );
                                            return (0, Oe.of)(u).pipe(Ef());
                                          })(n, a.path, e),
                                          (function (n, t, e) {
                                            const i = t.routeConfig
                                              ? t.routeConfig.canActivate
                                              : null;
                                            if (!i || 0 === i.length)
                                              return (0, Oe.of)(!0);
                                            const a = i.map((u) =>
                                              Ru(() => {
                                                const h = I(u, t, e);
                                                let _;
                                                if (
                                                  (function (n) {
                                                    return (
                                                      n && La(n.canActivate)
                                                    );
                                                  })(h)
                                                )
                                                  _ = Ns(h.canActivate(t, n));
                                                else {
                                                  if (!La(h))
                                                    throw new Error(
                                                      "Invalid CanActivate guard"
                                                    );
                                                  _ = Ns(h(t, n));
                                                }
                                                return _.pipe(Pa());
                                              })
                                            );
                                            return (0, Oe.of)(a).pipe(Ef());
                                          })(n, a.route, e)
                                        )
                                      ),
                                      Pa((a) => !0 !== a, !0)
                                    );
                                  })(i, u, n, t)
                                : (0, Oe.of)(_)
                            ),
                            (0, et.U)((_) =>
                              Object.assign(Object.assign({}, e), {
                                guardsResult: _,
                              })
                            )
                          );
                    });
                  })(this.ngModule.injector, (_) => this.triggerEvent(_)),
                  (0, sn.b)((_) => {
                    if (Jl(_.guardsResult)) {
                      const S = ub(
                        `Redirecting to "${this.serializeUrl(_.guardsResult)}"`
                      );
                      throw ((S.url = _.guardsResult), S);
                    }
                    const b = new ES(
                      _.id,
                      this.serializeUrl(_.extractedUrl),
                      this.serializeUrl(_.urlAfterRedirects),
                      _.targetSnapshot,
                      !!_.guardsResult
                    );
                    this.triggerEvent(b);
                  }),
                  En(
                    (_) =>
                      !!_.guardsResult ||
                      (this.restoreHistory(_),
                      this.cancelNavigationTransition(_, ""),
                      !1)
                  ),
                  Lx((_) => {
                    if (_.guards.canActivateChecks.length)
                      return (0, Oe.of)(_).pipe(
                        (0, sn.b)((b) => {
                          const S = new qn(
                            b.id,
                            this.serializeUrl(b.extractedUrl),
                            this.serializeUrl(b.urlAfterRedirects),
                            b.targetSnapshot
                          );
                          this.triggerEvent(S);
                        }),
                        Xt((b) => {
                          let S = !1;
                          return (0, Oe.of)(b).pipe(
                            (function (n, t) {
                              return (0, ki.zg)((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: a },
                                } = e;
                                if (!a.length) return (0, Oe.of)(e);
                                let u = 0;
                                return (0, Yn.D)(a).pipe(
                                  xh((h) =>
                                    (function (n, t, e, i) {
                                      return (function (n, t, e, i) {
                                        const a = Object.keys(n);
                                        if (0 === a.length)
                                          return (0, Oe.of)({});
                                        const u = {};
                                        return (0, Yn.D)(a).pipe(
                                          (0, ki.zg)((h) =>
                                            (function (n, t, e, i) {
                                              const a = I(n, t, i);
                                              return Ns(
                                                a.resolve
                                                  ? a.resolve(t, e)
                                                  : a(t, e)
                                              );
                                            })(n[h], t, e, i).pipe(
                                              (0, sn.b)((_) => {
                                                u[h] = _;
                                              })
                                            )
                                          ),
                                          yS(1),
                                          (0, ki.zg)(() =>
                                            Object.keys(u).length === a.length
                                              ? (0, Oe.of)(u)
                                              : yo.E
                                          )
                                        );
                                      })(n._resolve, n, t, i).pipe(
                                        (0, et.U)(
                                          (u) => (
                                            (n._resolvedData = u),
                                            (n.data = Object.assign(
                                              Object.assign({}, n.data),
                                              _g(n, e).resolve
                                            )),
                                            null
                                          )
                                        )
                                      );
                                    })(h.route, i, n, t)
                                  ),
                                  (0, sn.b)(() => u++),
                                  yS(1),
                                  (0, ki.zg)((h) =>
                                    u === a.length ? (0, Oe.of)(e) : yo.E
                                  )
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            (0, sn.b)({
                              next: () => (S = !0),
                              complete: () => {
                                S ||
                                  (this.restoreHistory(b),
                                  this.cancelNavigationTransition(
                                    b,
                                    "At least one route resolver didn't emit any value."
                                  ));
                              },
                            })
                          );
                        }),
                        (0, sn.b)((b) => {
                          const S = new ZP(
                            b.id,
                            this.serializeUrl(b.extractedUrl),
                            this.serializeUrl(b.urlAfterRedirects),
                            b.targetSnapshot
                          );
                          this.triggerEvent(S);
                        })
                      );
                  }),
                  Lx((_) => {
                    const {
                      targetSnapshot: b,
                      id: S,
                      extractedUrl: T,
                      rawUrl: A,
                      extras: { skipLocationChange: B, replaceUrl: j },
                    } = _;
                    return this.hooks.afterPreactivation(b, {
                      navigationId: S,
                      appliedUrlTree: T,
                      rawUrlTree: A,
                      skipLocationChange: !!B,
                      replaceUrl: !!j,
                    });
                  }),
                  (0, et.U)((_) => {
                    const b = (function (n, t, e) {
                      const i = Kl(n, t._root, e ? e._root : void 0);
                      return new _b(i, t);
                    })(
                      this.routeReuseStrategy,
                      _.targetSnapshot,
                      _.currentRouterState
                    );
                    return Object.assign(Object.assign({}, _), {
                      targetRouterState: b,
                    });
                  }),
                  (0, sn.b)((_) => {
                    (this.currentUrlTree = _.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        this.currentUrlTree,
                        _.rawUrl
                      )),
                      (this.routerState = _.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (_.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, _),
                        (this.browserUrlTree = _.urlAfterRedirects));
                  }),
                  ((n, t, e) =>
                    (0, et.U)(
                      (i) => (
                        new Cf(
                          t,
                          i.targetRouterState,
                          i.currentRouterState,
                          e
                        ).activate(n),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (_) =>
                    this.triggerEvent(_)
                  ),
                  (0, sn.b)({
                    next() {
                      u = !0;
                    },
                    complete() {
                      u = !0;
                    },
                  }),
                  ay(() => {
                    if (!u && !h) {
                      const _ = `Navigation ID ${a.id} is not equal to the current navigation id ${this.navigationId}`;
                      "replace" === this.canceledNavigationResolution
                        ? (this.restoreHistory(a),
                          this.cancelNavigationTransition(a, _))
                        : this.cancelNavigationTransition(a, _);
                    }
                    this.currentNavigation = null;
                  }),
                  Da((_) => {
                    if (
                      ((h = !0),
                      (function (n) {
                        return n && n[DS];
                      })(_))
                    ) {
                      const b = Jl(_.url);
                      b || ((this.navigated = !0), this.restoreHistory(a, !0));
                      const S = new CS(
                        a.id,
                        this.serializeUrl(a.extractedUrl),
                        _.message
                      );
                      i.next(S),
                        b
                          ? setTimeout(() => {
                              const T = this.urlHandlingStrategy.merge(
                                  _.url,
                                  this.rawUrlTree
                                ),
                                A = {
                                  skipLocationChange:
                                    a.extras.skipLocationChange,
                                  replaceUrl:
                                    "eager" === this.urlUpdateStrategy ||
                                    ZS(a.source),
                                };
                              this.scheduleNavigation(
                                T,
                                "imperative",
                                null,
                                A,
                                {
                                  resolve: a.resolve,
                                  reject: a.reject,
                                  promise: a.promise,
                                }
                              );
                            }, 0)
                          : a.resolve(!1);
                    } else {
                      this.restoreHistory(a, !0);
                      const b = new df(
                        a.id,
                        this.serializeUrl(a.extractedUrl),
                        _
                      );
                      i.next(b);
                      try {
                        a.resolve(this.errorHandler(_));
                      } catch (S) {
                        a.reject(S);
                      }
                    }
                    return yo.E;
                  })
                );
              })
            );
          }
          resetRootComponentType(e) {
            (this.rootComponentType = e),
              (this.routerState.root.component = this.rootComponentType);
          }
          getTransition() {
            const e = this.transitions.value;
            return (e.urlAfterRedirects = this.browserUrlTree), e;
          }
          setTransition(e) {
            this.transitions.next(
              Object.assign(Object.assign({}, this.getTransition()), e)
            );
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = this.extractLocationChangeInfoFromEvent(e);
                this.shouldScheduleNavigation(this.lastLocationChangeInfo, i) &&
                  setTimeout(() => {
                    const { source: a, state: u, urlTree: h } = i,
                      _ = { replaceUrl: !0 };
                    if (u) {
                      const b = Object.assign({}, u);
                      delete b.navigationId,
                        delete b.ɵrouterPageId,
                        0 !== Object.keys(b).length && (_.state = b);
                    }
                    this.scheduleNavigation(h, a, u, _);
                  }, 0),
                  (this.lastLocationChangeInfo = i);
              }));
          }
          extractLocationChangeInfoFromEvent(e) {
            var i;
            return {
              source: "popstate" === e.type ? "popstate" : "hashchange",
              urlTree: this.parseUrl(e.url),
              state: (
                null === (i = e.state) || void 0 === i ? void 0 : i.navigationId
              )
                ? e.state
                : null,
              transitionId: this.getTransition().id,
            };
          }
          shouldScheduleNavigation(e, i) {
            if (!e) return !0;
            const a = i.urlTree.toString() === e.urlTree.toString();
            return (
              i.transitionId !== e.transitionId ||
              !a ||
              !(
                ("hashchange" === i.source && "popstate" === e.source) ||
                ("popstate" === i.source && "hashchange" === e.source)
              )
            );
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(e) {
            this.events.next(e);
          }
          resetConfig(e) {
            bb(e),
              (this.config = e.map(Eb)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: a,
                queryParams: u,
                fragment: h,
                queryParamsHandling: _,
                preserveFragment: b,
              } = i,
              S = a || this.routerState.root,
              T = b ? this.currentUrlTree.fragment : h;
            let A = null;
            switch (_) {
              case "merge":
                A = Object.assign(
                  Object.assign({}, this.currentUrlTree.queryParams),
                  u
                );
                break;
              case "preserve":
                A = this.currentUrlTree.queryParams;
                break;
              default:
                A = u || null;
            }
            return (
              null !== A && (A = this.removeEmptyProps(A)),
              (function (n, t, e, i, a) {
                if (0 === e.length) return vb(t.root, t.root, t, i, a);
                const u = (function (n) {
                  if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
                    return new Io(!0, 0, n);
                  let t = 0,
                    e = !1;
                  const i = n.reduce((a, u, h) => {
                    if ("object" == typeof u && null != u) {
                      if (u.outlets) {
                        const _ = {};
                        return (
                          ri(u.outlets, (b, S) => {
                            _[S] = "string" == typeof b ? b.split("/") : b;
                          }),
                          [...a, { outlets: _ }]
                        );
                      }
                      if (u.segmentPath) return [...a, u.segmentPath];
                    }
                    return "string" != typeof u
                      ? [...a, u]
                      : 0 === h
                      ? (u.split("/").forEach((_, b) => {
                          (0 == b && "." === _) ||
                            (0 == b && "" === _
                              ? (e = !0)
                              : ".." === _
                              ? t++
                              : "" != _ && a.push(_));
                        }),
                        a)
                      : [...a, u];
                  }, []);
                  return new Io(e, t, i);
                })(e);
                if (u.toRoot()) return vb(t.root, new vt([], {}), t, i, a);
                const h = (function (n, t, e) {
                    if (n.isAbsolute) return new bf(t.root, !0, 0);
                    if (-1 === e.snapshot._lastPathIndex) {
                      const u = e.snapshot._urlSegment;
                      return new bf(u, u === t.root, 0);
                    }
                    const i = _f(n.commands[0]) ? 0 : 1;
                    return (function (n, t, e) {
                      let i = n,
                        a = t,
                        u = e;
                      for (; u > a; ) {
                        if (((u -= a), (i = i.parent), !i))
                          throw new Error("Invalid number of '../'");
                        a = i.segments.length;
                      }
                      return new bf(i, !1, a - u);
                    })(
                      e.snapshot._urlSegment,
                      e.snapshot._lastPathIndex + i,
                      n.numberOfDoubleDots
                    );
                  })(u, t, n),
                  _ = h.processChildren
                    ? vg(h.segmentGroup, h.index, u.commands)
                    : yg(h.segmentGroup, h.index, u.commands);
                return vb(h.segmentGroup, _, t, i, a);
              })(S, this.currentUrlTree, e, A, null != T ? T : null)
            );
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const a = Jl(e) ? e : this.parseUrl(e),
              u = this.urlHandlingStrategy.merge(a, this.rawUrlTree);
            return this.scheduleNavigation(u, "imperative", null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function (n) {
                for (let t = 0; t < n.length; t++) {
                  const e = n[t];
                  if (null == e)
                    throw new Error(
                      `The requested path contains ${e} segment at index ${t}`
                    );
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (a) {
              i = this.malformedUriErrorHandler(a, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let a;
            if (
              ((a =
                !0 === i
                  ? Object.assign({}, kL)
                  : !1 === i
                  ? Object.assign({}, OL)
                  : i),
              Jl(e))
            )
              return TS(this.currentUrlTree, e, a);
            const u = this.parseUrl(e);
            return TS(this.currentUrlTree, u, a);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, a) => {
              const u = e[a];
              return null != u && (i[a] = u), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (e) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = e.id),
                  (this.currentPageId = e.targetPageId),
                  this.events.next(
                    new Na(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  e.resolve(!0);
              },
              (e) => {
                this.console.warn("Unhandled Navigation Error: ");
              }
            );
          }
          scheduleNavigation(e, i, a, u, h) {
            var _, b;
            if (this.disposed) return Promise.resolve(!1);
            const S = this.getTransition(),
              T = ZS(i) && S && !ZS(S.source),
              j =
                (this.lastSuccessfulId === S.id || this.currentNavigation
                  ? S.rawUrl
                  : S.urlAfterRedirects
                ).toString() === e.toString();
            if (T && j) return Promise.resolve(!0);
            let X, ve, De;
            h
              ? ((X = h.resolve), (ve = h.reject), (De = h.promise))
              : (De = new Promise((Fe, mt) => {
                  (X = Fe), (ve = mt);
                }));
            const Ne = ++this.navigationId;
            let qe;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (a = this.location.getState()),
                  (qe =
                    a && a.ɵrouterPageId
                      ? a.ɵrouterPageId
                      : u.replaceUrl || u.skipLocationChange
                      ? null !== (_ = this.browserPageId) && void 0 !== _
                        ? _
                        : 0
                      : (null !== (b = this.browserPageId) && void 0 !== b
                          ? b
                          : 0) + 1))
                : (qe = 0),
              this.setTransition({
                id: Ne,
                targetPageId: qe,
                source: i,
                restoredState: a,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: e,
                extras: u,
                resolve: X,
                reject: ve,
                promise: De,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              De.catch((Fe) => Promise.reject(Fe))
            );
          }
          setBrowserUrl(e, i) {
            const a = this.urlSerializer.serialize(e),
              u = Object.assign(
                Object.assign({}, i.extras.state),
                this.generateNgRouterState(i.id, i.targetPageId)
              );
            this.location.isCurrentPathEqualTo(a) || i.extras.replaceUrl
              ? this.location.replaceState(a, "", u)
              : this.location.go(a, "", u);
          }
          restoreHistory(e, i = !1) {
            var a, u;
            if ("computed" === this.canceledNavigationResolution) {
              const h = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !==
                  (null === (a = this.currentNavigation) || void 0 === a
                    ? void 0
                    : a.finalUrl)) ||
              0 === h
                ? this.currentUrlTree ===
                    (null === (u = this.currentNavigation) || void 0 === u
                      ? void 0
                      : u.finalUrl) &&
                  0 === h &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(h);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(e, i) {
            const a = new CS(e.id, this.serializeUrl(e.extractedUrl), i);
            this.triggerEvent(a), e.resolve(!1);
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(o.DyG),
              o.LFG(xS),
              o.LFG(Sg),
              o.LFG(Ye),
              o.LFG(o.zs3),
              o.LFG(o.v3s),
              o.LFG(o.Sil),
              o.LFG(void 0)
            );
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function ZS(n) {
        return "imperative" !== n;
      }
      let Rb = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this.router = e),
                (this.route = i),
                (this.commands = []),
                (this.onChanges = new xe.xQ()),
                null == a && u.setAttribute(h.nativeElement, "tabindex", "0");
            }
            ngOnChanges(e) {
              this.onChanges.next(this);
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            onClick() {
              const e = {
                skipLocationChange: Dg(this.skipLocationChange),
                replaceUrl: Dg(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo:
                  void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: Dg(this.preserveFragment),
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Wi),
                o.Y36(ju),
                o.$8M("tabindex"),
                o.Y36(o.Qsj),
                o.Y36(o.SBq)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function () {
                    return i.onClick();
                  });
              },
              inputs: {
                routerLink: "routerLink",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
              },
              features: [o.TTD],
            })),
            n
          );
        })(),
        Bx = (() => {
          class n {
            constructor(e, i, a) {
              (this.router = e),
                (this.route = i),
                (this.locationStrategy = a),
                (this.commands = []),
                (this.onChanges = new xe.xQ()),
                (this.subscription = e.events.subscribe((u) => {
                  u instanceof Na && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, i, a, u, h) {
              if (
                0 !== e ||
                i ||
                a ||
                u ||
                h ||
                ("string" == typeof this.target && "_self" != this.target)
              )
                return !0;
              const _ = {
                skipLocationChange: Dg(this.skipLocationChange),
                replaceUrl: Dg(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, _), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(
                this.router.serializeUrl(this.urlTree)
              );
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo:
                  void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: Dg(this.preserveFragment),
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36(Wi), o.Y36(ju), o.Y36(Ce));
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  o.NdJ("click", function (u) {
                    return i.onClick(
                      u.button,
                      u.ctrlKey,
                      u.shiftKey,
                      u.altKey,
                      u.metaKey
                    );
                  }),
                  2 & e &&
                    (o.Ikx("href", i.href, o.LSH), o.uIk("target", i.target));
              },
              inputs: {
                routerLink: "routerLink",
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
              },
              features: [o.TTD],
            })),
            n
          );
        })();
      function Dg(n) {
        return "" === n || !!n;
      }
      let cN = (() => {
          class n {
            constructor(e, i, a, u, h, _) {
              (this.router = e),
                (this.element = i),
                (this.renderer = a),
                (this.cdr = u),
                (this.link = h),
                (this.linkWithHref = _),
                (this.classes = []),
                (this.isActive = !1),
                (this.routerLinkActiveOptions = { exact: !1 }),
                (this.routerEventsSubscription = e.events.subscribe((b) => {
                  b instanceof Na && this.update();
                }));
            }
            ngAfterContentInit() {
              (0, Oe.of)(
                this.links.changes,
                this.linksWithHrefs.changes,
                (0, Oe.of)(null)
              )
                .pipe((0, nm.J)())
                .subscribe((e) => {
                  this.update(), this.subscribeToEachLinkOnChanges();
                });
            }
            subscribeToEachLinkOnChanges() {
              var e;
              null === (e = this.linkInputChangesSubscription) ||
                void 0 === e ||
                e.unsubscribe();
              const i = [
                ...this.links.toArray(),
                ...this.linksWithHrefs.toArray(),
                this.link,
                this.linkWithHref,
              ]
                .filter((a) => !!a)
                .map((a) => a.onChanges);
              this.linkInputChangesSubscription = (0, Yn.D)(i)
                .pipe((0, nm.J)())
                .subscribe((a) => {
                  this.isActive !== this.isLinkActive(this.router)(a) &&
                    this.update();
                });
            }
            set routerLinkActive(e) {
              const i = Array.isArray(e) ? e : e.split(" ");
              this.classes = i.filter((a) => !!a);
            }
            ngOnChanges(e) {
              this.update();
            }
            ngOnDestroy() {
              var e;
              this.routerEventsSubscription.unsubscribe(),
                null === (e = this.linkInputChangesSubscription) ||
                  void 0 === e ||
                  e.unsubscribe();
            }
            update() {
              !this.links ||
                !this.linksWithHrefs ||
                !this.router.navigated ||
                Promise.resolve().then(() => {
                  const e = this.hasActiveLinks();
                  this.isActive !== e &&
                    ((this.isActive = e),
                    this.cdr.markForCheck(),
                    this.classes.forEach((i) => {
                      e
                        ? this.renderer.addClass(this.element.nativeElement, i)
                        : this.renderer.removeClass(
                            this.element.nativeElement,
                            i
                          );
                    }));
                });
            }
            isLinkActive(e) {
              const i = (function (n) {
                return !!n.paths;
              })(this.routerLinkActiveOptions)
                ? this.routerLinkActiveOptions
                : this.routerLinkActiveOptions.exact || !1;
              return (a) => e.isActive(a.urlTree, i);
            }
            hasActiveLinks() {
              const e = this.isLinkActive(this.router);
              return (
                (this.link && e(this.link)) ||
                (this.linkWithHref && e(this.linkWithHref)) ||
                this.links.some(e) ||
                this.linksWithHrefs.some(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Wi),
                o.Y36(o.SBq),
                o.Y36(o.Qsj),
                o.Y36(o.sBO),
                o.Y36(Rb, 8),
                o.Y36(Bx, 8)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["", "routerLinkActive", ""]],
              contentQueries: function (e, i, a) {
                if ((1 & e && (o.Suo(a, Rb, 5), o.Suo(a, Bx, 5)), 2 & e)) {
                  let u;
                  o.iGM((u = o.CRH())) && (i.links = u),
                    o.iGM((u = o.CRH())) && (i.linksWithHrefs = u);
                }
              },
              inputs: {
                routerLinkActiveOptions: "routerLinkActiveOptions",
                routerLinkActive: "routerLinkActive",
              },
              exportAs: ["routerLinkActive"],
              features: [o.TTD],
            })),
            n
          );
        })(),
        Ux = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this.parentContexts = e),
                (this.location = i),
                (this.resolver = a),
                (this.changeDetector = h),
                (this.activated = null),
                (this._activatedRoute = null),
                (this.activateEvents = new o.vpe()),
                (this.deactivateEvents = new o.vpe()),
                (this.name = u || Dt),
                e.onChildOutletCreated(this.name, this);
            }
            ngOnDestroy() {
              this.parentContexts.onChildOutletDestroyed(this.name);
            }
            ngOnInit() {
              if (!this.activated) {
                const e = this.parentContexts.getContext(this.name);
                e &&
                  e.route &&
                  (e.attachRef
                    ? this.attach(e.attachRef, e.route)
                    : this.activateWith(e.route, e.resolver || null));
              }
            }
            get isActivated() {
              return !!this.activated;
            }
            get component() {
              if (!this.activated) throw new Error("Outlet is not activated");
              return this.activated.instance;
            }
            get activatedRoute() {
              if (!this.activated) throw new Error("Outlet is not activated");
              return this._activatedRoute;
            }
            get activatedRouteData() {
              return this._activatedRoute
                ? this._activatedRoute.snapshot.data
                : {};
            }
            detach() {
              if (!this.activated) throw new Error("Outlet is not activated");
              this.location.detach();
              const e = this.activated;
              return (this.activated = null), (this._activatedRoute = null), e;
            }
            attach(e, i) {
              (this.activated = e),
                (this._activatedRoute = i),
                this.location.insert(e.hostView);
            }
            deactivate() {
              if (this.activated) {
                const e = this.component;
                this.activated.destroy(),
                  (this.activated = null),
                  (this._activatedRoute = null),
                  this.deactivateEvents.emit(e);
              }
            }
            activateWith(e, i) {
              if (this.isActivated)
                throw new Error("Cannot activate an already activated outlet");
              this._activatedRoute = e;
              const h = (i = i || this.resolver).resolveComponentFactory(
                  e._futureSnapshot.routeConfig.component
                ),
                _ = this.parentContexts.getOrCreateContext(this.name).children,
                b = new FL(e, _, this.location.injector);
              (this.activated = this.location.createComponent(
                h,
                this.location.length,
                b
              )),
                this.changeDetector.markForCheck(),
                this.activateEvents.emit(this.activated.instance);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.Y36(Sg),
                o.Y36(o.s_b),
                o.Y36(o._Vd),
                o.$8M("name"),
                o.Y36(o.sBO)
              );
            }),
            (n.ɵdir = o.lG2({
              type: n,
              selectors: [["router-outlet"]],
              outputs: {
                activateEvents: "activate",
                deactivateEvents: "deactivate",
              },
              exportAs: ["outlet"],
            })),
            n
          );
        })();
      class FL {
        constructor(t, e, i) {
          (this.route = t), (this.childContexts = e), (this.parent = i);
        }
        get(t, e) {
          return t === ju
            ? this.route
            : t === Sg
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      class uN {}
      class dN {
        preload(t, e) {
          return (0, Oe.of)(null);
        }
      }
      let hN = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this.router = e),
                (this.injector = u),
                (this.preloadingStrategy = h),
                (this.loader = new aN(
                  i,
                  a,
                  (S) => e.triggerEvent(new wS(S)),
                  (S) => e.triggerEvent(new SS(S))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  En((e) => e instanceof Na),
                  xh(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const e = this.injector.get(o.h0i);
              return this.processRoutes(e, this.router.config);
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            processRoutes(e, i) {
              const a = [];
              for (const u of i)
                if (u.loadChildren && !u.canLoad && u._loadedConfig) {
                  const h = u._loadedConfig;
                  a.push(this.processRoutes(h.module, h.routes));
                } else
                  u.loadChildren && !u.canLoad
                    ? a.push(this.preloadConfig(e, u))
                    : u.children && a.push(this.processRoutes(e, u.children));
              return (0, Yn.D)(a).pipe(
                (0, nm.J)(),
                (0, et.U)((u) => {})
              );
            }
            preloadConfig(e, i) {
              return this.preloadingStrategy.preload(i, () =>
                (i._loadedConfig
                  ? (0, Oe.of)(i._loadedConfig)
                  : this.loader.load(e.injector, i)
                ).pipe(
                  (0, ki.zg)(
                    (u) => (
                      (i._loadedConfig = u),
                      this.processRoutes(u.module, u.routes)
                    )
                  )
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                o.LFG(Wi),
                o.LFG(o.v3s),
                o.LFG(o.Sil),
                o.LFG(o.zs3),
                o.LFG(uN)
              );
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Hx = (() => {
          class n {
            constructor(e, i, a = {}) {
              (this.router = e),
                (this.viewportScroller = i),
                (this.options = a),
                (this.lastId = 0),
                (this.lastSource = "imperative"),
                (this.restoredId = 0),
                (this.store = {}),
                (a.scrollPositionRestoration =
                  a.scrollPositionRestoration || "disabled"),
                (a.anchorScrolling = a.anchorScrolling || "disabled");
            }
            init() {
              "disabled" !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration("manual"),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof Bu
                  ? ((this.store[this.lastId] =
                      this.viewportScroller.getScrollPosition()),
                    (this.lastSource = e.navigationTrigger),
                    (this.restoredId = e.restoredState
                      ? e.restoredState.navigationId
                      : 0))
                  : e instanceof Na &&
                    ((this.lastId = e.id),
                    this.scheduleScrollEvent(
                      e,
                      this.router.parseUrl(e.urlAfterRedirects).fragment
                    ));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof sx &&
                  (e.position
                    ? "top" === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : "enabled" === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(e.position)
                    : e.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(e.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(e, i) {
              this.router.triggerEvent(
                new sx(
                  e,
                  "popstate" === this.lastSource
                    ? this.store[this.restoredId]
                    : null,
                  i
                )
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription &&
                this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription &&
                  this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(Wi), o.LFG(dc), o.LFG(void 0));
            }),
            (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const Sf = new o.OlP("ROUTER_CONFIGURATION"),
        fN = new o.OlP("ROUTER_FORROOT_GUARD"),
        BL = [
          Ye,
          { provide: xS, useClass: gx },
          {
            provide: Wi,
            useFactory: function (n, t, e, i, a, u, h, _ = {}, b, S) {
              const T = new Wi(null, n, t, e, i, a, u, cx(h));
              return (
                b && (T.urlHandlingStrategy = b),
                S && (T.routeReuseStrategy = S),
                (function (n, t) {
                  n.errorHandler && (t.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (t.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (t.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (t.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (t.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (t.urlUpdateStrategy = n.urlUpdateStrategy);
                })(_, T),
                _.enableTracing &&
                  T.events.subscribe((A) => {
                    var B, j;
                    null === (B = console.group) ||
                      void 0 === B ||
                      B.call(console, `Router Event: ${A.constructor.name}`),
                      console.log(A.toString()),
                      console.log(A),
                      null === (j = console.groupEnd) ||
                        void 0 === j ||
                        j.call(console);
                  }),
                T
              );
            },
            deps: [
              xS,
              Sg,
              Ye,
              o.zs3,
              o.v3s,
              o.Sil,
              Vx,
              Sf,
              [class {}, new o.FiY()],
              [class {}, new o.FiY()],
            ],
          },
          Sg,
          {
            provide: ju,
            useFactory: function (n) {
              return n.routerState.root;
            },
            deps: [Wi],
          },
          { provide: o.v3s, useClass: o.EAV },
          hN,
          dN,
          class {
            preload(t, e) {
              return e().pipe(Da(() => (0, Oe.of)(null)));
            }
          },
          { provide: Sf, useValue: { enableTracing: !1 } },
        ];
      function UL() {
        return new o.PXZ("Router", Wi);
      }
      let pN = (() => {
        class n {
          constructor(e, i) {}
          static forRoot(e, i) {
            return {
              ngModule: n,
              providers: [
                BL,
                mN(e),
                {
                  provide: fN,
                  useFactory: GL,
                  deps: [[Wi, new o.FiY(), new o.tp0()]],
                },
                { provide: Sf, useValue: i || {} },
                {
                  provide: Ce,
                  useFactory: jL,
                  deps: [W, [new o.tBr(Ee), new o.FiY()], Sf],
                },
                { provide: Hx, useFactory: HL, deps: [Wi, dc, Sf] },
                {
                  provide: uN,
                  useExisting:
                    i && i.preloadingStrategy ? i.preloadingStrategy : dN,
                },
                { provide: o.PXZ, multi: !0, useFactory: UL },
                [
                  jx,
                  { provide: o.ip1, multi: !0, useFactory: YL, deps: [jx] },
                  { provide: gN, useFactory: ZL, deps: [jx] },
                  { provide: o.tb, multi: !0, useExisting: gN },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: n, providers: [mN(e)] };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(fN, 8), o.LFG(Wi, 8));
          }),
          (n.ɵmod = o.oAB({ type: n })),
          (n.ɵinj = o.cJS({})),
          n
        );
      })();
      function HL(n, t, e) {
        return e.scrollOffset && t.setOffset(e.scrollOffset), new Hx(n, t, e);
      }
      function jL(n, t, e = {}) {
        return e.useHash ? new Ge(n, t) : new Qe(n, t);
      }
      function GL(n) {
        return "guarded";
      }
      function mN(n) {
        return [
          { provide: o.deG, multi: !0, useValue: n },
          { provide: Vx, multi: !0, useValue: n },
        ];
      }
      let jx = (() => {
        class n {
          constructor(e) {
            (this.injector = e),
              (this.initNavigation = !1),
              (this.destroyed = !1),
              (this.resultOfPreactivationDone = new xe.xQ());
          }
          appInitializer() {
            return this.injector.get(O, Promise.resolve(null)).then(() => {
              if (this.destroyed) return Promise.resolve(!0);
              let i = null;
              const a = new Promise((_) => (i = _)),
                u = this.injector.get(Wi),
                h = this.injector.get(Sf);
              return (
                "disabled" === h.initialNavigation
                  ? (u.setUpLocationChangeListener(), i(!0))
                  : "enabled" === h.initialNavigation ||
                    "enabledBlocking" === h.initialNavigation
                  ? ((u.hooks.afterPreactivation = () =>
                      this.initNavigation
                        ? (0, Oe.of)(null)
                        : ((this.initNavigation = !0),
                          i(!0),
                          this.resultOfPreactivationDone)),
                    u.initialNavigation())
                  : i(!0),
                a
              );
            });
          }
          bootstrapListener(e) {
            const i = this.injector.get(Sf),
              a = this.injector.get(hN),
              u = this.injector.get(Hx),
              h = this.injector.get(Wi),
              _ = this.injector.get(o.z2F);
            e === _.components[0] &&
              (("enabledNonBlocking" === i.initialNavigation ||
                void 0 === i.initialNavigation) &&
                h.initialNavigation(),
              a.setUpPreloading(),
              u.init(),
              h.resetRootComponentType(_.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          ngOnDestroy() {
            this.destroyed = !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(o.zs3));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function YL(n) {
        return n.appInitializer.bind(n);
      }
      function ZL(n) {
        return n.bootstrapListener.bind(n);
      }
      const gN = new o.OlP("Router Initializer");
      let KL = (() => {
        class n {
          constructor() {}
          ngOnInit() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["app-welcome"]],
            decls: 22,
            vars: 0,
            consts: [
              [2, "margin", "0px", "border-radius", "0%"],
              ["cols", "2", "rowHeight", "500px"],
              [1, "mat-card-without-border"],
              [2, "font-size", "50px", "color", "black"],
              [
                "mat-fab",
                "",
                "color",
                "primary",
                "routerLink",
                "/courses/list",
              ],
              ["mat-button", "", "routerLink", "/courses/list"],
              [2, "font-size", "15px"],
            ],
            template: function (e, i) {
              1 & e &&
                (o.TgZ(0, "mat-card", 0),
                o.TgZ(1, "mat-grid-list", 1),
                o._UZ(2, "mat-grid-tile"),
                o.TgZ(3, "mat-grid-tile"),
                o.TgZ(4, "mat-card", 2),
                o.TgZ(5, "mat-card-header"),
                o.TgZ(6, "mat-card-title"),
                o.TgZ(7, "h1", 3),
                o.TgZ(8, "b"),
                o._uU(9, " Unrestricted education "),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.TgZ(10, "mat-card-subtitle"),
                o.TgZ(11, "p"),
                o._UZ(12, "br"),
                o._uU(
                  13,
                  " Develop your talents by taking courses from the greatest geniuses in the world. We teach you to become the best in the field "
                ),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.TgZ(14, "mat-card-actions"),
                o._UZ(15, "br"),
                o.TgZ(16, "button", 4),
                o.TgZ(17, "mat-icon"),
                o._uU(18, " arrow_forward_Sharp "),
                o.qZA(),
                o.qZA(),
                o.TgZ(19, "button", 5),
                o.TgZ(20, "p", 6),
                o._uU(21, " Show cources for learning "),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.qZA());
            },
            directives: [$m, Ov, rf, Av, tf, Gm, zm, Co, Rb, As],
            styles: [
              ".mat-card-without-border[_ngcontent-%COMP%]{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}",
            ],
          })),
          n
        );
      })();
      class JL {
        constructor(t, e) {
          (this.observables = t), (this.project = e);
        }
        call(t, e) {
          return e.subscribe(new XL(t, this.observables, this.project));
        }
      }
      class XL extends Wv {
        constructor(t, e, i) {
          super(t),
            (this.observables = e),
            (this.project = i),
            (this.toRespond = []);
          const a = e.length;
          this.values = new Array(a);
          for (let u = 0; u < a; u++) this.toRespond.push(u);
          for (let u = 0; u < a; u++) this.add(Jm(this, e[u], void 0, u));
        }
        notifyNext(t, e, i) {
          this.values[i] = e;
          const a = this.toRespond;
          if (a.length > 0) {
            const u = a.indexOf(i);
            -1 !== u && a.splice(u, 1);
          }
        }
        notifyComplete() {}
        _next(t) {
          if (0 === this.toRespond.length) {
            const e = [t, ...this.values];
            this.project ? this._tryProject(e) : this.destination.next(e);
          }
        }
        _tryProject(t) {
          let e;
          try {
            e = this.project.apply(this, t);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      class tV {
        constructor(t) {
          this.predicate = t;
        }
        call(t, e) {
          return e.subscribe(new nV(t, this.predicate));
        }
      }
      class nV extends $n.L {
        constructor(t, e) {
          super(t),
            (this.predicate = e),
            (this.skipping = !0),
            (this.index = 0);
        }
        _next(t) {
          const e = this.destination;
          this.skipping && this.tryCallPredicate(t), this.skipping || e.next(t);
        }
        tryCallPredicate(t) {
          try {
            const e = this.predicate(t, this.index++);
            this.skipping = Boolean(e);
          } catch (e) {
            this.destination.error(e);
          }
        }
      }
      var xo = k(9126),
        iV = (k(9083), k(4486)),
        kb = k(6034),
        _N = k(8239),
        Gx = k(5452),
        P = k(4685),
        zx = k(300);
      let $x = "";
      function yN(n) {
        $x = n;
      }
      class oV {
        constructor(t) {
          (this.domStorage_ = t), (this.prefix_ = "firebase:");
        }
        set(t, e) {
          null == e
            ? this.domStorage_.removeItem(this.prefixedName_(t))
            : this.domStorage_.setItem(this.prefixedName_(t), (0, P.Pz)(e));
        }
        get(t) {
          const e = this.domStorage_.getItem(this.prefixedName_(t));
          return null == e ? null : (0, P.cI)(e);
        }
        remove(t) {
          this.domStorage_.removeItem(this.prefixedName_(t));
        }
        prefixedName_(t) {
          return this.prefix_ + t;
        }
        toString() {
          return this.domStorage_.toString();
        }
      }
      class aV {
        constructor() {
          (this.cache_ = {}), (this.isInMemoryStorage = !0);
        }
        set(t, e) {
          null == e ? delete this.cache_[t] : (this.cache_[t] = e);
        }
        get(t) {
          return (0, P.r3)(this.cache_, t) ? this.cache_[t] : null;
        }
        remove(t) {
          delete this.cache_[t];
        }
      }
      const vN = function (n) {
          try {
            if ("undefined" != typeof window && void 0 !== window[n]) {
              const t = window[n];
              return (
                t.setItem("firebase:sentinel", "cache"),
                t.removeItem("firebase:sentinel"),
                new oV(t)
              );
            }
          } catch (t) {}
          return new aV();
        },
        Df = vN("localStorage"),
        Wx = vN("sessionStorage"),
        Mg = new zx.Yd("@firebase/database"),
        bN = (function () {
          let n = 1;
          return function () {
            return n++;
          };
        })(),
        CN = function (n) {
          const t = (0, P.dS)(n),
            e = new P.gQ();
          e.update(t);
          const i = e.digest();
          return P.US.encodeByteArray(i);
        },
        Ob = function (...n) {
          let t = "";
          for (let e = 0; e < n.length; e++) {
            const i = n[e];
            Array.isArray(i) ||
            (i && "object" == typeof i && "number" == typeof i.length)
              ? (t += Ob.apply(null, i))
              : (t += "object" == typeof i ? (0, P.Pz)(i) : i),
              (t += " ");
          }
          return t;
        };
      let Mf = null,
        EN = !0;
      const wN = function (n, t) {
          (0, P.hu)(
            !t || !0 === n || !1 === n,
            "Can't turn on custom loggers persistently."
          ),
            !0 === n
              ? ((Mg.logLevel = zx.in.VERBOSE),
                (Mf = Mg.log.bind(Mg)),
                t && Wx.set("logging_enabled", !0))
              : "function" == typeof n
              ? (Mf = n)
              : ((Mf = null), Wx.remove("logging_enabled"));
        },
        bi = function (...n) {
          if (
            (!0 === EN &&
              ((EN = !1),
              null === Mf && !0 === Wx.get("logging_enabled") && wN(!0)),
            Mf)
          ) {
            const t = Ob.apply(null, n);
            Mf(t);
          }
        },
        Pb = function (n) {
          return function (...t) {
            bi(n, ...t);
          };
        },
        Yx = function (...n) {
          const t = "FIREBASE INTERNAL ERROR: " + Ob(...n);
          Mg.error(t);
        },
        Va = function (...n) {
          const t = `FIREBASE FATAL ERROR: ${Ob(...n)}`;
          throw (Mg.error(t), new Error(t));
        },
        cr = function (...n) {
          const t = "FIREBASE WARNING: " + Ob(...n);
          Mg.warn(t);
        },
        qS = function (n) {
          return (
            "number" == typeof n &&
            (n != n ||
              n === Number.POSITIVE_INFINITY ||
              n === Number.NEGATIVE_INFINITY)
          );
        },
        nc = "[MIN_NAME]",
        Ba = "[MAX_NAME]",
        Tf = function (n, t) {
          if (n === t) return 0;
          if (n === nc || t === Ba) return -1;
          if (t === nc || n === Ba) return 1;
          {
            const e = KS(n),
              i = KS(t);
            return null !== e
              ? null !== i
                ? e - i == 0
                  ? n.length - t.length
                  : e - i
                : -1
              : null !== i
              ? 1
              : n < t
              ? -1
              : 1;
          }
        },
        uV = function (n, t) {
          return n === t ? 0 : n < t ? -1 : 1;
        },
        Nb = function (n, t) {
          if (t && n in t) return t[n];
          throw new Error(
            "Missing required key (" + n + ") in object: " + (0, P.Pz)(t)
          );
        },
        Zx = function (n) {
          if ("object" != typeof n || null === n) return (0, P.Pz)(n);
          const t = [];
          for (const i in n) t.push(i);
          t.sort();
          let e = "{";
          for (let i = 0; i < t.length; i++)
            0 !== i && (e += ","),
              (e += (0, P.Pz)(t[i])),
              (e += ":"),
              (e += Zx(n[t[i]]));
          return (e += "}"), e;
        },
        SN = function (n, t) {
          const e = n.length;
          if (e <= t) return [n];
          const i = [];
          for (let a = 0; a < e; a += t)
            i.push(n.substring(a, a + t > e ? e : a + t));
          return i;
        };
      function Ci(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(e, n[e]);
      }
      const DN = function (n) {
          (0, P.hu)(!qS(n), "Invalid JSON number");
          const i = 1023;
          let a, u, h, _, b;
          0 === n
            ? ((u = 0), (h = 0), (a = 1 / n == -1 / 0 ? 1 : 0))
            : ((a = n < 0),
              (n = Math.abs(n)) >= Math.pow(2, 1 - i)
                ? ((_ = Math.min(Math.floor(Math.log(n) / Math.LN2), i)),
                  (u = _ + i),
                  (h = Math.round(n * Math.pow(2, 52 - _) - Math.pow(2, 52))))
                : ((u = 0), (h = Math.round(n / Math.pow(2, -1074)))));
          const S = [];
          for (b = 52; b; b -= 1)
            S.push(h % 2 ? 1 : 0), (h = Math.floor(h / 2));
          for (b = 11; b; b -= 1)
            S.push(u % 2 ? 1 : 0), (u = Math.floor(u / 2));
          S.push(a ? 1 : 0), S.reverse();
          const T = S.join("");
          let A = "";
          for (b = 0; b < 64; b += 8) {
            let B = parseInt(T.substr(b, 8), 2).toString(16);
            1 === B.length && (B = "0" + B), (A += B);
          }
          return A.toLowerCase();
        },
        pV = new RegExp("^-?(0*)\\d{1,10}$"),
        MN = -2147483648,
        qx = 2147483647,
        KS = function (n) {
          if (pV.test(n)) {
            const t = Number(n);
            if (t >= MN && t <= qx) return t;
          }
          return null;
        },
        Tg = function (n) {
          try {
            n();
          } catch (t) {
            setTimeout(() => {
              throw (
                (cr("Exception was thrown by user callback.", t.stack || ""), t)
              );
            }, Math.floor(0));
          }
        },
        Fb = function (n, t) {
          const e = setTimeout(n, t);
          return "object" == typeof e && e.unref && e.unref(), e;
        };
      class gV {
        constructor(t, e) {
          (this.appName_ = t),
            (this.appCheckProvider = e),
            (this.appCheck =
              null == e ? void 0 : e.getImmediate({ optional: !0 })),
            this.appCheck ||
              null == e ||
              e.get().then((i) => (this.appCheck = i));
        }
        getToken(t) {
          return this.appCheck
            ? this.appCheck.getToken(t)
            : new Promise((e, i) => {
                setTimeout(() => {
                  this.appCheck ? this.getToken(t).then(e, i) : e(null);
                }, 0);
              });
        }
        addTokenChangeListener(t) {
          var e;
          null === (e = this.appCheckProvider) ||
            void 0 === e ||
            e.get().then((i) => i.addTokenListener(t));
        }
        notifyForInvalidToken() {
          cr(
            `Provided AppCheck credentials for the app named "${this.appName_}" are invalid. This usually indicates your app was not initialized correctly.`
          );
        }
      }
      class _V {
        constructor(t, e, i) {
          (this.appName_ = t),
            (this.firebaseOptions_ = e),
            (this.authProvider_ = i),
            (this.auth_ = null),
            (this.auth_ = i.getImmediate({ optional: !0 })),
            this.auth_ || i.onInit((a) => (this.auth_ = a));
        }
        getToken(t) {
          return this.auth_
            ? this.auth_
                .getToken(t)
                .catch((e) =>
                  e && "auth/token-not-initialized" === e.code
                    ? (bi(
                        "Got auth/token-not-initialized error.  Treating as null token."
                      ),
                      null)
                    : Promise.reject(e)
                )
            : new Promise((e, i) => {
                setTimeout(() => {
                  this.auth_ ? this.getToken(t).then(e, i) : e(null);
                }, 0);
              });
        }
        addTokenChangeListener(t) {
          this.auth_
            ? this.auth_.addAuthTokenListener(t)
            : this.authProvider_.get().then((e) => e.addAuthTokenListener(t));
        }
        removeTokenChangeListener(t) {
          this.authProvider_.get().then((e) => e.removeAuthTokenListener(t));
        }
        notifyForInvalidToken() {
          let t =
            'Provided authentication credentials for the app named "' +
            this.appName_ +
            '" are invalid. This usually indicates your app was not initialized correctly. ';
          (t +=
            "credential" in this.firebaseOptions_
              ? 'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : "serviceAccount" in this.firebaseOptions_
              ? 'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : 'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.'),
            cr(t);
        }
      }
      let Lb = (() => {
        class n {
          constructor(e) {
            this.accessToken = e;
          }
          getToken(e) {
            return Promise.resolve({ accessToken: this.accessToken });
          }
          addTokenChangeListener(e) {
            e(this.accessToken);
          }
          removeTokenChangeListener(e) {}
          notifyForInvalidToken() {}
        }
        return (n.OWNER = "owner"), n;
      })();
      const RN =
          /(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,
        ON = "websocket",
        PN = "long_polling";
      class NN {
        constructor(t, e, i, a, u = !1, h = "", _ = !1) {
          (this.secure = e),
            (this.namespace = i),
            (this.webSocketOnly = a),
            (this.nodeAdmin = u),
            (this.persistenceKey = h),
            (this.includeNamespaceInQueryParams = _),
            (this._host = t.toLowerCase()),
            (this._domain = this._host.substr(this._host.indexOf(".") + 1)),
            (this.internalHost = Df.get("host:" + t) || this._host);
        }
        isCacheableHost() {
          return "s-" === this.internalHost.substr(0, 2);
        }
        isCustomHost() {
          return (
            "firebaseio.com" !== this._domain &&
            "firebaseio-demo.com" !== this._domain
          );
        }
        get host() {
          return this._host;
        }
        set host(t) {
          t !== this.internalHost &&
            ((this.internalHost = t),
            this.isCacheableHost() &&
              Df.set("host:" + this._host, this.internalHost));
        }
        toString() {
          let t = this.toURLString();
          return (
            this.persistenceKey && (t += "<" + this.persistenceKey + ">"), t
          );
        }
        toURLString() {
          return `${this.secure ? "https://" : "http://"}${this.host}/${
            this.includeNamespaceInQueryParams ? `?ns=${this.namespace}` : ""
          }`;
        }
      }
      function FN(n, t, e) {
        let i;
        if (
          ((0, P.hu)("string" == typeof t, "typeof type must == string"),
          (0, P.hu)("object" == typeof e, "typeof params must == object"),
          t === ON)
        )
          i = (n.secure ? "wss://" : "ws://") + n.internalHost + "/.ws?";
        else {
          if (t !== PN) throw new Error("Unknown connection type: " + t);
          i = (n.secure ? "https://" : "http://") + n.internalHost + "/.lp?";
        }
        (function (n) {
          return (
            n.host !== n.internalHost ||
            n.isCustomHost() ||
            n.includeNamespaceInQueryParams
          );
        })(n) && (e.ns = n.namespace);
        const a = [];
        return (
          Ci(e, (u, h) => {
            a.push(u + "=" + h);
          }),
          i + a.join("&")
        );
      }
      class bV {
        constructor() {
          this.counters_ = {};
        }
        incrementCounter(t, e = 1) {
          (0, P.r3)(this.counters_, t) || (this.counters_[t] = 0),
            (this.counters_[t] += e);
        }
        get() {
          return (0, P.p$)(this.counters_);
        }
      }
      const Qx = {},
        Jx = {};
      function Xx(n) {
        const t = n.toString();
        return Qx[t] || (Qx[t] = new bV()), Qx[t];
      }
      class EV {
        constructor(t) {
          (this.onMessage_ = t),
            (this.pendingResponses = []),
            (this.currentResponseNum = 0),
            (this.closeAfterResponse = -1),
            (this.onClose = null);
        }
        closeAfter(t, e) {
          (this.closeAfterResponse = t),
            (this.onClose = e),
            this.closeAfterResponse < this.currentResponseNum &&
              (this.onClose(), (this.onClose = null));
        }
        handleResponse(t, e) {
          for (
            this.pendingResponses[t] = e;
            this.pendingResponses[this.currentResponseNum];

          ) {
            const i = this.pendingResponses[this.currentResponseNum];
            delete this.pendingResponses[this.currentResponseNum];
            for (let a = 0; a < i.length; ++a)
              i[a] &&
                Tg(() => {
                  this.onMessage_(i[a]);
                });
            if (this.currentResponseNum === this.closeAfterResponse) {
              this.onClose && (this.onClose(), (this.onClose = null));
              break;
            }
            this.currentResponseNum++;
          }
        }
      }
      class Ig {
        constructor(t, e, i, a, u, h, _) {
          (this.connId = t),
            (this.repoInfo = e),
            (this.applicationId = i),
            (this.appCheckToken = a),
            (this.authToken = u),
            (this.transportSessionId = h),
            (this.lastSessionId = _),
            (this.bytesSent = 0),
            (this.bytesReceived = 0),
            (this.everConnected_ = !1),
            (this.log_ = Pb(t)),
            (this.stats_ = Xx(e)),
            (this.urlFn = (b) => (
              this.appCheckToken && (b.ac = this.appCheckToken), FN(e, PN, b)
            ));
        }
        open(t, e) {
          (this.curSegmentNum = 0),
            (this.onDisconnect_ = e),
            (this.myPacketOrderer = new EV(t)),
            (this.isClosed_ = !1),
            (this.connectTimeoutTimer_ = setTimeout(() => {
              this.log_("Timed out trying to connect."),
                this.onClosed_(),
                (this.connectTimeoutTimer_ = null);
            }, Math.floor(3e4))),
            (function (n) {
              if ((0, P.Yr)() || "complete" === document.readyState) n();
              else {
                let t = !1;
                const e = function () {
                  document.body
                    ? t || ((t = !0), n())
                    : setTimeout(e, Math.floor(10));
                };
                document.addEventListener
                  ? (document.addEventListener("DOMContentLoaded", e, !1),
                    window.addEventListener("load", e, !1))
                  : document.attachEvent &&
                    (document.attachEvent("onreadystatechange", () => {
                      "complete" === document.readyState && e();
                    }),
                    window.attachEvent("onload", e));
              }
            })(() => {
              if (this.isClosed_) return;
              this.scriptTagHolder = new eR(
                (...u) => {
                  const [h, _, b, S, T] = u;
                  if ((this.incrementIncomingBytes_(u), this.scriptTagHolder))
                    if (
                      (this.connectTimeoutTimer_ &&
                        (clearTimeout(this.connectTimeoutTimer_),
                        (this.connectTimeoutTimer_ = null)),
                      (this.everConnected_ = !0),
                      "start" === h)
                    )
                      (this.id = _), (this.password = b);
                    else {
                      if ("close" !== h)
                        throw new Error("Unrecognized command received: " + h);
                      _
                        ? ((this.scriptTagHolder.sendNewPolls = !1),
                          this.myPacketOrderer.closeAfter(_, () => {
                            this.onClosed_();
                          }))
                        : this.onClosed_();
                    }
                },
                (...u) => {
                  const [h, _] = u;
                  this.incrementIncomingBytes_(u),
                    this.myPacketOrderer.handleResponse(h, _);
                },
                () => {
                  this.onClosed_();
                },
                this.urlFn
              );
              const i = { start: "t" };
              (i.ser = Math.floor(1e8 * Math.random())),
                this.scriptTagHolder.uniqueCallbackIdentifier &&
                  (i.cb = this.scriptTagHolder.uniqueCallbackIdentifier),
                (i.v = "5"),
                this.transportSessionId && (i.s = this.transportSessionId),
                this.lastSessionId && (i.ls = this.lastSessionId),
                this.applicationId && (i.p = this.applicationId),
                this.appCheckToken && (i.ac = this.appCheckToken),
                "undefined" != typeof location &&
                  location.hostname &&
                  RN.test(location.hostname) &&
                  (i.r = "f");
              const a = this.urlFn(i);
              this.log_("Connecting via long-poll to " + a),
                this.scriptTagHolder.addTag(a, () => {});
            });
        }
        start() {
          this.scriptTagHolder.startLongPoll(this.id, this.password),
            this.addDisconnectPingFrame(this.id, this.password);
        }
        static forceAllow() {
          Ig.forceAllow_ = !0;
        }
        static forceDisallow() {
          Ig.forceDisallow_ = !0;
        }
        static isAvailable() {
          return !(
            (0, P.Yr)() ||
            (!Ig.forceAllow_ &&
              (Ig.forceDisallow_ ||
                "undefined" == typeof document ||
                null == document.createElement ||
                ("object" == typeof window &&
                  window.chrome &&
                  window.chrome.extension &&
                  !/^chrome/.test(window.location.href)) ||
                ("object" == typeof Windows && "object" == typeof Windows.UI)))
          );
        }
        markConnectionHealthy() {}
        shutdown_() {
          (this.isClosed_ = !0),
            this.scriptTagHolder &&
              (this.scriptTagHolder.close(), (this.scriptTagHolder = null)),
            this.myDisconnFrame &&
              (document.body.removeChild(this.myDisconnFrame),
              (this.myDisconnFrame = null)),
            this.connectTimeoutTimer_ &&
              (clearTimeout(this.connectTimeoutTimer_),
              (this.connectTimeoutTimer_ = null));
        }
        onClosed_() {
          this.isClosed_ ||
            (this.log_("Longpoll is closing itself"),
            this.shutdown_(),
            this.onDisconnect_ &&
              (this.onDisconnect_(this.everConnected_),
              (this.onDisconnect_ = null)));
        }
        close() {
          this.isClosed_ ||
            (this.log_("Longpoll is being closed."), this.shutdown_());
        }
        send(t) {
          const e = (0, P.Pz)(t);
          (this.bytesSent += e.length),
            this.stats_.incrementCounter("bytes_sent", e.length);
          const i = (0, P.h$)(e),
            a = SN(i, 1840);
          for (let u = 0; u < a.length; u++)
            this.scriptTagHolder.enqueueSegment(
              this.curSegmentNum,
              a.length,
              a[u]
            ),
              this.curSegmentNum++;
        }
        addDisconnectPingFrame(t, e) {
          if ((0, P.Yr)()) return;
          this.myDisconnFrame = document.createElement("iframe");
          const i = { dframe: "t" };
          (i.id = t),
            (i.pw = e),
            (this.myDisconnFrame.src = this.urlFn(i)),
            (this.myDisconnFrame.style.display = "none"),
            document.body.appendChild(this.myDisconnFrame);
        }
        incrementIncomingBytes_(t) {
          const e = (0, P.Pz)(t).length;
          (this.bytesReceived += e),
            this.stats_.incrementCounter("bytes_received", e);
        }
      }
      class eR {
        constructor(t, e, i, a) {
          if (
            ((this.onDisconnect = i),
            (this.urlFn = a),
            (this.outstandingRequests = new Set()),
            (this.pendingSegs = []),
            (this.currentSerial = Math.floor(1e8 * Math.random())),
            (this.sendNewPolls = !0),
            (0, P.Yr)())
          )
            (this.commandCB = t), (this.onMessageCB = e);
          else {
            (this.uniqueCallbackIdentifier = bN()),
              (window["pLPCommand" + this.uniqueCallbackIdentifier] = t),
              (window["pRTLPCB" + this.uniqueCallbackIdentifier] = e),
              (this.myIFrame = eR.createIFrame_());
            let u = "";
            this.myIFrame.src &&
              "javascript:" ===
                this.myIFrame.src.substr(0, "javascript:".length) &&
              (u =
                '<script>document.domain="' + document.domain + '";</script>');
            const h = "<html><body>" + u + "</body></html>";
            try {
              this.myIFrame.doc.open(),
                this.myIFrame.doc.write(h),
                this.myIFrame.doc.close();
            } catch (_) {
              bi("frame writing exception"), _.stack && bi(_.stack), bi(_);
            }
          }
        }
        static createIFrame_() {
          const t = document.createElement("iframe");
          if (((t.style.display = "none"), !document.body))
            throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
          document.body.appendChild(t);
          try {
            t.contentWindow.document || bi("No IE domain setting required");
          } catch (e) {
            const i = document.domain;
            t.src =
              "javascript:void((function(){document.open();document.domain='" +
              i +
              "';document.close();})())";
          }
          return (
            t.contentDocument
              ? (t.doc = t.contentDocument)
              : t.contentWindow
              ? (t.doc = t.contentWindow.document)
              : t.document && (t.doc = t.document),
            t
          );
        }
        close() {
          (this.alive = !1),
            this.myIFrame &&
              ((this.myIFrame.doc.body.innerHTML = ""),
              setTimeout(() => {
                null !== this.myIFrame &&
                  (document.body.removeChild(this.myIFrame),
                  (this.myIFrame = null));
              }, Math.floor(0)));
          const t = this.onDisconnect;
          t && ((this.onDisconnect = null), t());
        }
        startLongPoll(t, e) {
          for (
            this.myID = t, this.myPW = e, this.alive = !0;
            this.newRequest_();

          );
        }
        newRequest_() {
          if (
            this.alive &&
            this.sendNewPolls &&
            this.outstandingRequests.size <
              (this.pendingSegs.length > 0 ? 2 : 1)
          ) {
            this.currentSerial++;
            const t = {};
            (t.id = this.myID),
              (t.pw = this.myPW),
              (t.ser = this.currentSerial);
            let e = this.urlFn(t),
              i = "",
              a = 0;
            for (
              ;
              this.pendingSegs.length > 0 &&
              this.pendingSegs[0].d.length + 30 + i.length <= 1870;

            ) {
              const h = this.pendingSegs.shift();
              (i =
                i +
                "&seg" +
                a +
                "=" +
                h.seg +
                "&ts" +
                a +
                "=" +
                h.ts +
                "&d" +
                a +
                "=" +
                h.d),
                a++;
            }
            return (e += i), this.addLongPollTag_(e, this.currentSerial), !0;
          }
          return !1;
        }
        enqueueSegment(t, e, i) {
          this.pendingSegs.push({ seg: t, ts: e, d: i }),
            this.alive && this.newRequest_();
        }
        addLongPollTag_(t, e) {
          this.outstandingRequests.add(e);
          const i = () => {
              this.outstandingRequests.delete(e), this.newRequest_();
            },
            a = setTimeout(i, Math.floor(25e3));
          this.addTag(t, () => {
            clearTimeout(a), i();
          });
        }
        addTag(t, e) {
          (0, P.Yr)()
            ? this.doNodeLongPoll(t, e)
            : setTimeout(() => {
                try {
                  if (!this.sendNewPolls) return;
                  const i = this.myIFrame.doc.createElement("script");
                  (i.type = "text/javascript"),
                    (i.async = !0),
                    (i.src = t),
                    (i.onload = i.onreadystatechange =
                      function () {
                        const a = i.readyState;
                        (!a || "loaded" === a || "complete" === a) &&
                          ((i.onload = i.onreadystatechange = null),
                          i.parentNode && i.parentNode.removeChild(i),
                          e());
                      }),
                    (i.onerror = () => {
                      bi("Long-poll script failed to load: " + t),
                        (this.sendNewPolls = !1),
                        this.close();
                    }),
                    this.myIFrame.doc.body.appendChild(i);
                } catch (i) {}
              }, Math.floor(1));
        }
      }
      let Vb = null;
      "undefined" != typeof MozWebSocket
        ? (Vb = MozWebSocket)
        : "undefined" != typeof WebSocket && (Vb = WebSocket);
      let Bb = (() => {
        class n {
          constructor(e, i, a, u, h, _, b) {
            (this.connId = e),
              (this.applicationId = a),
              (this.appCheckToken = u),
              (this.authToken = h),
              (this.keepaliveTimer = null),
              (this.frames = null),
              (this.totalFrames = 0),
              (this.bytesSent = 0),
              (this.bytesReceived = 0),
              (this.log_ = Pb(this.connId)),
              (this.stats_ = Xx(i)),
              (this.connURL = n.connectionURL_(i, _, b, u)),
              (this.nodeAdmin = i.nodeAdmin);
          }
          static connectionURL_(e, i, a, u) {
            const h = { v: "5" };
            return (
              !(0, P.Yr)() &&
                "undefined" != typeof location &&
                location.hostname &&
                RN.test(location.hostname) &&
                (h.r = "f"),
              i && (h.s = i),
              a && (h.ls = a),
              u && (h.ac = u),
              FN(e, ON, h)
            );
          }
          open(e, i) {
            (this.onDisconnect = i),
              (this.onMessage = e),
              this.log_("Websocket connecting to " + this.connURL),
              (this.everConnected_ = !1),
              Df.set("previous_websocket_failure", !0);
            try {
              if ((0, P.Yr)()) {
                const u = {
                  headers: {
                    "User-Agent": `Firebase/5/${$x}/${process.platform}/${
                      this.nodeAdmin ? "AdminNode" : "Node"
                    }`,
                    "X-Firebase-GMPID": this.applicationId || "",
                  },
                };
                this.authToken &&
                  (u.headers.Authorization = `Bearer ${this.authToken}`),
                  this.appCheckToken &&
                    (u.headers["X-Firebase-AppCheck"] = this.appCheckToken);
                const h = process.env,
                  _ =
                    0 === this.connURL.indexOf("wss://")
                      ? h.HTTPS_PROXY || h.https_proxy
                      : h.HTTP_PROXY || h.http_proxy;
                _ && (u.proxy = { origin: _ }),
                  (this.mySock = new Vb(this.connURL, [], u));
              } else
                this.mySock = new Vb(this.connURL, [], {
                  headers: {
                    "X-Firebase-GMPID": this.applicationId || "",
                    "X-Firebase-AppCheck": this.appCheckToken || "",
                  },
                });
            } catch (a) {
              this.log_("Error instantiating WebSocket.");
              const u = a.message || a.data;
              return u && this.log_(u), void this.onClosed_();
            }
            (this.mySock.onopen = () => {
              this.log_("Websocket connected."), (this.everConnected_ = !0);
            }),
              (this.mySock.onclose = () => {
                this.log_("Websocket connection was disconnected."),
                  (this.mySock = null),
                  this.onClosed_();
              }),
              (this.mySock.onmessage = (a) => {
                this.handleIncomingFrame(a);
              }),
              (this.mySock.onerror = (a) => {
                this.log_("WebSocket error.  Closing connection.");
                const u = a.message || a.data;
                u && this.log_(u), this.onClosed_();
              });
          }
          start() {}
          static forceDisallow() {
            n.forceDisallow_ = !0;
          }
          static isAvailable() {
            let e = !1;
            if ("undefined" != typeof navigator && navigator.userAgent) {
              const a = navigator.userAgent.match(
                /Android ([0-9]{0,}\.[0-9]{0,})/
              );
              a && a.length > 1 && parseFloat(a[1]) < 4.4 && (e = !0);
            }
            return !e && null !== Vb && !n.forceDisallow_;
          }
          static previouslyFailed() {
            return (
              Df.isInMemoryStorage ||
              !0 === Df.get("previous_websocket_failure")
            );
          }
          markConnectionHealthy() {
            Df.remove("previous_websocket_failure");
          }
          appendFrame_(e) {
            if (
              (this.frames.push(e), this.frames.length === this.totalFrames)
            ) {
              const i = this.frames.join("");
              this.frames = null;
              const a = (0, P.cI)(i);
              this.onMessage(a);
            }
          }
          handleNewFrameCount_(e) {
            (this.totalFrames = e), (this.frames = []);
          }
          extractFrameCount_(e) {
            if (
              ((0, P.hu)(
                null === this.frames,
                "We already have a frame buffer"
              ),
              e.length <= 6)
            ) {
              const i = Number(e);
              if (!isNaN(i)) return this.handleNewFrameCount_(i), null;
            }
            return this.handleNewFrameCount_(1), e;
          }
          handleIncomingFrame(e) {
            if (null === this.mySock) return;
            const i = e.data;
            if (
              ((this.bytesReceived += i.length),
              this.stats_.incrementCounter("bytes_received", i.length),
              this.resetKeepAlive(),
              null !== this.frames)
            )
              this.appendFrame_(i);
            else {
              const a = this.extractFrameCount_(i);
              null !== a && this.appendFrame_(a);
            }
          }
          send(e) {
            this.resetKeepAlive();
            const i = (0, P.Pz)(e);
            (this.bytesSent += i.length),
              this.stats_.incrementCounter("bytes_sent", i.length);
            const a = SN(i, 16384);
            a.length > 1 && this.sendString_(String(a.length));
            for (let u = 0; u < a.length; u++) this.sendString_(a[u]);
          }
          shutdown_() {
            (this.isClosed_ = !0),
              this.keepaliveTimer &&
                (clearInterval(this.keepaliveTimer),
                (this.keepaliveTimer = null)),
              this.mySock && (this.mySock.close(), (this.mySock = null));
          }
          onClosed_() {
            this.isClosed_ ||
              (this.log_("WebSocket is closing itself"),
              this.shutdown_(),
              this.onDisconnect &&
                (this.onDisconnect(this.everConnected_),
                (this.onDisconnect = null)));
          }
          close() {
            this.isClosed_ ||
              (this.log_("WebSocket is being closed"), this.shutdown_());
          }
          resetKeepAlive() {
            clearInterval(this.keepaliveTimer),
              (this.keepaliveTimer = setInterval(() => {
                this.mySock && this.sendString_("0"), this.resetKeepAlive();
              }, Math.floor(45e3)));
          }
          sendString_(e) {
            try {
              this.mySock.send(e);
            } catch (i) {
              this.log_(
                "Exception thrown from WebSocket.send():",
                i.message || i.data,
                "Closing connection."
              ),
                setTimeout(this.onClosed_.bind(this), 0);
            }
          }
        }
        return (
          (n.responsesRequiredToBeHealthy = 2), (n.healthyTimeout = 3e4), n
        );
      })();
      class tR {
        constructor(t) {
          this.initTransports_(t);
        }
        static get ALL_TRANSPORTS() {
          return [Ig, Bb];
        }
        initTransports_(t) {
          const e = Bb && Bb.isAvailable();
          let i = e && !Bb.previouslyFailed();
          if (
            (t.webSocketOnly &&
              (e ||
                cr(
                  "wss:// URL used, but browser isn't known to support websockets.  Trying anyway."
                ),
              (i = !0)),
            i)
          )
            this.transports_ = [Bb];
          else {
            const a = (this.transports_ = []);
            for (const u of tR.ALL_TRANSPORTS)
              u && u.isAvailable() && a.push(u);
          }
        }
        initialTransport() {
          if (this.transports_.length > 0) return this.transports_[0];
          throw new Error("No transports available");
        }
        upgradeTransport() {
          return this.transports_.length > 1 ? this.transports_[1] : null;
        }
      }
      class GV {
        constructor(t, e, i, a, u, h, _, b, S, T) {
          (this.id = t),
            (this.repoInfo_ = e),
            (this.applicationId_ = i),
            (this.appCheckToken_ = a),
            (this.authToken_ = u),
            (this.onMessage_ = h),
            (this.onReady_ = _),
            (this.onDisconnect_ = b),
            (this.onKill_ = S),
            (this.lastSessionId = T),
            (this.connectionCount = 0),
            (this.pendingDataMessages = []),
            (this.state_ = 0),
            (this.log_ = Pb("c:" + this.id + ":")),
            (this.transportManager_ = new tR(e)),
            this.log_("Connection created"),
            this.start_();
        }
        start_() {
          const t = this.transportManager_.initialTransport();
          (this.conn_ = new t(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            null,
            this.lastSessionId
          )),
            (this.primaryResponsesRequired_ =
              t.responsesRequiredToBeHealthy || 0);
          const e = this.connReceiver_(this.conn_),
            i = this.disconnReceiver_(this.conn_);
          (this.tx_ = this.conn_),
            (this.rx_ = this.conn_),
            (this.secondaryConn_ = null),
            (this.isHealthy_ = !1),
            setTimeout(() => {
              this.conn_ && this.conn_.open(e, i);
            }, Math.floor(0));
          const a = t.healthyTimeout || 0;
          a > 0 &&
            (this.healthyTimeout_ = Fb(() => {
              (this.healthyTimeout_ = null),
                this.isHealthy_ ||
                  (this.conn_ && this.conn_.bytesReceived > 102400
                    ? (this.log_(
                        "Connection exceeded healthy timeout but has received " +
                          this.conn_.bytesReceived +
                          " bytes.  Marking connection healthy."
                      ),
                      (this.isHealthy_ = !0),
                      this.conn_.markConnectionHealthy())
                    : this.conn_ && this.conn_.bytesSent > 10240
                    ? this.log_(
                        "Connection exceeded healthy timeout but has sent " +
                          this.conn_.bytesSent +
                          " bytes.  Leaving connection alive."
                      )
                    : (this.log_("Closing unhealthy connection after timeout."),
                      this.close()));
            }, Math.floor(a)));
        }
        nextTransportId_() {
          return "c:" + this.id + ":" + this.connectionCount++;
        }
        disconnReceiver_(t) {
          return (e) => {
            t === this.conn_
              ? this.onConnectionLost_(e)
              : t === this.secondaryConn_
              ? (this.log_("Secondary connection lost."),
                this.onSecondaryConnectionLost_())
              : this.log_("closing an old connection");
          };
        }
        connReceiver_(t) {
          return (e) => {
            2 !== this.state_ &&
              (t === this.rx_
                ? this.onPrimaryMessageReceived_(e)
                : t === this.secondaryConn_
                ? this.onSecondaryMessageReceived_(e)
                : this.log_("message on old connection"));
          };
        }
        sendRequest(t) {
          this.sendData_({ t: "d", d: t });
        }
        tryCleanupConnection() {
          this.tx_ === this.secondaryConn_ &&
            this.rx_ === this.secondaryConn_ &&
            (this.log_(
              "cleaning up and promoting a connection: " +
                this.secondaryConn_.connId
            ),
            (this.conn_ = this.secondaryConn_),
            (this.secondaryConn_ = null));
        }
        onSecondaryControl_(t) {
          if ("t" in t) {
            const e = t.t;
            "a" === e
              ? this.upgradeIfSecondaryHealthy_()
              : "r" === e
              ? (this.log_("Got a reset on secondary, closing it"),
                this.secondaryConn_.close(),
                (this.tx_ === this.secondaryConn_ ||
                  this.rx_ === this.secondaryConn_) &&
                  this.close())
              : "o" === e &&
                (this.log_("got pong on secondary."),
                this.secondaryResponsesRequired_--,
                this.upgradeIfSecondaryHealthy_());
          }
        }
        onSecondaryMessageReceived_(t) {
          const e = Nb("t", t),
            i = Nb("d", t);
          if ("c" === e) this.onSecondaryControl_(i);
          else {
            if ("d" !== e) throw new Error("Unknown protocol layer: " + e);
            this.pendingDataMessages.push(i);
          }
        }
        upgradeIfSecondaryHealthy_() {
          this.secondaryResponsesRequired_ <= 0
            ? (this.log_("Secondary connection is healthy."),
              (this.isHealthy_ = !0),
              this.secondaryConn_.markConnectionHealthy(),
              this.proceedWithUpgrade_())
            : (this.log_("sending ping on secondary."),
              this.secondaryConn_.send({ t: "c", d: { t: "p", d: {} } }));
        }
        proceedWithUpgrade_() {
          this.secondaryConn_.start(),
            this.log_("sending client ack on secondary"),
            this.secondaryConn_.send({ t: "c", d: { t: "a", d: {} } }),
            this.log_("Ending transmission on primary"),
            this.conn_.send({ t: "c", d: { t: "n", d: {} } }),
            (this.tx_ = this.secondaryConn_),
            this.tryCleanupConnection();
        }
        onPrimaryMessageReceived_(t) {
          const e = Nb("t", t),
            i = Nb("d", t);
          "c" === e ? this.onControl_(i) : "d" === e && this.onDataMessage_(i);
        }
        onDataMessage_(t) {
          this.onPrimaryResponse_(), this.onMessage_(t);
        }
        onPrimaryResponse_() {
          this.isHealthy_ ||
            (this.primaryResponsesRequired_--,
            this.primaryResponsesRequired_ <= 0 &&
              (this.log_("Primary connection is healthy."),
              (this.isHealthy_ = !0),
              this.conn_.markConnectionHealthy()));
        }
        onControl_(t) {
          const e = Nb("t", t);
          if ("d" in t) {
            const i = t.d;
            if ("h" === e) this.onHandshake_(i);
            else if ("n" === e) {
              this.log_("recvd end transmission on primary"),
                (this.rx_ = this.secondaryConn_);
              for (let a = 0; a < this.pendingDataMessages.length; ++a)
                this.onDataMessage_(this.pendingDataMessages[a]);
              (this.pendingDataMessages = []), this.tryCleanupConnection();
            } else
              "s" === e
                ? this.onConnectionShutdown_(i)
                : "r" === e
                ? this.onReset_(i)
                : "e" === e
                ? Yx("Server Error: " + i)
                : "o" === e
                ? (this.log_("got pong on primary."),
                  this.onPrimaryResponse_(),
                  this.sendPingOnPrimaryIfNecessary_())
                : Yx("Unknown control packet command: " + e);
          }
        }
        onHandshake_(t) {
          const e = t.ts,
            i = t.v,
            a = t.h;
          (this.sessionId = t.s),
            (this.repoInfo_.host = a),
            0 === this.state_ &&
              (this.conn_.start(),
              this.onConnectionEstablished_(this.conn_, e),
              "5" !== i && cr("Protocol version mismatch detected"),
              this.tryStartUpgrade_());
        }
        tryStartUpgrade_() {
          const t = this.transportManager_.upgradeTransport();
          t && this.startUpgrade_(t);
        }
        startUpgrade_(t) {
          (this.secondaryConn_ = new t(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            this.sessionId
          )),
            (this.secondaryResponsesRequired_ =
              t.responsesRequiredToBeHealthy || 0);
          const e = this.connReceiver_(this.secondaryConn_),
            i = this.disconnReceiver_(this.secondaryConn_);
          this.secondaryConn_.open(e, i),
            Fb(() => {
              this.secondaryConn_ &&
                (this.log_("Timed out trying to upgrade."),
                this.secondaryConn_.close());
            }, Math.floor(6e4));
        }
        onReset_(t) {
          this.log_("Reset packet received.  New host: " + t),
            (this.repoInfo_.host = t),
            1 === this.state_
              ? this.close()
              : (this.closeConnections_(), this.start_());
        }
        onConnectionEstablished_(t, e) {
          this.log_("Realtime connection established."),
            (this.conn_ = t),
            (this.state_ = 1),
            this.onReady_ &&
              (this.onReady_(e, this.sessionId), (this.onReady_ = null)),
            0 === this.primaryResponsesRequired_
              ? (this.log_("Primary connection is healthy."),
                (this.isHealthy_ = !0))
              : Fb(() => {
                  this.sendPingOnPrimaryIfNecessary_();
                }, Math.floor(5e3));
        }
        sendPingOnPrimaryIfNecessary_() {
          !this.isHealthy_ &&
            1 === this.state_ &&
            (this.log_("sending ping on primary."),
            this.sendData_({ t: "c", d: { t: "p", d: {} } }));
        }
        onSecondaryConnectionLost_() {
          const t = this.secondaryConn_;
          (this.secondaryConn_ = null),
            (this.tx_ === t || this.rx_ === t) && this.close();
        }
        onConnectionLost_(t) {
          (this.conn_ = null),
            t || 0 !== this.state_
              ? 1 === this.state_ && this.log_("Realtime connection lost.")
              : (this.log_("Realtime connection failed."),
                this.repoInfo_.isCacheableHost() &&
                  (Df.remove("host:" + this.repoInfo_.host),
                  (this.repoInfo_.internalHost = this.repoInfo_.host))),
            this.close();
        }
        onConnectionShutdown_(t) {
          this.log_("Connection shutdown command received. Shutting down..."),
            this.onKill_ && (this.onKill_(t), (this.onKill_ = null)),
            (this.onDisconnect_ = null),
            this.close();
        }
        sendData_(t) {
          if (1 !== this.state_) throw "Connection is not connected";
          this.tx_.send(t);
        }
        close() {
          2 !== this.state_ &&
            (this.log_("Closing realtime connection."),
            (this.state_ = 2),
            this.closeConnections_(),
            this.onDisconnect_ &&
              (this.onDisconnect_(), (this.onDisconnect_ = null)));
        }
        closeConnections_() {
          this.log_("Shutting down all connections"),
            this.conn_ && (this.conn_.close(), (this.conn_ = null)),
            this.secondaryConn_ &&
              (this.secondaryConn_.close(), (this.secondaryConn_ = null)),
            this.healthyTimeout_ &&
              (clearTimeout(this.healthyTimeout_),
              (this.healthyTimeout_ = null));
        }
      }
      class qN {
        put(t, e, i, a) {}
        merge(t, e, i, a) {}
        refreshAuthToken(t) {}
        refreshAppCheckToken(t) {}
        onDisconnectPut(t, e, i) {}
        onDisconnectMerge(t, e, i) {}
        onDisconnectCancel(t, e) {}
        reportStats(t) {}
      }
      class KN {
        constructor(t) {
          (this.allowedEvents_ = t),
            (this.listeners_ = {}),
            (0, P.hu)(
              Array.isArray(t) && t.length > 0,
              "Requires a non-empty array"
            );
        }
        trigger(t, ...e) {
          if (Array.isArray(this.listeners_[t])) {
            const i = [...this.listeners_[t]];
            for (let a = 0; a < i.length; a++)
              i[a].callback.apply(i[a].context, e);
          }
        }
        on(t, e, i) {
          this.validateEventType_(t),
            (this.listeners_[t] = this.listeners_[t] || []),
            this.listeners_[t].push({ callback: e, context: i });
          const a = this.getInitialEvent(t);
          a && e.apply(i, a);
        }
        off(t, e, i) {
          this.validateEventType_(t);
          const a = this.listeners_[t] || [];
          for (let u = 0; u < a.length; u++)
            if (a[u].callback === e && (!i || i === a[u].context))
              return void a.splice(u, 1);
        }
        validateEventType_(t) {
          (0, P.hu)(
            this.allowedEvents_.find((e) => e === t),
            "Unknown event: " + t
          );
        }
      }
      class JS extends KN {
        constructor() {
          super(["online"]),
            (this.online_ = !0),
            "undefined" != typeof window &&
              void 0 !== window.addEventListener &&
              !(0, P.uI)() &&
              (window.addEventListener(
                "online",
                () => {
                  this.online_ ||
                    ((this.online_ = !0), this.trigger("online", !0));
                },
                !1
              ),
              window.addEventListener(
                "offline",
                () => {
                  this.online_ &&
                    ((this.online_ = !1), this.trigger("online", !1));
                },
                !1
              ));
        }
        static getInstance() {
          return new JS();
        }
        getInitialEvent(t) {
          return (
            (0, P.hu)("online" === t, "Unknown event type: " + t),
            [this.online_]
          );
        }
        currentlyOnline() {
          return this.online_;
        }
      }
      class Wt {
        constructor(t, e) {
          if (void 0 === e) {
            this.pieces_ = t.split("/");
            let i = 0;
            for (let a = 0; a < this.pieces_.length; a++)
              this.pieces_[a].length > 0 &&
                ((this.pieces_[i] = this.pieces_[a]), i++);
            (this.pieces_.length = i), (this.pieceNum_ = 0);
          } else (this.pieces_ = t), (this.pieceNum_ = e);
        }
        toString() {
          let t = "";
          for (let e = this.pieceNum_; e < this.pieces_.length; e++)
            "" !== this.pieces_[e] && (t += "/" + this.pieces_[e]);
          return t || "/";
        }
      }
      function Ut() {
        return new Wt("");
      }
      function Tt(n) {
        return n.pieceNum_ >= n.pieces_.length ? null : n.pieces_[n.pieceNum_];
      }
      function Zu(n) {
        return n.pieces_.length - n.pieceNum_;
      }
      function tn(n) {
        let t = n.pieceNum_;
        return t < n.pieces_.length && t++, new Wt(n.pieces_, t);
      }
      function iR(n) {
        return n.pieceNum_ < n.pieces_.length
          ? n.pieces_[n.pieces_.length - 1]
          : null;
      }
      function Ub(n, t = 0) {
        return n.pieces_.slice(n.pieceNum_ + t);
      }
      function XN(n) {
        if (n.pieceNum_ >= n.pieces_.length) return null;
        const t = [];
        for (let e = n.pieceNum_; e < n.pieces_.length - 1; e++)
          t.push(n.pieces_[e]);
        return new Wt(t, 0);
      }
      function yn(n, t) {
        const e = [];
        for (let i = n.pieceNum_; i < n.pieces_.length; i++)
          e.push(n.pieces_[i]);
        if (t instanceof Wt)
          for (let i = t.pieceNum_; i < t.pieces_.length; i++)
            e.push(t.pieces_[i]);
        else {
          const i = t.split("/");
          for (let a = 0; a < i.length; a++) i[a].length > 0 && e.push(i[a]);
        }
        return new Wt(e, 0);
      }
      function It(n) {
        return n.pieceNum_ >= n.pieces_.length;
      }
      function ur(n, t) {
        const e = Tt(n),
          i = Tt(t);
        if (null === e) return t;
        if (e === i) return ur(tn(n), tn(t));
        throw new Error(
          "INTERNAL ERROR: innerPath (" +
            t +
            ") is not within outerPath (" +
            n +
            ")"
        );
      }
      function $V(n, t) {
        const e = Ub(n, 0),
          i = Ub(t, 0);
        for (let a = 0; a < e.length && a < i.length; a++) {
          const u = Tf(e[a], i[a]);
          if (0 !== u) return u;
        }
        return e.length === i.length ? 0 : e.length < i.length ? -1 : 1;
      }
      function rR(n, t) {
        if (Zu(n) !== Zu(t)) return !1;
        for (
          let e = n.pieceNum_, i = t.pieceNum_;
          e <= n.pieces_.length;
          e++, i++
        )
          if (n.pieces_[e] !== t.pieces_[i]) return !1;
        return !0;
      }
      function Fs(n, t) {
        let e = n.pieceNum_,
          i = t.pieceNum_;
        if (Zu(n) > Zu(t)) return !1;
        for (; e < n.pieces_.length; ) {
          if (n.pieces_[e] !== t.pieces_[i]) return !1;
          ++e, ++i;
        }
        return !0;
      }
      class WV {
        constructor(t, e) {
          (this.errorPrefix_ = e),
            (this.parts_ = Ub(t, 0)),
            (this.byteLength_ = Math.max(1, this.parts_.length));
          for (let i = 0; i < this.parts_.length; i++)
            this.byteLength_ += (0, P.ug)(this.parts_[i]);
          e1(this);
        }
      }
      function e1(n) {
        if (n.byteLength_ > 768)
          throw new Error(
            n.errorPrefix_ +
              "has a key path longer than 768 bytes (" +
              n.byteLength_ +
              ")."
          );
        if (n.parts_.length > 32)
          throw new Error(
            n.errorPrefix_ +
              "path specified exceeds the maximum depth that can be written (32) or object contains a cycle " +
              If(n)
          );
      }
      function If(n) {
        return 0 === n.parts_.length
          ? ""
          : "in property '" + n.parts_.join(".") + "'";
      }
      class sR extends KN {
        constructor() {
          let t, e;
          super(["visible"]),
            "undefined" != typeof document &&
              void 0 !== document.addEventListener &&
              (void 0 !== document.hidden
                ? ((e = "visibilitychange"), (t = "hidden"))
                : void 0 !== document.mozHidden
                ? ((e = "mozvisibilitychange"), (t = "mozHidden"))
                : void 0 !== document.msHidden
                ? ((e = "msvisibilitychange"), (t = "msHidden"))
                : void 0 !== document.webkitHidden &&
                  ((e = "webkitvisibilitychange"), (t = "webkitHidden"))),
            (this.visible_ = !0),
            e &&
              document.addEventListener(
                e,
                () => {
                  const i = !document[t];
                  i !== this.visible_ &&
                    ((this.visible_ = i), this.trigger("visible", i));
                },
                !1
              );
        }
        static getInstance() {
          return new sR();
        }
        getInitialEvent(t) {
          return (
            (0, P.hu)("visible" === t, "Unknown event type: " + t),
            [this.visible_]
          );
        }
      }
      const Hb = 1e3;
      let eD,
        Ag = (() => {
          class n extends qN {
            constructor(e, i, a, u, h, _, b, S) {
              if (
                (super(),
                (this.repoInfo_ = e),
                (this.applicationId_ = i),
                (this.onDataUpdate_ = a),
                (this.onConnectStatus_ = u),
                (this.onServerInfoUpdate_ = h),
                (this.authTokenProvider_ = _),
                (this.appCheckTokenProvider_ = b),
                (this.authOverride_ = S),
                (this.id = n.nextPersistentConnectionId_++),
                (this.log_ = Pb("p:" + this.id + ":")),
                (this.interruptReasons_ = {}),
                (this.listens = new Map()),
                (this.outstandingPuts_ = []),
                (this.outstandingGets_ = []),
                (this.outstandingPutCount_ = 0),
                (this.outstandingGetCount_ = 0),
                (this.onDisconnectRequestQueue_ = []),
                (this.connected_ = !1),
                (this.reconnectDelay_ = Hb),
                (this.maxReconnectDelay_ = 3e5),
                (this.securityDebugCallback_ = null),
                (this.lastSessionId = null),
                (this.establishConnectionTimer_ = null),
                (this.visible_ = !1),
                (this.requestCBHash_ = {}),
                (this.requestNumber_ = 0),
                (this.realtime_ = null),
                (this.authToken_ = null),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !1),
                (this.invalidAuthTokenCount_ = 0),
                (this.invalidAppCheckTokenCount_ = 0),
                (this.firstConnection_ = !0),
                (this.lastConnectionAttemptTime_ = null),
                (this.lastConnectionEstablishedTime_ = null),
                S && !(0, P.Yr)())
              )
                throw new Error(
                  "Auth override specified in options, but not supported on non Node.js platforms"
                );
              sR.getInstance().on("visible", this.onVisible_, this),
                -1 === e.host.indexOf("fblocal") &&
                  JS.getInstance().on("online", this.onOnline_, this);
            }
            sendRequest(e, i, a) {
              const u = ++this.requestNumber_,
                h = { r: u, a: e, b: i };
              this.log_((0, P.Pz)(h)),
                (0, P.hu)(
                  this.connected_,
                  "sendRequest call when we're not connected not allowed."
                ),
                this.realtime_.sendRequest(h),
                a && (this.requestCBHash_[u] = a);
            }
            get(e) {
              this.initConnection_();
              const i = new P.BH(),
                a = { p: e._path.toString(), q: e._queryObject },
                u = {
                  action: "g",
                  request: a,
                  onComplete: (_) => {
                    const b = _.d;
                    "ok" === _.s
                      ? (this.onDataUpdate_(a.p, b, !1, null), i.resolve(b))
                      : i.reject(b);
                  },
                };
              this.outstandingGets_.push(u), this.outstandingGetCount_++;
              const h = this.outstandingGets_.length - 1;
              return (
                this.connected_ ||
                  setTimeout(() => {
                    const _ = this.outstandingGets_[h];
                    void 0 === _ ||
                      u !== _ ||
                      (delete this.outstandingGets_[h],
                      this.outstandingGetCount_--,
                      0 === this.outstandingGetCount_ &&
                        (this.outstandingGets_ = []),
                      this.log_("get " + h + " timed out on connection"),
                      i.reject(new Error("Client is offline.")));
                  }, 3e3),
                this.connected_ && this.sendGet_(h),
                i.promise
              );
            }
            listen(e, i, a, u) {
              this.initConnection_();
              const h = e._queryIdentifier,
                _ = e._path.toString();
              this.log_("Listen called for " + _ + " " + h),
                this.listens.has(_) || this.listens.set(_, new Map()),
                (0, P.hu)(
                  e._queryParams.isDefault() || !e._queryParams.loadsAllData(),
                  "listen() called for non-default but complete query"
                ),
                (0, P.hu)(
                  !this.listens.get(_).has(h),
                  "listen() called twice for same path/queryId."
                );
              const b = { onComplete: u, hashFn: i, query: e, tag: a };
              this.listens.get(_).set(h, b),
                this.connected_ && this.sendListen_(b);
            }
            sendGet_(e) {
              const i = this.outstandingGets_[e];
              this.sendRequest("g", i.request, (a) => {
                delete this.outstandingGets_[e],
                  this.outstandingGetCount_--,
                  0 === this.outstandingGetCount_ &&
                    (this.outstandingGets_ = []),
                  i.onComplete && i.onComplete(a);
              });
            }
            sendListen_(e) {
              const i = e.query,
                a = i._path.toString(),
                u = i._queryIdentifier;
              this.log_("Listen on " + a + " for " + u);
              const h = { p: a };
              e.tag && ((h.q = i._queryObject), (h.t = e.tag)),
                (h.h = e.hashFn()),
                this.sendRequest("q", h, (b) => {
                  const S = b.d,
                    T = b.s;
                  n.warnOnListenWarnings_(S, i),
                    (this.listens.get(a) && this.listens.get(a).get(u)) === e &&
                      (this.log_("listen response", b),
                      "ok" !== T && this.removeListen_(a, u),
                      e.onComplete && e.onComplete(T, S));
                });
            }
            static warnOnListenWarnings_(e, i) {
              if (e && "object" == typeof e && (0, P.r3)(e, "w")) {
                const a = (0, P.DV)(e, "w");
                if (Array.isArray(a) && ~a.indexOf("no_index")) {
                  const u =
                      '".indexOn": "' +
                      i._queryParams.getIndex().toString() +
                      '"',
                    h = i._path.toString();
                  cr(
                    `Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ${u} at ${h} to your security rules for better performance.`
                  );
                }
              }
            }
            refreshAuthToken(e) {
              (this.authToken_ = e),
                this.log_("Auth token refreshed"),
                this.authToken_
                  ? this.tryAuth()
                  : this.connected_ && this.sendRequest("unauth", {}, () => {}),
                this.reduceReconnectDelayIfAdminCredential_(e);
            }
            reduceReconnectDelayIfAdminCredential_(e) {
              ((e && 40 === e.length) || (0, P.GJ)(e)) &&
                (this.log_(
                  "Admin auth credential detected.  Reducing max reconnect time."
                ),
                (this.maxReconnectDelay_ = 3e4));
            }
            refreshAppCheckToken(e) {
              (this.appCheckToken_ = e),
                this.log_("App check token refreshed"),
                this.appCheckToken_
                  ? this.tryAppCheck()
                  : this.connected_ &&
                    this.sendRequest("unappeck", {}, () => {});
            }
            tryAuth() {
              if (this.connected_ && this.authToken_) {
                const e = this.authToken_,
                  i = (0, P.w9)(e) ? "auth" : "gauth",
                  a = { cred: e };
                null === this.authOverride_
                  ? (a.noauth = !0)
                  : "object" == typeof this.authOverride_ &&
                    (a.authvar = this.authOverride_),
                  this.sendRequest(i, a, (u) => {
                    const h = u.s,
                      _ = u.d || "error";
                    this.authToken_ === e &&
                      ("ok" === h
                        ? (this.invalidAuthTokenCount_ = 0)
                        : this.onAuthRevoked_(h, _));
                  });
              }
            }
            tryAppCheck() {
              this.connected_ &&
                this.appCheckToken_ &&
                this.sendRequest(
                  "appcheck",
                  { token: this.appCheckToken_ },
                  (e) => {
                    const i = e.s,
                      a = e.d || "error";
                    "ok" === i
                      ? (this.invalidAppCheckTokenCount_ = 0)
                      : this.onAppCheckRevoked_(i, a);
                  }
                );
            }
            unlisten(e, i) {
              const a = e._path.toString(),
                u = e._queryIdentifier;
              this.log_("Unlisten called for " + a + " " + u),
                (0, P.hu)(
                  e._queryParams.isDefault() || !e._queryParams.loadsAllData(),
                  "unlisten() called for non-default but complete query"
                ),
                this.removeListen_(a, u) &&
                  this.connected_ &&
                  this.sendUnlisten_(a, u, e._queryObject, i);
            }
            sendUnlisten_(e, i, a, u) {
              this.log_("Unlisten on " + e + " for " + i);
              const h = { p: e };
              u && ((h.q = a), (h.t = u)), this.sendRequest("n", h);
            }
            onDisconnectPut(e, i, a) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("o", e, i, a)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: e,
                      action: "o",
                      data: i,
                      onComplete: a,
                    });
            }
            onDisconnectMerge(e, i, a) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("om", e, i, a)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: e,
                      action: "om",
                      data: i,
                      onComplete: a,
                    });
            }
            onDisconnectCancel(e, i) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("oc", e, null, i)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: e,
                      action: "oc",
                      data: null,
                      onComplete: i,
                    });
            }
            sendOnDisconnect_(e, i, a, u) {
              const h = { p: i, d: a };
              this.log_("onDisconnect " + e, h),
                this.sendRequest(e, h, (_) => {
                  u &&
                    setTimeout(() => {
                      u(_.s, _.d);
                    }, Math.floor(0));
                });
            }
            put(e, i, a, u) {
              this.putInternal("p", e, i, a, u);
            }
            merge(e, i, a, u) {
              this.putInternal("m", e, i, a, u);
            }
            putInternal(e, i, a, u, h) {
              this.initConnection_();
              const _ = { p: i, d: a };
              void 0 !== h && (_.h = h),
                this.outstandingPuts_.push({
                  action: e,
                  request: _,
                  onComplete: u,
                }),
                this.outstandingPutCount_++,
                this.connected_
                  ? this.sendPut_(this.outstandingPuts_.length - 1)
                  : this.log_("Buffering put: " + i);
            }
            sendPut_(e) {
              const i = this.outstandingPuts_[e].action,
                a = this.outstandingPuts_[e].request,
                u = this.outstandingPuts_[e].onComplete;
              (this.outstandingPuts_[e].queued = this.connected_),
                this.sendRequest(i, a, (h) => {
                  this.log_(i + " response", h),
                    delete this.outstandingPuts_[e],
                    this.outstandingPutCount_--,
                    0 === this.outstandingPutCount_ &&
                      (this.outstandingPuts_ = []),
                    u && u(h.s, h.d);
                });
            }
            reportStats(e) {
              if (this.connected_) {
                const i = { c: e };
                this.log_("reportStats", i),
                  this.sendRequest("s", i, (a) => {
                    "ok" !== a.s &&
                      this.log_("reportStats", "Error sending stats: " + a.d);
                  });
              }
            }
            onDataMessage_(e) {
              if ("r" in e) {
                this.log_("from server: " + (0, P.Pz)(e));
                const i = e.r,
                  a = this.requestCBHash_[i];
                a && (delete this.requestCBHash_[i], a(e.b));
              } else {
                if ("error" in e)
                  throw "A server-side error has occurred: " + e.error;
                "a" in e && this.onDataPush_(e.a, e.b);
              }
            }
            onDataPush_(e, i) {
              this.log_("handleServerMessage", e, i),
                "d" === e
                  ? this.onDataUpdate_(i.p, i.d, !1, i.t)
                  : "m" === e
                  ? this.onDataUpdate_(i.p, i.d, !0, i.t)
                  : "c" === e
                  ? this.onListenRevoked_(i.p, i.q)
                  : "ac" === e
                  ? this.onAuthRevoked_(i.s, i.d)
                  : "apc" === e
                  ? this.onAppCheckRevoked_(i.s, i.d)
                  : "sd" === e
                  ? this.onSecurityDebugPacket_(i)
                  : Yx(
                      "Unrecognized action received from server: " +
                        (0, P.Pz)(e) +
                        "\nAre you using the latest client?"
                    );
            }
            onReady_(e, i) {
              this.log_("connection ready"),
                (this.connected_ = !0),
                (this.lastConnectionEstablishedTime_ = new Date().getTime()),
                this.handleTimestamp_(e),
                (this.lastSessionId = i),
                this.firstConnection_ && this.sendConnectStats_(),
                this.restoreState_(),
                (this.firstConnection_ = !1),
                this.onConnectStatus_(!0);
            }
            scheduleConnect_(e) {
              (0, P.hu)(
                !this.realtime_,
                "Scheduling a connect when we're already connected/ing?"
              ),
                this.establishConnectionTimer_ &&
                  clearTimeout(this.establishConnectionTimer_),
                (this.establishConnectionTimer_ = setTimeout(() => {
                  (this.establishConnectionTimer_ = null),
                    this.establishConnection_();
                }, Math.floor(e)));
            }
            initConnection_() {
              !this.realtime_ &&
                this.firstConnection_ &&
                this.scheduleConnect_(0);
            }
            onVisible_(e) {
              e &&
                !this.visible_ &&
                this.reconnectDelay_ === this.maxReconnectDelay_ &&
                (this.log_("Window became visible.  Reducing delay."),
                (this.reconnectDelay_ = Hb),
                this.realtime_ || this.scheduleConnect_(0)),
                (this.visible_ = e);
            }
            onOnline_(e) {
              e
                ? (this.log_("Browser went online."),
                  (this.reconnectDelay_ = Hb),
                  this.realtime_ || this.scheduleConnect_(0))
                : (this.log_("Browser went offline.  Killing connection."),
                  this.realtime_ && this.realtime_.close());
            }
            onRealtimeDisconnect_() {
              if (
                (this.log_("data client disconnected"),
                (this.connected_ = !1),
                (this.realtime_ = null),
                this.cancelSentTransactions_(),
                (this.requestCBHash_ = {}),
                this.shouldReconnect_())
              ) {
                this.visible_
                  ? this.lastConnectionEstablishedTime_ &&
                    (new Date().getTime() -
                      this.lastConnectionEstablishedTime_ >
                      3e4 && (this.reconnectDelay_ = Hb),
                    (this.lastConnectionEstablishedTime_ = null))
                  : (this.log_("Window isn't visible.  Delaying reconnect."),
                    (this.reconnectDelay_ = this.maxReconnectDelay_),
                    (this.lastConnectionAttemptTime_ = new Date().getTime()));
                const e =
                  new Date().getTime() - this.lastConnectionAttemptTime_;
                let i = Math.max(0, this.reconnectDelay_ - e);
                (i = Math.random() * i),
                  this.log_("Trying to reconnect in " + i + "ms"),
                  this.scheduleConnect_(i),
                  (this.reconnectDelay_ = Math.min(
                    this.maxReconnectDelay_,
                    1.3 * this.reconnectDelay_
                  ));
              }
              this.onConnectStatus_(!1);
            }
            establishConnection_() {
              var e = this;
              return (0, _N.Z)(function* () {
                if (e.shouldReconnect_()) {
                  e.log_("Making a connection attempt"),
                    (e.lastConnectionAttemptTime_ = new Date().getTime()),
                    (e.lastConnectionEstablishedTime_ = null);
                  const i = e.onDataMessage_.bind(e),
                    a = e.onReady_.bind(e),
                    u = e.onRealtimeDisconnect_.bind(e),
                    h = e.id + ":" + n.nextConnectionId_++,
                    _ = e.lastSessionId;
                  let b = !1,
                    S = null;
                  const T = function () {
                    S ? S.close() : ((b = !0), u());
                  };
                  e.realtime_ = {
                    close: T,
                    sendRequest: function (j) {
                      (0, P.hu)(
                        S,
                        "sendRequest call when we're not connected not allowed."
                      ),
                        S.sendRequest(j);
                    },
                  };
                  const B = e.forceTokenRefresh_;
                  e.forceTokenRefresh_ = !1;
                  try {
                    const [j, X] = yield Promise.all([
                      e.authTokenProvider_.getToken(B),
                      e.appCheckTokenProvider_.getToken(B),
                    ]);
                    b
                      ? bi("getToken() completed but was canceled")
                      : (bi("getToken() completed. Creating connection."),
                        (e.authToken_ = j && j.accessToken),
                        (e.appCheckToken_ = X && X.token),
                        (S = new GV(
                          h,
                          e.repoInfo_,
                          e.applicationId_,
                          e.appCheckToken_,
                          e.authToken_,
                          i,
                          a,
                          u,
                          (ve) => {
                            cr(ve + " (" + e.repoInfo_.toString() + ")"),
                              e.interrupt("server_kill");
                          },
                          _
                        )));
                  } catch (j) {
                    e.log_("Failed to get token: " + j),
                      b || (e.repoInfo_.nodeAdmin && cr(j), T());
                  }
                }
              })();
            }
            interrupt(e) {
              bi("Interrupting connection for reason: " + e),
                (this.interruptReasons_[e] = !0),
                this.realtime_
                  ? this.realtime_.close()
                  : (this.establishConnectionTimer_ &&
                      (clearTimeout(this.establishConnectionTimer_),
                      (this.establishConnectionTimer_ = null)),
                    this.connected_ && this.onRealtimeDisconnect_());
            }
            resume(e) {
              bi("Resuming connection for reason: " + e),
                delete this.interruptReasons_[e],
                (0, P.xb)(this.interruptReasons_) &&
                  ((this.reconnectDelay_ = Hb),
                  this.realtime_ || this.scheduleConnect_(0));
            }
            handleTimestamp_(e) {
              const i = e - new Date().getTime();
              this.onServerInfoUpdate_({ serverTimeOffset: i });
            }
            cancelSentTransactions_() {
              for (let e = 0; e < this.outstandingPuts_.length; e++) {
                const i = this.outstandingPuts_[e];
                i &&
                  "h" in i.request &&
                  i.queued &&
                  (i.onComplete && i.onComplete("disconnect"),
                  delete this.outstandingPuts_[e],
                  this.outstandingPutCount_--);
              }
              0 === this.outstandingPutCount_ && (this.outstandingPuts_ = []);
            }
            onListenRevoked_(e, i) {
              let a;
              a = i ? i.map((h) => Zx(h)).join("$") : "default";
              const u = this.removeListen_(e, a);
              u && u.onComplete && u.onComplete("permission_denied");
            }
            removeListen_(e, i) {
              const a = new Wt(e).toString();
              let u;
              if (this.listens.has(a)) {
                const h = this.listens.get(a);
                (u = h.get(i)),
                  h.delete(i),
                  0 === h.size && this.listens.delete(a);
              } else u = void 0;
              return u;
            }
            onAuthRevoked_(e, i) {
              bi("Auth token revoked: " + e + "/" + i),
                (this.authToken_ = null),
                (this.forceTokenRefresh_ = !0),
                this.realtime_.close(),
                ("invalid_token" === e || "permission_denied" === e) &&
                  (this.invalidAuthTokenCount_++,
                  this.invalidAuthTokenCount_ >= 3 &&
                    ((this.reconnectDelay_ = 3e4),
                    this.authTokenProvider_.notifyForInvalidToken()));
            }
            onAppCheckRevoked_(e, i) {
              bi("App check token revoked: " + e + "/" + i),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !0),
                ("invalid_token" === e || "permission_denied" === e) &&
                  (this.invalidAppCheckTokenCount_++,
                  this.invalidAppCheckTokenCount_ >= 3 &&
                    this.appCheckTokenProvider_.notifyForInvalidToken());
            }
            onSecurityDebugPacket_(e) {
              this.securityDebugCallback_
                ? this.securityDebugCallback_(e)
                : "msg" in e &&
                  console.log(
                    "FIREBASE: " + e.msg.replace("\n", "\nFIREBASE: ")
                  );
            }
            restoreState_() {
              this.tryAuth(), this.tryAppCheck();
              for (const e of this.listens.values())
                for (const i of e.values()) this.sendListen_(i);
              for (let e = 0; e < this.outstandingPuts_.length; e++)
                this.outstandingPuts_[e] && this.sendPut_(e);
              for (; this.onDisconnectRequestQueue_.length; ) {
                const e = this.onDisconnectRequestQueue_.shift();
                this.sendOnDisconnect_(
                  e.action,
                  e.pathString,
                  e.data,
                  e.onComplete
                );
              }
              for (let e = 0; e < this.outstandingGets_.length; e++)
                this.outstandingGets_[e] && this.sendGet_(e);
            }
            sendConnectStats_() {
              const e = {};
              let i = "js";
              (0, P.Yr)() &&
                (i = this.repoInfo_.nodeAdmin ? "admin_node" : "node"),
                (e["sdk." + i + "." + $x.replace(/\./g, "-")] = 1),
                (0, P.uI)()
                  ? (e["framework.cordova"] = 1)
                  : (0, P.b$)() && (e["framework.reactnative"] = 1),
                this.reportStats(e);
            }
            shouldReconnect_() {
              const e = JS.getInstance().currentlyOnline();
              return (0, P.xb)(this.interruptReasons_) && e;
            }
          }
          return (
            (n.nextPersistentConnectionId_ = 0), (n.nextConnectionId_ = 0), n
          );
        })();
      class At {
        constructor(t, e) {
          (this.name = t), (this.node = e);
        }
        static Wrap(t, e) {
          return new At(t, e);
        }
      }
      class XS {
        getCompare() {
          return this.compare.bind(this);
        }
        indexedValueChanged(t, e) {
          const i = new At(nc, t),
            a = new At(nc, e);
          return 0 !== this.compare(i, a);
        }
        minPost() {
          return At.MIN;
        }
      }
      class i1 extends XS {
        static get __EMPTY_NODE() {
          return eD;
        }
        static set __EMPTY_NODE(t) {
          eD = t;
        }
        compare(t, e) {
          return Tf(t.name, e.name);
        }
        isDefinedOn(t) {
          throw (0, P.g5)("KeyIndex.isDefinedOn not expected to be called.");
        }
        indexedValueChanged(t, e) {
          return !1;
        }
        minPost() {
          return At.MIN;
        }
        maxPost() {
          return new At(Ba, eD);
        }
        makePost(t, e) {
          return (
            (0, P.hu)(
              "string" == typeof t,
              "KeyIndex indexValue must always be a string."
            ),
            new At(t, eD)
          );
        }
        toString() {
          return ".key";
        }
      }
      const Ua = new i1();
      class tD {
        constructor(t, e, i, a, u = null) {
          (this.isReverse_ = a),
            (this.resultGenerator_ = u),
            (this.nodeStack_ = []);
          let h = 1;
          for (; !t.isEmpty(); )
            if (((t = t), (h = e ? i(t.key, e) : 1), a && (h *= -1), h < 0))
              t = this.isReverse_ ? t.left : t.right;
            else {
              if (0 === h) {
                this.nodeStack_.push(t);
                break;
              }
              this.nodeStack_.push(t), (t = this.isReverse_ ? t.right : t.left);
            }
        }
        getNext() {
          if (0 === this.nodeStack_.length) return null;
          let e,
            t = this.nodeStack_.pop();
          if (
            ((e = this.resultGenerator_
              ? this.resultGenerator_(t.key, t.value)
              : { key: t.key, value: t.value }),
            this.isReverse_)
          )
            for (t = t.left; !t.isEmpty(); )
              this.nodeStack_.push(t), (t = t.right);
          else
            for (t = t.right; !t.isEmpty(); )
              this.nodeStack_.push(t), (t = t.left);
          return e;
        }
        hasNext() {
          return this.nodeStack_.length > 0;
        }
        peek() {
          if (0 === this.nodeStack_.length) return null;
          const t = this.nodeStack_[this.nodeStack_.length - 1];
          return this.resultGenerator_
            ? this.resultGenerator_(t.key, t.value)
            : { key: t.key, value: t.value };
        }
      }
      let aR,
        Ro = (() => {
          class n {
            constructor(e, i, a, u, h) {
              (this.key = e),
                (this.value = i),
                (this.color = null != a ? a : n.RED),
                (this.left = null != u ? u : Ir.EMPTY_NODE),
                (this.right = null != h ? h : Ir.EMPTY_NODE);
            }
            copy(e, i, a, u, h) {
              return new n(
                null != e ? e : this.key,
                null != i ? i : this.value,
                null != a ? a : this.color,
                null != u ? u : this.left,
                null != h ? h : this.right
              );
            }
            count() {
              return this.left.count() + 1 + this.right.count();
            }
            isEmpty() {
              return !1;
            }
            inorderTraversal(e) {
              return (
                this.left.inorderTraversal(e) ||
                !!e(this.key, this.value) ||
                this.right.inorderTraversal(e)
              );
            }
            reverseTraversal(e) {
              return (
                this.right.reverseTraversal(e) ||
                e(this.key, this.value) ||
                this.left.reverseTraversal(e)
              );
            }
            min_() {
              return this.left.isEmpty() ? this : this.left.min_();
            }
            minKey() {
              return this.min_().key;
            }
            maxKey() {
              return this.right.isEmpty() ? this.key : this.right.maxKey();
            }
            insert(e, i, a) {
              let u = this;
              const h = a(e, u.key);
              return (
                (u =
                  h < 0
                    ? u.copy(null, null, null, u.left.insert(e, i, a), null)
                    : 0 === h
                    ? u.copy(null, i, null, null, null)
                    : u.copy(null, null, null, null, u.right.insert(e, i, a))),
                u.fixUp_()
              );
            }
            removeMin_() {
              if (this.left.isEmpty()) return Ir.EMPTY_NODE;
              let e = this;
              return (
                !e.left.isRed_() &&
                  !e.left.left.isRed_() &&
                  (e = e.moveRedLeft_()),
                (e = e.copy(null, null, null, e.left.removeMin_(), null)),
                e.fixUp_()
              );
            }
            remove(e, i) {
              let a, u;
              if (((a = this), i(e, a.key) < 0))
                !a.left.isEmpty() &&
                  !a.left.isRed_() &&
                  !a.left.left.isRed_() &&
                  (a = a.moveRedLeft_()),
                  (a = a.copy(null, null, null, a.left.remove(e, i), null));
              else {
                if (
                  (a.left.isRed_() && (a = a.rotateRight_()),
                  !a.right.isEmpty() &&
                    !a.right.isRed_() &&
                    !a.right.left.isRed_() &&
                    (a = a.moveRedRight_()),
                  0 === i(e, a.key))
                ) {
                  if (a.right.isEmpty()) return Ir.EMPTY_NODE;
                  (u = a.right.min_()),
                    (a = a.copy(
                      u.key,
                      u.value,
                      null,
                      null,
                      a.right.removeMin_()
                    ));
                }
                a = a.copy(null, null, null, null, a.right.remove(e, i));
              }
              return a.fixUp_();
            }
            isRed_() {
              return this.color;
            }
            fixUp_() {
              let e = this;
              return (
                e.right.isRed_() && !e.left.isRed_() && (e = e.rotateLeft_()),
                e.left.isRed_() &&
                  e.left.left.isRed_() &&
                  (e = e.rotateRight_()),
                e.left.isRed_() && e.right.isRed_() && (e = e.colorFlip_()),
                e
              );
            }
            moveRedLeft_() {
              let e = this.colorFlip_();
              return (
                e.right.left.isRed_() &&
                  ((e = e.copy(null, null, null, null, e.right.rotateRight_())),
                  (e = e.rotateLeft_()),
                  (e = e.colorFlip_())),
                e
              );
            }
            moveRedRight_() {
              let e = this.colorFlip_();
              return (
                e.left.left.isRed_() &&
                  ((e = e.rotateRight_()), (e = e.colorFlip_())),
                e
              );
            }
            rotateLeft_() {
              const e = this.copy(null, null, n.RED, null, this.right.left);
              return this.right.copy(null, null, this.color, e, null);
            }
            rotateRight_() {
              const e = this.copy(null, null, n.RED, this.left.right, null);
              return this.left.copy(null, null, this.color, null, e);
            }
            colorFlip_() {
              const e = this.left.copy(
                  null,
                  null,
                  !this.left.color,
                  null,
                  null
                ),
                i = this.right.copy(null, null, !this.right.color, null, null);
              return this.copy(null, null, !this.color, e, i);
            }
            checkMaxDepth_() {
              const e = this.check_();
              return Math.pow(2, e) <= this.count() + 1;
            }
            check_() {
              if (this.isRed_() && this.left.isRed_())
                throw new Error(
                  "Red node has red child(" + this.key + "," + this.value + ")"
                );
              if (this.right.isRed_())
                throw new Error(
                  "Right child of (" + this.key + "," + this.value + ") is red"
                );
              const e = this.left.check_();
              if (e !== this.right.check_())
                throw new Error("Black depths differ");
              return e + (this.isRed_() ? 0 : 1);
            }
          }
          return (n.RED = !0), (n.BLACK = !1), n;
        })();
      class Ir {
        constructor(t, e = Ir.EMPTY_NODE) {
          (this.comparator_ = t), (this.root_ = e);
        }
        insert(t, e) {
          return new Ir(
            this.comparator_,
            this.root_
              .insert(t, e, this.comparator_)
              .copy(null, null, Ro.BLACK, null, null)
          );
        }
        remove(t) {
          return new Ir(
            this.comparator_,
            this.root_
              .remove(t, this.comparator_)
              .copy(null, null, Ro.BLACK, null, null)
          );
        }
        get(t) {
          let e,
            i = this.root_;
          for (; !i.isEmpty(); ) {
            if (((e = this.comparator_(t, i.key)), 0 === e)) return i.value;
            e < 0 ? (i = i.left) : e > 0 && (i = i.right);
          }
          return null;
        }
        getPredecessorKey(t) {
          let e,
            i = this.root_,
            a = null;
          for (; !i.isEmpty(); ) {
            if (((e = this.comparator_(t, i.key)), 0 === e)) {
              if (i.left.isEmpty()) return a ? a.key : null;
              for (i = i.left; !i.right.isEmpty(); ) i = i.right;
              return i.key;
            }
            e < 0 ? (i = i.left) : e > 0 && ((a = i), (i = i.right));
          }
          throw new Error(
            "Attempted to find predecessor key for a nonexistent key.  What gives?"
          );
        }
        isEmpty() {
          return this.root_.isEmpty();
        }
        count() {
          return this.root_.count();
        }
        minKey() {
          return this.root_.minKey();
        }
        maxKey() {
          return this.root_.maxKey();
        }
        inorderTraversal(t) {
          return this.root_.inorderTraversal(t);
        }
        reverseTraversal(t) {
          return this.root_.reverseTraversal(t);
        }
        getIterator(t) {
          return new tD(this.root_, null, this.comparator_, !1, t);
        }
        getIteratorFrom(t, e) {
          return new tD(this.root_, t, this.comparator_, !1, e);
        }
        getReverseIteratorFrom(t, e) {
          return new tD(this.root_, t, this.comparator_, !0, e);
        }
        getReverseIterator(t) {
          return new tD(this.root_, null, this.comparator_, !0, t);
        }
      }
      function t2(n, t) {
        return Tf(n.name, t.name);
      }
      function oR(n, t) {
        return Tf(n, t);
      }
      Ir.EMPTY_NODE = new (class {
        copy(t, e, i, a, u) {
          return this;
        }
        insert(t, e, i) {
          return new Ro(t, e, null);
        }
        remove(t, e) {
          return this;
        }
        count() {
          return 0;
        }
        isEmpty() {
          return !0;
        }
        inorderTraversal(t) {
          return !1;
        }
        reverseTraversal(t) {
          return !1;
        }
        minKey() {
          return null;
        }
        maxKey() {
          return null;
        }
        check_() {
          return 0;
        }
        isRed_() {
          return !1;
        }
      })();
      const r1 = function (n) {
          return "number" == typeof n ? "number:" + DN(n) : "string:" + n;
        },
        s1 = function (n) {
          if (n.isLeafNode()) {
            const t = n.val();
            (0, P.hu)(
              "string" == typeof t ||
                "number" == typeof t ||
                ("object" == typeof t && (0, P.r3)(t, ".sv")),
              "Priority must be a string or number."
            );
          } else
            (0, P.hu)(n === aR || n.isEmpty(), "priority of unexpected type.");
          (0, P.hu)(
            n === aR || n.getPriority().isEmpty(),
            "Priority nodes can't have a priority of their own."
          );
        };
      let o1,
        a1,
        l1,
        xg = (() => {
          class n {
            constructor(e, i = n.__childrenNodeConstructor.EMPTY_NODE) {
              (this.value_ = e),
                (this.priorityNode_ = i),
                (this.lazyHash_ = null),
                (0, P.hu)(
                  null != this.value_,
                  "LeafNode shouldn't be created with null/undefined value."
                ),
                s1(this.priorityNode_);
            }
            static set __childrenNodeConstructor(e) {
              o1 = e;
            }
            static get __childrenNodeConstructor() {
              return o1;
            }
            isLeafNode() {
              return !0;
            }
            getPriority() {
              return this.priorityNode_;
            }
            updatePriority(e) {
              return new n(this.value_, e);
            }
            getImmediateChild(e) {
              return ".priority" === e
                ? this.priorityNode_
                : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            getChild(e) {
              return It(e)
                ? this
                : ".priority" === Tt(e)
                ? this.priorityNode_
                : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            hasChild() {
              return !1;
            }
            getPredecessorChildName(e, i) {
              return null;
            }
            updateImmediateChild(e, i) {
              return ".priority" === e
                ? this.updatePriority(i)
                : i.isEmpty() && ".priority" !== e
                ? this
                : n.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(
                    e,
                    i
                  ).updatePriority(this.priorityNode_);
            }
            updateChild(e, i) {
              const a = Tt(e);
              return null === a
                ? i
                : i.isEmpty() && ".priority" !== a
                ? this
                : ((0, P.hu)(
                    ".priority" !== a || 1 === Zu(e),
                    ".priority must be the last token in a path"
                  ),
                  this.updateImmediateChild(
                    a,
                    n.__childrenNodeConstructor.EMPTY_NODE.updateChild(tn(e), i)
                  ));
            }
            isEmpty() {
              return !1;
            }
            numChildren() {
              return 0;
            }
            forEachChild(e, i) {
              return !1;
            }
            val(e) {
              return e && !this.getPriority().isEmpty()
                ? {
                    ".value": this.getValue(),
                    ".priority": this.getPriority().val(),
                  }
                : this.getValue();
            }
            hash() {
              if (null === this.lazyHash_) {
                let e = "";
                this.priorityNode_.isEmpty() ||
                  (e += "priority:" + r1(this.priorityNode_.val()) + ":");
                const i = typeof this.value_;
                (e += i + ":"),
                  (e += "number" === i ? DN(this.value_) : this.value_),
                  (this.lazyHash_ = CN(e));
              }
              return this.lazyHash_;
            }
            getValue() {
              return this.value_;
            }
            compareTo(e) {
              return e === n.__childrenNodeConstructor.EMPTY_NODE
                ? 1
                : e instanceof n.__childrenNodeConstructor
                ? -1
                : ((0, P.hu)(e.isLeafNode(), "Unknown node type"),
                  this.compareToLeafNode_(e));
            }
            compareToLeafNode_(e) {
              const i = typeof e.value_,
                a = typeof this.value_,
                u = n.VALUE_TYPE_ORDER.indexOf(i),
                h = n.VALUE_TYPE_ORDER.indexOf(a);
              return (
                (0, P.hu)(u >= 0, "Unknown leaf type: " + i),
                (0, P.hu)(h >= 0, "Unknown leaf type: " + a),
                u === h
                  ? "object" === a
                    ? 0
                    : this.value_ < e.value_
                    ? -1
                    : this.value_ === e.value_
                    ? 0
                    : 1
                  : h - u
              );
            }
            withIndex() {
              return this;
            }
            isIndexed() {
              return !0;
            }
            equals(e) {
              if (e === this) return !0;
              if (e.isLeafNode()) {
                const i = e;
                return (
                  this.value_ === i.value_ &&
                  this.priorityNode_.equals(i.priorityNode_)
                );
              }
              return !1;
            }
          }
          return (
            (n.VALUE_TYPE_ORDER = ["object", "boolean", "number", "string"]), n
          );
        })();
      const on = new (class extends XS {
          compare(t, e) {
            const i = t.node.getPriority(),
              a = e.node.getPriority(),
              u = i.compareTo(a);
            return 0 === u ? Tf(t.name, e.name) : u;
          }
          isDefinedOn(t) {
            return !t.getPriority().isEmpty();
          }
          indexedValueChanged(t, e) {
            return !t.getPriority().equals(e.getPriority());
          }
          minPost() {
            return At.MIN;
          }
          maxPost() {
            return new At(Ba, new xg("[PRIORITY-POST]", l1));
          }
          makePost(t, e) {
            const i = a1(t);
            return new At(e, new xg("[PRIORITY-POST]", i));
          }
          toString() {
            return ".priority";
          }
        })(),
        a2 = Math.log(2);
      class l2 {
        constructor(t) {
          (this.count = parseInt(Math.log(t + 1) / a2, 10)),
            (this.current_ = this.count - 1);
          const a = ((u) => parseInt(Array(this.count + 1).join("1"), 2))();
          this.bits_ = (t + 1) & a;
        }
        nextBitIsOne() {
          const t = !(this.bits_ & (1 << this.current_));
          return this.current_--, t;
        }
      }
      const nD = function (n, t, e, i) {
        n.sort(t);
        const a = function (b, S) {
            const T = S - b;
            let A, B;
            if (0 === T) return null;
            if (1 === T)
              return (
                (A = n[b]),
                (B = e ? e(A) : A),
                new Ro(B, A.node, Ro.BLACK, null, null)
              );
            {
              const j = parseInt(T / 2, 10) + b,
                X = a(b, j),
                ve = a(j + 1, S);
              return (
                (A = n[j]),
                (B = e ? e(A) : A),
                new Ro(B, A.node, Ro.BLACK, X, ve)
              );
            }
          },
          _ = (function (b) {
            let S = null,
              T = null,
              A = n.length;
            const B = function (X, ve) {
                const De = A - X,
                  Ne = A;
                A -= X;
                const qe = a(De + 1, Ne),
                  Fe = n[De],
                  mt = e ? e(Fe) : Fe;
                j(new Ro(mt, Fe.node, ve, null, qe));
              },
              j = function (X) {
                S ? ((S.left = X), (S = X)) : ((T = X), (S = X));
              };
            for (let X = 0; X < b.count; ++X) {
              const ve = b.nextBitIsOne(),
                De = Math.pow(2, b.count - (X + 1));
              ve ? B(De, Ro.BLACK) : (B(De, Ro.BLACK), B(De, Ro.RED));
            }
            return T;
          })(new l2(n.length));
        return new Ir(i || t, _);
      };
      let lR;
      const Rg = {};
      class ic {
        constructor(t, e) {
          (this.indexes_ = t), (this.indexSet_ = e);
        }
        static get Default() {
          return (
            (0, P.hu)(Rg && on, "ChildrenNode.ts has not been loaded"),
            (lR = lR || new ic({ ".priority": Rg }, { ".priority": on })),
            lR
          );
        }
        get(t) {
          const e = (0, P.DV)(this.indexes_, t);
          if (!e) throw new Error("No index defined for " + t);
          return e instanceof Ir ? e : null;
        }
        hasIndex(t) {
          return (0, P.r3)(this.indexSet_, t.toString());
        }
        addIndex(t, e) {
          (0, P.hu)(
            t !== Ua,
            "KeyIndex always exists and isn't meant to be added to the IndexMap."
          );
          const i = [];
          let a = !1;
          const u = e.getIterator(At.Wrap);
          let _,
            h = u.getNext();
          for (; h; )
            (a = a || t.isDefinedOn(h.node)), i.push(h), (h = u.getNext());
          _ = a ? nD(i, t.getCompare()) : Rg;
          const b = t.toString(),
            S = Object.assign({}, this.indexSet_);
          S[b] = t;
          const T = Object.assign({}, this.indexes_);
          return (T[b] = _), new ic(T, S);
        }
        addToIndexes(t, e) {
          const i = (0, P.UI)(this.indexes_, (a, u) => {
            const h = (0, P.DV)(this.indexSet_, u);
            if (
              ((0, P.hu)(h, "Missing index implementation for " + u), a === Rg)
            ) {
              if (h.isDefinedOn(t.node)) {
                const _ = [],
                  b = e.getIterator(At.Wrap);
                let S = b.getNext();
                for (; S; ) S.name !== t.name && _.push(S), (S = b.getNext());
                return _.push(t), nD(_, h.getCompare());
              }
              return Rg;
            }
            {
              const _ = e.get(t.name);
              let b = a;
              return (
                _ && (b = b.remove(new At(t.name, _))), b.insert(t, t.node)
              );
            }
          });
          return new ic(i, this.indexSet_);
        }
        removeFromIndexes(t, e) {
          const i = (0, P.UI)(this.indexes_, (a) => {
            if (a === Rg) return a;
            {
              const u = e.get(t.name);
              return u ? a.remove(new At(t.name, u)) : a;
            }
          });
          return new ic(i, this.indexSet_);
        }
      }
      let jb,
        pt = (() => {
          class n {
            constructor(e, i, a) {
              (this.children_ = e),
                (this.priorityNode_ = i),
                (this.indexMap_ = a),
                (this.lazyHash_ = null),
                this.priorityNode_ && s1(this.priorityNode_),
                this.children_.isEmpty() &&
                  (0, P.hu)(
                    !this.priorityNode_ || this.priorityNode_.isEmpty(),
                    "An empty node cannot have a priority"
                  );
            }
            static get EMPTY_NODE() {
              return jb || (jb = new n(new Ir(oR), null, ic.Default));
            }
            isLeafNode() {
              return !1;
            }
            getPriority() {
              return this.priorityNode_ || jb;
            }
            updatePriority(e) {
              return this.children_.isEmpty()
                ? this
                : new n(this.children_, e, this.indexMap_);
            }
            getImmediateChild(e) {
              if (".priority" === e) return this.getPriority();
              {
                const i = this.children_.get(e);
                return null === i ? jb : i;
              }
            }
            getChild(e) {
              const i = Tt(e);
              return null === i
                ? this
                : this.getImmediateChild(i).getChild(tn(e));
            }
            hasChild(e) {
              return null !== this.children_.get(e);
            }
            updateImmediateChild(e, i) {
              if (
                ((0, P.hu)(i, "We should always be passing snapshot nodes"),
                ".priority" === e)
              )
                return this.updatePriority(i);
              {
                const a = new At(e, i);
                let u, h;
                i.isEmpty()
                  ? ((u = this.children_.remove(e)),
                    (h = this.indexMap_.removeFromIndexes(a, this.children_)))
                  : ((u = this.children_.insert(e, i)),
                    (h = this.indexMap_.addToIndexes(a, this.children_)));
                const _ = u.isEmpty() ? jb : this.priorityNode_;
                return new n(u, _, h);
              }
            }
            updateChild(e, i) {
              const a = Tt(e);
              if (null === a) return i;
              {
                (0, P.hu)(
                  ".priority" !== Tt(e) || 1 === Zu(e),
                  ".priority must be the last token in a path"
                );
                const u = this.getImmediateChild(a).updateChild(tn(e), i);
                return this.updateImmediateChild(a, u);
              }
            }
            isEmpty() {
              return this.children_.isEmpty();
            }
            numChildren() {
              return this.children_.count();
            }
            val(e) {
              if (this.isEmpty()) return null;
              const i = {};
              let a = 0,
                u = 0,
                h = !0;
              if (
                (this.forEachChild(on, (_, b) => {
                  (i[_] = b.val(e)),
                    a++,
                    h && n.INTEGER_REGEXP_.test(_)
                      ? (u = Math.max(u, Number(_)))
                      : (h = !1);
                }),
                !e && h && u < 2 * a)
              ) {
                const _ = [];
                for (const b in i) _[b] = i[b];
                return _;
              }
              return (
                e &&
                  !this.getPriority().isEmpty() &&
                  (i[".priority"] = this.getPriority().val()),
                i
              );
            }
            hash() {
              if (null === this.lazyHash_) {
                let e = "";
                this.getPriority().isEmpty() ||
                  (e += "priority:" + r1(this.getPriority().val()) + ":"),
                  this.forEachChild(on, (i, a) => {
                    const u = a.hash();
                    "" !== u && (e += ":" + i + ":" + u);
                  }),
                  (this.lazyHash_ = "" === e ? "" : CN(e));
              }
              return this.lazyHash_;
            }
            getPredecessorChildName(e, i, a) {
              const u = this.resolveIndex_(a);
              if (u) {
                const h = u.getPredecessorKey(new At(e, i));
                return h ? h.name : null;
              }
              return this.children_.getPredecessorKey(e);
            }
            getFirstChildName(e) {
              const i = this.resolveIndex_(e);
              if (i) {
                const a = i.minKey();
                return a && a.name;
              }
              return this.children_.minKey();
            }
            getFirstChild(e) {
              const i = this.getFirstChildName(e);
              return i ? new At(i, this.children_.get(i)) : null;
            }
            getLastChildName(e) {
              const i = this.resolveIndex_(e);
              if (i) {
                const a = i.maxKey();
                return a && a.name;
              }
              return this.children_.maxKey();
            }
            getLastChild(e) {
              const i = this.getLastChildName(e);
              return i ? new At(i, this.children_.get(i)) : null;
            }
            forEachChild(e, i) {
              const a = this.resolveIndex_(e);
              return a
                ? a.inorderTraversal((u) => i(u.name, u.node))
                : this.children_.inorderTraversal(i);
            }
            getIterator(e) {
              return this.getIteratorFrom(e.minPost(), e);
            }
            getIteratorFrom(e, i) {
              const a = this.resolveIndex_(i);
              if (a) return a.getIteratorFrom(e, (u) => u);
              {
                const u = this.children_.getIteratorFrom(e.name, At.Wrap);
                let h = u.peek();
                for (; null != h && i.compare(h, e) < 0; )
                  u.getNext(), (h = u.peek());
                return u;
              }
            }
            getReverseIterator(e) {
              return this.getReverseIteratorFrom(e.maxPost(), e);
            }
            getReverseIteratorFrom(e, i) {
              const a = this.resolveIndex_(i);
              if (a) return a.getReverseIteratorFrom(e, (u) => u);
              {
                const u = this.children_.getReverseIteratorFrom(
                  e.name,
                  At.Wrap
                );
                let h = u.peek();
                for (; null != h && i.compare(h, e) > 0; )
                  u.getNext(), (h = u.peek());
                return u;
              }
            }
            compareTo(e) {
              return this.isEmpty()
                ? e.isEmpty()
                  ? 0
                  : -1
                : e.isLeafNode() || e.isEmpty()
                ? 1
                : e === Gb
                ? -1
                : 0;
            }
            withIndex(e) {
              if (e === Ua || this.indexMap_.hasIndex(e)) return this;
              {
                const i = this.indexMap_.addIndex(e, this.children_);
                return new n(this.children_, this.priorityNode_, i);
              }
            }
            isIndexed(e) {
              return e === Ua || this.indexMap_.hasIndex(e);
            }
            equals(e) {
              if (e === this) return !0;
              if (e.isLeafNode()) return !1;
              {
                const i = e;
                if (this.getPriority().equals(i.getPriority())) {
                  if (this.children_.count() === i.children_.count()) {
                    const a = this.getIterator(on),
                      u = i.getIterator(on);
                    let h = a.getNext(),
                      _ = u.getNext();
                    for (; h && _; ) {
                      if (h.name !== _.name || !h.node.equals(_.node))
                        return !1;
                      (h = a.getNext()), (_ = u.getNext());
                    }
                    return null === h && null === _;
                  }
                  return !1;
                }
                return !1;
              }
            }
            resolveIndex_(e) {
              return e === Ua ? null : this.indexMap_.get(e.toString());
            }
          }
          return (n.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/), n;
        })();
      const Gb = new (class extends pt {
        constructor() {
          super(new Ir(oR), pt.EMPTY_NODE, ic.Default);
        }
        compareTo(t) {
          return t === this ? 0 : 1;
        }
        equals(t) {
          return t === this;
        }
        getPriority() {
          return this;
        }
        getImmediateChild(t) {
          return pt.EMPTY_NODE;
        }
        isEmpty() {
          return !1;
        }
      })();
      function Dn(n, t = null) {
        if (null === n) return pt.EMPTY_NODE;
        if (
          ("object" == typeof n && ".priority" in n && (t = n[".priority"]),
          (0, P.hu)(
            null === t ||
              "string" == typeof t ||
              "number" == typeof t ||
              ("object" == typeof t && ".sv" in t),
            "Invalid priority type found: " + typeof t
          ),
          "object" == typeof n &&
            ".value" in n &&
            null !== n[".value"] &&
            (n = n[".value"]),
          "object" != typeof n || ".sv" in n)
        )
          return new xg(n, Dn(t));
        if (n instanceof Array) {
          let e = pt.EMPTY_NODE;
          return (
            Ci(n, (i, a) => {
              if ((0, P.r3)(n, i) && "." !== i.substring(0, 1)) {
                const u = Dn(a);
                (u.isLeafNode() || !u.isEmpty()) &&
                  (e = e.updateImmediateChild(i, u));
              }
            }),
            e.updatePriority(Dn(t))
          );
        }
        {
          const e = [];
          let i = !1;
          if (
            (Ci(n, (h, _) => {
              if ("." !== h.substring(0, 1)) {
                const b = Dn(_);
                b.isEmpty() ||
                  ((i = i || !b.getPriority().isEmpty()), e.push(new At(h, b)));
              }
            }),
            0 === e.length)
          )
            return pt.EMPTY_NODE;
          const u = nD(e, t2, (h) => h.name, oR);
          if (i) {
            const h = nD(e, on.getCompare());
            return new pt(
              u,
              Dn(t),
              new ic({ ".priority": h }, { ".priority": on })
            );
          }
          return new pt(u, Dn(t), ic.Default);
        }
      }
      Object.defineProperties(At, {
        MIN: { value: new At(nc, pt.EMPTY_NODE) },
        MAX: { value: new At(Ba, Gb) },
      }),
        (i1.__EMPTY_NODE = pt.EMPTY_NODE),
        (xg.__childrenNodeConstructor = pt),
        (aR = Gb),
        (l1 = Gb),
        (function (n) {
          a1 = n;
        })(Dn);
      class cR extends XS {
        constructor(t) {
          super(),
            (this.indexPath_ = t),
            (0, P.hu)(
              !It(t) && ".priority" !== Tt(t),
              "Can't create PathIndex with empty path or .priority key"
            );
        }
        extractChild(t) {
          return t.getChild(this.indexPath_);
        }
        isDefinedOn(t) {
          return !t.getChild(this.indexPath_).isEmpty();
        }
        compare(t, e) {
          const i = this.extractChild(t.node),
            a = this.extractChild(e.node),
            u = i.compareTo(a);
          return 0 === u ? Tf(t.name, e.name) : u;
        }
        makePost(t, e) {
          const i = Dn(t),
            a = pt.EMPTY_NODE.updateChild(this.indexPath_, i);
          return new At(e, a);
        }
        maxPost() {
          const t = pt.EMPTY_NODE.updateChild(this.indexPath_, Gb);
          return new At(Ba, t);
        }
        toString() {
          return Ub(this.indexPath_, 0).join("/");
        }
      }
      const uR = new (class extends XS {
          compare(t, e) {
            const i = t.node.compareTo(e.node);
            return 0 === i ? Tf(t.name, e.name) : i;
          }
          isDefinedOn(t) {
            return !0;
          }
          indexedValueChanged(t, e) {
            return !t.equals(e);
          }
          minPost() {
            return At.MIN;
          }
          maxPost() {
            return At.MAX;
          }
          makePost(t, e) {
            const i = Dn(t);
            return new At(e, i);
          }
          toString() {
            return ".value";
          }
        })(),
        kg = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz",
        h2 = (function () {
          let n = 0;
          const t = [];
          return function (e) {
            const i = e === n;
            let a;
            n = e;
            const u = new Array(8);
            for (a = 7; a >= 0; a--)
              (u[a] = kg.charAt(e % 64)), (e = Math.floor(e / 64));
            (0, P.hu)(0 === e, "Cannot push at time == 0");
            let h = u.join("");
            if (i) {
              for (a = 11; a >= 0 && 63 === t[a]; a--) t[a] = 0;
              t[a]++;
            } else
              for (a = 0; a < 12; a++) t[a] = Math.floor(64 * Math.random());
            for (a = 0; a < 12; a++) h += kg.charAt(t[a]);
            return (
              (0, P.hu)(20 === h.length, "nextPushId: Length should be 20."), h
            );
          };
        })(),
        d1 = function (n) {
          if (n === "" + qx) return "-";
          const t = KS(n);
          if (null != t) return "" + (t + 1);
          const e = new Array(n.length);
          for (let h = 0; h < e.length; h++) e[h] = n.charAt(h);
          if (e.length < 786) return e.push("-"), e.join("");
          let i = e.length - 1;
          for (; i >= 0 && "z" === e[i]; ) i--;
          if (-1 === i) return Ba;
          const u = kg.charAt(kg.indexOf(e[i]) + 1);
          return (e[i] = u), e.slice(0, i + 1).join("");
        },
        h1 = function (n) {
          if (n === "" + MN) return nc;
          const t = KS(n);
          if (null != t) return "" + (t - 1);
          const e = new Array(n.length);
          for (let i = 0; i < e.length; i++) e[i] = n.charAt(i);
          return "-" === e[e.length - 1]
            ? 1 === e.length
              ? "" + qx
              : (delete e[e.length - 1], e.join(""))
            : ((e[e.length - 1] = kg.charAt(kg.indexOf(e[e.length - 1]) - 1)),
              e.join("") + "z".repeat(786 - e.length));
        };
      function f1(n) {
        return { type: "value", snapshotNode: n };
      }
      function Og(n, t) {
        return { type: "child_added", snapshotNode: t, childName: n };
      }
      function zb(n, t) {
        return { type: "child_removed", snapshotNode: t, childName: n };
      }
      function $b(n, t, e) {
        return {
          type: "child_changed",
          snapshotNode: t,
          childName: n,
          oldSnap: e,
        };
      }
      class hR {
        constructor(t) {
          this.index_ = t;
        }
        updateChild(t, e, i, a, u, h) {
          (0, P.hu)(
            t.isIndexed(this.index_),
            "A node must be indexed if only a child is updated"
          );
          const _ = t.getImmediateChild(e);
          return (_.getChild(a).equals(i.getChild(a)) &&
            _.isEmpty() === i.isEmpty()) ||
            (null != h &&
              (i.isEmpty()
                ? t.hasChild(e)
                  ? h.trackChildChange(zb(e, _))
                  : (0, P.hu)(
                      t.isLeafNode(),
                      "A child remove without an old child only makes sense on a leaf node"
                    )
                : _.isEmpty()
                ? h.trackChildChange(Og(e, i))
                : h.trackChildChange($b(e, i, _))),
            t.isLeafNode() && i.isEmpty())
            ? t
            : t.updateImmediateChild(e, i).withIndex(this.index_);
        }
        updateFullNode(t, e, i) {
          return (
            null != i &&
              (t.isLeafNode() ||
                t.forEachChild(on, (a, u) => {
                  e.hasChild(a) || i.trackChildChange(zb(a, u));
                }),
              e.isLeafNode() ||
                e.forEachChild(on, (a, u) => {
                  if (t.hasChild(a)) {
                    const h = t.getImmediateChild(a);
                    h.equals(u) || i.trackChildChange($b(a, u, h));
                  } else i.trackChildChange(Og(a, u));
                })),
            e.withIndex(this.index_)
          );
        }
        updatePriority(t, e) {
          return t.isEmpty() ? pt.EMPTY_NODE : t.updatePriority(e);
        }
        filtersNodes() {
          return !1;
        }
        getIndexedFilter() {
          return this;
        }
        getIndex() {
          return this.index_;
        }
      }
      class Wb {
        constructor(t) {
          (this.indexedFilter_ = new hR(t.getIndex())),
            (this.index_ = t.getIndex()),
            (this.startPost_ = Wb.getStartPost_(t)),
            (this.endPost_ = Wb.getEndPost_(t));
        }
        getStartPost() {
          return this.startPost_;
        }
        getEndPost() {
          return this.endPost_;
        }
        matches(t) {
          return (
            this.index_.compare(this.getStartPost(), t) <= 0 &&
            this.index_.compare(t, this.getEndPost()) <= 0
          );
        }
        updateChild(t, e, i, a, u, h) {
          return (
            this.matches(new At(e, i)) || (i = pt.EMPTY_NODE),
            this.indexedFilter_.updateChild(t, e, i, a, u, h)
          );
        }
        updateFullNode(t, e, i) {
          e.isLeafNode() && (e = pt.EMPTY_NODE);
          let a = e.withIndex(this.index_);
          a = a.updatePriority(pt.EMPTY_NODE);
          const u = this;
          return (
            e.forEachChild(on, (h, _) => {
              u.matches(new At(h, _)) ||
                (a = a.updateImmediateChild(h, pt.EMPTY_NODE));
            }),
            this.indexedFilter_.updateFullNode(t, a, i)
          );
        }
        updatePriority(t, e) {
          return t;
        }
        filtersNodes() {
          return !0;
        }
        getIndexedFilter() {
          return this.indexedFilter_;
        }
        getIndex() {
          return this.index_;
        }
        static getStartPost_(t) {
          if (t.hasStart()) {
            const e = t.getIndexStartName();
            return t.getIndex().makePost(t.getIndexStartValue(), e);
          }
          return t.getIndex().minPost();
        }
        static getEndPost_(t) {
          if (t.hasEnd()) {
            const e = t.getIndexEndName();
            return t.getIndex().makePost(t.getIndexEndValue(), e);
          }
          return t.getIndex().maxPost();
        }
      }
      class p2 {
        constructor(t) {
          (this.rangedFilter_ = new Wb(t)),
            (this.index_ = t.getIndex()),
            (this.limit_ = t.getLimit()),
            (this.reverse_ = !t.isViewFromLeft());
        }
        updateChild(t, e, i, a, u, h) {
          return (
            this.rangedFilter_.matches(new At(e, i)) || (i = pt.EMPTY_NODE),
            t.getImmediateChild(e).equals(i)
              ? t
              : t.numChildren() < this.limit_
              ? this.rangedFilter_
                  .getIndexedFilter()
                  .updateChild(t, e, i, a, u, h)
              : this.fullLimitUpdateChild_(t, e, i, u, h)
          );
        }
        updateFullNode(t, e, i) {
          let a;
          if (e.isLeafNode() || e.isEmpty())
            a = pt.EMPTY_NODE.withIndex(this.index_);
          else if (
            2 * this.limit_ < e.numChildren() &&
            e.isIndexed(this.index_)
          ) {
            let u;
            (a = pt.EMPTY_NODE.withIndex(this.index_)),
              (u = this.reverse_
                ? e.getReverseIteratorFrom(
                    this.rangedFilter_.getEndPost(),
                    this.index_
                  )
                : e.getIteratorFrom(
                    this.rangedFilter_.getStartPost(),
                    this.index_
                  ));
            let h = 0;
            for (; u.hasNext() && h < this.limit_; ) {
              const _ = u.getNext();
              let b;
              if (
                ((b = this.reverse_
                  ? this.index_.compare(this.rangedFilter_.getStartPost(), _) <=
                    0
                  : this.index_.compare(_, this.rangedFilter_.getEndPost()) <=
                    0),
                !b)
              )
                break;
              (a = a.updateImmediateChild(_.name, _.node)), h++;
            }
          } else {
            let u, h, _, b;
            if (
              ((a = e.withIndex(this.index_)),
              (a = a.updatePriority(pt.EMPTY_NODE)),
              this.reverse_)
            ) {
              (b = a.getReverseIterator(this.index_)),
                (u = this.rangedFilter_.getEndPost()),
                (h = this.rangedFilter_.getStartPost());
              const A = this.index_.getCompare();
              _ = (B, j) => A(j, B);
            } else
              (b = a.getIterator(this.index_)),
                (u = this.rangedFilter_.getStartPost()),
                (h = this.rangedFilter_.getEndPost()),
                (_ = this.index_.getCompare());
            let S = 0,
              T = !1;
            for (; b.hasNext(); ) {
              const A = b.getNext();
              !T && _(u, A) <= 0 && (T = !0),
                T && S < this.limit_ && _(A, h) <= 0
                  ? S++
                  : (a = a.updateImmediateChild(A.name, pt.EMPTY_NODE));
            }
          }
          return this.rangedFilter_.getIndexedFilter().updateFullNode(t, a, i);
        }
        updatePriority(t, e) {
          return t;
        }
        filtersNodes() {
          return !0;
        }
        getIndexedFilter() {
          return this.rangedFilter_.getIndexedFilter();
        }
        getIndex() {
          return this.index_;
        }
        fullLimitUpdateChild_(t, e, i, a, u) {
          let h;
          if (this.reverse_) {
            const A = this.index_.getCompare();
            h = (B, j) => A(j, B);
          } else h = this.index_.getCompare();
          const _ = t;
          (0, P.hu)(_.numChildren() === this.limit_, "");
          const b = new At(e, i),
            S = this.reverse_
              ? _.getFirstChild(this.index_)
              : _.getLastChild(this.index_),
            T = this.rangedFilter_.matches(b);
          if (_.hasChild(e)) {
            const A = _.getImmediateChild(e);
            let B = a.getChildAfterChild(this.index_, S, this.reverse_);
            for (; null != B && (B.name === e || _.hasChild(B.name)); )
              B = a.getChildAfterChild(this.index_, B, this.reverse_);
            const j = null == B ? 1 : h(B, b);
            if (T && !i.isEmpty() && j >= 0)
              return (
                null != u && u.trackChildChange($b(e, i, A)),
                _.updateImmediateChild(e, i)
              );
            {
              null != u && u.trackChildChange(zb(e, A));
              const ve = _.updateImmediateChild(e, pt.EMPTY_NODE);
              return null != B && this.rangedFilter_.matches(B)
                ? (null != u && u.trackChildChange(Og(B.name, B.node)),
                  ve.updateImmediateChild(B.name, B.node))
                : ve;
            }
          }
          return i.isEmpty()
            ? t
            : T && h(S, b) >= 0
            ? (null != u &&
                (u.trackChildChange(zb(S.name, S.node)),
                u.trackChildChange(Og(e, i))),
              _.updateImmediateChild(e, i).updateImmediateChild(
                S.name,
                pt.EMPTY_NODE
              ))
            : t;
        }
      }
      class iD {
        constructor() {
          (this.limitSet_ = !1),
            (this.startSet_ = !1),
            (this.startNameSet_ = !1),
            (this.startAfterSet_ = !1),
            (this.endSet_ = !1),
            (this.endNameSet_ = !1),
            (this.endBeforeSet_ = !1),
            (this.limit_ = 0),
            (this.viewFrom_ = ""),
            (this.indexStartValue_ = null),
            (this.indexStartName_ = ""),
            (this.indexEndValue_ = null),
            (this.indexEndName_ = ""),
            (this.index_ = on);
        }
        hasStart() {
          return this.startSet_;
        }
        hasStartAfter() {
          return this.startAfterSet_;
        }
        hasEndBefore() {
          return this.endBeforeSet_;
        }
        isViewFromLeft() {
          return "" === this.viewFrom_
            ? this.startSet_
            : "l" === this.viewFrom_;
        }
        getIndexStartValue() {
          return (
            (0, P.hu)(this.startSet_, "Only valid if start has been set"),
            this.indexStartValue_
          );
        }
        getIndexStartName() {
          return (
            (0, P.hu)(this.startSet_, "Only valid if start has been set"),
            this.startNameSet_ ? this.indexStartName_ : nc
          );
        }
        hasEnd() {
          return this.endSet_;
        }
        getIndexEndValue() {
          return (
            (0, P.hu)(this.endSet_, "Only valid if end has been set"),
            this.indexEndValue_
          );
        }
        getIndexEndName() {
          return (
            (0, P.hu)(this.endSet_, "Only valid if end has been set"),
            this.endNameSet_ ? this.indexEndName_ : Ba
          );
        }
        hasLimit() {
          return this.limitSet_;
        }
        hasAnchoredLimit() {
          return this.limitSet_ && "" !== this.viewFrom_;
        }
        getLimit() {
          return (
            (0, P.hu)(this.limitSet_, "Only valid if limit has been set"),
            this.limit_
          );
        }
        getIndex() {
          return this.index_;
        }
        loadsAllData() {
          return !(this.startSet_ || this.endSet_ || this.limitSet_);
        }
        isDefault() {
          return this.loadsAllData() && this.index_ === on;
        }
        copy() {
          const t = new iD();
          return (
            (t.limitSet_ = this.limitSet_),
            (t.limit_ = this.limit_),
            (t.startSet_ = this.startSet_),
            (t.indexStartValue_ = this.indexStartValue_),
            (t.startNameSet_ = this.startNameSet_),
            (t.indexStartName_ = this.indexStartName_),
            (t.endSet_ = this.endSet_),
            (t.indexEndValue_ = this.indexEndValue_),
            (t.endNameSet_ = this.endNameSet_),
            (t.indexEndName_ = this.indexEndName_),
            (t.index_ = this.index_),
            (t.viewFrom_ = this.viewFrom_),
            t
          );
        }
      }
      function fR(n, t, e) {
        const i = n.copy();
        return (
          (i.startSet_ = !0),
          void 0 === t && (t = null),
          (i.indexStartValue_ = t),
          null != e
            ? ((i.startNameSet_ = !0), (i.indexStartName_ = e))
            : ((i.startNameSet_ = !1), (i.indexStartName_ = "")),
          i
        );
      }
      function pR(n, t, e) {
        const i = n.copy();
        return (
          (i.endSet_ = !0),
          void 0 === t && (t = null),
          (i.indexEndValue_ = t),
          void 0 !== e
            ? ((i.endNameSet_ = !0), (i.indexEndName_ = e))
            : ((i.endNameSet_ = !1), (i.indexEndName_ = "")),
          i
        );
      }
      function rD(n, t) {
        const e = n.copy();
        return (e.index_ = t), e;
      }
      function p1(n) {
        const t = {};
        if (n.isDefault()) return t;
        let e;
        return (
          n.index_ === on
            ? (e = "$priority")
            : n.index_ === uR
            ? (e = "$value")
            : n.index_ === Ua
            ? (e = "$key")
            : ((0, P.hu)(n.index_ instanceof cR, "Unrecognized index type!"),
              (e = n.index_.toString())),
          (t.orderBy = (0, P.Pz)(e)),
          n.startSet_ &&
            ((t.startAt = (0, P.Pz)(n.indexStartValue_)),
            n.startNameSet_ &&
              (t.startAt += "," + (0, P.Pz)(n.indexStartName_))),
          n.endSet_ &&
            ((t.endAt = (0, P.Pz)(n.indexEndValue_)),
            n.endNameSet_ && (t.endAt += "," + (0, P.Pz)(n.indexEndName_))),
          n.limitSet_ &&
            (n.isViewFromLeft()
              ? (t.limitToFirst = n.limit_)
              : (t.limitToLast = n.limit_)),
          t
        );
      }
      function m1(n) {
        const t = {};
        if (
          (n.startSet_ &&
            ((t.sp = n.indexStartValue_),
            n.startNameSet_ && (t.sn = n.indexStartName_)),
          n.endSet_ &&
            ((t.ep = n.indexEndValue_),
            n.endNameSet_ && (t.en = n.indexEndName_)),
          n.limitSet_)
        ) {
          t.l = n.limit_;
          let e = n.viewFrom_;
          "" === e && (e = n.isViewFromLeft() ? "l" : "r"), (t.vf = e);
        }
        return n.index_ !== on && (t.i = n.index_.toString()), t;
      }
      class sD extends qN {
        constructor(t, e, i, a) {
          super(),
            (this.repoInfo_ = t),
            (this.onDataUpdate_ = e),
            (this.authTokenProvider_ = i),
            (this.appCheckTokenProvider_ = a),
            (this.log_ = Pb("p:rest:")),
            (this.listens_ = {});
        }
        reportStats(t) {
          throw new Error("Method not implemented.");
        }
        static getListenId_(t, e) {
          return void 0 !== e
            ? "tag$" + e
            : ((0, P.hu)(
                t._queryParams.isDefault(),
                "should have a tag if it's not a default query."
              ),
              t._path.toString());
        }
        listen(t, e, i, a) {
          const u = t._path.toString();
          this.log_("Listen called for " + u + " " + t._queryIdentifier);
          const h = sD.getListenId_(t, i),
            _ = {};
          this.listens_[h] = _;
          const b = p1(t._queryParams);
          this.restRequest_(u + ".json", b, (S, T) => {
            let A = T;
            if (
              (404 === S && ((A = null), (S = null)),
              null === S && this.onDataUpdate_(u, A, !1, i),
              (0, P.DV)(this.listens_, h) === _)
            ) {
              let B;
              (B = S
                ? 401 === S
                  ? "permission_denied"
                  : "rest_error:" + S
                : "ok"),
                a(B, null);
            }
          });
        }
        unlisten(t, e) {
          const i = sD.getListenId_(t, e);
          delete this.listens_[i];
        }
        get(t) {
          const e = p1(t._queryParams),
            i = t._path.toString(),
            a = new P.BH();
          return (
            this.restRequest_(i + ".json", e, (u, h) => {
              let _ = h;
              404 === u && ((_ = null), (u = null)),
                null === u
                  ? (this.onDataUpdate_(i, _, !1, null), a.resolve(_))
                  : a.reject(new Error(_));
            }),
            a.promise
          );
        }
        refreshAuthToken(t) {}
        restRequest_(t, e = {}, i) {
          return (
            (e.format = "export"),
            Promise.all([
              this.authTokenProvider_.getToken(!1),
              this.appCheckTokenProvider_.getToken(!1),
            ]).then(([a, u]) => {
              a && a.accessToken && (e.auth = a.accessToken),
                u && u.token && (e.ac = u.token);
              const h =
                (this.repoInfo_.secure ? "https://" : "http://") +
                this.repoInfo_.host +
                t +
                "?ns=" +
                this.repoInfo_.namespace +
                (0, P.xO)(e);
              this.log_("Sending REST request for " + h);
              const _ = new XMLHttpRequest();
              (_.onreadystatechange = () => {
                if (i && 4 === _.readyState) {
                  this.log_(
                    "REST Response for " + h + " received. status:",
                    _.status,
                    "response:",
                    _.responseText
                  );
                  let b = null;
                  if (_.status >= 200 && _.status < 300) {
                    try {
                      b = (0, P.cI)(_.responseText);
                    } catch (S) {
                      cr(
                        "Failed to parse JSON response for " +
                          h +
                          ": " +
                          _.responseText
                      );
                    }
                    i(null, b);
                  } else
                    401 !== _.status &&
                      404 !== _.status &&
                      cr(
                        "Got unsuccessful REST response for " +
                          h +
                          " Status: " +
                          _.status
                      ),
                      i(_.status);
                  i = null;
                }
              }),
                _.open("GET", h, !0),
                _.send();
            })
          );
        }
      }
      class b2 {
        constructor() {
          this.rootNode_ = pt.EMPTY_NODE;
        }
        getNode(t) {
          return this.rootNode_.getChild(t);
        }
        updateSnapshot(t, e) {
          this.rootNode_ = this.rootNode_.updateChild(t, e);
        }
      }
      function oD() {
        return { value: null, children: new Map() };
      }
      function Pg(n, t, e) {
        if (It(t)) (n.value = e), n.children.clear();
        else if (null !== n.value) n.value = n.value.updateChild(t, e);
        else {
          const i = Tt(t);
          n.children.has(i) || n.children.set(i, oD()),
            Pg(n.children.get(i), (t = tn(t)), e);
        }
      }
      function mR(n, t) {
        if (It(t)) return (n.value = null), n.children.clear(), !0;
        if (null !== n.value) {
          if (n.value.isLeafNode()) return !1;
          {
            const e = n.value;
            return (
              (n.value = null),
              e.forEachChild(on, (i, a) => {
                Pg(n, new Wt(i), a);
              }),
              mR(n, t)
            );
          }
        }
        if (n.children.size > 0) {
          const e = Tt(t);
          return (
            (t = tn(t)),
            n.children.has(e) &&
              mR(n.children.get(e), t) &&
              n.children.delete(e),
            0 === n.children.size
          );
        }
        return !0;
      }
      function gR(n, t, e) {
        null !== n.value
          ? e(t, n.value)
          : (function (n, t) {
              n.children.forEach((e, i) => {
                t(i, e);
              });
            })(n, (i, a) => {
              gR(a, new Wt(t.toString() + "/" + i), e);
            });
      }
      class E2 {
        constructor(t) {
          (this.collection_ = t), (this.last_ = null);
        }
        get() {
          const t = this.collection_.get(),
            e = Object.assign({}, t);
          return (
            this.last_ &&
              Ci(this.last_, (i, a) => {
                e[i] = e[i] - a;
              }),
            (this.last_ = t),
            e
          );
        }
      }
      class D2 {
        constructor(t, e) {
          (this.server_ = e),
            (this.statsToReport_ = {}),
            (this.statsListener_ = new E2(t));
          const i = 1e4 + 2e4 * Math.random();
          Fb(this.reportStats_.bind(this), Math.floor(i));
        }
        reportStats_() {
          const t = this.statsListener_.get(),
            e = {};
          let i = !1;
          Ci(t, (a, u) => {
            u > 0 &&
              (0, P.r3)(this.statsToReport_, a) &&
              ((e[a] = u), (i = !0));
          }),
            i && this.server_.reportStats(e),
            Fb(
              this.reportStats_.bind(this),
              Math.floor(2 * Math.random() * 3e5)
            );
        }
      }
      var Ls = (() => (
        (function (n) {
          (n[(n.OVERWRITE = 0)] = "OVERWRITE"),
            (n[(n.MERGE = 1)] = "MERGE"),
            (n[(n.ACK_USER_WRITE = 2)] = "ACK_USER_WRITE"),
            (n[(n.LISTEN_COMPLETE = 3)] = "LISTEN_COMPLETE");
        })(Ls || (Ls = {})),
        Ls
      ))();
      function vR(n) {
        return { fromUser: !1, fromServer: !0, queryId: n, tagged: !0 };
      }
      class aD {
        constructor(t, e, i) {
          (this.path = t),
            (this.affectedTree = e),
            (this.revert = i),
            (this.type = Ls.ACK_USER_WRITE),
            (this.source = {
              fromUser: !0,
              fromServer: !1,
              queryId: null,
              tagged: !1,
            });
        }
        operationForChild(t) {
          if (It(this.path)) {
            if (null != this.affectedTree.value)
              return (
                (0, P.hu)(
                  this.affectedTree.children.isEmpty(),
                  "affectedTree should not have overlapping affected paths."
                ),
                this
              );
            {
              const e = this.affectedTree.subtree(new Wt(t));
              return new aD(Ut(), e, this.revert);
            }
          }
          return (
            (0, P.hu)(
              Tt(this.path) === t,
              "operationForChild called for unrelated child."
            ),
            new aD(tn(this.path), this.affectedTree, this.revert)
          );
        }
      }
      class Yb {
        constructor(t, e) {
          (this.source = t), (this.path = e), (this.type = Ls.LISTEN_COMPLETE);
        }
        operationForChild(t) {
          return It(this.path)
            ? new Yb(this.source, Ut())
            : new Yb(this.source, tn(this.path));
        }
      }
      class Af {
        constructor(t, e, i) {
          (this.source = t),
            (this.path = e),
            (this.snap = i),
            (this.type = Ls.OVERWRITE);
        }
        operationForChild(t) {
          return It(this.path)
            ? new Af(this.source, Ut(), this.snap.getImmediateChild(t))
            : new Af(this.source, tn(this.path), this.snap);
        }
      }
      class Ng {
        constructor(t, e, i) {
          (this.source = t),
            (this.path = e),
            (this.children = i),
            (this.type = Ls.MERGE);
        }
        operationForChild(t) {
          if (It(this.path)) {
            const e = this.children.subtree(new Wt(t));
            return e.isEmpty()
              ? null
              : e.value
              ? new Af(this.source, Ut(), e.value)
              : new Ng(this.source, Ut(), e);
          }
          return (
            (0, P.hu)(
              Tt(this.path) === t,
              "Can't get a merge for a child not on the path of the operation"
            ),
            new Ng(this.source, tn(this.path), this.children)
          );
        }
        toString() {
          return (
            "Operation(" +
            this.path +
            ": " +
            this.source.toString() +
            " merge: " +
            this.children.toString() +
            ")"
          );
        }
      }
      class qu {
        constructor(t, e, i) {
          (this.node_ = t), (this.fullyInitialized_ = e), (this.filtered_ = i);
        }
        isFullyInitialized() {
          return this.fullyInitialized_;
        }
        isFiltered() {
          return this.filtered_;
        }
        isCompleteForPath(t) {
          if (It(t)) return this.isFullyInitialized() && !this.filtered_;
          const e = Tt(t);
          return this.isCompleteForChild(e);
        }
        isCompleteForChild(t) {
          return (
            (this.isFullyInitialized() && !this.filtered_) ||
            this.node_.hasChild(t)
          );
        }
        getNode() {
          return this.node_;
        }
      }
      class M2 {
        constructor(t) {
          (this.query_ = t),
            (this.index_ = this.query_._queryParams.getIndex());
        }
      }
      function Zb(n, t, e, i, a, u) {
        const h = i.filter((_) => _.type === e);
        h.sort((_, b) =>
          (function (n, t, e) {
            if (null == t.childName || null == e.childName)
              throw (0, P.g5)("Should only compare child_ events.");
            const i = new At(t.childName, t.snapshotNode),
              a = new At(e.childName, e.snapshotNode);
            return n.index_.compare(i, a);
          })(n, _, b)
        ),
          h.forEach((_) => {
            const b = (function (n, t, e) {
              return (
                "value" === t.type ||
                  "child_removed" === t.type ||
                  (t.prevName = e.getPredecessorChildName(
                    t.childName,
                    t.snapshotNode,
                    n.index_
                  )),
                t
              );
            })(n, _, u);
            a.forEach((S) => {
              S.respondsTo(_.type) && t.push(S.createEvent(b, n.query_));
            });
          });
      }
      function lD(n, t) {
        return { eventCache: n, serverCache: t };
      }
      function qb(n, t, e, i) {
        return lD(new qu(t, e, i), n.serverCache);
      }
      function _1(n, t, e, i) {
        return lD(n.eventCache, new qu(t, e, i));
      }
      function cD(n) {
        return n.eventCache.isFullyInitialized()
          ? n.eventCache.getNode()
          : null;
      }
      function xf(n) {
        return n.serverCache.isFullyInitialized()
          ? n.serverCache.getNode()
          : null;
      }
      let bR;
      class an {
        constructor(t, e = (() => (bR || (bR = new Ir(uV)), bR))()) {
          (this.value = t), (this.children = e);
        }
        static fromObject(t) {
          let e = new an(null);
          return (
            Ci(t, (i, a) => {
              e = e.set(new Wt(i), a);
            }),
            e
          );
        }
        isEmpty() {
          return null === this.value && this.children.isEmpty();
        }
        findRootMostMatchingPathAndValue(t, e) {
          if (null != this.value && e(this.value))
            return { path: Ut(), value: this.value };
          if (It(t)) return null;
          {
            const i = Tt(t),
              a = this.children.get(i);
            if (null !== a) {
              const u = a.findRootMostMatchingPathAndValue(tn(t), e);
              return null != u
                ? { path: yn(new Wt(i), u.path), value: u.value }
                : null;
            }
            return null;
          }
        }
        findRootMostValueAndPath(t) {
          return this.findRootMostMatchingPathAndValue(t, () => !0);
        }
        subtree(t) {
          if (It(t)) return this;
          {
            const e = Tt(t),
              i = this.children.get(e);
            return null !== i ? i.subtree(tn(t)) : new an(null);
          }
        }
        set(t, e) {
          if (It(t)) return new an(e, this.children);
          {
            const i = Tt(t),
              u = (this.children.get(i) || new an(null)).set(tn(t), e),
              h = this.children.insert(i, u);
            return new an(this.value, h);
          }
        }
        remove(t) {
          if (It(t))
            return this.children.isEmpty()
              ? new an(null)
              : new an(null, this.children);
          {
            const e = Tt(t),
              i = this.children.get(e);
            if (i) {
              const a = i.remove(tn(t));
              let u;
              return (
                (u = a.isEmpty()
                  ? this.children.remove(e)
                  : this.children.insert(e, a)),
                null === this.value && u.isEmpty()
                  ? new an(null)
                  : new an(this.value, u)
              );
            }
            return this;
          }
        }
        get(t) {
          if (It(t)) return this.value;
          {
            const e = Tt(t),
              i = this.children.get(e);
            return i ? i.get(tn(t)) : null;
          }
        }
        setTree(t, e) {
          if (It(t)) return e;
          {
            const i = Tt(t),
              u = (this.children.get(i) || new an(null)).setTree(tn(t), e);
            let h;
            return (
              (h = u.isEmpty()
                ? this.children.remove(i)
                : this.children.insert(i, u)),
              new an(this.value, h)
            );
          }
        }
        fold(t) {
          return this.fold_(Ut(), t);
        }
        fold_(t, e) {
          const i = {};
          return (
            this.children.inorderTraversal((a, u) => {
              i[a] = u.fold_(yn(t, a), e);
            }),
            e(t, this.value, i)
          );
        }
        findOnPath(t, e) {
          return this.findOnPath_(t, Ut(), e);
        }
        findOnPath_(t, e, i) {
          const a = !!this.value && i(e, this.value);
          if (a) return a;
          if (It(t)) return null;
          {
            const u = Tt(t),
              h = this.children.get(u);
            return h ? h.findOnPath_(tn(t), yn(e, u), i) : null;
          }
        }
        foreachOnPath(t, e) {
          return this.foreachOnPath_(t, Ut(), e);
        }
        foreachOnPath_(t, e, i) {
          if (It(t)) return this;
          {
            this.value && i(e, this.value);
            const a = Tt(t),
              u = this.children.get(a);
            return u ? u.foreachOnPath_(tn(t), yn(e, a), i) : new an(null);
          }
        }
        foreach(t) {
          this.foreach_(Ut(), t);
        }
        foreach_(t, e) {
          this.children.inorderTraversal((i, a) => {
            a.foreach_(yn(t, i), e);
          }),
            this.value && e(t, this.value);
        }
        foreachChild(t) {
          this.children.inorderTraversal((e, i) => {
            i.value && t(e, i.value);
          });
        }
      }
      class ko {
        constructor(t) {
          this.writeTree_ = t;
        }
        static empty() {
          return new ko(new an(null));
        }
      }
      function Kb(n, t, e) {
        if (It(t)) return new ko(new an(e));
        {
          const i = n.writeTree_.findRootMostValueAndPath(t);
          if (null != i) {
            const a = i.path;
            let u = i.value;
            const h = ur(a, t);
            return (u = u.updateChild(h, e)), new ko(n.writeTree_.set(a, u));
          }
          {
            const a = new an(e),
              u = n.writeTree_.setTree(t, a);
            return new ko(u);
          }
        }
      }
      function CR(n, t, e) {
        let i = n;
        return (
          Ci(e, (a, u) => {
            i = Kb(i, yn(t, a), u);
          }),
          i
        );
      }
      function y1(n, t) {
        if (It(t)) return ko.empty();
        {
          const e = n.writeTree_.setTree(t, new an(null));
          return new ko(e);
        }
      }
      function ER(n, t) {
        return null != Rf(n, t);
      }
      function Rf(n, t) {
        const e = n.writeTree_.findRootMostValueAndPath(t);
        return null != e
          ? n.writeTree_.get(e.path).getChild(ur(e.path, t))
          : null;
      }
      function v1(n) {
        const t = [],
          e = n.writeTree_.value;
        return (
          null != e
            ? e.isLeafNode() ||
              e.forEachChild(on, (i, a) => {
                t.push(new At(i, a));
              })
            : n.writeTree_.children.inorderTraversal((i, a) => {
                null != a.value && t.push(new At(i, a.value));
              }),
          t
        );
      }
      function Ku(n, t) {
        if (It(t)) return n;
        {
          const e = Rf(n, t);
          return new ko(null != e ? new an(e) : n.writeTree_.subtree(t));
        }
      }
      function wR(n) {
        return n.writeTree_.isEmpty();
      }
      function Fg(n, t) {
        return b1(Ut(), n.writeTree_, t);
      }
      function b1(n, t, e) {
        if (null != t.value) return e.updateChild(n, t.value);
        {
          let i = null;
          return (
            t.children.inorderTraversal((a, u) => {
              ".priority" === a
                ? ((0, P.hu)(
                    null !== u.value,
                    "Priority writes must always be leaf nodes"
                  ),
                  (i = u.value))
                : (e = b1(yn(n, a), u, e));
            }),
            !e.getChild(n).isEmpty() &&
              null !== i &&
              (e = e.updateChild(yn(n, ".priority"), i)),
            e
          );
        }
      }
      function uD(n, t) {
        return D1(t, n);
      }
      function N2(n, t) {
        if (n.snap) return Fs(n.path, t);
        for (const e in n.children)
          if (n.children.hasOwnProperty(e) && Fs(yn(n.path, e), t)) return !0;
        return !1;
      }
      function L2(n) {
        return n.visible;
      }
      function C1(n, t, e) {
        let i = ko.empty();
        for (let a = 0; a < n.length; ++a) {
          const u = n[a];
          if (t(u)) {
            const h = u.path;
            let _;
            if (u.snap)
              Fs(e, h)
                ? ((_ = ur(e, h)), (i = Kb(i, _, u.snap)))
                : Fs(h, e) &&
                  ((_ = ur(h, e)), (i = Kb(i, Ut(), u.snap.getChild(_))));
            else {
              if (!u.children)
                throw (0, P.g5)("WriteRecord should have .snap or .children");
              if (Fs(e, h)) (_ = ur(e, h)), (i = CR(i, _, u.children));
              else if (Fs(h, e))
                if (((_ = ur(h, e)), It(_))) i = CR(i, Ut(), u.children);
                else {
                  const b = (0, P.DV)(u.children, Tt(_));
                  if (b) {
                    const S = b.getChild(tn(_));
                    i = Kb(i, Ut(), S);
                  }
                }
            }
          }
        }
        return i;
      }
      function E1(n, t, e, i, a) {
        if (i || a) {
          const u = Ku(n.visibleWrites, t);
          return !a && wR(u)
            ? e
            : a || null != e || ER(u, Ut())
            ? Fg(
                C1(
                  n.allWrites,
                  function (S) {
                    return (
                      (S.visible || a) &&
                      (!i || !~i.indexOf(S.writeId)) &&
                      (Fs(S.path, t) || Fs(t, S.path))
                    );
                  },
                  t
                ),
                e || pt.EMPTY_NODE
              )
            : null;
        }
        {
          const u = Rf(n.visibleWrites, t);
          if (null != u) return u;
          {
            const h = Ku(n.visibleWrites, t);
            return wR(h)
              ? e
              : null != e || ER(h, Ut())
              ? Fg(h, e || pt.EMPTY_NODE)
              : null;
          }
        }
      }
      function dD(n, t, e, i) {
        return E1(n.writeTree, n.treePath, t, e, i);
      }
      function SR(n, t) {
        return (function (n, t, e) {
          let i = pt.EMPTY_NODE;
          const a = Rf(n.visibleWrites, t);
          if (a)
            return (
              a.isLeafNode() ||
                a.forEachChild(on, (u, h) => {
                  i = i.updateImmediateChild(u, h);
                }),
              i
            );
          if (e) {
            const u = Ku(n.visibleWrites, t);
            return (
              e.forEachChild(on, (h, _) => {
                const b = Fg(Ku(u, new Wt(h)), _);
                i = i.updateImmediateChild(h, b);
              }),
              v1(u).forEach((h) => {
                i = i.updateImmediateChild(h.name, h.node);
              }),
              i
            );
          }
          return (
            v1(Ku(n.visibleWrites, t)).forEach((h) => {
              i = i.updateImmediateChild(h.name, h.node);
            }),
            i
          );
        })(n.writeTree, n.treePath, t);
      }
      function w1(n, t, e, i) {
        return (function (n, t, e, i, a) {
          (0, P.hu)(
            i || a,
            "Either existingEventSnap or existingServerSnap must exist"
          );
          const u = yn(t, e);
          if (ER(n.visibleWrites, u)) return null;
          {
            const h = Ku(n.visibleWrites, u);
            return wR(h) ? a.getChild(e) : Fg(h, a.getChild(e));
          }
        })(n.writeTree, n.treePath, t, e, i);
      }
      function hD(n, t) {
        return (function (n, t) {
          return Rf(n.visibleWrites, t);
        })(n.writeTree, yn(n.treePath, t));
      }
      function DR(n, t, e) {
        return (function (n, t, e, i) {
          const a = yn(t, e),
            u = Rf(n.visibleWrites, a);
          return null != u
            ? u
            : i.isCompleteForChild(e)
            ? Fg(Ku(n.visibleWrites, a), i.getNode().getImmediateChild(e))
            : null;
        })(n.writeTree, n.treePath, t, e);
      }
      function S1(n, t) {
        return D1(yn(n.treePath, t), n.writeTree);
      }
      function D1(n, t) {
        return { treePath: n, writeTree: t };
      }
      class $2 {
        constructor() {
          this.changeMap = new Map();
        }
        trackChildChange(t) {
          const e = t.type,
            i = t.childName;
          (0, P.hu)(
            "child_added" === e ||
              "child_changed" === e ||
              "child_removed" === e,
            "Only child changes supported for tracking"
          ),
            (0, P.hu)(
              ".priority" !== i,
              "Only non-priority child changes can be tracked."
            );
          const a = this.changeMap.get(i);
          if (a) {
            const u = a.type;
            if ("child_added" === e && "child_removed" === u)
              this.changeMap.set(i, $b(i, t.snapshotNode, a.snapshotNode));
            else if ("child_removed" === e && "child_added" === u)
              this.changeMap.delete(i);
            else if ("child_removed" === e && "child_changed" === u)
              this.changeMap.set(i, zb(i, a.oldSnap));
            else if ("child_changed" === e && "child_added" === u)
              this.changeMap.set(i, Og(i, t.snapshotNode));
            else {
              if ("child_changed" !== e || "child_changed" !== u)
                throw (0, P.g5)(
                  "Illegal combination of changes: " +
                    t +
                    " occurred after " +
                    a
                );
              this.changeMap.set(i, $b(i, t.snapshotNode, a.oldSnap));
            }
          } else this.changeMap.set(i, t);
        }
        getChanges() {
          return Array.from(this.changeMap.values());
        }
      }
      const M1 = new (class {
        getCompleteChild(t) {
          return null;
        }
        getChildAfterChild(t, e, i) {
          return null;
        }
      })();
      class MR {
        constructor(t, e, i = null) {
          (this.writes_ = t),
            (this.viewCache_ = e),
            (this.optCompleteServerCache_ = i);
        }
        getCompleteChild(t) {
          const e = this.viewCache_.eventCache;
          if (e.isCompleteForChild(t)) return e.getNode().getImmediateChild(t);
          {
            const i =
              null != this.optCompleteServerCache_
                ? new qu(this.optCompleteServerCache_, !0, !1)
                : this.viewCache_.serverCache;
            return DR(this.writes_, t, i);
          }
        }
        getChildAfterChild(t, e, i) {
          const a =
              null != this.optCompleteServerCache_
                ? this.optCompleteServerCache_
                : xf(this.viewCache_),
            u = (function (n, t, e, i, a, u) {
              return (function (n, t, e, i, a, u, h) {
                let _;
                const b = Ku(n.visibleWrites, t),
                  S = Rf(b, Ut());
                if (null != S) _ = S;
                else {
                  if (null == e) return [];
                  _ = Fg(b, e);
                }
                if (((_ = _.withIndex(h)), _.isEmpty() || _.isLeafNode()))
                  return [];
                {
                  const T = [],
                    A = h.getCompare(),
                    B = u
                      ? _.getReverseIteratorFrom(i, h)
                      : _.getIteratorFrom(i, h);
                  let j = B.getNext();
                  for (; j && T.length < a; )
                    0 !== A(j, i) && T.push(j), (j = B.getNext());
                  return T;
                }
              })(n.writeTree, n.treePath, t, e, i, a, u);
            })(this.writes_, a, e, 1, i, t);
          return 0 === u.length ? null : u[0];
        }
      }
      function T1(n, t, e, i, a, u) {
        const h = t.eventCache;
        if (null != hD(i, e)) return t;
        {
          let _, b;
          if (It(e))
            if (
              ((0, P.hu)(
                t.serverCache.isFullyInitialized(),
                "If change path is empty, we must have complete server data"
              ),
              t.serverCache.isFiltered())
            ) {
              const S = xf(t),
                A = SR(i, S instanceof pt ? S : pt.EMPTY_NODE);
              _ = n.filter.updateFullNode(t.eventCache.getNode(), A, u);
            } else {
              const S = dD(i, xf(t));
              _ = n.filter.updateFullNode(t.eventCache.getNode(), S, u);
            }
          else {
            const S = Tt(e);
            if (".priority" === S) {
              (0, P.hu)(
                1 === Zu(e),
                "Can't have a priority with additional path components"
              );
              const T = h.getNode();
              b = t.serverCache.getNode();
              const A = w1(i, e, T, b);
              _ = null != A ? n.filter.updatePriority(T, A) : h.getNode();
            } else {
              const T = tn(e);
              let A;
              if (h.isCompleteForChild(S)) {
                b = t.serverCache.getNode();
                const B = w1(i, e, h.getNode(), b);
                A =
                  null != B
                    ? h.getNode().getImmediateChild(S).updateChild(T, B)
                    : h.getNode().getImmediateChild(S);
              } else A = DR(i, S, t.serverCache);
              _ =
                null != A
                  ? n.filter.updateChild(h.getNode(), S, A, T, a, u)
                  : h.getNode();
            }
          }
          return qb(
            t,
            _,
            h.isFullyInitialized() || It(e),
            n.filter.filtersNodes()
          );
        }
      }
      function fD(n, t, e, i, a, u, h, _) {
        const b = t.serverCache;
        let S;
        const T = h ? n.filter : n.filter.getIndexedFilter();
        if (It(e)) S = T.updateFullNode(b.getNode(), i, null);
        else if (T.filtersNodes() && !b.isFiltered()) {
          const j = b.getNode().updateChild(e, i);
          S = T.updateFullNode(b.getNode(), j, null);
        } else {
          const j = Tt(e);
          if (!b.isCompleteForPath(e) && Zu(e) > 1) return t;
          const X = tn(e),
            De = b.getNode().getImmediateChild(j).updateChild(X, i);
          S =
            ".priority" === j
              ? T.updatePriority(b.getNode(), De)
              : T.updateChild(b.getNode(), j, De, X, M1, null);
        }
        const A = _1(t, S, b.isFullyInitialized() || It(e), T.filtersNodes());
        return T1(n, A, e, a, new MR(a, A, u), _);
      }
      function TR(n, t, e, i, a, u, h) {
        const _ = t.eventCache;
        let b, S;
        const T = new MR(a, t, u);
        if (It(e))
          (S = n.filter.updateFullNode(t.eventCache.getNode(), i, h)),
            (b = qb(t, S, !0, n.filter.filtersNodes()));
        else {
          const A = Tt(e);
          if (".priority" === A)
            (S = n.filter.updatePriority(t.eventCache.getNode(), i)),
              (b = qb(t, S, _.isFullyInitialized(), _.isFiltered()));
          else {
            const B = tn(e),
              j = _.getNode().getImmediateChild(A);
            let X;
            if (It(B)) X = i;
            else {
              const ve = T.getCompleteChild(A);
              X =
                null != ve
                  ? ".priority" === iR(B) && ve.getChild(XN(B)).isEmpty()
                    ? ve
                    : ve.updateChild(B, i)
                  : pt.EMPTY_NODE;
            }
            b = j.equals(X)
              ? t
              : qb(
                  t,
                  n.filter.updateChild(_.getNode(), A, X, B, T, h),
                  _.isFullyInitialized(),
                  n.filter.filtersNodes()
                );
          }
        }
        return b;
      }
      function I1(n, t) {
        return n.eventCache.isCompleteForChild(t);
      }
      function A1(n, t, e) {
        return (
          e.foreach((i, a) => {
            t = t.updateChild(i, a);
          }),
          t
        );
      }
      function IR(n, t, e, i, a, u, h, _) {
        if (
          t.serverCache.getNode().isEmpty() &&
          !t.serverCache.isFullyInitialized()
        )
          return t;
        let S,
          b = t;
        S = It(e) ? i : new an(null).setTree(e, i);
        const T = t.serverCache.getNode();
        return (
          S.children.inorderTraversal((A, B) => {
            if (T.hasChild(A)) {
              const X = A1(0, t.serverCache.getNode().getImmediateChild(A), B);
              b = fD(n, b, new Wt(A), X, a, u, h, _);
            }
          }),
          S.children.inorderTraversal((A, B) => {
            const j =
              !t.serverCache.isCompleteForChild(A) && void 0 === B.value;
            if (!T.hasChild(A) && !j) {
              const ve = A1(0, t.serverCache.getNode().getImmediateChild(A), B);
              b = fD(n, b, new Wt(A), ve, a, u, h, _);
            }
          }),
          b
        );
      }
      class tB {
        constructor(t, e) {
          (this.query_ = t), (this.eventRegistrations_ = []);
          const i = this.query_._queryParams,
            a = new hR(i.getIndex()),
            u = (function (n) {
              return n.loadsAllData()
                ? new hR(n.getIndex())
                : n.hasLimit()
                ? new p2(n)
                : new Wb(n);
            })(i);
          this.processor_ = (function (n) {
            return { filter: n };
          })(u);
          const h = e.serverCache,
            _ = e.eventCache,
            b = a.updateFullNode(pt.EMPTY_NODE, h.getNode(), null),
            S = u.updateFullNode(pt.EMPTY_NODE, _.getNode(), null),
            T = new qu(b, h.isFullyInitialized(), a.filtersNodes()),
            A = new qu(S, _.isFullyInitialized(), u.filtersNodes());
          (this.viewCache_ = lD(A, T)),
            (this.eventGenerator_ = new M2(this.query_));
        }
        get query() {
          return this.query_;
        }
      }
      function rB(n, t) {
        const e = xf(n.viewCache_);
        return e &&
          (n.query._queryParams.loadsAllData() ||
            (!It(t) && !e.getImmediateChild(Tt(t)).isEmpty()))
          ? e.getChild(t)
          : null;
      }
      function x1(n) {
        return 0 === n.eventRegistrations_.length;
      }
      function R1(n, t, e) {
        const i = [];
        if (e) {
          (0, P.hu)(
            null == t,
            "A cancel should cancel all event registrations."
          );
          const a = n.query._path;
          n.eventRegistrations_.forEach((u) => {
            const h = u.createCancelEvent(e, a);
            h && i.push(h);
          });
        }
        if (t) {
          let a = [];
          for (let u = 0; u < n.eventRegistrations_.length; ++u) {
            const h = n.eventRegistrations_[u];
            if (h.matches(t)) {
              if (t.hasAnyCallback()) {
                a = a.concat(n.eventRegistrations_.slice(u + 1));
                break;
              }
            } else a.push(h);
          }
          n.eventRegistrations_ = a;
        } else n.eventRegistrations_ = [];
        return i;
      }
      function k1(n, t, e, i) {
        t.type === Ls.MERGE &&
          null !== t.source.queryId &&
          ((0, P.hu)(
            xf(n.viewCache_),
            "We should always have a full cache before handling merges"
          ),
          (0, P.hu)(
            cD(n.viewCache_),
            "Missing event cache, even though we have a server cache"
          ));
        const a = n.viewCache_,
          u = (function (n, t, e, i, a) {
            const u = new $2();
            let h, _;
            if (e.type === Ls.OVERWRITE) {
              const S = e;
              S.source.fromUser
                ? (h = TR(n, t, S.path, S.snap, i, a, u))
                : ((0, P.hu)(S.source.fromServer, "Unknown source."),
                  (_ =
                    S.source.tagged ||
                    (t.serverCache.isFiltered() && !It(S.path))),
                  (h = fD(n, t, S.path, S.snap, i, a, _, u)));
            } else if (e.type === Ls.MERGE) {
              const S = e;
              S.source.fromUser
                ? (h = (function (n, t, e, i, a, u, h) {
                    let _ = t;
                    return (
                      i.foreach((b, S) => {
                        const T = yn(e, b);
                        I1(t, Tt(T)) && (_ = TR(n, _, T, S, a, u, h));
                      }),
                      i.foreach((b, S) => {
                        const T = yn(e, b);
                        I1(t, Tt(T)) || (_ = TR(n, _, T, S, a, u, h));
                      }),
                      _
                    );
                  })(n, t, S.path, S.children, i, a, u))
                : ((0, P.hu)(S.source.fromServer, "Unknown source."),
                  (_ = S.source.tagged || t.serverCache.isFiltered()),
                  (h = IR(n, t, S.path, S.children, i, a, _, u)));
            } else if (e.type === Ls.ACK_USER_WRITE) {
              const S = e;
              h = S.revert
                ? (function (n, t, e, i, a, u) {
                    let h;
                    if (null != hD(i, e)) return t;
                    {
                      const _ = new MR(i, t, a),
                        b = t.eventCache.getNode();
                      let S;
                      if (It(e) || ".priority" === Tt(e)) {
                        let T;
                        if (t.serverCache.isFullyInitialized())
                          T = dD(i, xf(t));
                        else {
                          const A = t.serverCache.getNode();
                          (0, P.hu)(
                            A instanceof pt,
                            "serverChildren would be complete if leaf node"
                          ),
                            (T = SR(i, A));
                        }
                        (T = T), (S = n.filter.updateFullNode(b, T, u));
                      } else {
                        const T = Tt(e);
                        let A = DR(i, T, t.serverCache);
                        null == A &&
                          t.serverCache.isCompleteForChild(T) &&
                          (A = b.getImmediateChild(T)),
                          (S =
                            null != A
                              ? n.filter.updateChild(b, T, A, tn(e), _, u)
                              : t.eventCache.getNode().hasChild(T)
                              ? n.filter.updateChild(
                                  b,
                                  T,
                                  pt.EMPTY_NODE,
                                  tn(e),
                                  _,
                                  u
                                )
                              : b),
                          S.isEmpty() &&
                            t.serverCache.isFullyInitialized() &&
                            ((h = dD(i, xf(t))),
                            h.isLeafNode() &&
                              (S = n.filter.updateFullNode(S, h, u)));
                      }
                      return (
                        (h =
                          t.serverCache.isFullyInitialized() ||
                          null != hD(i, Ut())),
                        qb(t, S, h, n.filter.filtersNodes())
                      );
                    }
                  })(n, t, S.path, i, a, u)
                : (function (n, t, e, i, a, u, h) {
                    if (null != hD(a, e)) return t;
                    const _ = t.serverCache.isFiltered(),
                      b = t.serverCache;
                    if (null != i.value) {
                      if (
                        (It(e) && b.isFullyInitialized()) ||
                        b.isCompleteForPath(e)
                      )
                        return fD(n, t, e, b.getNode().getChild(e), a, u, _, h);
                      if (It(e)) {
                        let S = new an(null);
                        return (
                          b.getNode().forEachChild(Ua, (T, A) => {
                            S = S.set(new Wt(T), A);
                          }),
                          IR(n, t, e, S, a, u, _, h)
                        );
                      }
                      return t;
                    }
                    {
                      let S = new an(null);
                      return (
                        i.foreach((T, A) => {
                          const B = yn(e, T);
                          b.isCompleteForPath(B) &&
                            (S = S.set(T, b.getNode().getChild(B)));
                        }),
                        IR(n, t, e, S, a, u, _, h)
                      );
                    }
                  })(n, t, S.path, S.affectedTree, i, a, u);
            } else {
              if (e.type !== Ls.LISTEN_COMPLETE)
                throw (0, P.g5)("Unknown operation type: " + e.type);
              h = (function (n, t, e, i, a) {
                const u = t.serverCache;
                return T1(
                  n,
                  _1(
                    t,
                    u.getNode(),
                    u.isFullyInitialized() || It(e),
                    u.isFiltered()
                  ),
                  e,
                  i,
                  M1,
                  a
                );
              })(n, t, e.path, i, u);
            }
            const b = u.getChanges();
            return (
              (function (n, t, e) {
                const i = t.eventCache;
                if (i.isFullyInitialized()) {
                  const a = i.getNode().isLeafNode() || i.getNode().isEmpty(),
                    u = cD(n);
                  (e.length > 0 ||
                    !n.eventCache.isFullyInitialized() ||
                    (a && !i.getNode().equals(u)) ||
                    !i.getNode().getPriority().equals(u.getPriority())) &&
                    e.push(f1(cD(t)));
                }
              })(t, h, b),
              { viewCache: h, changes: b }
            );
          })(n.processor_, a, t, e, i);
        return (
          (function (n, t) {
            (0, P.hu)(
              t.eventCache.getNode().isIndexed(n.filter.getIndex()),
              "Event snap not indexed"
            ),
              (0, P.hu)(
                t.serverCache.getNode().isIndexed(n.filter.getIndex()),
                "Server snap not indexed"
              );
          })(n.processor_, u.viewCache),
          (0, P.hu)(
            u.viewCache.serverCache.isFullyInitialized() ||
              !a.serverCache.isFullyInitialized(),
            "Once a server snap is complete, it should never go back"
          ),
          (n.viewCache_ = u.viewCache),
          O1(n, u.changes, u.viewCache.eventCache.getNode(), null)
        );
      }
      function O1(n, t, e, i) {
        return (function (n, t, e, i) {
          const a = [],
            u = [];
          return (
            t.forEach((h) => {
              "child_changed" === h.type &&
                n.index_.indexedValueChanged(h.oldSnap, h.snapshotNode) &&
                u.push(
                  (function (n, t) {
                    return {
                      type: "child_moved",
                      snapshotNode: t,
                      childName: n,
                    };
                  })(h.childName, h.snapshotNode)
                );
            }),
            Zb(n, a, "child_removed", t, i, e),
            Zb(n, a, "child_added", t, i, e),
            Zb(n, a, "child_moved", u, i, e),
            Zb(n, a, "child_changed", t, i, e),
            Zb(n, a, "value", t, i, e),
            a
          );
        })(n.eventGenerator_, t, e, i ? [i] : n.eventRegistrations_);
      }
      let pD, gD;
      class P1 {
        constructor() {
          this.views = new Map();
        }
      }
      function AR(n, t, e, i) {
        const a = t.source.queryId;
        if (null !== a) {
          const u = n.views.get(a);
          return (
            (0, P.hu)(
              null != u,
              "SyncTree gave us an op for an invalid query."
            ),
            k1(u, t, e, i)
          );
        }
        {
          let u = [];
          for (const h of n.views.values()) u = u.concat(k1(h, t, e, i));
          return u;
        }
      }
      function N1(n, t, e, i, a) {
        const h = n.views.get(t._queryIdentifier);
        if (!h) {
          let _ = dD(e, a ? i : null),
            b = !1;
          _
            ? (b = !0)
            : i instanceof pt
            ? ((_ = SR(e, i)), (b = !1))
            : ((_ = pt.EMPTY_NODE), (b = !1));
          const S = lD(new qu(_, b, !1), new qu(i, a, !1));
          return new tB(t, S);
        }
        return h;
      }
      function F1(n) {
        const t = [];
        for (const e of n.views.values())
          e.query._queryParams.loadsAllData() || t.push(e);
        return t;
      }
      function Qu(n, t) {
        let e = null;
        for (const i of n.views.values()) e = e || rB(i, t);
        return e;
      }
      function L1(n, t) {
        return t._queryParams.loadsAllData()
          ? mD(n)
          : n.views.get(t._queryIdentifier);
      }
      function V1(n, t) {
        return null != L1(n, t);
      }
      function Ju(n) {
        return null != mD(n);
      }
      function mD(n) {
        for (const t of n.views.values())
          if (t.query._queryParams.loadsAllData()) return t;
        return null;
      }
      let pB = 1;
      class B1 {
        constructor(t) {
          (this.listenProvider_ = t),
            (this.syncPointTree_ = new an(null)),
            (this.pendingWriteTree_ = {
              visibleWrites: ko.empty(),
              allWrites: [],
              lastWriteId: -1,
            }),
            (this.tagToQueryMap = new Map()),
            (this.queryToTagMap = new Map());
        }
      }
      function xR(n, t, e, i, a) {
        return (
          (function (n, t, e, i, a) {
            (0, P.hu)(
              i > n.lastWriteId,
              "Stacking an older write on top of newer ones"
            ),
              void 0 === a && (a = !0),
              n.allWrites.push({ path: t, snap: e, writeId: i, visible: a }),
              a && (n.visibleWrites = Kb(n.visibleWrites, t, e)),
              (n.lastWriteId = i);
          })(n.pendingWriteTree_, t, e, i, a),
          a
            ? Lg(
                n,
                new Af(
                  { fromUser: !0, fromServer: !1, queryId: null, tagged: !1 },
                  t,
                  e
                )
              )
            : []
        );
      }
      function Xu(n, t, e = !1) {
        const i = (function (n, t) {
          for (let e = 0; e < n.allWrites.length; e++) {
            const i = n.allWrites[e];
            if (i.writeId === t) return i;
          }
          return null;
        })(n.pendingWriteTree_, t);
        if (
          (function (n, t) {
            const e = n.allWrites.findIndex((_) => _.writeId === t);
            (0, P.hu)(e >= 0, "removeWrite called with nonexistent writeId.");
            const i = n.allWrites[e];
            n.allWrites.splice(e, 1);
            let a = i.visible,
              u = !1,
              h = n.allWrites.length - 1;
            for (; a && h >= 0; ) {
              const _ = n.allWrites[h];
              _.visible &&
                (h >= e && N2(_, i.path)
                  ? (a = !1)
                  : Fs(i.path, _.path) && (u = !0)),
                h--;
            }
            return (
              !!a &&
              (u
                ? ((function (n) {
                    (n.visibleWrites = C1(n.allWrites, L2, Ut())),
                      (n.lastWriteId =
                        n.allWrites.length > 0
                          ? n.allWrites[n.allWrites.length - 1].writeId
                          : -1);
                  })(n),
                  !0)
                : (i.snap
                    ? (n.visibleWrites = y1(n.visibleWrites, i.path))
                    : Ci(i.children, (b) => {
                        n.visibleWrites = y1(n.visibleWrites, yn(i.path, b));
                      }),
                  !0))
            );
          })(n.pendingWriteTree_, t)
        ) {
          let u = new an(null);
          return (
            null != i.snap
              ? (u = u.set(Ut(), !0))
              : Ci(i.children, (h) => {
                  u = u.set(new Wt(h), !0);
                }),
            Lg(n, new aD(i.path, u, e))
          );
        }
        return [];
      }
      function Qb(n, t, e) {
        return Lg(
          n,
          new Af(
            { fromUser: !1, fromServer: !0, queryId: null, tagged: !1 },
            t,
            e
          )
        );
      }
      function RR(n, t, e, i) {
        const a = t._path,
          u = n.syncPointTree_.get(a);
        let h = [];
        if (u && ("default" === t._queryIdentifier || V1(u, t))) {
          const _ = (function (n, t, e, i) {
            const a = t._queryIdentifier,
              u = [];
            let h = [];
            const _ = Ju(n);
            if ("default" === a)
              for (const [b, S] of n.views.entries())
                (h = h.concat(R1(S, e, i))),
                  x1(S) &&
                    (n.views.delete(b),
                    S.query._queryParams.loadsAllData() || u.push(S.query));
            else {
              const b = n.views.get(a);
              b &&
                ((h = h.concat(R1(b, e, i))),
                x1(b) &&
                  (n.views.delete(a),
                  b.query._queryParams.loadsAllData() || u.push(b.query)));
            }
            return (
              _ &&
                !Ju(n) &&
                u.push(
                  new ((0, P.hu)(pD, "Reference.ts has not been loaded"), pD)(
                    t._repo,
                    t._path
                  )
                ),
              { removed: u, events: h }
            );
          })(u, t, e, i);
          (function (n) {
            return 0 === n.views.size;
          })(u) && (n.syncPointTree_ = n.syncPointTree_.remove(a));
          const b = _.removed;
          h = _.events;
          const S = -1 !== b.findIndex((A) => A._queryParams.loadsAllData()),
            T = n.syncPointTree_.findOnPath(a, (A, B) => Ju(B));
          if (S && !T) {
            const A = n.syncPointTree_.subtree(a);
            if (!A.isEmpty()) {
              const B = (function (n) {
                return n.fold((t, e, i) => {
                  if (e && Ju(e)) return [mD(e)];
                  {
                    let a = [];
                    return (
                      e && (a = F1(e)),
                      Ci(i, (u, h) => {
                        a = a.concat(h);
                      }),
                      a
                    );
                  }
                });
              })(A);
              for (let j = 0; j < B.length; ++j) {
                const X = B[j],
                  ve = X.query,
                  De = G1(n, X);
                n.listenProvider_.startListening(
                  Jb(ve),
                  yD(n, ve),
                  De.hashFn,
                  De.onComplete
                );
              }
            }
          }
          if (!T && b.length > 0 && !i)
            if (S) {
              const A = null;
              n.listenProvider_.stopListening(Jb(t), A);
            } else
              b.forEach((A) => {
                const B = n.queryToTagMap.get(vD(A));
                n.listenProvider_.stopListening(Jb(A), B);
              });
          !(function (n, t) {
            for (let e = 0; e < t.length; ++e) {
              const i = t[e];
              if (!i._queryParams.loadsAllData()) {
                const a = vD(i),
                  u = n.queryToTagMap.get(a);
                n.queryToTagMap.delete(a), n.tagToQueryMap.delete(u);
              }
            }
          })(n, b);
        }
        return h;
      }
      function U1(n, t, e) {
        const i = t._path;
        let a = null,
          u = !1;
        n.syncPointTree_.foreachOnPath(i, (A, B) => {
          const j = ur(A, i);
          (a = a || Qu(B, j)), (u = u || Ju(B));
        });
        let _,
          h = n.syncPointTree_.get(i);
        h
          ? ((u = u || Ju(h)), (a = a || Qu(h, Ut())))
          : ((h = new P1()), (n.syncPointTree_ = n.syncPointTree_.set(i, h))),
          null != a
            ? (_ = !0)
            : ((_ = !1),
              (a = pt.EMPTY_NODE),
              n.syncPointTree_.subtree(i).foreachChild((B, j) => {
                const X = Qu(j, Ut());
                X && (a = a.updateImmediateChild(B, X));
              }));
        const b = V1(h, t);
        if (!b && !t._queryParams.loadsAllData()) {
          const A = vD(t);
          (0, P.hu)(
            !n.queryToTagMap.has(A),
            "View does not exist, but we have a tag"
          );
          const B = pB++;
          n.queryToTagMap.set(A, B), n.tagToQueryMap.set(B, A);
        }
        let T = (function (n, t, e, i, a, u) {
          const h = N1(n, t, i, a, u);
          return (
            n.views.has(t._queryIdentifier) ||
              n.views.set(t._queryIdentifier, h),
            (function (n, t) {
              n.eventRegistrations_.push(t);
            })(h, e),
            (function (n, t) {
              const e = n.viewCache_.eventCache,
                i = [];
              return (
                e.getNode().isLeafNode() ||
                  e.getNode().forEachChild(on, (u, h) => {
                    i.push(Og(u, h));
                  }),
                e.isFullyInitialized() && i.push(f1(e.getNode())),
                O1(n, i, e.getNode(), t)
              );
            })(h, e)
          );
        })(h, t, e, uD(n.pendingWriteTree_, i), a, _);
        if (!b && !u) {
          const A = L1(h, t);
          T = T.concat(
            (function (n, t, e) {
              const i = t._path,
                a = yD(n, t),
                u = G1(n, e),
                h = n.listenProvider_.startListening(
                  Jb(t),
                  a,
                  u.hashFn,
                  u.onComplete
                ),
                _ = n.syncPointTree_.subtree(i);
              if (a)
                (0, P.hu)(
                  !Ju(_.value),
                  "If we're adding a query, it shouldn't be shadowed"
                );
              else {
                const b = _.fold((S, T, A) => {
                  if (!It(S) && T && Ju(T)) return [mD(T).query];
                  {
                    let B = [];
                    return (
                      T && (B = B.concat(F1(T).map((j) => j.query))),
                      Ci(A, (j, X) => {
                        B = B.concat(X);
                      }),
                      B
                    );
                  }
                });
                for (let S = 0; S < b.length; ++S) {
                  const T = b[S];
                  n.listenProvider_.stopListening(Jb(T), yD(n, T));
                }
              }
              return h;
            })(n, t, A)
          );
        }
        return T;
      }
      function _D(n, t, e) {
        const a = n.pendingWriteTree_,
          u = n.syncPointTree_.findOnPath(t, (h, _) => {
            const S = Qu(_, ur(h, t));
            if (S) return S;
          });
        return E1(a, t, u, e, !0);
      }
      function Lg(n, t) {
        return H1(t, n.syncPointTree_, null, uD(n.pendingWriteTree_, Ut()));
      }
      function H1(n, t, e, i) {
        if (It(n.path)) return j1(n, t, e, i);
        {
          const a = t.get(Ut());
          null == e && null != a && (e = Qu(a, Ut()));
          let u = [];
          const h = Tt(n.path),
            _ = n.operationForChild(h),
            b = t.children.get(h);
          if (b && _) {
            const S = e ? e.getImmediateChild(h) : null,
              T = S1(i, h);
            u = u.concat(H1(_, b, S, T));
          }
          return a && (u = u.concat(AR(a, n, i, e))), u;
        }
      }
      function j1(n, t, e, i) {
        const a = t.get(Ut());
        null == e && null != a && (e = Qu(a, Ut()));
        let u = [];
        return (
          t.children.inorderTraversal((h, _) => {
            const b = e ? e.getImmediateChild(h) : null,
              S = S1(i, h),
              T = n.operationForChild(h);
            T && (u = u.concat(j1(T, _, b, S)));
          }),
          a && (u = u.concat(AR(a, n, i, e))),
          u
        );
      }
      function G1(n, t) {
        const e = t.query,
          i = yD(n, e);
        return {
          hashFn: () =>
            (
              (function (n) {
                return n.viewCache_.serverCache.getNode();
              })(t) || pt.EMPTY_NODE
            ).hash(),
          onComplete: (a) => {
            if ("ok" === a)
              return i
                ? (function (n, t, e) {
                    const i = kR(n, e);
                    if (i) {
                      const a = OR(i),
                        u = a.path,
                        h = a.queryId,
                        _ = ur(u, t);
                      return PR(n, u, new Yb(vR(h), _));
                    }
                    return [];
                  })(n, e._path, i)
                : (function (n, t) {
                    return Lg(
                      n,
                      new Yb(
                        {
                          fromUser: !1,
                          fromServer: !0,
                          queryId: null,
                          tagged: !1,
                        },
                        t
                      )
                    );
                  })(n, e._path);
            {
              const u = (function (n, t) {
                let e = "Unknown Error";
                "too_big" === n
                  ? (e =
                      "The data requested exceeds the maximum size that can be accessed with a single request.")
                  : "permission_denied" === n
                  ? (e =
                      "Client doesn't have permission to access the desired data.")
                  : "unavailable" === n && (e = "The service is unavailable");
                const i = new Error(n + " at " + t._path.toString() + ": " + e);
                return (i.code = n.toUpperCase()), i;
              })(a, e);
              return RR(n, e, null, u);
            }
          },
        };
      }
      function yD(n, t) {
        const e = vD(t);
        return n.queryToTagMap.get(e);
      }
      function vD(n) {
        return n._path.toString() + "$" + n._queryIdentifier;
      }
      function kR(n, t) {
        return n.tagToQueryMap.get(t);
      }
      function OR(n) {
        const t = n.indexOf("$");
        return (
          (0, P.hu)(-1 !== t && t < n.length - 1, "Bad queryKey."),
          { queryId: n.substr(t + 1), path: new Wt(n.substr(0, t)) }
        );
      }
      function PR(n, t, e) {
        const i = n.syncPointTree_.get(t);
        return (
          (0, P.hu)(i, "Missing sync point for query tag that we're tracking"),
          AR(i, e, uD(n.pendingWriteTree_, t), null)
        );
      }
      function Jb(n) {
        return n._queryParams.loadsAllData() && !n._queryParams.isDefault()
          ? new ((0, P.hu)(gD, "Reference.ts has not been loaded"), gD)(
              n._repo,
              n._path
            )
          : n;
      }
      class NR {
        constructor(t) {
          this.node_ = t;
        }
        getImmediateChild(t) {
          const e = this.node_.getImmediateChild(t);
          return new NR(e);
        }
        node() {
          return this.node_;
        }
      }
      class FR {
        constructor(t, e) {
          (this.syncTree_ = t), (this.path_ = e);
        }
        getImmediateChild(t) {
          const e = yn(this.path_, t);
          return new FR(this.syncTree_, e);
        }
        node() {
          return _D(this.syncTree_, this.path_);
        }
      }
      const z1 = function (n, t, e) {
          return n && "object" == typeof n
            ? ((0, P.hu)(
                ".sv" in n,
                "Unexpected leaf node or priority contents"
              ),
              "string" == typeof n[".sv"]
                ? TB(n[".sv"], t, e)
                : "object" == typeof n[".sv"]
                ? IB(n[".sv"], t)
                : void (0, P.hu)(
                    !1,
                    "Unexpected server value: " + JSON.stringify(n, null, 2)
                  ))
            : n;
        },
        TB = function (n, t, e) {
          switch (n) {
            case "timestamp":
              return e.timestamp;
            default:
              (0, P.hu)(!1, "Unexpected server value: " + n);
          }
        },
        IB = function (n, t, e) {
          n.hasOwnProperty("increment") ||
            (0, P.hu)(
              !1,
              "Unexpected server value: " + JSON.stringify(n, null, 2)
            );
          const i = n.increment;
          "number" != typeof i &&
            (0, P.hu)(!1, "Unexpected increment value: " + i);
          const a = t.node();
          if (
            ((0, P.hu)(null != a, "Expected ChildrenNode.EMPTY_NODE for nulls"),
            !a.isLeafNode())
          )
            return i;
          const h = a.getValue();
          return "number" != typeof h ? i : h + i;
        },
        $1 = function (n, t, e, i) {
          return VR(t, new FR(e, n), i);
        },
        LR = function (n, t, e) {
          return VR(n, new NR(t), e);
        };
      function VR(n, t, e) {
        const i = n.getPriority().val(),
          a = z1(i, t.getImmediateChild(".priority"), e);
        let u;
        if (n.isLeafNode()) {
          const h = n,
            _ = z1(h.getValue(), t, e);
          return _ !== h.getValue() || a !== h.getPriority().val()
            ? new xg(_, Dn(a))
            : n;
        }
        {
          const h = n;
          return (
            (u = h),
            a !== h.getPriority().val() && (u = u.updatePriority(new xg(a))),
            h.forEachChild(on, (_, b) => {
              const S = VR(b, t.getImmediateChild(_), e);
              S !== b && (u = u.updateImmediateChild(_, S));
            }),
            u
          );
        }
      }
      class BR {
        constructor(t = "", e = null, i = { children: {}, childCount: 0 }) {
          (this.name = t), (this.parent = e), (this.node = i);
        }
      }
      function bD(n, t) {
        let e = t instanceof Wt ? t : new Wt(t),
          i = n,
          a = Tt(e);
        for (; null !== a; ) {
          const u = (0, P.DV)(i.node.children, a) || {
            children: {},
            childCount: 0,
          };
          (i = new BR(a, i, u)), (e = tn(e)), (a = Tt(e));
        }
        return i;
      }
      function kf(n) {
        return n.node.value;
      }
      function UR(n, t) {
        (n.node.value = t), HR(n);
      }
      function W1(n) {
        return n.node.childCount > 0;
      }
      function CD(n, t) {
        Ci(n.node.children, (e, i) => {
          t(new BR(e, n, i));
        });
      }
      function Y1(n, t, e, i) {
        e && !i && t(n),
          CD(n, (a) => {
            Y1(a, t, !0, i);
          }),
          e && i && t(n);
      }
      function Xb(n) {
        return new Wt(null === n.parent ? n.name : Xb(n.parent) + "/" + n.name);
      }
      function HR(n) {
        null !== n.parent &&
          (function (n, t, e) {
            const i = (function (n) {
                return void 0 === kf(n) && !W1(n);
              })(e),
              a = (0, P.r3)(n.node.children, t);
            i && a
              ? (delete n.node.children[t], n.node.childCount--, HR(n))
              : !i &&
                !a &&
                ((n.node.children[t] = e.node), n.node.childCount++, HR(n));
          })(n.parent, n.name, n);
      }
      const kB = /[\[\].#$\/\u0000-\u001F\u007F]/,
        OB = /[\[\].#$\u0000-\u001F\u007F]/,
        jR = 10485760,
        ED = function (n) {
          return "string" == typeof n && 0 !== n.length && !kB.test(n);
        },
        Z1 = function (n) {
          return "string" == typeof n && 0 !== n.length && !OB.test(n);
        },
        eC = function (n) {
          return (
            null === n ||
            "string" == typeof n ||
            ("number" == typeof n && !qS(n)) ||
            (n && "object" == typeof n && (0, P.r3)(n, ".sv"))
          );
        },
        Ha = function (n, t, e, i) {
          (i && void 0 === t) || tC((0, P.gK)(n, "value"), t, e);
        },
        tC = function (n, t, e) {
          const i = e instanceof Wt ? new WV(e, n) : e;
          if (void 0 === t) throw new Error(n + "contains undefined " + If(i));
          if ("function" == typeof t)
            throw new Error(
              n +
                "contains a function " +
                If(i) +
                " with contents = " +
                t.toString()
            );
          if (qS(t))
            throw new Error(n + "contains " + t.toString() + " " + If(i));
          if ("string" == typeof t && t.length > jR / 3 && (0, P.ug)(t) > jR)
            throw new Error(
              n +
                "contains a string greater than " +
                jR +
                " utf8 bytes " +
                If(i) +
                " ('" +
                t.substring(0, 50) +
                "...')"
            );
          if (t && "object" == typeof t) {
            let a = !1,
              u = !1;
            if (
              (Ci(t, (h, _) => {
                if (".value" === h) a = !0;
                else if (".priority" !== h && ".sv" !== h && ((u = !0), !ED(h)))
                  throw new Error(
                    n +
                      " contains an invalid key (" +
                      h +
                      ") " +
                      If(i) +
                      '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                  );
                (function (n, t) {
                  n.parts_.length > 0 && (n.byteLength_ += 1),
                    n.parts_.push(t),
                    (n.byteLength_ += (0, P.ug)(t)),
                    e1(n);
                })(i, h),
                  tC(n, _, i),
                  (function (n) {
                    const t = n.parts_.pop();
                    (n.byteLength_ -= (0, P.ug)(t)),
                      n.parts_.length > 0 && (n.byteLength_ -= 1);
                  })(i);
              }),
              a && u)
            )
              throw new Error(
                n +
                  ' contains ".value" child ' +
                  If(i) +
                  " in addition to actual children."
              );
          }
        },
        q1 = function (n, t, e, i) {
          if (i && void 0 === t) return;
          const a = (0, P.gK)(n, "values");
          if (!t || "object" != typeof t || Array.isArray(t))
            throw new Error(
              a + " must be an object containing the children to replace."
            );
          const u = [];
          Ci(t, (h, _) => {
            const b = new Wt(h);
            if ((tC(a, _, yn(e, b)), ".priority" === iR(b) && !eC(_)))
              throw new Error(
                a +
                  "contains an invalid value for '" +
                  b.toString() +
                  "', which must be a valid Firebase priority (a string, finite number, server value, or null)."
              );
            u.push(b);
          }),
            (function (n, t) {
              let e, i;
              for (e = 0; e < t.length; e++) {
                i = t[e];
                const u = Ub(i);
                for (let h = 0; h < u.length; h++)
                  if ((".priority" !== u[h] || h !== u.length - 1) && !ED(u[h]))
                    throw new Error(
                      n +
                        "contains an invalid key (" +
                        u[h] +
                        ") in path " +
                        i.toString() +
                        '. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                    );
              }
              t.sort($V);
              let a = null;
              for (e = 0; e < t.length; e++) {
                if (((i = t[e]), null !== a && Fs(a, i)))
                  throw new Error(
                    n +
                      "contains a path " +
                      a.toString() +
                      " that is ancestor of another path " +
                      i.toString()
                  );
                a = i;
              }
            })(a, u);
        },
        GR = function (n, t, e) {
          if (!e || void 0 !== t) {
            if (qS(t))
              throw new Error(
                (0, P.gK)(n, "priority") +
                  "is " +
                  t.toString() +
                  ", but must be a valid Firebase priority (a string, finite number, server value, or null)."
              );
            if (!eC(t))
              throw new Error(
                (0, P.gK)(n, "priority") +
                  "must be a valid Firebase priority (a string, finite number, server value, or null)."
              );
          }
        },
        nC = function (n, t, e, i) {
          if (!((i && void 0 === e) || ED(e)))
            throw new Error(
              (0, P.gK)(n, t) +
                'was an invalid key = "' +
                e +
                '".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").'
            );
        },
        iC = function (n, t, e, i) {
          if (!((i && void 0 === e) || Z1(e)))
            throw new Error(
              (0, P.gK)(n, t) +
                'was an invalid path = "' +
                e +
                '". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"'
            );
        },
        Vs = function (n, t) {
          if (".info" === Tt(t))
            throw new Error(n + " failed = Can't modify data under /.info/");
        },
        K1 = function (n, t) {
          const e = t.path.toString();
          if (
            "string" != typeof t.repoInfo.host ||
            0 === t.repoInfo.host.length ||
            (!ED(t.repoInfo.namespace) &&
              "localhost" !== t.repoInfo.host.split(":")[0]) ||
            (0 !== e.length &&
              !(function (n) {
                return n && (n = n.replace(/^\/*\.info(\/|$)/, "/")), Z1(n);
              })(e))
          )
            throw new Error(
              (0, P.gK)(n, "url") +
                'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".'
            );
        };
      class LB {
        constructor() {
          (this.eventLists_ = []), (this.recursionDepth_ = 0);
        }
      }
      function wD(n, t) {
        let e = null;
        for (let i = 0; i < t.length; i++) {
          const a = t[i],
            u = a.getPath();
          null !== e && !rR(u, e.path) && (n.eventLists_.push(e), (e = null)),
            null === e && (e = { events: [], path: u }),
            e.events.push(a);
        }
        e && n.eventLists_.push(e);
      }
      function zR(n, t, e) {
        wD(n, e), Q1(n, (i) => rR(i, t));
      }
      function Bs(n, t, e) {
        wD(n, e), Q1(n, (i) => Fs(i, t) || Fs(t, i));
      }
      function Q1(n, t) {
        n.recursionDepth_++;
        let e = !0;
        for (let i = 0; i < n.eventLists_.length; i++) {
          const a = n.eventLists_[i];
          a &&
            (t(a.path)
              ? (VB(n.eventLists_[i]), (n.eventLists_[i] = null))
              : (e = !1));
        }
        e && (n.eventLists_ = []), n.recursionDepth_--;
      }
      function VB(n) {
        for (let t = 0; t < n.events.length; t++) {
          const e = n.events[t];
          if (null !== e) {
            n.events[t] = null;
            const i = e.getEventRunner();
            Mf && bi("event: " + e.toString()), Tg(i);
          }
        }
      }
      const J1 = "repo_interrupt";
      class UB {
        constructor(t, e, i, a) {
          (this.repoInfo_ = t),
            (this.forceRestClient_ = e),
            (this.authTokenProvider_ = i),
            (this.appCheckProvider_ = a),
            (this.dataUpdateCount = 0),
            (this.statsListener_ = null),
            (this.eventQueue_ = new LB()),
            (this.nextWriteId_ = 1),
            (this.interceptServerDataCallback_ = null),
            (this.onDisconnect_ = oD()),
            (this.transactionQueueTree_ = new BR()),
            (this.persistentConnection_ = null),
            (this.key = this.repoInfo_.toURLString());
        }
        toString() {
          return (
            (this.repoInfo_.secure ? "https://" : "http://") +
            this.repoInfo_.host
          );
        }
      }
      function X1(n) {
        const e =
          n.infoData_.getNode(new Wt(".info/serverTimeOffset")).val() || 0;
        return new Date().getTime() + e;
      }
      function rC(n) {
        return (function (n) {
          return (
            ((n = n || {}).timestamp = n.timestamp || new Date().getTime()), n
          );
        })({ timestamp: X1(n) });
      }
      function eF(n, t, e, i, a) {
        n.dataUpdateCount++;
        const u = new Wt(t);
        e = n.interceptServerDataCallback_
          ? n.interceptServerDataCallback_(t, e)
          : e;
        let h = [];
        if (a)
          if (i) {
            const b = (0, P.UI)(e, (S) => Dn(S));
            h = (function (n, t, e, i) {
              const a = kR(n, i);
              if (a) {
                const u = OR(a),
                  h = u.path,
                  _ = u.queryId,
                  b = ur(h, t),
                  S = an.fromObject(e);
                return PR(n, h, new Ng(vR(_), b, S));
              }
              return [];
            })(n.serverSyncTree_, u, b, a);
          } else {
            const b = Dn(e);
            h = (function (n, t, e, i) {
              const a = kR(n, i);
              if (null != a) {
                const u = OR(a),
                  h = u.path,
                  _ = u.queryId,
                  b = ur(h, t);
                return PR(n, h, new Af(vR(_), b, e));
              }
              return [];
            })(n.serverSyncTree_, u, b, a);
          }
        else if (i) {
          const b = (0, P.UI)(e, (S) => Dn(S));
          h = (function (n, t, e) {
            const i = an.fromObject(e);
            return Lg(
              n,
              new Ng(
                { fromUser: !1, fromServer: !0, queryId: null, tagged: !1 },
                t,
                i
              )
            );
          })(n.serverSyncTree_, u, b);
        } else {
          const b = Dn(e);
          h = Qb(n.serverSyncTree_, u, b);
        }
        let _ = u;
        h.length > 0 && (_ = Bg(n, u)), Bs(n.eventQueue_, _, h);
      }
      function tF(n, t) {
        $R(n, "connected", t),
          !1 === t &&
            (function (n) {
              Vg(n, "onDisconnectEvents");
              const t = rC(n),
                e = oD();
              gR(n.onDisconnect_, Ut(), (a, u) => {
                const h = $1(a, u, n.serverSyncTree_, t);
                Pg(e, a, h);
              });
              let i = [];
              gR(e, Ut(), (a, u) => {
                i = i.concat(Qb(n.serverSyncTree_, a, u));
                const h = qR(n, a);
                Bg(n, h);
              }),
                (n.onDisconnect_ = oD()),
                Bs(n.eventQueue_, Ut(), i);
            })(n);
      }
      function $R(n, t, e) {
        const i = new Wt("/.info/" + t),
          a = Dn(e);
        n.infoData_.updateSnapshot(i, a);
        const u = Qb(n.infoSyncTree_, i, a);
        Bs(n.eventQueue_, i, u);
      }
      function SD(n) {
        return n.nextWriteId_++;
      }
      function WR(n, t, e, i, a) {
        Vg(n, "set", { path: t.toString(), value: e, priority: i });
        const u = rC(n),
          h = Dn(e, i),
          _ = _D(n.serverSyncTree_, t),
          b = LR(h, _, u),
          S = SD(n),
          T = xR(n.serverSyncTree_, t, b, S, !0);
        wD(n.eventQueue_, T),
          n.server_.put(t.toString(), h.val(!0), (B, j) => {
            const X = "ok" === B;
            X || cr("set at " + t + " failed: " + B);
            const ve = Xu(n.serverSyncTree_, S, !X);
            Bs(n.eventQueue_, t, ve), ed(0, a, B, j);
          });
        const A = qR(n, t);
        Bg(n, A), Bs(n.eventQueue_, A, []);
      }
      function WB(n, t, e) {
        n.server_.onDisconnectCancel(t.toString(), (i, a) => {
          "ok" === i && mR(n.onDisconnect_, t), ed(0, e, i, a);
        });
      }
      function nF(n, t, e, i) {
        const a = Dn(e);
        n.server_.onDisconnectPut(t.toString(), a.val(!0), (u, h) => {
          "ok" === u && Pg(n.onDisconnect_, t, a), ed(0, i, u, h);
        });
      }
      function YR(n, t, e) {
        let i;
        (i =
          ".info" === Tt(t._path)
            ? RR(n.infoSyncTree_, t, e)
            : RR(n.serverSyncTree_, t, e)),
          zR(n.eventQueue_, t._path, i);
      }
      function iF(n) {
        n.persistentConnection_ && n.persistentConnection_.interrupt(J1);
      }
      function Vg(n, ...t) {
        let e = "";
        n.persistentConnection_ && (e = n.persistentConnection_.id + ":"),
          bi(e, ...t);
      }
      function ed(n, t, e, i) {
        t &&
          Tg(() => {
            if ("ok" === e) t(null);
            else {
              const a = (e || "error").toUpperCase();
              let u = a;
              i && (u += ": " + i);
              const h = new Error(u);
              (h.code = a), t(h);
            }
          });
      }
      function ZR(n, t, e) {
        return _D(n.serverSyncTree_, t, e) || pt.EMPTY_NODE;
      }
      function DD(n, t = n.transactionQueueTree_) {
        if ((t || MD(n, t), kf(t))) {
          const e = sF(n, t);
          (0, P.hu)(e.length > 0, "Sending zero length transaction queue"),
            e.every((a) => 0 === a.status) &&
              (function (n, t, e) {
                const i = e.map((S) => S.currentWriteId),
                  a = ZR(n, t, i);
                let u = a;
                const h = a.hash();
                for (let S = 0; S < e.length; S++) {
                  const T = e[S];
                  (0, P.hu)(
                    0 === T.status,
                    "tryToSendTransactionQueue_: items in queue should all be run."
                  ),
                    (T.status = 1),
                    T.retryCount++;
                  const A = ur(t, T.path);
                  u = u.updateChild(A, T.currentOutputSnapshotRaw);
                }
                const _ = u.val(!0),
                  b = t;
                n.server_.put(
                  b.toString(),
                  _,
                  (S) => {
                    Vg(n, "transaction put response", {
                      path: b.toString(),
                      status: S,
                    });
                    let T = [];
                    if ("ok" === S) {
                      const A = [];
                      for (let B = 0; B < e.length; B++)
                        (e[B].status = 2),
                          (T = T.concat(
                            Xu(n.serverSyncTree_, e[B].currentWriteId)
                          )),
                          e[B].onComplete &&
                            A.push(() =>
                              e[B].onComplete(
                                null,
                                !0,
                                e[B].currentOutputSnapshotResolved
                              )
                            ),
                          e[B].unwatcher();
                      MD(n, bD(n.transactionQueueTree_, t)),
                        DD(n, n.transactionQueueTree_),
                        Bs(n.eventQueue_, t, T);
                      for (let B = 0; B < A.length; B++) Tg(A[B]);
                    } else {
                      if ("datastale" === S)
                        for (let A = 0; A < e.length; A++)
                          e[A].status = 3 === e[A].status ? 4 : 0;
                      else {
                        cr("transaction at " + b.toString() + " failed: " + S);
                        for (let A = 0; A < e.length; A++)
                          (e[A].status = 4), (e[A].abortReason = S);
                      }
                      Bg(n, t);
                    }
                  },
                  h
                );
              })(n, Xb(t), e);
        } else
          W1(t) &&
            CD(t, (e) => {
              DD(n, e);
            });
      }
      function Bg(n, t) {
        const e = rF(n, t),
          i = Xb(e);
        return (
          (function (n, t, e) {
            if (0 === t.length) return;
            const i = [];
            let a = [];
            const h = t
              .filter((_) => 0 === _.status)
              .map((_) => _.currentWriteId);
            for (let _ = 0; _ < t.length; _++) {
              const b = t[_],
                S = ur(e, b.path);
              let A,
                T = !1;
              if (
                ((0, P.hu)(
                  null !== S,
                  "rerunTransactionsUnderNode_: relativePath should not be null."
                ),
                4 === b.status)
              )
                (T = !0),
                  (A = b.abortReason),
                  (a = a.concat(Xu(n.serverSyncTree_, b.currentWriteId, !0)));
              else if (0 === b.status)
                if (b.retryCount >= 25)
                  (T = !0),
                    (A = "maxretry"),
                    (a = a.concat(Xu(n.serverSyncTree_, b.currentWriteId, !0)));
                else {
                  const B = ZR(n, b.path, h);
                  b.currentInputSnapshot = B;
                  const j = t[_].update(B.val());
                  if (void 0 !== j) {
                    tC("transaction failed: Data returned ", j, b.path);
                    let X = Dn(j);
                    ("object" == typeof j &&
                      null != j &&
                      (0, P.r3)(j, ".priority")) ||
                      (X = X.updatePriority(B.getPriority()));
                    const De = b.currentWriteId,
                      Ne = rC(n),
                      qe = LR(X, B, Ne);
                    (b.currentOutputSnapshotRaw = X),
                      (b.currentOutputSnapshotResolved = qe),
                      (b.currentWriteId = SD(n)),
                      h.splice(h.indexOf(De), 1),
                      (a = a.concat(
                        xR(
                          n.serverSyncTree_,
                          b.path,
                          qe,
                          b.currentWriteId,
                          b.applyLocally
                        )
                      )),
                      (a = a.concat(Xu(n.serverSyncTree_, De, !0)));
                  } else
                    (T = !0),
                      (A = "nodata"),
                      (a = a.concat(
                        Xu(n.serverSyncTree_, b.currentWriteId, !0)
                      ));
                }
              Bs(n.eventQueue_, e, a),
                (a = []),
                T &&
                  ((t[_].status = 2),
                  setTimeout(t[_].unwatcher, Math.floor(0)),
                  t[_].onComplete &&
                    i.push(
                      "nodata" === A
                        ? () =>
                            t[_].onComplete(null, !1, t[_].currentInputSnapshot)
                        : () => t[_].onComplete(new Error(A), !1, null)
                    ));
            }
            MD(n, n.transactionQueueTree_);
            for (let _ = 0; _ < i.length; _++) Tg(i[_]);
            DD(n, n.transactionQueueTree_);
          })(n, sF(n, e), i),
          i
        );
      }
      function rF(n, t) {
        let e,
          i = n.transactionQueueTree_;
        for (e = Tt(t); null !== e && void 0 === kf(i); )
          (i = bD(i, e)), (e = Tt((t = tn(t))));
        return i;
      }
      function sF(n, t) {
        const e = [];
        return oF(n, t, e), e.sort((i, a) => i.order - a.order), e;
      }
      function oF(n, t, e) {
        const i = kf(t);
        if (i) for (let a = 0; a < i.length; a++) e.push(i[a]);
        CD(t, (a) => {
          oF(n, a, e);
        });
      }
      function MD(n, t) {
        const e = kf(t);
        if (e) {
          let i = 0;
          for (let a = 0; a < e.length; a++)
            2 !== e[a].status && ((e[i] = e[a]), i++);
          (e.length = i), UR(t, e.length > 0 ? e : void 0);
        }
        CD(t, (i) => {
          MD(n, i);
        });
      }
      function qR(n, t) {
        const e = Xb(rF(n, t)),
          i = bD(n.transactionQueueTree_, t);
        return (
          (function (n, t, e) {
            let i = n.parent;
            for (; null !== i; ) {
              if (t(i)) return !0;
              i = i.parent;
            }
          })(i, (a) => {
            KR(n, a);
          }),
          KR(n, i),
          Y1(i, (a) => {
            KR(n, a);
          }),
          e
        );
      }
      function KR(n, t) {
        const e = kf(t);
        if (e) {
          const i = [];
          let a = [],
            u = -1;
          for (let h = 0; h < e.length; h++)
            3 === e[h].status ||
              (1 === e[h].status
                ? ((0, P.hu)(
                    u === h - 1,
                    "All SENT items should be at beginning of queue."
                  ),
                  (u = h),
                  (e[h].status = 3),
                  (e[h].abortReason = "set"))
                : ((0, P.hu)(
                    0 === e[h].status,
                    "Unexpected transaction status in abort"
                  ),
                  e[h].unwatcher(),
                  (a = a.concat(
                    Xu(n.serverSyncTree_, e[h].currentWriteId, !0)
                  )),
                  e[h].onComplete &&
                    i.push(
                      e[h].onComplete.bind(null, new Error("set"), !1, null)
                    )));
          -1 === u ? UR(t, void 0) : (e.length = u + 1),
            Bs(n.eventQueue_, Xb(t), a);
          for (let h = 0; h < i.length; h++) Tg(i[h]);
        }
      }
      const QR = function (n, t) {
          const e = nU(n),
            i = e.namespace;
          return (
            "firebase.com" === e.domain &&
              Va(
                e.host +
                  " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"
              ),
            (!i || "undefined" === i) &&
              "localhost" !== e.domain &&
              Va(
                "Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"
              ),
            e.secure ||
              ("undefined" != typeof window &&
                window.location &&
                window.location.protocol &&
                -1 !== window.location.protocol.indexOf("https:") &&
                cr(
                  "Insecure Firebase access from a secure page. Please use https in calls to new Firebase()."
                )),
            {
              repoInfo: new NN(
                e.host,
                e.secure,
                i,
                t,
                "ws" === e.scheme || "wss" === e.scheme,
                "",
                i !== e.subdomain
              ),
              path: new Wt(e.pathString),
            }
          );
        },
        nU = function (n) {
          let t = "",
            e = "",
            i = "",
            a = "",
            u = "",
            h = !0,
            _ = "https",
            b = 443;
          if ("string" == typeof n) {
            let S = n.indexOf("//");
            S >= 0 && ((_ = n.substring(0, S - 1)), (n = n.substring(S + 2)));
            let T = n.indexOf("/");
            -1 === T && (T = n.length);
            let A = n.indexOf("?");
            -1 === A && (A = n.length),
              (t = n.substring(0, Math.min(T, A))),
              T < A &&
                (a = (function (n) {
                  let t = "";
                  const e = n.split("/");
                  for (let i = 0; i < e.length; i++)
                    if (e[i].length > 0) {
                      let a = e[i];
                      try {
                        a = decodeURIComponent(a.replace(/\+/g, " "));
                      } catch (u) {}
                      t += "/" + a;
                    }
                  return t;
                })(n.substring(T, A)));
            const B = (function (n) {
              const t = {};
              "?" === n.charAt(0) && (n = n.substring(1));
              for (const e of n.split("&")) {
                if (0 === e.length) continue;
                const i = e.split("=");
                2 === i.length
                  ? (t[decodeURIComponent(i[0])] = decodeURIComponent(i[1]))
                  : cr(`Invalid query segment '${e}' in query '${n}'`);
              }
              return t;
            })(n.substring(Math.min(n.length, A)));
            (S = t.indexOf(":")),
              S >= 0
                ? ((h = "https" === _ || "wss" === _),
                  (b = parseInt(t.substring(S + 1), 10)))
                : (S = t.length);
            const j = t.slice(0, S);
            if ("localhost" === j.toLowerCase()) e = "localhost";
            else if (j.split(".").length <= 2) e = j;
            else {
              const X = t.indexOf(".");
              (i = t.substring(0, X).toLowerCase()),
                (e = t.substring(X + 1)),
                (u = i);
            }
            "ns" in B && (u = B.ns);
          }
          return {
            host: t,
            port: b,
            domain: e,
            subdomain: i,
            secure: h,
            scheme: _,
            pathString: a,
            namespace: u,
          };
        };
      class aF {
        constructor(t, e, i, a) {
          (this.eventType = t),
            (this.eventRegistration = e),
            (this.snapshot = i),
            (this.prevName = a);
        }
        getPath() {
          const t = this.snapshot.ref;
          return "value" === this.eventType ? t._path : t.parent._path;
        }
        getEventType() {
          return this.eventType;
        }
        getEventRunner() {
          return this.eventRegistration.getEventRunner(this);
        }
        toString() {
          return (
            this.getPath().toString() +
            ":" +
            this.eventType +
            ":" +
            (0, P.Pz)(this.snapshot.exportVal())
          );
        }
      }
      class lF {
        constructor(t, e, i) {
          (this.eventRegistration = t), (this.error = e), (this.path = i);
        }
        getPath() {
          return this.path;
        }
        getEventType() {
          return "cancel";
        }
        getEventRunner() {
          return this.eventRegistration.getEventRunner(this);
        }
        toString() {
          return this.path.toString() + ":cancel";
        }
      }
      class cF {
        constructor(t, e) {
          (this.snapshotCallback = t), (this.cancelCallback = e);
        }
        onValue(t, e) {
          this.snapshotCallback.call(null, t, e);
        }
        onCancel(t) {
          return (
            (0, P.hu)(
              this.hasCancelCallback,
              "Raising a cancel event on a listener with no cancel callback"
            ),
            this.cancelCallback.call(null, t)
          );
        }
        get hasCancelCallback() {
          return !!this.cancelCallback;
        }
        matches(t) {
          return (
            this.snapshotCallback === t.snapshotCallback ||
            (void 0 !== this.snapshotCallback.userCallback &&
              this.snapshotCallback.userCallback ===
                t.snapshotCallback.userCallback &&
              this.snapshotCallback.context === t.snapshotCallback.context)
          );
        }
      }
      class uF {
        constructor(t, e) {
          (this._repo = t), (this._path = e);
        }
        cancel() {
          const t = new P.BH();
          return (
            WB(
              this._repo,
              this._path,
              t.wrapCallback(() => {})
            ),
            t.promise
          );
        }
        remove() {
          Vs("OnDisconnect.remove", this._path);
          const t = new P.BH();
          return (
            nF(
              this._repo,
              this._path,
              null,
              t.wrapCallback(() => {})
            ),
            t.promise
          );
        }
        set(t) {
          Vs("OnDisconnect.set", this._path),
            Ha("OnDisconnect.set", t, this._path, !1);
          const e = new P.BH();
          return (
            nF(
              this._repo,
              this._path,
              t,
              e.wrapCallback(() => {})
            ),
            e.promise
          );
        }
        setWithPriority(t, e) {
          Vs("OnDisconnect.setWithPriority", this._path),
            Ha("OnDisconnect.setWithPriority", t, this._path, !1),
            GR("OnDisconnect.setWithPriority", e, !1);
          const i = new P.BH();
          return (
            (function (n, t, e, i, a) {
              const u = Dn(e, i);
              n.server_.onDisconnectPut(t.toString(), u.val(!0), (h, _) => {
                "ok" === h && Pg(n.onDisconnect_, t, u), ed(0, a, h, _);
              });
            })(
              this._repo,
              this._path,
              t,
              e,
              i.wrapCallback(() => {})
            ),
            i.promise
          );
        }
        update(t) {
          Vs("OnDisconnect.update", this._path),
            q1("OnDisconnect.update", t, this._path, !1);
          const e = new P.BH();
          return (
            (function (n, t, e, i) {
              if ((0, P.xb)(e))
                return (
                  bi(
                    "onDisconnect().update() called with empty data.  Don't do anything."
                  ),
                  void ed(0, i, "ok", void 0)
                );
              n.server_.onDisconnectMerge(t.toString(), e, (a, u) => {
                "ok" === a &&
                  Ci(e, (h, _) => {
                    const b = Dn(_);
                    Pg(n.onDisconnect_, yn(t, h), b);
                  }),
                  ed(0, i, a, u);
              });
            })(
              this._repo,
              this._path,
              t,
              e.wrapCallback(() => {})
            ),
            e.promise
          );
        }
      }
      class Ar {
        constructor(t, e, i, a) {
          (this._repo = t),
            (this._path = e),
            (this._queryParams = i),
            (this._orderByCalled = a);
        }
        get key() {
          return It(this._path) ? null : iR(this._path);
        }
        get ref() {
          return new Us(this._repo, this._path);
        }
        get _queryIdentifier() {
          const t = m1(this._queryParams),
            e = Zx(t);
          return "{}" === e ? "default" : e;
        }
        get _queryObject() {
          return m1(this._queryParams);
        }
        isEqual(t) {
          if (!((t = (0, P.m9)(t)) instanceof Ar)) return !1;
          const e = this._repo === t._repo,
            i = rR(this._path, t._path);
          return e && i && this._queryIdentifier === t._queryIdentifier;
        }
        toJSON() {
          return this.toString();
        }
        toString() {
          return (
            this._repo.toString() +
            (function (n) {
              let t = "";
              for (let e = n.pieceNum_; e < n.pieces_.length; e++)
                "" !== n.pieces_[e] &&
                  (t += "/" + encodeURIComponent(String(n.pieces_[e])));
              return t || "/";
            })(this._path)
          );
        }
      }
      function TD(n, t) {
        if (!0 === n._orderByCalled)
          throw new Error(t + ": You can't combine multiple orderBy calls.");
      }
      function td(n) {
        let t = null,
          e = null;
        if (
          (n.hasStart() && (t = n.getIndexStartValue()),
          n.hasEnd() && (e = n.getIndexEndValue()),
          n.getIndex() === Ua)
        ) {
          const i =
              "Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().",
            a =
              "Query: When ordering by key, the argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() must be a string.";
          if (n.hasStart()) {
            if (n.getIndexStartName() !== nc) throw new Error(i);
            if ("string" != typeof t) throw new Error(a);
          }
          if (n.hasEnd()) {
            if (n.getIndexEndName() !== Ba) throw new Error(i);
            if ("string" != typeof e) throw new Error(a);
          }
        } else if (n.getIndex() === on) {
          if ((null != t && !eC(t)) || (null != e && !eC(e)))
            throw new Error(
              "Query: When ordering by priority, the first argument passed to startAt(), startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value (null, a number, or a string)."
            );
        } else if (
          ((0, P.hu)(
            n.getIndex() instanceof cR || n.getIndex() === uR,
            "unknown index type."
          ),
          (null != t && "object" == typeof t) ||
            (null != e && "object" == typeof e))
        )
          throw new Error(
            "Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() cannot be an object."
          );
      }
      function ID(n) {
        if (n.hasStart() && n.hasEnd() && n.hasLimit() && !n.hasAnchoredLimit())
          throw new Error(
            "Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use limitToFirst() or limitToLast() instead."
          );
      }
      class Us extends Ar {
        constructor(t, e) {
          super(t, e, new iD(), !1);
        }
        get parent() {
          const t = XN(this._path);
          return null === t ? null : new Us(this._repo, t);
        }
        get root() {
          let t = this;
          for (; null !== t.parent; ) t = t.parent;
          return t;
        }
      }
      class Of {
        constructor(t, e, i) {
          (this._node = t), (this.ref = e), (this._index = i);
        }
        get priority() {
          return this._node.getPriority().val();
        }
        get key() {
          return this.ref.key;
        }
        get size() {
          return this._node.numChildren();
        }
        child(t) {
          const e = new Wt(t),
            i = Pf(this.ref, t);
          return new Of(this._node.getChild(e), i, on);
        }
        exists() {
          return !this._node.isEmpty();
        }
        exportVal() {
          return this._node.val(!0);
        }
        forEach(t) {
          return (
            !this._node.isLeafNode() &&
            !!this._node.forEachChild(this._index, (i, a) =>
              t(new Of(a, Pf(this.ref, i), on))
            )
          );
        }
        hasChild(t) {
          const e = new Wt(t);
          return !this._node.getChild(e).isEmpty();
        }
        hasChildren() {
          return !this._node.isLeafNode() && !this._node.isEmpty();
        }
        toJSON() {
          return this.exportVal();
        }
        val() {
          return this._node.val();
        }
      }
      function dF(n, t) {
        return (
          (n = (0, P.m9)(n))._checkNotDeleted("ref"),
          void 0 !== t ? Pf(n._root, t) : n._root
        );
      }
      function hF(n, t) {
        (n = (0, P.m9)(n))._checkNotDeleted("refFromURL");
        const e = QR(t, n._repo.repoInfo_.nodeAdmin);
        K1("refFromURL", e);
        const i = e.repoInfo;
        return (
          !n._repo.repoInfo_.isCustomHost() &&
            i.host !== n._repo.repoInfo_.host &&
            Va(
              "refFromURL: Host name does not match the current database: (found " +
                i.host +
                " but expected " +
                n._repo.repoInfo_.host +
                ")"
            ),
          dF(n, e.path.toString())
        );
      }
      function Pf(n, t) {
        return (
          null === Tt((n = (0, P.m9)(n))._path)
            ? ((e = t) && (e = e.replace(/^\/*\.info(\/|$)/, "/")),
              iC("child", "path", e, !1))
            : iC("child", "path", t, !1),
          new Us(n._repo, yn(n._path, t))
        );
        var e;
      }
      function JR(n, t) {
        (n = (0, P.m9)(n)), Vs("set", n._path), Ha("set", t, n._path, !1);
        const e = new P.BH();
        return (
          WR(
            n._repo,
            n._path,
            t,
            null,
            e.wrapCallback(() => {})
          ),
          e.promise
        );
      }
      function aU(n, t) {
        q1("update", t, n._path, !1);
        const e = new P.BH();
        return (
          (function (n, t, e, i) {
            Vg(n, "update", { path: t.toString(), value: e });
            let a = !0;
            const u = rC(n),
              h = {};
            if (
              (Ci(e, (_, b) => {
                (a = !1), (h[_] = $1(yn(t, _), Dn(b), n.serverSyncTree_, u));
              }),
              a)
            )
              bi("update() called with empty data.  Don't do anything."),
                ed(0, i, "ok", void 0);
            else {
              const _ = SD(n),
                b = (function (n, t, e, i) {
                  !(function (n, t, e, i) {
                    (0, P.hu)(
                      i > n.lastWriteId,
                      "Stacking an older merge on top of newer ones"
                    ),
                      n.allWrites.push({
                        path: t,
                        children: e,
                        writeId: i,
                        visible: !0,
                      }),
                      (n.visibleWrites = CR(n.visibleWrites, t, e)),
                      (n.lastWriteId = i);
                  })(n.pendingWriteTree_, t, e, i);
                  const a = an.fromObject(e);
                  return Lg(
                    n,
                    new Ng(
                      {
                        fromUser: !0,
                        fromServer: !1,
                        queryId: null,
                        tagged: !1,
                      },
                      t,
                      a
                    )
                  );
                })(n.serverSyncTree_, t, h, _);
              wD(n.eventQueue_, b),
                n.server_.merge(t.toString(), e, (S, T) => {
                  const A = "ok" === S;
                  A || cr("update at " + t + " failed: " + S);
                  const B = Xu(n.serverSyncTree_, _, !A),
                    j = B.length > 0 ? Bg(n, t) : t;
                  Bs(n.eventQueue_, j, B), ed(0, i, S, T);
                }),
                Ci(e, (S) => {
                  const T = qR(n, yn(t, S));
                  Bg(n, T);
                }),
                Bs(n.eventQueue_, t, []);
            }
          })(
            n._repo,
            n._path,
            t,
            e.wrapCallback(() => {})
          ),
          e.promise
        );
      }
      function lU(n) {
        return (function (n, t) {
          const e = (function (n, t) {
            const e = t._path;
            let i = null;
            n.syncPointTree_.foreachOnPath(e, (S, T) => {
              const A = ur(S, e);
              i = i || Qu(T, A);
            });
            let a = n.syncPointTree_.get(e);
            a
              ? (i = i || Qu(a, Ut()))
              : ((a = new P1()),
                (n.syncPointTree_ = n.syncPointTree_.set(e, a)));
            const u = null != i,
              h = u ? new qu(i, !0, !1) : null;
            return (function (n) {
              return cD(n.viewCache_);
            })(
              N1(
                a,
                t,
                uD(n.pendingWriteTree_, t._path),
                u ? h.getNode() : pt.EMPTY_NODE,
                u
              )
            );
          })(n.serverSyncTree_, t);
          return null != e
            ? Promise.resolve(e)
            : n.server_.get(t).then(
                (i) => {
                  const a = Dn(i).withIndex(t._queryParams.getIndex()),
                    u = Qb(n.serverSyncTree_, t._path, a);
                  return zR(n.eventQueue_, t._path, u), Promise.resolve(a);
                },
                (i) => (
                  Vg(n, "get for query " + (0, P.Pz)(t) + " failed: " + i),
                  Promise.reject(new Error(i))
                )
              );
        })((n = (0, P.m9)(n))._repo, n).then(
          (t) => new Of(t, new Us(n._repo, n._path), n._queryParams.getIndex())
        );
      }
      class AD {
        constructor(t) {
          this.callbackContext = t;
        }
        respondsTo(t) {
          return "value" === t;
        }
        createEvent(t, e) {
          const i = e._queryParams.getIndex();
          return new aF(
            "value",
            this,
            new Of(t.snapshotNode, new Us(e._repo, e._path), i)
          );
        }
        getEventRunner(t) {
          return "cancel" === t.getEventType()
            ? () => this.callbackContext.onCancel(t.error)
            : () => this.callbackContext.onValue(t.snapshot, null);
        }
        createCancelEvent(t, e) {
          return this.callbackContext.hasCancelCallback
            ? new lF(this, t, e)
            : null;
        }
        matches(t) {
          return (
            t instanceof AD &&
            (!t.callbackContext ||
              !this.callbackContext ||
              t.callbackContext.matches(this.callbackContext))
          );
        }
        hasAnyCallback() {
          return null !== this.callbackContext;
        }
      }
      class xD {
        constructor(t, e) {
          (this.eventType = t), (this.callbackContext = e);
        }
        respondsTo(t) {
          let e = "children_added" === t ? "child_added" : t;
          return (
            (e = "children_removed" === e ? "child_removed" : e),
            this.eventType === e
          );
        }
        createCancelEvent(t, e) {
          return this.callbackContext.hasCancelCallback
            ? new lF(this, t, e)
            : null;
        }
        createEvent(t, e) {
          (0, P.hu)(
            null != t.childName,
            "Child events should have a childName."
          );
          const i = Pf(new Us(e._repo, e._path), t.childName),
            a = e._queryParams.getIndex();
          return new aF(t.type, this, new Of(t.snapshotNode, i, a), t.prevName);
        }
        getEventRunner(t) {
          return "cancel" === t.getEventType()
            ? () => this.callbackContext.onCancel(t.error)
            : () => this.callbackContext.onValue(t.snapshot, t.prevName);
        }
        matches(t) {
          return (
            t instanceof xD &&
            this.eventType === t.eventType &&
            (!this.callbackContext ||
              !t.callbackContext ||
              this.callbackContext.matches(t.callbackContext))
          );
        }
        hasAnyCallback() {
          return !!this.callbackContext;
        }
      }
      function sC(n, t, e, i, a) {
        let u;
        if (
          ("object" == typeof i && ((u = void 0), (a = i)),
          "function" == typeof i && (u = i),
          a && a.onlyOnce)
        ) {
          const b = e,
            S = (T, A) => {
              YR(n._repo, n, _), b(T, A);
            };
          (S.userCallback = e.userCallback), (S.context = e.context), (e = S);
        }
        const h = new cF(e, u || void 0),
          _ = "value" === t ? new AD(h) : new xD(t, h);
        return (
          (function (n, t, e) {
            let i;
            (i =
              ".info" === Tt(t._path)
                ? U1(n.infoSyncTree_, t, e)
                : U1(n.serverSyncTree_, t, e)),
              zR(n.eventQueue_, t._path, i);
          })(n._repo, n, _),
          () => YR(n._repo, n, _)
        );
      }
      function XR(n, t, e, i) {
        return sC(n, "value", t, e, i);
      }
      function fF(n, t, e, i) {
        return sC(n, "child_added", t, e, i);
      }
      function pF(n, t, e, i) {
        return sC(n, "child_changed", t, e, i);
      }
      function mF(n, t, e, i) {
        return sC(n, "child_moved", t, e, i);
      }
      function gF(n, t, e, i) {
        return sC(n, "child_removed", t, e, i);
      }
      function _F(n, t, e) {
        let i = null;
        const a = e ? new cF(e) : null;
        "value" === t ? (i = new AD(a)) : t && (i = new xD(t, a)),
          YR(n._repo, n, i);
      }
      class Oo {}
      class yF extends Oo {
        constructor(t, e) {
          super(), (this._value = t), (this._key = e);
        }
        _apply(t) {
          Ha("endAt", this._value, t._path, !0);
          const e = pR(t._queryParams, this._value, this._key);
          if ((ID(e), td(e), t._queryParams.hasEnd()))
            throw new Error(
              "endAt: Starting point was already set (by another call to endAt, endBefore or equalTo)."
            );
          return new Ar(t._repo, t._path, e, t._orderByCalled);
        }
      }
      class uU extends Oo {
        constructor(t, e) {
          super(), (this._value = t), (this._key = e);
        }
        _apply(t) {
          Ha("endBefore", this._value, t._path, !1);
          const e = (function (n, t, e) {
            let i, a;
            return (
              n.index_ === Ua
                ? ("string" == typeof t && (t = h1(t)), (a = pR(n, t, e)))
                : ((i = null == e ? nc : h1(e)), (a = pR(n, t, i))),
              (a.endBeforeSet_ = !0),
              a
            );
          })(t._queryParams, this._value, this._key);
          if ((ID(e), td(e), t._queryParams.hasEnd()))
            throw new Error(
              "endBefore: Starting point was already set (by another call to endAt, endBefore or equalTo)."
            );
          return new Ar(t._repo, t._path, e, t._orderByCalled);
        }
      }
      class vF extends Oo {
        constructor(t, e) {
          super(), (this._value = t), (this._key = e);
        }
        _apply(t) {
          Ha("startAt", this._value, t._path, !0);
          const e = fR(t._queryParams, this._value, this._key);
          if ((ID(e), td(e), t._queryParams.hasStart()))
            throw new Error(
              "startAt: Starting point was already set (by another call to startAt, startBefore or equalTo)."
            );
          return new Ar(t._repo, t._path, e, t._orderByCalled);
        }
      }
      class fU extends Oo {
        constructor(t, e) {
          super(), (this._value = t), (this._key = e);
        }
        _apply(t) {
          Ha("startAfter", this._value, t._path, !1);
          const e = (function (n, t, e) {
            let i;
            if (n.index_ === Ua)
              "string" == typeof t && (t = d1(t)), (i = fR(n, t, e));
            else {
              let a;
              (a = null == e ? Ba : d1(e)), (i = fR(n, t, a));
            }
            return (i.startAfterSet_ = !0), i;
          })(t._queryParams, this._value, this._key);
          if ((ID(e), td(e), t._queryParams.hasStart()))
            throw new Error(
              "startAfter: Starting point was already set (by another call to startAt, startAfter, or equalTo)."
            );
          return new Ar(t._repo, t._path, e, t._orderByCalled);
        }
      }
      class mU extends Oo {
        constructor(t) {
          super(), (this._limit = t);
        }
        _apply(t) {
          if (t._queryParams.hasLimit())
            throw new Error(
              "limitToFirst: Limit was already set (by another call to limitToFirst or limitToLast)."
            );
          return new Ar(
            t._repo,
            t._path,
            (function (n, t) {
              const e = n.copy();
              return (e.limitSet_ = !0), (e.limit_ = t), (e.viewFrom_ = "l"), e;
            })(t._queryParams, this._limit),
            t._orderByCalled
          );
        }
      }
      class _U extends Oo {
        constructor(t) {
          super(), (this._limit = t);
        }
        _apply(t) {
          if (t._queryParams.hasLimit())
            throw new Error(
              "limitToLast: Limit was already set (by another call to limitToFirst or limitToLast)."
            );
          return new Ar(
            t._repo,
            t._path,
            (function (n, t) {
              const e = n.copy();
              return (e.limitSet_ = !0), (e.limit_ = t), (e.viewFrom_ = "r"), e;
            })(t._queryParams, this._limit),
            t._orderByCalled
          );
        }
      }
      class vU extends Oo {
        constructor(t) {
          super(), (this._path = t);
        }
        _apply(t) {
          TD(t, "orderByChild");
          const e = new Wt(this._path);
          if (It(e))
            throw new Error(
              "orderByChild: cannot pass in empty path. Use orderByValue() instead."
            );
          const i = new cR(e),
            a = rD(t._queryParams, i);
          return td(a), new Ar(t._repo, t._path, a, !0);
        }
      }
      class CU extends Oo {
        _apply(t) {
          TD(t, "orderByKey");
          const e = rD(t._queryParams, Ua);
          return td(e), new Ar(t._repo, t._path, e, !0);
        }
      }
      class wU extends Oo {
        _apply(t) {
          TD(t, "orderByPriority");
          const e = rD(t._queryParams, on);
          return td(e), new Ar(t._repo, t._path, e, !0);
        }
      }
      class DU extends Oo {
        _apply(t) {
          TD(t, "orderByValue");
          const e = rD(t._queryParams, uR);
          return td(e), new Ar(t._repo, t._path, e, !0);
        }
      }
      class TU extends Oo {
        constructor(t, e) {
          super(), (this._value = t), (this._key = e);
        }
        _apply(t) {
          if (
            (Ha("equalTo", this._value, t._path, !1), t._queryParams.hasStart())
          )
            throw new Error(
              "equalTo: Starting point was already set (by another call to startAt/startAfter or equalTo)."
            );
          if (t._queryParams.hasEnd())
            throw new Error(
              "equalTo: Ending point was already set (by another call to endAt/endBefore or equalTo)."
            );
          return new yF(this._value, this._key)._apply(
            new vF(this._value, this._key)._apply(t)
          );
        }
      }
      function Po(n, ...t) {
        let e = (0, P.m9)(n);
        for (const i of t) e = i._apply(e);
        return e;
      }
      (function (n) {
        (0, P.hu)(!pD, "__referenceConstructor has already been defined"),
          (pD = n);
      })(Us),
        (function (n) {
          (0, P.hu)(!gD, "__referenceConstructor has already been defined"),
            (gD = n);
        })(Us);
      const ek = {};
      function CF(n, t, e, i, a) {
        let u = i || n.options.databaseURL;
        void 0 === u &&
          (n.options.projectId ||
            Va(
              "Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."
            ),
          bi("Using default host for project ", n.options.projectId),
          (u = `${n.options.projectId}-default-rtdb.firebaseio.com`));
        let b,
          S,
          h = QR(u, a),
          _ = h.repoInfo;
        "undefined" != typeof process &&
          (S = process.env.FIREBASE_DATABASE_EMULATOR_HOST),
          S
            ? ((b = !0),
              (u = `http://${S}?ns=${_.namespace}`),
              (h = QR(u, a)),
              (_ = h.repoInfo))
            : (b = !h.repoInfo.secure);
        const T = a && b ? new Lb(Lb.OWNER) : new _V(n.name, n.options, t);
        K1("Invalid Firebase Database URL", h),
          It(h.path) ||
            Va(
              "Database URL must point to the root of a Firebase Database (not including a child path)."
            );
        const A = (function (n, t, e, i) {
          let a = ek[t.name];
          a || ((a = {}), (ek[t.name] = a));
          let u = a[n.toURLString()];
          return (
            u &&
              Va(
                "Database initialized multiple times. Please make sure the format of the database URL matches with each database() call."
              ),
            (u = new UB(n, false, e, i)),
            (a[n.toURLString()] = u),
            u
          );
        })(_, n, T, new gV(n.name, e));
        return new PU(A, n);
      }
      class PU {
        constructor(t, e) {
          (this._repoInternal = t),
            (this.app = e),
            (this.type = "database"),
            (this._instanceStarted = !1);
        }
        get _repo() {
          return (
            this._instanceStarted ||
              ((function (n, t, e) {
                if (
                  ((n.stats_ = Xx(n.repoInfo_)),
                  n.forceRestClient_ ||
                    (
                      ("object" == typeof window &&
                        window.navigator &&
                        window.navigator.userAgent) ||
                      ""
                    ).search(
                      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i
                    ) >= 0)
                )
                  (n.server_ = new sD(
                    n.repoInfo_,
                    (i, a, u, h) => {
                      eF(n, i, a, u, h);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_
                  )),
                    setTimeout(() => tF(n, !0), 0);
                else {
                  if (null != e) {
                    if ("object" != typeof e)
                      throw new Error(
                        "Only objects are supported for option databaseAuthVariableOverride"
                      );
                    try {
                      (0, P.Pz)(e);
                    } catch (i) {
                      throw new Error("Invalid authOverride provided: " + i);
                    }
                  }
                  (n.persistentConnection_ = new Ag(
                    n.repoInfo_,
                    t,
                    (i, a, u, h) => {
                      eF(n, i, a, u, h);
                    },
                    (i) => {
                      tF(n, i);
                    },
                    (i) => {
                      !(function (n, t) {
                        Ci(t, (e, i) => {
                          $R(n, e, i);
                        });
                      })(n, i);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_,
                    e
                  )),
                    (n.server_ = n.persistentConnection_);
                }
                n.authTokenProvider_.addTokenChangeListener((i) => {
                  n.server_.refreshAuthToken(i);
                }),
                  n.appCheckProvider_.addTokenChangeListener((i) => {
                    n.server_.refreshAppCheckToken(i.token);
                  }),
                  (n.statsReporter_ = (function (n, t) {
                    const e = n.toString();
                    return Jx[e] || (Jx[e] = t()), Jx[e];
                  })(n.repoInfo_, () => new D2(n.stats_, n.server_))),
                  (n.infoData_ = new b2()),
                  (n.infoSyncTree_ = new B1({
                    startListening: (i, a, u, h) => {
                      let _ = [];
                      const b = n.infoData_.getNode(i._path);
                      return (
                        b.isEmpty() ||
                          ((_ = Qb(n.infoSyncTree_, i._path, b)),
                          setTimeout(() => {
                            h("ok");
                          }, 0)),
                        _
                      );
                    },
                    stopListening: () => {},
                  })),
                  $R(n, "connected", !1),
                  (n.serverSyncTree_ = new B1({
                    startListening: (i, a, u, h) => (
                      n.server_.listen(i, u, a, (_, b) => {
                        const S = h(_, b);
                        Bs(n.eventQueue_, i._path, S);
                      }),
                      []
                    ),
                    stopListening: (i, a) => {
                      n.server_.unlisten(i, a);
                    },
                  }));
              })(
                this._repoInternal,
                this.app.options.appId,
                this.app.options.databaseAuthVariableOverride
              ),
              (this._instanceStarted = !0)),
            this._repoInternal
          );
        }
        get _root() {
          return (
            this._rootInternal ||
              (this._rootInternal = new Us(this._repo, Ut())),
            this._rootInternal
          );
        }
        _delete() {
          return (
            null !== this._rootInternal &&
              ((function (n, t) {
                const e = ek[t];
                (!e || e[n.key] !== n) &&
                  Va(`Database ${t}(${n.repoInfo_}) has already been deleted.`),
                  iF(n),
                  delete e[n.key];
              })(this._repo, this.app.name),
              (this._repoInternal = null),
              (this._rootInternal = null)),
            Promise.resolve()
          );
        }
        _checkNotDeleted(t) {
          null === this._rootInternal &&
            Va("Cannot call " + t + " on a deleted database.");
        }
      }
      function VU(n, t) {
        wN(n, t);
      }
      class GU {
        constructor(t, e) {
          (this.committed = t), (this.snapshot = e);
        }
        toJSON() {
          return {
            committed: this.committed,
            snapshot: this.snapshot.toJSON(),
          };
        }
      }
      (Ag.prototype.simpleListen = function (n, t) {
        this.sendRequest("q", { p: n }, t);
      }),
        (Ag.prototype.echo = function (n, t) {
          this.sendRequest("echo", { d: n }, t);
        }),
        yN(Gx.SDK_VERSION),
        (0, Gx._registerComponent)(
          new kb.wA(
            "database",
            (t, { instanceIdentifier: e }) =>
              CF(
                t.getProvider("app").getImmediate(),
                t.getProvider("auth-internal"),
                t.getProvider("app-check-internal"),
                e
              ),
            "PUBLIC"
          ).setMultipleInstances(!0)
        ),
        (0, Gx.registerVersion)("@firebase/database", "0.12.0", void 0);
      const YU = new zx.Yd("@firebase/database-compat"),
        EF = function (n) {
          YU.warn("FIREBASE WARNING: " + n);
        };
      class KU {
        constructor(t) {
          this._delegate = t;
        }
        cancel(t) {
          (0, P.Dv)("OnDisconnect.cancel", 0, 1, arguments.length),
            (0, P.Wj)("OnDisconnect.cancel", "onComplete", t, !0);
          const e = this._delegate.cancel();
          return (
            t &&
              e.then(
                () => t(null),
                (i) => t(i)
              ),
            e
          );
        }
        remove(t) {
          (0, P.Dv)("OnDisconnect.remove", 0, 1, arguments.length),
            (0, P.Wj)("OnDisconnect.remove", "onComplete", t, !0);
          const e = this._delegate.remove();
          return (
            t &&
              e.then(
                () => t(null),
                (i) => t(i)
              ),
            e
          );
        }
        set(t, e) {
          (0, P.Dv)("OnDisconnect.set", 1, 2, arguments.length),
            (0, P.Wj)("OnDisconnect.set", "onComplete", e, !0);
          const i = this._delegate.set(t);
          return (
            e &&
              i.then(
                () => e(null),
                (a) => e(a)
              ),
            i
          );
        }
        setWithPriority(t, e, i) {
          (0, P.Dv)("OnDisconnect.setWithPriority", 2, 3, arguments.length),
            (0, P.Wj)("OnDisconnect.setWithPriority", "onComplete", i, !0);
          const a = this._delegate.setWithPriority(t, e);
          return (
            i &&
              a.then(
                () => i(null),
                (u) => i(u)
              ),
            a
          );
        }
        update(t, e) {
          if (
            ((0, P.Dv)("OnDisconnect.update", 1, 2, arguments.length),
            Array.isArray(t))
          ) {
            const a = {};
            for (let u = 0; u < t.length; ++u) a["" + u] = t[u];
            (t = a),
              EF(
                "Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children."
              );
          }
          (0, P.Wj)("OnDisconnect.update", "onComplete", e, !0);
          const i = this._delegate.update(t);
          return (
            e &&
              i.then(
                () => e(null),
                (a) => e(a)
              ),
            i
          );
        }
      }
      class QU {
        constructor(t, e) {
          (this.committed = t), (this.snapshot = e);
        }
        toJSON() {
          return (
            (0, P.Dv)("TransactionResult.toJSON", 0, 1, arguments.length),
            { committed: this.committed, snapshot: this.snapshot.toJSON() }
          );
        }
      }
      class nd {
        constructor(t, e) {
          (this._database = t), (this._delegate = e);
        }
        val() {
          return (
            (0, P.Dv)("DataSnapshot.val", 0, 0, arguments.length),
            this._delegate.val()
          );
        }
        exportVal() {
          return (
            (0, P.Dv)("DataSnapshot.exportVal", 0, 0, arguments.length),
            this._delegate.exportVal()
          );
        }
        toJSON() {
          return (
            (0, P.Dv)("DataSnapshot.toJSON", 0, 1, arguments.length),
            this._delegate.toJSON()
          );
        }
        exists() {
          return (
            (0, P.Dv)("DataSnapshot.exists", 0, 0, arguments.length),
            this._delegate.exists()
          );
        }
        child(t) {
          return (
            (0, P.Dv)("DataSnapshot.child", 0, 1, arguments.length),
            (t = String(t)),
            iC("DataSnapshot.child", "path", t, !1),
            new nd(this._database, this._delegate.child(t))
          );
        }
        hasChild(t) {
          return (
            (0, P.Dv)("DataSnapshot.hasChild", 1, 1, arguments.length),
            iC("DataSnapshot.hasChild", "path", t, !1),
            this._delegate.hasChild(t)
          );
        }
        getPriority() {
          return (
            (0, P.Dv)("DataSnapshot.getPriority", 0, 0, arguments.length),
            this._delegate.priority
          );
        }
        forEach(t) {
          return (
            (0, P.Dv)("DataSnapshot.forEach", 1, 1, arguments.length),
            (0, P.Wj)("DataSnapshot.forEach", "action", t, !1),
            this._delegate.forEach((e) => t(new nd(this._database, e)))
          );
        }
        hasChildren() {
          return (
            (0, P.Dv)("DataSnapshot.hasChildren", 0, 0, arguments.length),
            this._delegate.hasChildren()
          );
        }
        get key() {
          return this._delegate.key;
        }
        numChildren() {
          return (
            (0, P.Dv)("DataSnapshot.numChildren", 0, 0, arguments.length),
            this._delegate.size
          );
        }
        getRef() {
          return (
            (0, P.Dv)("DataSnapshot.ref", 0, 0, arguments.length),
            new rs(this._database, this._delegate.ref)
          );
        }
        get ref() {
          return this.getRef();
        }
      }
      class Ni {
        constructor(t, e) {
          (this.database = t), (this._delegate = e);
        }
        on(t, e, i, a) {
          var u;
          (0, P.Dv)("Query.on", 2, 4, arguments.length),
            (0, P.Wj)("Query.on", "callback", e, !1);
          const h = Ni.getCancelAndContextArgs_("Query.on", i, a),
            _ = (S, T) => {
              e.call(h.context, new nd(this.database, S), T);
            };
          (_.userCallback = e), (_.context = h.context);
          const b =
            null === (u = h.cancel) || void 0 === u
              ? void 0
              : u.bind(h.context);
          switch (t) {
            case "value":
              return XR(this._delegate, _, b), e;
            case "child_added":
              return fF(this._delegate, _, b), e;
            case "child_removed":
              return gF(this._delegate, _, b), e;
            case "child_changed":
              return pF(this._delegate, _, b), e;
            case "child_moved":
              return mF(this._delegate, _, b), e;
            default:
              throw new Error(
                (0, P.gK)("Query.on", "eventType") +
                  'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
              );
          }
        }
        off(t, e, i) {
          if (
            ((0, P.Dv)("Query.off", 0, 3, arguments.length),
            (function (n, t, e) {
              if (void 0 !== t)
                switch (t) {
                  case "value":
                  case "child_added":
                  case "child_removed":
                  case "child_changed":
                  case "child_moved":
                    break;
                  default:
                    throw new Error(
                      (0, P.gK)("Query.off", "eventType") +
                        'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
                    );
                }
            })(0, t),
            (0, P.Wj)("Query.off", "callback", e, !0),
            (0, P.lb)("Query.off", "context", i, !0),
            e)
          ) {
            const a = () => {};
            (a.userCallback = e), (a.context = i), _F(this._delegate, t, a);
          } else _F(this._delegate, t);
        }
        get() {
          return lU(this._delegate).then((t) => new nd(this.database, t));
        }
        once(t, e, i, a) {
          (0, P.Dv)("Query.once", 1, 4, arguments.length),
            (0, P.Wj)("Query.once", "callback", e, !0);
          const u = Ni.getCancelAndContextArgs_("Query.once", i, a),
            h = new P.BH(),
            _ = (S, T) => {
              const A = new nd(this.database, S);
              e && e.call(u.context, A, T), h.resolve(A);
            };
          (_.userCallback = e), (_.context = u.context);
          const b = (S) => {
            u.cancel && u.cancel.call(u.context, S), h.reject(S);
          };
          switch (t) {
            case "value":
              XR(this._delegate, _, b, { onlyOnce: !0 });
              break;
            case "child_added":
              fF(this._delegate, _, b, { onlyOnce: !0 });
              break;
            case "child_removed":
              gF(this._delegate, _, b, { onlyOnce: !0 });
              break;
            case "child_changed":
              pF(this._delegate, _, b, { onlyOnce: !0 });
              break;
            case "child_moved":
              mF(this._delegate, _, b, { onlyOnce: !0 });
              break;
            default:
              throw new Error(
                (0, P.gK)("Query.once", "eventType") +
                  'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
              );
          }
          return h.promise;
        }
        limitToFirst(t) {
          return (
            (0, P.Dv)("Query.limitToFirst", 1, 1, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n) {
                  if ("number" != typeof n || Math.floor(n) !== n || n <= 0)
                    throw new Error(
                      "limitToFirst: First argument must be a positive integer."
                    );
                  return new mU(n);
                })(t)
              )
            )
          );
        }
        limitToLast(t) {
          return (
            (0, P.Dv)("Query.limitToLast", 1, 1, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n) {
                  if ("number" != typeof n || Math.floor(n) !== n || n <= 0)
                    throw new Error(
                      "limitToLast: First argument must be a positive integer."
                    );
                  return new _U(n);
                })(t)
              )
            )
          );
        }
        orderByChild(t) {
          return (
            (0, P.Dv)("Query.orderByChild", 1, 1, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n) {
                  if ("$key" === n)
                    throw new Error(
                      'orderByChild: "$key" is invalid.  Use orderByKey() instead.'
                    );
                  if ("$priority" === n)
                    throw new Error(
                      'orderByChild: "$priority" is invalid.  Use orderByPriority() instead.'
                    );
                  if ("$value" === n)
                    throw new Error(
                      'orderByChild: "$value" is invalid.  Use orderByValue() instead.'
                    );
                  return iC("orderByChild", "path", n, !1), new vU(n);
                })(t)
              )
            )
          );
        }
        orderByKey() {
          return (
            (0, P.Dv)("Query.orderByKey", 0, 0, arguments.length),
            new Ni(this.database, Po(this._delegate, new CU()))
          );
        }
        orderByPriority() {
          return (
            (0, P.Dv)("Query.orderByPriority", 0, 0, arguments.length),
            new Ni(this.database, Po(this._delegate, new wU()))
          );
        }
        orderByValue() {
          return (
            (0, P.Dv)("Query.orderByValue", 0, 0, arguments.length),
            new Ni(this.database, Po(this._delegate, new DU()))
          );
        }
        startAt(t = null, e) {
          return (
            (0, P.Dv)("Query.startAt", 0, 2, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n = null, t) {
                  return nC("startAt", "key", t, !0), new vF(n, t);
                })(t, e)
              )
            )
          );
        }
        startAfter(t = null, e) {
          return (
            (0, P.Dv)("Query.startAfter", 0, 2, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n, t) {
                  return nC("startAfter", "key", t, !0), new fU(n, t);
                })(t, e)
              )
            )
          );
        }
        endAt(t = null, e) {
          return (
            (0, P.Dv)("Query.endAt", 0, 2, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n, t) {
                  return nC("endAt", "key", t, !0), new yF(n, t);
                })(t, e)
              )
            )
          );
        }
        endBefore(t = null, e) {
          return (
            (0, P.Dv)("Query.endBefore", 0, 2, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n, t) {
                  return nC("endBefore", "key", t, !0), new uU(n, t);
                })(t, e)
              )
            )
          );
        }
        equalTo(t, e) {
          return (
            (0, P.Dv)("Query.equalTo", 1, 2, arguments.length),
            new Ni(
              this.database,
              Po(
                this._delegate,
                (function (n, t) {
                  return nC("equalTo", "key", t, !0), new TU(n, t);
                })(t, e)
              )
            )
          );
        }
        toString() {
          return (
            (0, P.Dv)("Query.toString", 0, 0, arguments.length),
            this._delegate.toString()
          );
        }
        toJSON() {
          return (
            (0, P.Dv)("Query.toJSON", 0, 1, arguments.length),
            this._delegate.toJSON()
          );
        }
        isEqual(t) {
          if (
            ((0, P.Dv)("Query.isEqual", 1, 1, arguments.length),
            !(t instanceof Ni))
          )
            throw new Error(
              "Query.isEqual failed: First argument must be an instance of firebase.database.Query."
            );
          return this._delegate.isEqual(t._delegate);
        }
        static getCancelAndContextArgs_(t, e, i) {
          const a = { cancel: void 0, context: void 0 };
          if (e && i)
            (a.cancel = e),
              (0, P.Wj)(t, "cancel", a.cancel, !0),
              (a.context = i),
              (0, P.lb)(t, "context", a.context, !0);
          else if (e)
            if ("object" == typeof e && null !== e) a.context = e;
            else {
              if ("function" != typeof e)
                throw new Error(
                  (0, P.gK)(t, "cancelOrContext") +
                    " must either be a cancel callback or a context object."
                );
              a.cancel = e;
            }
          return a;
        }
        get ref() {
          return new rs(
            this.database,
            new Us(this._delegate._repo, this._delegate._path)
          );
        }
      }
      class rs extends Ni {
        constructor(t, e) {
          super(t, new Ar(e._repo, e._path, new iD(), !1)),
            (this.database = t),
            (this._delegate = e);
        }
        getKey() {
          return (
            (0, P.Dv)("Reference.key", 0, 0, arguments.length),
            this._delegate.key
          );
        }
        child(t) {
          return (
            (0, P.Dv)("Reference.child", 1, 1, arguments.length),
            "number" == typeof t && (t = String(t)),
            new rs(this.database, Pf(this._delegate, t))
          );
        }
        getParent() {
          (0, P.Dv)("Reference.parent", 0, 0, arguments.length);
          const t = this._delegate.parent;
          return t ? new rs(this.database, t) : null;
        }
        getRoot() {
          return (
            (0, P.Dv)("Reference.root", 0, 0, arguments.length),
            new rs(this.database, this._delegate.root)
          );
        }
        set(t, e) {
          (0, P.Dv)("Reference.set", 1, 2, arguments.length),
            (0, P.Wj)("Reference.set", "onComplete", e, !0);
          const i = JR(this._delegate, t);
          return (
            e &&
              i.then(
                () => e(null),
                (a) => e(a)
              ),
            i
          );
        }
        update(t, e) {
          if (
            ((0, P.Dv)("Reference.update", 1, 2, arguments.length),
            Array.isArray(t))
          ) {
            const a = {};
            for (let u = 0; u < t.length; ++u) a["" + u] = t[u];
            (t = a),
              EF(
                "Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children."
              );
          }
          Vs("Reference.update", this._delegate._path),
            (0, P.Wj)("Reference.update", "onComplete", e, !0);
          const i = aU(this._delegate, t);
          return (
            e &&
              i.then(
                () => e(null),
                (a) => e(a)
              ),
            i
          );
        }
        setWithPriority(t, e, i) {
          (0, P.Dv)("Reference.setWithPriority", 2, 3, arguments.length),
            (0, P.Wj)("Reference.setWithPriority", "onComplete", i, !0);
          const a = (function (n, t, e) {
            if (
              (Vs("setWithPriority", n._path),
              Ha("setWithPriority", t, n._path, !1),
              GR("setWithPriority", e, !1),
              ".length" === n.key || ".keys" === n.key)
            )
              throw (
                "setWithPriority failed: " + n.key + " is a read-only object."
              );
            const i = new P.BH();
            return (
              WR(
                n._repo,
                n._path,
                t,
                e,
                i.wrapCallback(() => {})
              ),
              i.promise
            );
          })(this._delegate, t, e);
          return (
            i &&
              a.then(
                () => i(null),
                (u) => i(u)
              ),
            a
          );
        }
        remove(t) {
          (0, P.Dv)("Reference.remove", 0, 1, arguments.length),
            (0, P.Wj)("Reference.remove", "onComplete", t, !0);
          const e = (function (n) {
            return Vs("remove", n._path), JR(n, null);
          })(this._delegate);
          return (
            t &&
              e.then(
                () => t(null),
                (i) => t(i)
              ),
            e
          );
        }
        transaction(t, e, i) {
          (0, P.Dv)("Reference.transaction", 1, 3, arguments.length),
            (0, P.Wj)("Reference.transaction", "transactionUpdate", t, !1),
            (0, P.Wj)("Reference.transaction", "onComplete", e, !0),
            (function (n, t, e, i) {
              if (void 0 !== e && "boolean" != typeof e)
                throw new Error(
                  (0, P.gK)("Reference.transaction", "applyLocally") +
                    "must be a boolean."
                );
            })(0, 0, i);
          const a = (function (n, t, e) {
            var i;
            if (
              ((n = (0, P.m9)(n)),
              Vs("Reference.transaction", n._path),
              ".length" === n.key || ".keys" === n.key)
            )
              throw (
                "Reference.transaction failed: " +
                n.key +
                " is a read-only object."
              );
            const a =
                null === (i = null == e ? void 0 : e.applyLocally) ||
                void 0 === i ||
                i,
              u = new P.BH(),
              _ = XR(n, () => {});
            return (
              (function (n, t, e, i, a, u) {
                Vg(n, "transaction on " + t);
                const h = {
                    path: t,
                    update: e,
                    onComplete: i,
                    status: null,
                    order: bN(),
                    applyLocally: u,
                    retryCount: 0,
                    unwatcher: a,
                    abortReason: null,
                    currentWriteId: null,
                    currentInputSnapshot: null,
                    currentOutputSnapshotRaw: null,
                    currentOutputSnapshotResolved: null,
                  },
                  _ = ZR(n, t, void 0);
                h.currentInputSnapshot = _;
                const b = h.update(_.val());
                if (void 0 === b)
                  h.unwatcher(),
                    (h.currentOutputSnapshotRaw = null),
                    (h.currentOutputSnapshotResolved = null),
                    h.onComplete &&
                      h.onComplete(null, !1, h.currentInputSnapshot);
                else {
                  tC("transaction failed: Data returned ", b, h.path),
                    (h.status = 0);
                  const S = bD(n.transactionQueueTree_, t),
                    T = kf(S) || [];
                  let A;
                  T.push(h),
                    UR(S, T),
                    "object" == typeof b &&
                    null !== b &&
                    (0, P.r3)(b, ".priority")
                      ? ((A = (0, P.DV)(b, ".priority")),
                        (0, P.hu)(
                          eC(A),
                          "Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null."
                        ))
                      : (A = (_D(n.serverSyncTree_, t) || pt.EMPTY_NODE)
                          .getPriority()
                          .val());
                  const B = rC(n),
                    j = Dn(b, A),
                    X = LR(j, _, B);
                  (h.currentOutputSnapshotRaw = j),
                    (h.currentOutputSnapshotResolved = X),
                    (h.currentWriteId = SD(n));
                  const ve = xR(
                    n.serverSyncTree_,
                    t,
                    X,
                    h.currentWriteId,
                    h.applyLocally
                  );
                  Bs(n.eventQueue_, t, ve), DD(n, n.transactionQueueTree_);
                }
              })(
                n._repo,
                n._path,
                t,
                (b, S, T) => {
                  let A = null;
                  b
                    ? u.reject(b)
                    : ((A = new Of(T, new Us(n._repo, n._path), on)),
                      u.resolve(new GU(S, A)));
                },
                _,
                a
              ),
              u.promise
            );
          })(this._delegate, t, { applyLocally: i }).then(
            (u) => new QU(u.committed, new nd(this.database, u.snapshot))
          );
          return (
            e &&
              a.then(
                (u) => e(null, u.committed, u.snapshot),
                (u) => e(u, !1, null)
              ),
            a
          );
        }
        setPriority(t, e) {
          (0, P.Dv)("Reference.setPriority", 1, 2, arguments.length),
            (0, P.Wj)("Reference.setPriority", "onComplete", e, !0);
          const i = (function (n, t) {
            (n = (0, P.m9)(n)),
              Vs("setPriority", n._path),
              GR("setPriority", t, !1);
            const e = new P.BH();
            return (
              WR(
                n._repo,
                yn(n._path, ".priority"),
                t,
                null,
                e.wrapCallback(() => {})
              ),
              e.promise
            );
          })(this._delegate, t);
          return (
            e &&
              i.then(
                () => e(null),
                (a) => e(a)
              ),
            i
          );
        }
        push(t, e) {
          (0, P.Dv)("Reference.push", 0, 2, arguments.length),
            (0, P.Wj)("Reference.push", "onComplete", e, !0);
          const i = (function (n, t) {
              (n = (0, P.m9)(n)),
                Vs("push", n._path),
                Ha("push", t, n._path, !0);
              const e = X1(n._repo),
                i = h2(e),
                a = Pf(n, i),
                u = Pf(n, i);
              let h;
              return (
                (h = null != t ? JR(u, t).then(() => u) : Promise.resolve(u)),
                (a.then = h.then.bind(h)),
                (a.catch = h.then.bind(h, void 0)),
                a
              );
            })(this._delegate, t),
            a = i.then((h) => new rs(this.database, h));
          e &&
            a.then(
              () => e(null),
              (h) => e(h)
            );
          const u = new rs(this.database, i);
          return (
            (u.then = a.then.bind(a)), (u.catch = a.catch.bind(a, void 0)), u
          );
        }
        onDisconnect() {
          return (
            Vs("Reference.onDisconnect", this._delegate._path),
            new KU(new uF(this._delegate._repo, this._delegate._path))
          );
        }
        get key() {
          return this.getKey();
        }
        get parent() {
          return this.getParent();
        }
        get root() {
          return this.getRoot();
        }
      }
      class oC {
        constructor(t, e) {
          (this._delegate = t),
            (this.app = e),
            (this.INTERNAL = { delete: () => this._delegate._delete() });
        }
        useEmulator(t, e, i = {}) {
          !(function (n, t, e, i = {}) {
            (n = (0, P.m9)(n))._checkNotDeleted("useEmulator"),
              n._instanceStarted &&
                Va(
                  "Cannot call useEmulator() after instance has already been initialized."
                );
            const a = n._repoInternal;
            let u;
            if (a.repoInfo_.nodeAdmin)
              i.mockUserToken &&
                Va(
                  'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the "firebase" package instead of "firebase-admin".'
                ),
                (u = new Lb(Lb.OWNER));
            else if (i.mockUserToken) {
              const h =
                "string" == typeof i.mockUserToken
                  ? i.mockUserToken
                  : (0, P.Sg)(i.mockUserToken, n.app.options.projectId);
              u = new Lb(h);
            }
            !(function (n, t, e, i) {
              (n.repoInfo_ = new NN(
                `${t}:${e}`,
                !1,
                n.repoInfo_.namespace,
                n.repoInfo_.webSocketOnly,
                n.repoInfo_.nodeAdmin,
                n.repoInfo_.persistenceKey,
                n.repoInfo_.includeNamespaceInQueryParams
              )),
                i && (n.authTokenProvider_ = i);
            })(a, t, e, u);
          })(this._delegate, t, e, i);
        }
        ref(t) {
          if (
            ((0, P.Dv)("database.ref", 0, 1, arguments.length), t instanceof rs)
          ) {
            const e = hF(this._delegate, t.toString());
            return new rs(this, e);
          }
          {
            const e = dF(this._delegate, t);
            return new rs(this, e);
          }
        }
        refFromURL(t) {
          (0, P.Dv)("database.refFromURL", 1, 1, arguments.length);
          const i = hF(this._delegate, t);
          return new rs(this, i);
        }
        goOffline() {
          return (
            (0, P.Dv)("database.goOffline", 0, 0, arguments.length),
            (function (n) {
              (n = (0, P.m9)(n))._checkNotDeleted("goOffline"), iF(n._repo);
            })(this._delegate)
          );
        }
        goOnline() {
          return (
            (0, P.Dv)("database.goOnline", 0, 0, arguments.length),
            (function (n) {
              (n = (0, P.m9)(n))._checkNotDeleted("goOnline"),
                (function (n) {
                  n.persistentConnection_ && n.persistentConnection_.resume(J1);
                })(n._repo);
            })(this._delegate)
          );
        }
      }
      oC.ServerValue = {
        TIMESTAMP: { ".sv": "timestamp" },
        increment: (n) =>
          (function (n) {
            return { ".sv": { increment: n } };
          })(n),
      };
      var XU = Object.freeze({
        __proto__: null,
        initStandalone: function ({
          app: n,
          url: t,
          version: e,
          customAuthImpl: i,
          namespace: a,
          nodeAdmin: u = !1,
        }) {
          yN(e);
          const h = new kb.zt(
            "auth-internal",
            new kb.H0("database-standalone")
          );
          return (
            h.setComponent(new kb.wA("auth-internal", () => i, "PRIVATE")),
            { instance: new oC(CF(n, h, void 0, t, u), n), namespace: a }
          );
        },
      });
      const e3 = oC.ServerValue;
      function wF(n, t) {
        return t ? Xt(() => n, t) : Xt(() => n);
      }
      !(function (n) {
        n.INTERNAL.registerComponent(
          new kb.wA(
            "database-compat",
            (t, { instanceIdentifier: e }) => {
              const i = t.getProvider("app-compat").getImmediate(),
                a = t.getProvider("database").getImmediate({ identifier: e });
              return new oC(a, i);
            },
            "PUBLIC"
          )
            .setServiceProps({
              Reference: rs,
              Query: Ni,
              Database: oC,
              DataSnapshot: nd,
              enableLogging: VU,
              INTERNAL: XU,
              ServerValue: e3,
            })
            .setMultipleInstances(!0)
        ),
          n.registerVersion("@firebase/database-compat", "0.1.0");
      })(iV.Z);
      var tk = k(9673),
        n3 = k(7841);
      const SF = new o.OlP("angularfire2.auth.use-emulator"),
        DF = new o.OlP("angularfire2.auth.settings"),
        MF = new o.OlP("angularfire2.auth.tenant-id"),
        TF = new o.OlP("angularfire2.auth.langugage-code"),
        IF = new o.OlP("angularfire2.auth.use-device-language"),
        AF = new o.OlP("angularfire.auth.persistence"),
        xF = (n, t, e, i, a, u, h, _) =>
          (0, xo.cc)(
            `${n.name}.auth`,
            "AngularFireAuth",
            n.name,
            () => {
              const b = t.runOutsideAngular(() => n.auth());
              if (
                (e && b.useEmulator(...e),
                i && (b.tenantId = i),
                (b.languageCode = a),
                u && b.useDeviceLanguage(),
                h)
              )
                for (const [S, T] of Object.entries(h)) b.settings[S] = T;
              return _ && b.setPersistence(_), b;
            },
            [e, i, a, u, h, _]
          );
      let nk = (() => {
        class n {
          constructor(e, i, a, u, h, _, b, S, T, A, B) {
            const j = new xe.xQ(),
              X = (0, Oe.of)(void 0).pipe(
                (0, $h.QV)(h.outsideAngular),
                Xt(() =>
                  u.runOutsideAngular(() =>
                    Promise.resolve().then(k.bind(k, 9083))
                  )
                ),
                (0, et.U)(() => (0, ka.on)(e, u, i)),
                (0, et.U)((ve) => xF(ve, u, _, S, T, A, b, B)),
                Om({ bufferSize: 1, refCount: !1 })
              );
            if (
              (function (n) {
                return "server" === n;
              })(a)
            )
              this.authState =
                this.user =
                this.idToken =
                this.idTokenResult =
                this.credential =
                  (0, Oe.of)(null);
            else {
              X.pipe(Pa()).subscribe();
              const De = X.pipe(
                  Xt((Fe) =>
                    Fe.getRedirectResult().then(
                      (mt) => mt,
                      () => null
                    )
                  ),
                  xo.iC,
                  Om({ bufferSize: 1, refCount: !1 })
                ),
                Ne = X.pipe(
                  Xt(
                    (Fe) =>
                      new Sn.y((mt) => ({
                        unsubscribe: u.runOutsideAngular(() =>
                          Fe.onAuthStateChanged(
                            (Fi) => mt.next(Fi),
                            (Fi) => mt.error(Fi),
                            () => mt.complete()
                          )
                        ),
                      }))
                  )
                ),
                qe = X.pipe(
                  Xt(
                    (Fe) =>
                      new Sn.y((mt) => ({
                        unsubscribe: u.runOutsideAngular(() =>
                          Fe.onIdTokenChanged(
                            (Fi) => mt.next(Fi),
                            (Fi) => mt.error(Fi),
                            () => mt.complete()
                          )
                        ),
                      }))
                  )
                );
              (this.authState = De.pipe(
                wF(Ne),
                (0, tk.R)(h.outsideAngular),
                (0, $h.QV)(h.insideAngular)
              )),
                (this.user = De.pipe(
                  wF(qe),
                  (0, tk.R)(h.outsideAngular),
                  (0, $h.QV)(h.insideAngular)
                )),
                (this.idToken = this.user.pipe(
                  Xt((Fe) =>
                    Fe ? (0, Yn.D)(Fe.getIdToken()) : (0, Oe.of)(null)
                  )
                )),
                (this.idTokenResult = this.user.pipe(
                  Xt((Fe) =>
                    Fe ? (0, Yn.D)(Fe.getIdTokenResult()) : (0, Oe.of)(null)
                  )
                )),
                (this.credential = (0, yi.T)(
                  De,
                  j,
                  this.authState.pipe(En((Fe) => !Fe))
                ).pipe(
                  (0, et.U)((Fe) =>
                    (null == Fe ? void 0 : Fe.user) ? Fe : null
                  ),
                  (0, tk.R)(h.outsideAngular),
                  (0, $h.QV)(h.insideAngular)
                ));
            }
            return (0, ka.pX)(this, X, u, {
              spy: {
                apply: (ve, De, Ne) => {
                  (ve.startsWith("signIn") || ve.startsWith("createUser")) &&
                    Ne.then((qe) => j.next(qe));
                },
              },
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(ka.Dh),
              o.LFG(ka.xv, 8),
              o.LFG(o.Lbi),
              o.LFG(o.R0b),
              o.LFG(xo.HU),
              o.LFG(SF, 8),
              o.LFG(DF, 8),
              o.LFG(MF, 8),
              o.LFG(TF, 8),
              o.LFG(IF, 8),
              o.LFG(AF, 8)
            );
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac, providedIn: "any" })),
          n
        );
      })();
      function RF(n) {
        return null == n;
      }
      function kF(n) {
        return "function" == typeof n.set;
      }
      function OF(n, t) {
        return kF(t) ? t : n.ref(t);
      }
      function PF(n, t) {
        if (
          (function (n) {
            return "string" == typeof n;
          })(n)
        )
          return t.stringCase();
        if (kF(n)) return t.firebaseCase();
        if (
          (function (n) {
            return "function" == typeof n.exportVal;
          })(n)
        )
          return t.snapshotCase();
        throw new Error(
          "Expects a string, snapshot, or reference. Got: " + typeof n
        );
      }
      function aC(n, t, e = "on", i = fh.z) {
        return new Sn.y((a) => {
          let u = null;
          return (
            (u = n[e](
              t,
              (h, _) => {
                i.schedule(() => {
                  a.next({ snapshot: h, prevKey: _ });
                }),
                  "once" === e && i.schedule(() => a.complete());
              },
              (h) => {
                i.schedule(() => a.error(h));
              }
            )),
            "on" === e
              ? {
                  unsubscribe() {
                    null != u && n.off(t, u);
                  },
                }
              : { unsubscribe() {} }
          );
        }).pipe(
          (0, et.U)((a) => {
            const { snapshot: u, prevKey: h } = a;
            let _ = null;
            return (
              u.exists() && (_ = u.key),
              { type: t, payload: u, prevKey: h, key: _ }
            );
          }),
          (0, EE.B)()
        );
      }
      function NF(n, t) {
        const e = n.length;
        for (let i = 0; i < e; i++) if (n[i].payload.key === t) return i;
        return -1;
      }
      function l3(n, t) {
        const { payload: e, prevKey: i, key: a } = t,
          u = NF(n, a),
          h = (function (n, t) {
            if (RF(t)) return 0;
            {
              const e = NF(n, t);
              return -1 === e ? n.length : e + 1;
            }
          })(n, i);
        switch (t.type) {
          case "value":
            if (t.payload && t.payload.exists()) {
              let _ = null;
              t.payload.forEach((b) => {
                const S = { payload: b, type: "value", prevKey: _, key: b.key };
                return (_ = b.key), (n = [...n, S]), !1;
              });
            }
            return n;
          case "child_added":
            if (u > -1) {
              const _ = n[u - 1];
              ((_ && _.key) || null) !== i &&
                (n = n.filter((b) => b.payload.key !== e.key)).splice(h, 0, t);
            } else {
              if (null == i) return [t, ...n];
              (n = n.slice()).splice(h, 0, t);
            }
            return n;
          case "child_removed":
            return n.filter((_) => _.payload.key !== e.key);
          case "child_changed":
            return n.map((_) => (_.payload.key === a ? t : _));
          case "child_moved":
            if (u > -1) {
              const _ = n.splice(u, 1)[0];
              return (n = n.slice()).splice(h, 0, _), n;
            }
            return n;
          default:
            return n;
        }
      }
      function FF(n) {
        return (
          (RF(n) || 0 === n.length) &&
            (n = [
              "child_added",
              "child_removed",
              "child_changed",
              "child_moved",
            ]),
          n
        );
      }
      function LF(n, t, e) {
        return (function (n, t, e) {
          return aC(n, "value", "once", e).pipe(
            Xt((i) => {
              const a = [(0, Oe.of)(i)];
              return (
                t.forEach((u) => a.push(aC(n, u, "on", e))),
                (0, yi.T)(...a).pipe(ag(l3, []))
              );
            }),
            Ss()
          );
        })(n, (t = FF(t)), e);
      }
      function VF(n, t, e) {
        const i = (t = FF(t)).map((a) => aC(n, a, "on", e));
        return (0, yi.T)(...i);
      }
      function BF(n, t) {
        return function (i, a) {
          return PF(i, {
            stringCase: () => n.child(i)[t](a),
            firebaseCase: () => i[t](a),
            snapshotCase: () => i.ref[t](a),
          });
        };
      }
      function h3(n) {
        return function (e) {
          return e
            ? PF(e, {
                stringCase: () => n.child(e).remove(),
                firebaseCase: () => e.remove(),
                snapshotCase: () => e.ref.remove(),
              })
            : n.remove();
        };
      }
      function UF(n, t) {
        return function () {
          return aC(n, "value", "on", t);
        };
      }
      const m3 = new o.OlP("angularfire2.realtimeDatabaseURL"),
        g3 = new o.OlP("angularfire2.database.use-emulator");
      let HF = (() => {
        class n {
          constructor(e, i, a, u, h, _, b, S, T, A, B, j, X, ve) {
            this.schedulers = _;
            const De = b,
              Ne = (0, ka.on)(e, h, i);
            S && xF(Ne, h, T, B, j, X, A, ve),
              (this.database = (0, xo.cc)(
                `${Ne.name}.database.${a}`,
                "AngularFireDatabase",
                Ne.name,
                () => {
                  const qe = h.runOutsideAngular(() =>
                    Ne.database(a || void 0)
                  );
                  return De && qe.useEmulator(...De), qe;
                },
                [De]
              ));
          }
          list(e, i) {
            const a = this.schedulers.ngZone.runOutsideAngular(() =>
              OF(this.database, e)
            );
            let u = a;
            return (
              i && (u = i(a)),
              (function (n, t) {
                const e = t.schedulers.outsideAngular,
                  i = t.schedulers.ngZone.run(() => n.ref);
                return {
                  query: n,
                  update: BF(i, "update"),
                  set: BF(i, "set"),
                  push: (a) => i.push(a),
                  remove: h3(i),
                  snapshotChanges: (a) => LF(n, a, e).pipe(xo.iC),
                  stateChanges: (a) => VF(n, a, e).pipe(xo.iC),
                  auditTrail: (a) =>
                    (function (n, t, e) {
                      return (function (n, t, e) {
                        return (function (n, t) {
                          return aC(n, "value", "on", t).pipe(
                            (0, et.U)((e) => {
                              let i;
                              return (
                                e.payload.forEach((a) => ((i = a.key), !1)),
                                { data: e, lastKeyToLoad: i }
                              );
                            })
                          );
                        })(n, e).pipe(
                          (function (...n) {
                            return (t) => {
                              let e;
                              return (
                                "function" == typeof n[n.length - 1] &&
                                  (e = n.pop()),
                                t.lift(new JL(n, e))
                              );
                            };
                          })(t),
                          (0, et.U)(([a, u]) => {
                            const h = a.lastKeyToLoad,
                              _ = u.map((b) => b.key);
                            return {
                              actions: u,
                              lastKeyToLoad: h,
                              loadedKeys: _,
                            };
                          }),
                          (function (n) {
                            return (t) => t.lift(new tV(n));
                          })(
                            (a) => -1 === a.loadedKeys.indexOf(a.lastKeyToLoad)
                          ),
                          (0, et.U)((a) => a.actions)
                        );
                      })(n, VF(n, t).pipe(ag((a, u) => [...a, u], [])), e);
                    })(n, a, e).pipe(xo.iC),
                  valueChanges: (a, u) =>
                    LF(n, a, e).pipe(
                      (0, et.U)((_) =>
                        _.map((b) =>
                          u && u.idField
                            ? Object.assign(
                                Object.assign({}, b.payload.val()),
                                { [u.idField]: b.key }
                              )
                            : b.payload.val()
                        )
                      ),
                      xo.iC
                    ),
                };
              })(u, this)
            );
          }
          object(e) {
            return (function (n, t) {
              return {
                query: n,
                snapshotChanges: () =>
                  UF(n, t.schedulers.outsideAngular)().pipe(xo.iC),
                update: (e) => n.ref.update(e),
                set: (e) => n.ref.set(e),
                remove: () => n.ref.remove(),
                valueChanges: () =>
                  UF(n, t.schedulers.outsideAngular)().pipe(
                    xo.iC,
                    (0, et.U)((i) =>
                      i.payload.exists() ? i.payload.val() : null
                    )
                  ),
              };
            })(
              this.schedulers.ngZone.runOutsideAngular(() =>
                OF(this.database, e)
              ),
              this
            );
          }
          createPushId() {
            return this.schedulers.ngZone
              .runOutsideAngular(() => this.database.ref())
              .push().key;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              o.LFG(ka.Dh),
              o.LFG(ka.xv, 8),
              o.LFG(m3, 8),
              o.LFG(o.Lbi),
              o.LFG(o.R0b),
              o.LFG(xo.HU),
              o.LFG(g3, 8),
              o.LFG(nk, 8),
              o.LFG(SF, 8),
              o.LFG(DF, 8),
              o.LFG(MF, 8),
              o.LFG(TF, 8),
              o.LFG(IF, 8),
              o.LFG(AF, 8)
            );
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac, providedIn: "any" })),
          n
        );
      })();
      function _3(n, t) {
        1 & n && (o.TgZ(0, "div"), o._uU(1, " Topic is required "), o.qZA());
      }
      function y3(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "mat-error"), o.YNc(1, _3, 2, 0, "div", 6), o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1),
            o.Q6J(
              "ngIf",
              null == e.topic.errors ? null : e.topic.errors.required
            );
        }
      }
      function v3(n, t) {
        1 & n && (o.TgZ(0, "div"), o._uU(1, " Details are required "), o.qZA());
      }
      function b3(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "mat-error"), o.YNc(1, v3, 2, 0, "div", 6), o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1),
            o.Q6J(
              "ngIf",
              null == e.detail.errors ? null : e.detail.errors.required
            );
        }
      }
      function C3(n, t) {
        1 & n && (o.TgZ(0, "div"), o._uU(1, " Amount is required "), o.qZA());
      }
      function E3(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "mat-error"), o.YNc(1, C3, 2, 0, "div", 6), o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1),
            o.Q6J(
              "ngIf",
              null == e.amount.errors ? null : e.amount.errors.required
            );
        }
      }
      function w3(n, t) {
        1 & n && (o.TgZ(0, "div"), o._uU(1, " Color is required "), o.qZA());
      }
      function S3(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "mat-error"), o.YNc(1, w3, 2, 0, "div", 6), o.qZA()),
          2 & n)
        ) {
          const e = o.oxw();
          o.xp6(1),
            o.Q6J(
              "ngIf",
              null == e.color.errors ? null : e.color.errors.required
            );
        }
      }
      const D3 = [
        { path: "", component: KL },
        { path: "courses/list", component: gS },
        {
          path: "admin/PostArticle",
          component: (() => {
            class n {
              constructor(e, i) {
                (this.fb = e), (this.db = i);
              }
              ngOnInit() {
                (this.course$ = this.db.list("/pricing")),
                  (this.form = this.fb.group({
                    topic: ["", [Qr.required, Qr.maxLength(10)]],
                    picture_link: ["", [Qr.required, Qr.maxLength(10)]],
                    detail: ["", [Qr.required, Qr.maxLength(10)]],
                    amount: ["", Qr.required],
                    color: ["", Qr.required],
                    additional_info: [""],
                    upload_date: ["", Qr.required],
                  }));
              }
              get topic() {
                return this.form.get("topic");
              }
              get detail() {
                return this.form.get("detail");
              }
              get amount() {
                return this.form.get("amount");
              }
              get color() {
                return this.form.get("color");
              }
              get additional_info() {
                return this.form.get("additional_info");
              }
              submitPrices() {
                var e;
                null === (e = this.course$) ||
                  void 0 === e ||
                  e.push(this.form.value),
                  console.log(this.form.value);
              }
            }
            return (
              (n.ɵfac = function (e) {
                return new (e || n)(o.Y36(Ow), o.Y36(HF));
              }),
              (n.ɵcmp = o.Xpm({
                type: n,
                selectors: [["app-post-article"]],
                decls: 76,
                vars: 14,
                consts: [
                  ["rowHeight", "500px", 3, "cols"],
                  [2, "text-align", "center", 3, "formGroup"],
                  [1, "mat-title"],
                  ["appearance", "outline"],
                  [
                    "formControlName",
                    "topic",
                    "matInput",
                    "",
                    "placeholder",
                    "Ex. Beats",
                    1,
                    "form-control",
                  ],
                  ["align", "end"],
                  [4, "ngIf"],
                  [
                    "formControlName",
                    "detail",
                    "matInput",
                    "",
                    "placeholder",
                    "Ex. for developers...",
                  ],
                  [
                    "formControlName",
                    "amount",
                    "matInput",
                    "",
                    "placeholder",
                    "RTGS 0.0 or USD 0.0",
                  ],
                  ["matPrefix", ""],
                  [
                    "formControlName",
                    "additional_info",
                    "matInput",
                    "",
                    "placeholder",
                    "Ex. Beats",
                  ],
                  ["appearance", "fill"],
                  ["formControlName", "color", "value", "indigo"],
                  ["value", "red"],
                  ["value", "indigo"],
                  ["value", "purple"],
                  [
                    "type",
                    "submit",
                    "color",
                    "primary",
                    "mat-fab",
                    "",
                    3,
                    "disabled",
                    "click",
                  ],
                  [3, "formGroup"],
                  [2, "text-align", "center"],
                  [1, "card"],
                  ["mat-mini-fab", "", "color", "primary"],
                  [
                    2,
                    "color",
                    "white",
                    "margin",
                    "0px 20px",
                    "margin-bottom",
                    "10px",
                  ],
                  [2, "padding-left", "0px"],
                  [2, "align-items", "center"],
                  [1, "mat-subheading-2", 2, "padding", "10px"],
                  ["color", "primary"],
                  [
                    1,
                    "mat-title",
                    2,
                    "text-align",
                    "center",
                    "flex",
                    "1 1 auto",
                  ],
                ],
                template: function (e, i) {
                  1 & e &&
                    (o.TgZ(0, "mat-grid-list", 0),
                    o.TgZ(1, "mat-grid-tile"),
                    o.TgZ(2, "form", 1),
                    o.TgZ(3, "mat-label", 2),
                    o._uU(4, " add article "),
                    o.qZA(),
                    o._UZ(5, "br"),
                    o.TgZ(6, "mat-form-field", 3),
                    o.TgZ(7, "mat-label"),
                    o._uU(8, " Topic "),
                    o.qZA(),
                    o._UZ(9, "input", 4),
                    o.TgZ(10, "mat-hint", 5),
                    o._uU(11, " Ex. How to code with HTML "),
                    o.qZA(),
                    o.YNc(12, y3, 2, 1, "mat-error", 6),
                    o.qZA(),
                    o._UZ(13, "br"),
                    o.TgZ(14, "mat-form-field", 3),
                    o.TgZ(15, "mat-label"),
                    o._uU(16, " Details "),
                    o.qZA(),
                    o.TgZ(17, "textarea", 7),
                    o._uU(18, "        "),
                    o.qZA(),
                    o.YNc(19, b3, 2, 1, "mat-error", 6),
                    o.qZA(),
                    o._UZ(20, "br"),
                    o.TgZ(21, "mat-form-field", 3),
                    o.TgZ(22, "mat-label"),
                    o._uU(23, " Amount "),
                    o.qZA(),
                    o._UZ(24, "input", 8),
                    o.TgZ(25, "span", 9),
                    o._uU(26, "$"),
                    o.qZA(),
                    o.YNc(27, E3, 2, 1, "mat-error", 6),
                    o.qZA(),
                    o._UZ(28, "br"),
                    o.TgZ(29, "mat-form-field", 3),
                    o.TgZ(30, "mat-label"),
                    o._uU(31, " Additional Information "),
                    o.qZA(),
                    o._UZ(32, "input", 10),
                    o.qZA(),
                    o._UZ(33, "br"),
                    o.TgZ(34, "mat-form-field", 11),
                    o.TgZ(35, "mat-label"),
                    o._uU(36, "Card color"),
                    o.qZA(),
                    o.TgZ(37, "mat-select", 12),
                    o.TgZ(38, "mat-option", 13),
                    o._uU(39, "Blue"),
                    o.qZA(),
                    o.TgZ(40, "mat-option", 14),
                    o._uU(41, "Indigo"),
                    o.qZA(),
                    o.TgZ(42, "mat-option", 15),
                    o._uU(43, "Purple"),
                    o.qZA(),
                    o.qZA(),
                    o.YNc(44, S3, 2, 1, "mat-error", 6),
                    o.qZA(),
                    o._UZ(45, "br"),
                    o.TgZ(46, "button", 16),
                    o.NdJ("click", function () {
                      return i.submitPrices();
                    }),
                    o.TgZ(47, "mat-icon"),
                    o._uU(48, " add "),
                    o.qZA(),
                    o.qZA(),
                    o._UZ(49, "br"),
                    o.qZA(),
                    o.qZA(),
                    o.TgZ(50, "mat-grid-tile"),
                    o.TgZ(51, "form", 17),
                    o.TgZ(52, "h1", 18),
                    o._uU(53, "Preview"),
                    o.qZA(),
                    o.TgZ(54, "mat-card", 19),
                    o.TgZ(55, "button", 20),
                    o.TgZ(56, "mat-icon"),
                    o._uU(57, "music_note"),
                    o.qZA(),
                    o.qZA(),
                    o._UZ(58, "br"),
                    o._UZ(59, "br"),
                    o.TgZ(60, "mat-card-subtitle", 21),
                    o._uU(61, " Tony Kayz Beats for "),
                    o.qZA(),
                    o.TgZ(62, "mat-card-title", 22),
                    o._uU(63),
                    o.qZA(),
                    o.TgZ(64, "mat-card-content", 23),
                    o.TgZ(65, "span", 24),
                    o._uU(66),
                    o.qZA(),
                    o.qZA(),
                    o.TgZ(67, "mat-toolbar", 25),
                    o.TgZ(68, "h1", 26),
                    o._uU(69),
                    o.qZA(),
                    o.qZA(),
                    o.TgZ(70, "mat-card-content", 23),
                    o.TgZ(71, "span", 24),
                    o._uU(72),
                    o.qZA(),
                    o.qZA(),
                    o._UZ(73, "br"),
                    o.qZA(),
                    o.qZA(),
                    o.qZA(),
                    o.qZA(),
                    o._UZ(74, "br"),
                    o._UZ(75, "br")),
                    2 & e &&
                      (o.Q6J("cols", i.breakpoint),
                      o.xp6(2),
                      o.Q6J("formGroup", i.form),
                      o.xp6(10),
                      o.Q6J("ngIf", i.topic.touched && i.topic.invalid),
                      o.xp6(7),
                      o.Q6J("ngIf", i.detail.touched && i.detail.invalid),
                      o.xp6(8),
                      o.Q6J("ngIf", i.amount.touched && i.amount.invalid),
                      o.xp6(17),
                      o.Q6J("ngIf", i.color.touched && i.amount.invalid),
                      o.xp6(2),
                      o.Q6J("disabled", !i.form.valid),
                      o.xp6(5),
                      o.Q6J("formGroup", i.form),
                      o.xp6(3),
                      o.Udp("background", i.color.value),
                      o.xp6(9),
                      o.hij(" ", i.topic.value, " "),
                      o.xp6(3),
                      o.hij(" ", i.detail.value, " "),
                      o.xp6(3),
                      o.hij(" ", i.amount.value, " "),
                      o.xp6(3),
                      o.hij(" ", i.additional_info.value, " "));
                },
                directives: [
                  Ov,
                  rf,
                  Dm,
                  mu,
                  ts,
                  Gn,
                  d0,
                  Nh,
                  Tv,
                  gm,
                  Tm,
                  wI,
                  Bi,
                  Cv,
                  HI,
                  Tl,
                  Co,
                  As,
                  $m,
                  Gm,
                  tf,
                  KI,
                  Iv,
                  rt,
                ],
                styles: [""],
              })),
              n
            );
          })(),
        },
      ];
      let M3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[pN.forRoot(D3)], pN] })),
            n
          );
        })(),
        T3 = Ii("fade", [
          dn("void", Lt({ opacity: 0 })),
          bn(":enter, :leave", [Ln(2e3)]),
        ]),
        I3 = Ii("slide", [
          bn(":enter", [Lt({ transform: "translateX(-10px)" }), Ln(500)]),
          bn(":leave", [
            Ln("0.5s ease-in", Lt({ transform: "translateX(-100%)" })),
          ]),
        ]),
        jF = (() => {
          class n {
            constructor() {
              this.websiteName = "DanverSoft Lab";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = o.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })(),
        A3 = (() => {
          class n {
            constructor(e) {
              this.db = e;
            }
            updateUserData(e) {
              const i = {
                uid: e.uid,
                email: e.email,
                displayName: e.displayName,
                photoUrl: e.photoURL,
              };
              this.db.object(`/users/${e.uid}`).set(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.LFG(HF));
            }),
            (n.ɵprov = o.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })(),
        x3 = (() => {
          class n {
            constructor(e, i) {
              (this.test1 = e),
                (this.variableSer = i),
                (this.websiteName = this.variableSer.websiteName);
            }
            ngOnInit() {
              this.breakpoint = this.test1.onInCurrentGridwith2;
            }
            onResize(e) {
              this.breakpoint = this.test1.getonResizeCurrentGridwith2(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(o.Y36($0), o.Y36(jF));
            }),
            (n.ɵcmp = o.Xpm({
              type: n,
              selectors: [["app-footerdown"]],
              decls: 42,
              vars: 3,
              consts: [
                [2, "height", "500px"],
                ["cols", "1", "rowHeight", "500px"],
                [
                  2,
                  "font-size",
                  "35px",
                  "color",
                  "indigo",
                  "text-align",
                  "center",
                ],
                ["rowHeight", "220px", "gutterSize", "0", 3, "cols", "resize"],
                [1, "card", 2, "background-color", "indigo"],
                [1, "mat-h1"],
                ["mat-mini-fab", "", "color", ""],
                [1, "mat-h2"],
                [2, "background-color", "indigo", "border-radius", "0%"],
                [2, "text-align", "right", "color", "white"],
              ],
              template: function (e, i) {
                1 & e &&
                  (o.TgZ(0, "mat-card", 0),
                  o.TgZ(1, "mat-grid-list", 1),
                  o.TgZ(2, "mat-grid-tile"),
                  o.TgZ(3, "mat-card-header"),
                  o.TgZ(4, "mat-card-title"),
                  o.TgZ(5, "h1", 2),
                  o.TgZ(6, "b"),
                  o._uU(7, '"RESPECT THE CODEMASTER\'S"'),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(8, "mat-grid-list", 3),
                  o.NdJ(
                    "resize",
                    function (u) {
                      return i.onResize(u);
                    },
                    !1,
                    o.Jf7
                  ),
                  o.TgZ(9, "mat-grid-tile"),
                  o.TgZ(10, "mat-card", 4),
                  o.TgZ(11, "mat-card-header"),
                  o.TgZ(12, "mat-card-title"),
                  o.TgZ(13, "span", 5),
                  o._uU(14),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(15, "mat-grid-tile"),
                  o.TgZ(16, "mat-card", 4),
                  o.TgZ(17, "mat-card-actions"),
                  o.TgZ(18, "button", 6),
                  o.TgZ(19, "mat-icon"),
                  o._uU(20, " facebook "),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(21, "span", 7),
                  o._uU(22, " Facebook "),
                  o.qZA(),
                  o._UZ(23, "br"),
                  o._UZ(24, "br"),
                  o.TgZ(25, "button", 6),
                  o.TgZ(26, "mat-icon"),
                  o._uU(27, " whatsapp "),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(28, "span", 7),
                  o._uU(29, " Whatsapp "),
                  o.qZA(),
                  o._UZ(30, "br"),
                  o._UZ(31, "br"),
                  o.TgZ(32, "button", 6),
                  o.TgZ(33, "mat-icon"),
                  o._uU(34, " email "),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(35, "span", 7),
                  o._uU(36, " Email "),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.TgZ(37, "mat-card", 8),
                  o.TgZ(38, "mat-card-header"),
                  o.TgZ(39, "mat-card-subtitle", 9),
                  o.TgZ(40, "span"),
                  o._uU(41),
                  o.qZA(),
                  o.qZA(),
                  o.qZA(),
                  o.qZA()),
                  2 & e &&
                    (o.xp6(8),
                    o.Q6J("cols", i.breakpoint),
                    o.xp6(6),
                    o.hij(" ", i.websiteName, " "),
                    o.xp6(27),
                    o.hij(" 2021 ", i.websiteName, " "));
              },
              directives: [$m, Ov, rf, Av, tf, zm, Co, As, Gm],
              styles: [
                ".card[_ngcontent-%COMP%]{background-color:#009fff;height:100%;width:100%;border-radius:0%;padding-top:100px}.mat-h2[_ngcontent-%COMP%]{color:#fff;font-size:17px}.leftcont[_ngcontent-%COMP%]{text-align:right}",
              ],
            })),
            n
          );
        })();
      function R3(n, t) {
        1 & n && o._UZ(0, "mat-progress-bar", 12);
      }
      const lC = function () {
        return { exact: !0 };
      };
      function k3(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "button", 13),
            o.NdJ("click", function () {
              return o.CHM(e), o.oxw().signIn();
            }),
            o.TgZ(1, "mat-icon"),
            o._uU(2, "google"),
            o.qZA(),
            o._uU(3, " Login "),
            o.qZA();
        }
        if (2 & n) {
          o.oxw();
          const e = o.MAs(18);
          o.Q6J("matMenuTriggerFor", e)(
            "routerLinkActiveOptions",
            o.DdM(2, lC)
          );
        }
      }
      function O3(n, t) {
        if (1 & n) {
          const e = o.EpF();
          o.TgZ(0, "button", 18),
            o.NdJ("click", function () {
              return o.CHM(e), o.oxw(2).signOut();
            }),
            o.TgZ(1, "mat-icon"),
            o._uU(2, "logout"),
            o.qZA(),
            o._uU(3, " Sign Out\n"),
            o.qZA();
        }
        2 & n && o.Q6J("routerLinkActiveOptions", o.DdM(1, lC));
      }
      function P3(n, t) {
        if (
          (1 & n &&
            (o.TgZ(0, "mat-toolbar-row"),
            o.TgZ(1, "button", 14),
            o.TgZ(2, "mat-icon"),
            o._uU(3, "account_circle"),
            o.qZA(),
            o._uU(4),
            o.qZA(),
            o.TgZ(5, "mat-menu", null, 15),
            o.YNc(7, O3, 4, 2, "button", 16),
            o.ALo(8, "async"),
            o.qZA(),
            o.TgZ(9, "button", 17),
            o._uU(10, " Admin price "),
            o.qZA(),
            o.qZA()),
          2 & n)
        ) {
          const e = t.ngIf,
            i = o.MAs(6),
            a = o.oxw();
          o.xp6(1),
            o.Q6J("matMenuTriggerFor", i),
            o.xp6(3),
            o.hij(" ", e.displayName, "\n"),
            o.xp6(3),
            o.Q6J("ngIf", o.lcZ(8, 4, a.afAuth.authState)),
            o.xp6(2),
            o.Q6J("routerLinkActiveOptions", o.DdM(6, lC));
        }
      }
      let N3 = (() => {
        class n {
          constructor(e, i, a, u) {
            (this.afAuth = e),
              (this.router = i),
              (this.variableService = a),
              (this.user_service = u),
              (this.isChecked = !0),
              (this.title = "Danversoft Lab blog"),
              (this.website_Name = this.variableService.websiteName),
              (this.isLoadingTheBar = !1),
              this.router.events.subscribe((h) => {
                h instanceof Bu &&
                  ((this.isLoadingTheBar = !0),
                  console.log("navigation started" + this.isLoadingTheBar)),
                  h instanceof Na &&
                    ((this.isLoadingTheBar = !1),
                    console.log("navigation stoped" + this.isLoadingTheBar)),
                  h instanceof df &&
                    ((this.isLoadingTheBar = !1),
                    console.log("navigation error"),
                    console.log(h.error));
              });
          }
          signIn() {
            var e = this;
            return (0, _N.Z)(function* () {
              const i = new n3.Z.auth.GoogleAuthProvider(),
                a = yield e.afAuth.signInWithPopup(i);
              console.log(a.user), yield e.user_service.updateUserData(a.user);
            })();
          }
          signOut() {
            this.afAuth.signOut(), this.router.navigate(["/"]);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.Y36(nk), o.Y36(Wi), o.Y36(jF), o.Y36(A3));
          }),
          (n.ɵcmp = o.Xpm({
            type: n,
            selectors: [["app-root"]],
            decls: 31,
            vars: 13,
            consts: [
              [
                "mode",
                "indeterminate",
                "value",
                "50",
                "color",
                "warn",
                4,
                "ngIf",
              ],
              [
                1,
                "body2",
                2,
                "height",
                "100px",
                "align-items",
                "center",
                "display",
                "flex",
              ],
              [
                "src",
                "/../assets/danverkanyemba.png",
                "alt",
                "",
                2,
                "height",
                "40px",
                "width",
                "30px",
                "border",
                "1px solid white",
              ],
              [1, "mat-h1", 2, "padding-top", "20px"],
              [1, "body2"],
              [1, "topnavtoolbar"],
              [1, "flexExpand"],
              [
                "mat-button",
                "",
                "routerLink",
                "/",
                "routerLinkActive",
                "active",
                1,
                "mat-title",
                3,
                "routerLinkActiveOptions",
              ],
              [
                "mat-button",
                "",
                "class",
                "mat-title",
                "routerLinkActive",
                "active",
                3,
                "matMenuTriggerFor",
                "routerLinkActiveOptions",
                "click",
                4,
                "ngIf",
              ],
              ["login", "matMenu"],
              ["mat-button", "", "color", "warn"],
              [4, "ngIf"],
              ["mode", "indeterminate", "value", "50", "color", "warn"],
              [
                "mat-button",
                "",
                "routerLinkActive",
                "active",
                1,
                "mat-title",
                3,
                "matMenuTriggerFor",
                "routerLinkActiveOptions",
                "click",
              ],
              ["mat-button", "", 3, "matMenuTriggerFor"],
              ["menu", "matMenu"],
              [
                "mat-button",
                "",
                "class",
                "mat-title",
                "routerLinkActive",
                "active",
                3,
                "routerLinkActiveOptions",
                "click",
                4,
                "ngIf",
              ],
              [
                "mat-button",
                "",
                "routerLink",
                "admin/pricing",
                "routerLinkActive",
                "active",
                1,
                "mat-title",
                3,
                "routerLinkActiveOptions",
              ],
              [
                "mat-button",
                "",
                "routerLinkActive",
                "active",
                1,
                "mat-title",
                3,
                "routerLinkActiveOptions",
                "click",
              ],
            ],
            template: function (e, i) {
              1 & e &&
                (o.YNc(0, R3, 1, 0, "mat-progress-bar", 0),
                o.TgZ(1, "div", 1),
                o._UZ(2, "img", 2),
                o.TgZ(3, "h1", 3),
                o._uU(4),
                o.qZA(),
                o.qZA(),
                o.TgZ(5, "div", 4),
                o.TgZ(6, "mat-toolbar", 5),
                o.TgZ(7, "mat-toolbar-row"),
                o._UZ(8, "span", 6),
                o.TgZ(9, "button", 7),
                o.TgZ(10, "b"),
                o._uU(11, " Home"),
                o.qZA(),
                o.qZA(),
                o.TgZ(12, "button", 7),
                o.TgZ(13, "b"),
                o._uU(14, " FAQ "),
                o.qZA(),
                o.qZA(),
                o.YNc(15, k3, 4, 3, "button", 8),
                o.ALo(16, "async"),
                o.TgZ(17, "mat-menu", null, 9),
                o.TgZ(19, "button", 10),
                o._uU(20, "Login with"),
                o.TgZ(21, "mat-icon"),
                o._uU(22, "google"),
                o.qZA(),
                o._uU(23, " Google"),
                o.qZA(),
                o.qZA(),
                o.qZA(),
                o.YNc(24, P3, 11, 7, "mat-toolbar-row", 11),
                o.ALo(25, "async"),
                o.qZA(),
                o.qZA(),
                o._UZ(26, "br"),
                o._UZ(27, "br"),
                o._UZ(28, "br"),
                o._UZ(29, "router-outlet"),
                o._UZ(30, "app-footerdown")),
                2 & e &&
                  (o.Q6J("ngIf", i.isLoadingTheBar),
                  o.xp6(3),
                  o.Q6J("@fade", void 0),
                  o.xp6(1),
                  o.hij(" ", i.website_Name, " "),
                  o.xp6(5),
                  o.Q6J("routerLinkActiveOptions", o.DdM(11, lC)),
                  o.xp6(3),
                  o.Q6J("routerLinkActiveOptions", o.DdM(12, lC)),
                  o.xp6(3),
                  o.Q6J("ngIf", null === o.lcZ(16, 7, i.afAuth.authState)),
                  o.xp6(9),
                  o.Q6J("ngIf", o.lcZ(25, 9, i.afAuth.user)));
            },
            directives: [Bi, Iv, b0, Co, Rb, cN, P0, As, Ux, x3, rA, hA],
            pipes: [ud],
            styles: [
              ".flexExpand[_ngcontent-%COMP%]{flex:1 1 auto}.active[_ngcontent-%COMP%]{color:#fff}.mat-h1[_ngcontent-%COMP%]{font-size:30px}.topnavtoolbar[_ngcontent-%COMP%]{background-image:url(/../assets/toolbarbg.png);background-size:cover;background-position:center;border-radius:10px}body[_ngcontent-%COMP%]{padding:0;margin:0}",
            ],
            data: { animation: [T3, I3] },
          })),
          n
        );
      })();
      const GF_firebase = {
        apiKey: "AIzaSyAPCPL90YGrchPXAEhzztmb3G9Tc3ELhOs",
        authDomain: "danversoft-7da14.firebaseapp.com",
        projectId: "danversoft-7da14",
        storageBucket: "danversoft-7da14.appspot.com",
        messagingSenderId: "603251586815",
        appId: "1:603251586815:web:dc55eae4fb798ea442feca",
        measurementId: "G-SNZ6M49Z51",
      };
      let F3 = (() => {
        class n {
          constructor(e) {
            this.router = e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(o.LFG(Wi));
          }),
          (n.ɵprov = o.Yz7({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function L3(n, t) {
        if ((1 & n && (o.O4$(), o._UZ(0, "circle", 3)), 2 & n)) {
          const e = o.oxw();
          o.Udp(
            "animation-name",
            "mat-progress-spinner-stroke-rotate-" + e._spinnerAnimationLabel
          )("stroke-dashoffset", e._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            e._getStrokeCircumference(),
            "px"
          )("stroke-width", e._getCircleStrokeWidth(), "%"),
            o.uIk("r", e._getCircleRadius());
        }
      }
      function V3(n, t) {
        if ((1 & n && (o.O4$(), o._UZ(0, "circle", 3)), 2 & n)) {
          const e = o.oxw();
          o.Udp("stroke-dashoffset", e._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            e._getStrokeCircumference(),
            "px"
          )("stroke-width", e._getCircleStrokeWidth(), "%"),
            o.uIk("r", e._getCircleRadius());
        }
      }
      const j3 = bo(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        $F = new o.OlP("mat-progress-spinner-default-options", {
          providedIn: "root",
          factory: function () {
            return { diameter: 100 };
          },
        });
      class rc extends j3 {
        constructor(t, e, i, a, u) {
          super(t),
            (this._document = i),
            (this._diameter = 100),
            (this._value = 0),
            (this._fallbackAnimation = !1),
            (this.mode = "determinate");
          const h = rc._diameters;
          (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            h.has(i.head) || h.set(i.head, new Set([100])),
            (this._fallbackAnimation = e.EDGE || e.TRIDENT),
            (this._noopAnimations =
              "NoopAnimations" === a && !!u && !u._forceAnimations),
            u &&
              (u.diameter && (this.diameter = u.diameter),
              u.strokeWidth && (this.strokeWidth = u.strokeWidth));
        }
        get diameter() {
          return this._diameter;
        }
        set diameter(t) {
          (this._diameter = Un(t)),
            (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            !this._fallbackAnimation &&
              this._styleRoot &&
              this._attachStyleNode();
        }
        get strokeWidth() {
          return this._strokeWidth || this.diameter / 10;
        }
        set strokeWidth(t) {
          this._strokeWidth = Un(t);
        }
        get value() {
          return "determinate" === this.mode ? this._value : 0;
        }
        set value(t) {
          this._value = Math.max(0, Math.min(100, Un(t)));
        }
        ngOnInit() {
          const t = this._elementRef.nativeElement;
          (this._styleRoot = zC(t) || this._document.head),
            this._attachStyleNode(),
            t.classList.add(
              `mat-progress-spinner-indeterminate${
                this._fallbackAnimation ? "-fallback" : ""
              }-animation`
            );
        }
        _getCircleRadius() {
          return (this.diameter - 10) / 2;
        }
        _getViewBox() {
          const t = 2 * this._getCircleRadius() + this.strokeWidth;
          return `0 0 ${t} ${t}`;
        }
        _getStrokeCircumference() {
          return 2 * Math.PI * this._getCircleRadius();
        }
        _getStrokeDashOffset() {
          return "determinate" === this.mode
            ? (this._getStrokeCircumference() * (100 - this._value)) / 100
            : this._fallbackAnimation && "indeterminate" === this.mode
            ? 0.2 * this._getStrokeCircumference()
            : null;
        }
        _getCircleStrokeWidth() {
          return (this.strokeWidth / this.diameter) * 100;
        }
        _attachStyleNode() {
          const t = this._styleRoot,
            e = this._diameter,
            i = rc._diameters;
          let a = i.get(t);
          if (!a || !a.has(e)) {
            const u = this._document.createElement("style");
            u.setAttribute(
              "mat-spinner-animation",
              this._spinnerAnimationLabel
            ),
              (u.textContent = this._getAnimationText()),
              t.appendChild(u),
              a || ((a = new Set()), i.set(t, a)),
              a.add(e);
          }
        }
        _getAnimationText() {
          const t = this._getStrokeCircumference();
          return "\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n"
            .replace(/START_VALUE/g, "" + 0.95 * t)
            .replace(/END_VALUE/g, "" + 0.2 * t)
            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);
        }
        _getSpinnerAnimationLabel() {
          return this.diameter.toString().replace(".", "_");
        }
      }
      (rc.ɵfac = function (t) {
        return new (t || rc)(
          o.Y36(o.SBq),
          o.Y36(Nt),
          o.Y36(G, 8),
          o.Y36(Se, 8),
          o.Y36($F)
        );
      }),
        (rc.ɵcmp = o.Xpm({
          type: rc,
          selectors: [["mat-progress-spinner"]],
          hostAttrs: [
            "role",
            "progressbar",
            "tabindex",
            "-1",
            1,
            "mat-progress-spinner",
          ],
          hostVars: 10,
          hostBindings: function (t, e) {
            2 & t &&
              (o.uIk("aria-valuemin", "determinate" === e.mode ? 0 : null)(
                "aria-valuemax",
                "determinate" === e.mode ? 100 : null
              )("aria-valuenow", "determinate" === e.mode ? e.value : null)(
                "mode",
                e.mode
              ),
              o.Udp("width", e.diameter, "px")("height", e.diameter, "px"),
              o.ekj("_mat-animation-noopable", e._noopAnimations));
          },
          inputs: {
            color: "color",
            mode: "mode",
            diameter: "diameter",
            strokeWidth: "strokeWidth",
            value: "value",
          },
          exportAs: ["matProgressSpinner"],
          features: [o.qOj],
          decls: 3,
          vars: 8,
          consts: [
            [
              "preserveAspectRatio",
              "xMidYMid meet",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              3,
              "ngSwitch",
            ],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "animation-name",
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              4,
              "ngSwitchCase",
            ],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              4,
              "ngSwitchCase",
            ],
            ["cx", "50%", "cy", "50%"],
          ],
          template: function (t, e) {
            1 & t &&
              (o.O4$(),
              o.TgZ(0, "svg", 0),
              o.YNc(1, L3, 1, 9, "circle", 1),
              o.YNc(2, V3, 1, 7, "circle", 2),
              o.qZA()),
              2 & t &&
                (o.Udp("width", e.diameter, "px")("height", e.diameter, "px"),
                o.Q6J("ngSwitch", "indeterminate" === e.mode),
                o.uIk("viewBox", e._getViewBox()),
                o.xp6(1),
                o.Q6J("ngSwitchCase", !0),
                o.xp6(1),
                o.Q6J("ngSwitchCase", !1));
          },
          directives: [Xn, Kt],
          styles: [
            ".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor;stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (rc._diameters = new WeakMap());
      let $3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n })),
            (n.ɵinj = o.cJS({ imports: [[Et, Xi], Et] })),
            n
          );
        })(),
        W3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = o.oAB({ type: n, bootstrap: [N3] })),
            (n.ɵinj = o.cJS({
              providers: [F3],
              imports: [
                [
                  Ko,
                  M3,
                  ka.hO.initializeApp(GF_firebase),
                  Cn,
                  Uw,
                  jI,
                  y0,
                  nf,
                  kw,
                  Rw,
                  Cy,
                  lm,
                  tP,
                  dP,
                  sA,
                  $3,
                  Qm,
                  FP,
                  BA,
                  sS,
                  fS,
                  Sa,
                  _A,
                ],
              ],
            })),
            n
          );
        })();
      (0, o.G48)(),
        nl()
          .bootstrapModule(W3)
          .catch((n) => console.error(n));
    },
    4762: (Re, ye, k) => {
      "use strict";
      k.d(ye, {
        ZT: () => ie,
        pi: () => L,
        _T: () => ne,
        mG: () => W,
        Jh: () => H,
        XA: () => N,
        CR: () => Y,
        ev: () => le,
      });
      var o = function (ce, se) {
        return (o =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (ge, pe) {
              ge.__proto__ = pe;
            }) ||
          function (ge, pe) {
            for (var ue in pe)
              Object.prototype.hasOwnProperty.call(pe, ue) && (ge[ue] = pe[ue]);
          })(ce, se);
      };
      function ie(ce, se) {
        if ("function" != typeof se && null !== se)
          throw new TypeError(
            "Class extends value " +
              String(se) +
              " is not a constructor or null"
          );
        function ge() {
          this.constructor = ce;
        }
        o(ce, se),
          (ce.prototype =
            null === se
              ? Object.create(se)
              : ((ge.prototype = se.prototype), new ge()));
      }
      var L = function () {
        return (L =
          Object.assign ||
          function (se) {
            for (var ge, pe = 1, ue = arguments.length; pe < ue; pe++)
              for (var J in (ge = arguments[pe]))
                Object.prototype.hasOwnProperty.call(ge, J) && (se[J] = ge[J]);
            return se;
          }).apply(this, arguments);
      };
      function ne(ce, se) {
        var ge = {};
        for (var pe in ce)
          Object.prototype.hasOwnProperty.call(ce, pe) &&
            se.indexOf(pe) < 0 &&
            (ge[pe] = ce[pe]);
        if (null != ce && "function" == typeof Object.getOwnPropertySymbols) {
          var ue = 0;
          for (pe = Object.getOwnPropertySymbols(ce); ue < pe.length; ue++)
            se.indexOf(pe[ue]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(ce, pe[ue]) &&
              (ge[pe[ue]] = ce[pe[ue]]);
        }
        return ge;
      }
      function W(ce, se, ge, pe) {
        return new (ge || (ge = Promise))(function (J, Ie) {
          function Ue(ze) {
            try {
              Ve(pe.next(ze));
            } catch (Ke) {
              Ie(Ke);
            }
          }
          function gt(ze) {
            try {
              Ve(pe.throw(ze));
            } catch (Ke) {
              Ie(Ke);
            }
          }
          function Ve(ze) {
            ze.done
              ? J(ze.value)
              : (function (J) {
                  return J instanceof ge
                    ? J
                    : new ge(function (Ie) {
                        Ie(J);
                      });
                })(ze.value).then(Ue, gt);
          }
          Ve((pe = pe.apply(ce, se || [])).next());
        });
      }
      function H(ce, se) {
        var pe,
          ue,
          J,
          Ie,
          ge = {
            label: 0,
            sent: function () {
              if (1 & J[0]) throw J[1];
              return J[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (Ie = { next: Ue(0), throw: Ue(1), return: Ue(2) }),
          "function" == typeof Symbol &&
            (Ie[Symbol.iterator] = function () {
              return this;
            }),
          Ie
        );
        function Ue(Ve) {
          return function (ze) {
            return (function (Ve) {
              if (pe) throw new TypeError("Generator is already executing.");
              for (; ge; )
                try {
                  if (
                    ((pe = 1),
                    ue &&
                      (J =
                        2 & Ve[0]
                          ? ue.return
                          : Ve[0]
                          ? ue.throw || ((J = ue.return) && J.call(ue), 0)
                          : ue.next) &&
                      !(J = J.call(ue, Ve[1])).done)
                  )
                    return J;
                  switch (((ue = 0), J && (Ve = [2 & Ve[0], J.value]), Ve[0])) {
                    case 0:
                    case 1:
                      J = Ve;
                      break;
                    case 4:
                      return ge.label++, { value: Ve[1], done: !1 };
                    case 5:
                      ge.label++, (ue = Ve[1]), (Ve = [0]);
                      continue;
                    case 7:
                      (Ve = ge.ops.pop()), ge.trys.pop();
                      continue;
                    default:
                      if (
                        !(J = (J = ge.trys).length > 0 && J[J.length - 1]) &&
                        (6 === Ve[0] || 2 === Ve[0])
                      ) {
                        ge = 0;
                        continue;
                      }
                      if (
                        3 === Ve[0] &&
                        (!J || (Ve[1] > J[0] && Ve[1] < J[3]))
                      ) {
                        ge.label = Ve[1];
                        break;
                      }
                      if (6 === Ve[0] && ge.label < J[1]) {
                        (ge.label = J[1]), (J = Ve);
                        break;
                      }
                      if (J && ge.label < J[2]) {
                        (ge.label = J[2]), ge.ops.push(Ve);
                        break;
                      }
                      J[2] && ge.ops.pop(), ge.trys.pop();
                      continue;
                  }
                  Ve = se.call(ce, ge);
                } catch (ze) {
                  (Ve = [6, ze]), (ue = 0);
                } finally {
                  pe = J = 0;
                }
              if (5 & Ve[0]) throw Ve[1];
              return { value: Ve[0] ? Ve[1] : void 0, done: !0 };
            })([Ve, ze]);
          };
        }
      }
      function N(ce) {
        var se = "function" == typeof Symbol && Symbol.iterator,
          ge = se && ce[se],
          pe = 0;
        if (ge) return ge.call(ce);
        if (ce && "number" == typeof ce.length)
          return {
            next: function () {
              return (
                ce && pe >= ce.length && (ce = void 0),
                { value: ce && ce[pe++], done: !ce }
              );
            },
          };
        throw new TypeError(
          se ? "Object is not iterable." : "Symbol.iterator is not defined."
        );
      }
      function Y(ce, se) {
        var ge = "function" == typeof Symbol && ce[Symbol.iterator];
        if (!ge) return ce;
        var ue,
          Ie,
          pe = ge.call(ce),
          J = [];
        try {
          for (; (void 0 === se || se-- > 0) && !(ue = pe.next()).done; )
            J.push(ue.value);
        } catch (Ue) {
          Ie = { error: Ue };
        } finally {
          try {
            ue && !ue.done && (ge = pe.return) && ge.call(pe);
          } finally {
            if (Ie) throw Ie.error;
          }
        }
        return J;
      }
      function le(ce, se, ge) {
        if (ge || 2 === arguments.length)
          for (var J, pe = 0, ue = se.length; pe < ue; pe++)
            (J || !(pe in se)) &&
              (J || (J = Array.prototype.slice.call(se, 0, pe)),
              (J[pe] = se[pe]));
        return ce.concat(J || Array.prototype.slice.call(se));
      }
    },
    8239: (Re, ye, k) => {
      "use strict";
      function o(L, ne, re, q, G, W, H) {
        try {
          var O = L[W](H),
            z = O.value;
        } catch (N) {
          return void re(N);
        }
        O.done ? ne(z) : Promise.resolve(z).then(q, G);
      }
      function ie(L) {
        return function () {
          var ne = this,
            re = arguments;
          return new Promise(function (q, G) {
            var W = L.apply(ne, re);
            function H(z) {
              o(W, q, G, H, O, "next", z);
            }
            function O(z) {
              o(W, q, G, H, O, "throw", z);
            }
            H(void 0);
          });
        };
      }
      k.d(ye, { Z: () => ie });
    },
  },
  (Re) => {
    Re((Re.s = 9056));
  },
]);
